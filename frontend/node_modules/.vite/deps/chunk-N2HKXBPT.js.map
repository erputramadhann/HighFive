{
  "version": 3,
  "sources": ["../../@react-native/normalize-color/index.js", "../../@tamagui/timer/dist/cjs/index.cjs", "../../@tamagui/simple-hash/src/index.ts", "../../@tamagui/helpers/src/clamp.ts", "../../@tamagui/helpers/src/composeEventHandlers.ts", "../../@tamagui/helpers/src/concatClassName.ts", "../../@tamagui/helpers/src/types.ts", "../../@tamagui/constants/src/constants.ts", "../../@tamagui/helpers/src/shouldRenderNativePlatform.ts", "../../@tamagui/helpers/src/validStyleProps.ts", "../../@tamagui/helpers/src/withStaticProperties.tsx", "../../@tamagui/web/src/config.ts", "../../@tamagui/helpers/src/index.ts", "../../@tamagui/web/src/createVariable.ts", "../../@tamagui/web/src/helpers/matchMedia.ts", "../../@tamagui/web/src/hooks/useMedia.tsx", "../../@tamagui/web/src/helpers/pseudoDescriptors.ts", "../../@tamagui/compose-refs/src/compose-refs.tsx", "../../@tamagui/web/src/helpers/createStyledContext.tsx", "../../@tamagui/web/src/helpers/objectIdentityKey.tsx", "../../@tamagui/web/src/contexts/ComponentContext.tsx", "../../@tamagui/web/src/helpers/defaultOffset.ts", "../../@tamagui/normalize-css-color/src/index.ts", "../../@tamagui/web/src/helpers/normalizeColor.ts", "../../@tamagui/web/src/helpers/normalizeValueWithProperty.ts", "../../@tamagui/web/src/helpers/transformsToString.ts", "../../@tamagui/web/src/helpers/getCSSStylesAtomic.ts", "../../@tamagui/web/src/hooks/useTheme.tsx", "../../@tamagui/web/src/hooks/getThemeProxied.ts", "../../@tamagui/web/src/hooks/useThemeState.ts", "../../@tamagui/use-did-finish-ssr/src/index.ts", "../../@tamagui/web/src/views/Theme.tsx", "../../@tamagui/web/src/views/ThemeDebug.tsx", "../../@tamagui/web/src/helpers/themeable.tsx", "../../@tamagui/web/src/createComponent.tsx", "../../@tamagui/web/src/constants/constants.ts", "../../@tamagui/web/src/constants/isDevTools.ts", "../../@tamagui/web/src/defaultComponentState.tsx", "../../@tamagui/web/src/helpers/consoleLog.ts", "../../@tamagui/web/src/helpers/getShorthandValue.ts", "../../@tamagui/web/src/helpers/getSplitStyles.tsx", "../../@tamagui/web/src/constants/accessibilityDirectMap.tsx", "../../@tamagui/web/src/helpers/getGroupPropParts.ts", "../../@tamagui/web/src/helpers/createMediaStyle.ts", "../../@tamagui/web/src/helpers/normalizeShadow.ts", "../../@tamagui/web/src/helpers/expandStyles.ts", "../../@tamagui/web/src/helpers/insertStyleRule.tsx", "../../@tamagui/web/src/helpers/isActivePlatform.ts", "../../@tamagui/web/src/helpers/isActiveTheme.ts", "../../@tamagui/web/src/helpers/log.ts", "../../@tamagui/web/src/constants/webToNativeProps.tsx", "../../@tamagui/web/src/helpers/expandStyle.ts", "../../@tamagui/web/src/helpers/getVariantExtras.tsx", "../../@tamagui/web/src/helpers/isObj.ts", "../../@tamagui/web/src/helpers/normalizeStyle.ts", "../../@tamagui/web/src/helpers/skipProps.ts", "../../@tamagui/web/src/helpers/propMapper.ts", "../../@tamagui/web/src/helpers/sortString.ts", "../../@tamagui/web/src/helpers/mergeProps.ts", "../../@tamagui/web/src/setupHooks.ts", "../../@tamagui/web/src/helpers/setElementProps.tsx", "../../@tamagui/web/src/helpers/createShallowSetState.tsx", "../../@tamagui/web/src/helpers/subscribeToContextGroup.tsx", "../../@tamagui/web/src/helpers/wrapStyleTags.tsx", "../../@tamagui/web/src/hooks/useComponentState.ts", "../../@tamagui/web/src/views/Slot.tsx", "../../@tamagui/web/src/createShorthands.ts", "../../@tamagui/web/src/createTheme.ts", "../../@tamagui/web/src/createFont.ts", "../../@tamagui/web/src/createVariables.ts", "../../@tamagui/web/src/helpers/registerCSSVariable.ts", "../../@tamagui/web/src/insertFont.ts", "../../@tamagui/web/src/createTokens.ts", "../../@tamagui/web/src/setupReactNative.ts", "../../@tamagui/web/src/helpers/mergeVariants.ts", "../../@tamagui/web/src/styled.tsx", "../../@tamagui/web/src/helpers/isTamaguiComponent.tsx", "../../@tamagui/web/src/helpers/isTamaguiElement.tsx", "../../@tamagui/web/src/hooks/useThemeName.tsx", "../../@tamagui/web/src/hooks/useConfiguration.tsx", "../../@tamagui/web/src/hooks/useIsTouchDevice.tsx", "../../@tamagui/web/src/hooks/useProps.tsx", "../../@tamagui/web/src/views/Stack.tsx", "../../@tamagui/web/src/views/FontLanguage.tsx", "../../@tamagui/web/src/views/Configuration.tsx", "../../@tamagui/use-event/src/useGet.ts", "../../@tamagui/use-event/src/useEvent.ts", "../../@tamagui/web/src/Tamagui.ts", "../../@tamagui/web/src/helpers/getThemeCSSRules.ts", "../../@tamagui/web/src/helpers/proxyThemeToParents.ts", "../../@tamagui/web/src/helpers/themes.ts", "../../@tamagui/web/src/createTamagui.ts", "../../@tamagui/web/src/_withStableStyle.tsx", "../../@tamagui/web/src/views/View.tsx", "../../@tamagui/web/src/views/Text.tsx", "../../@tamagui/web/src/views/ThemeProvider.tsx", "../../@tamagui/web/src/views/TamaguiProvider.tsx", "../../@tamagui/react-native-media-driver/src/matchMedia.ts", "../../@tamagui/react-native-media-driver/src/createMedia.ts", "../../@tamagui/react-native-use-responder-events/src/useResponderEvents.ts", "../../@tamagui/react-native-use-responder-events/src/utils.ts", "../../@tamagui/react-native-use-responder-events/src/createResponderEvent.ts", "../../@tamagui/react-native-use-responder-events/src/types.ts", "../../@tamagui/react-native-use-responder-events/src/ResponderTouchHistoryStore.ts", "../../@tamagui/react-native-use-responder-events/src/ResponderSystem.ts", "../../@tamagui/core/src/index.tsx", "../../@tamagui/core/src/getBaseViews.ts", "../../@tamagui/core/src/helpers/getBoundingClientRect.tsx", "../../@tamagui/core/src/helpers/getRect.tsx", "../../@tamagui/core/src/hooks/useElementLayout.tsx", "../../@tamagui/core/src/addNativeValidStyles.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @noflow\n */\n\n/* eslint no-bitwise: 0 */\n\n'use strict';\n\nfunction normalizeColor(color) {\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n\n  if (typeof color !== 'string') {\n    return null;\n  }\n\n  const matchers = getMatchers();\n  let match;\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = matchers.hex6.exec(color))) {\n    return parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  const colorFromKeyword = normalizeKeyword(color);\n  if (colorFromKeyword != null) {\n    return colorFromKeyword;\n  }\n\n  if ((match = matchers.rgb.exec(color))) {\n    return (\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) | // b\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.rgba.exec(color))) {\n    // rgba(R G B / A) notation\n    if (match[6] !== undefined) {\n      return (\n        ((parse255(match[6]) << 24) | // r\n          (parse255(match[7]) << 16) | // g\n          (parse255(match[8]) << 8) | // b\n          parse1(match[9])) >>> // a\n        0\n      );\n    }\n\n    // rgba(R, G, B, A) notation\n    return (\n      ((parse255(match[2]) << 24) | // r\n        (parse255(match[3]) << 16) | // g\n        (parse255(match[4]) << 8) | // b\n        parse1(match[5])) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.hex3.exec(color))) {\n    return (\n      parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          'ff', // a\n        16,\n      ) >>> 0\n    );\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = matchers.hex8.exec(color))) {\n    return parseInt(match[1], 16) >>> 0;\n  }\n\n  if ((match = matchers.hex4.exec(color))) {\n    return (\n      parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          match[4] +\n          match[4], // a\n        16,\n      ) >>> 0\n    );\n  }\n\n  if ((match = matchers.hsl.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]), // l\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.hsla.exec(color))) {\n    // hsla(H S L / A) notation\n    if (match[6] !== undefined) {\n      return (\n        (hslToRgb(\n          parse360(match[6]), // h\n          parsePercentage(match[7]), // s\n          parsePercentage(match[8]), // l\n        ) |\n          parse1(match[9])) >>> // a\n        0\n      );\n    }\n\n    // hsla(H, S, L, A) notation\n    return (\n      (hslToRgb(\n        parse360(match[2]), // h\n        parsePercentage(match[3]), // s\n        parsePercentage(match[4]), // l\n      ) |\n        parse1(match[5])) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.hwb.exec(color))) {\n    return (\n      (hwbToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // w\n        parsePercentage(match[3]), // b\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n\n  return (\n    (Math.round(r * 255) << 24) |\n    (Math.round(g * 255) << 16) |\n    (Math.round(b * 255) << 8)\n  );\n}\n\nfunction hwbToRgb(h, w, b) {\n  if (w + b >= 1) {\n    const gray = Math.round((w * 255) / (w + b));\n\n    return (gray << 24) | (gray << 16) | (gray << 8);\n  }\n\n  const red = hue2rgb(0, 1, h + 1 / 3) * (1 - w - b) + w;\n  const green = hue2rgb(0, 1, h) * (1 - w - b) + w;\n  const blue = hue2rgb(0, 1, h - 1 / 3) * (1 - w - b) + w;\n\n  return (\n    (Math.round(red * 255) << 24) |\n    (Math.round(green * 255) << 16) |\n    (Math.round(blue * 255) << 8)\n  );\n}\n\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call(...args) {\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,?\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nfunction callWithSlashSeparator(...args) {\n  return (\n    '\\\\(\\\\s*(' +\n    args.slice(0, args.length - 1).join(')\\\\s*,?\\\\s*(') +\n    ')\\\\s*/\\\\s*(' +\n    args[args.length - 1] +\n    ')\\\\s*\\\\)'\n  );\n}\n\nfunction commaSeparatedCall(...args) {\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nlet cachedMatchers;\n\nfunction getMatchers() {\n  if (cachedMatchers === undefined) {\n    cachedMatchers = {\n      rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),\n      rgba: new RegExp(\n        'rgba(' +\n          commaSeparatedCall(NUMBER, NUMBER, NUMBER, NUMBER) +\n          '|' +\n          callWithSlashSeparator(NUMBER, NUMBER, NUMBER, NUMBER) +\n          ')',\n      ),\n      hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n      hsla: new RegExp(\n        'hsla(' +\n          commaSeparatedCall(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) +\n          '|' +\n          callWithSlashSeparator(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) +\n          ')',\n      ),\n      hwb: new RegExp('hwb' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n      hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#([0-9a-fA-F]{6})$/,\n      hex8: /^#([0-9a-fA-F]{8})$/,\n    };\n  }\n  return cachedMatchers;\n}\n\nfunction parse255(str) {\n  const int = parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\n\nfunction parse360(str) {\n  const int = parseFloat(str);\n  return (((int % 360) + 360) % 360) / 360;\n}\n\nfunction parse1(str) {\n  const num = parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  // parseFloat conveniently ignores the final %\n  const int = parseFloat(str);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\n\nfunction normalizeKeyword(name) {\n  // prettier-ignore\n  switch (name) {\n    case 'transparent': return 0x00000000;\n    // http://www.w3.org/TR/css3-color/#svg-color\n    case 'aliceblue': return 0xf0f8ffff;\n    case 'antiquewhite': return 0xfaebd7ff;\n    case 'aqua': return 0x00ffffff;\n    case 'aquamarine': return 0x7fffd4ff;\n    case 'azure': return 0xf0ffffff;\n    case 'beige': return 0xf5f5dcff;\n    case 'bisque': return 0xffe4c4ff;\n    case 'black': return 0x000000ff;\n    case 'blanchedalmond': return 0xffebcdff;\n    case 'blue': return 0x0000ffff;\n    case 'blueviolet': return 0x8a2be2ff;\n    case 'brown': return 0xa52a2aff;\n    case 'burlywood': return 0xdeb887ff;\n    case 'burntsienna': return 0xea7e5dff;\n    case 'cadetblue': return 0x5f9ea0ff;\n    case 'chartreuse': return 0x7fff00ff;\n    case 'chocolate': return 0xd2691eff;\n    case 'coral': return 0xff7f50ff;\n    case 'cornflowerblue': return 0x6495edff;\n    case 'cornsilk': return 0xfff8dcff;\n    case 'crimson': return 0xdc143cff;\n    case 'cyan': return 0x00ffffff;\n    case 'darkblue': return 0x00008bff;\n    case 'darkcyan': return 0x008b8bff;\n    case 'darkgoldenrod': return 0xb8860bff;\n    case 'darkgray': return 0xa9a9a9ff;\n    case 'darkgreen': return 0x006400ff;\n    case 'darkgrey': return 0xa9a9a9ff;\n    case 'darkkhaki': return 0xbdb76bff;\n    case 'darkmagenta': return 0x8b008bff;\n    case 'darkolivegreen': return 0x556b2fff;\n    case 'darkorange': return 0xff8c00ff;\n    case 'darkorchid': return 0x9932ccff;\n    case 'darkred': return 0x8b0000ff;\n    case 'darksalmon': return 0xe9967aff;\n    case 'darkseagreen': return 0x8fbc8fff;\n    case 'darkslateblue': return 0x483d8bff;\n    case 'darkslategray': return 0x2f4f4fff;\n    case 'darkslategrey': return 0x2f4f4fff;\n    case 'darkturquoise': return 0x00ced1ff;\n    case 'darkviolet': return 0x9400d3ff;\n    case 'deeppink': return 0xff1493ff;\n    case 'deepskyblue': return 0x00bfffff;\n    case 'dimgray': return 0x696969ff;\n    case 'dimgrey': return 0x696969ff;\n    case 'dodgerblue': return 0x1e90ffff;\n    case 'firebrick': return 0xb22222ff;\n    case 'floralwhite': return 0xfffaf0ff;\n    case 'forestgreen': return 0x228b22ff;\n    case 'fuchsia': return 0xff00ffff;\n    case 'gainsboro': return 0xdcdcdcff;\n    case 'ghostwhite': return 0xf8f8ffff;\n    case 'gold': return 0xffd700ff;\n    case 'goldenrod': return 0xdaa520ff;\n    case 'gray': return 0x808080ff;\n    case 'green': return 0x008000ff;\n    case 'greenyellow': return 0xadff2fff;\n    case 'grey': return 0x808080ff;\n    case 'honeydew': return 0xf0fff0ff;\n    case 'hotpink': return 0xff69b4ff;\n    case 'indianred': return 0xcd5c5cff;\n    case 'indigo': return 0x4b0082ff;\n    case 'ivory': return 0xfffff0ff;\n    case 'khaki': return 0xf0e68cff;\n    case 'lavender': return 0xe6e6faff;\n    case 'lavenderblush': return 0xfff0f5ff;\n    case 'lawngreen': return 0x7cfc00ff;\n    case 'lemonchiffon': return 0xfffacdff;\n    case 'lightblue': return 0xadd8e6ff;\n    case 'lightcoral': return 0xf08080ff;\n    case 'lightcyan': return 0xe0ffffff;\n    case 'lightgoldenrodyellow': return 0xfafad2ff;\n    case 'lightgray': return 0xd3d3d3ff;\n    case 'lightgreen': return 0x90ee90ff;\n    case 'lightgrey': return 0xd3d3d3ff;\n    case 'lightpink': return 0xffb6c1ff;\n    case 'lightsalmon': return 0xffa07aff;\n    case 'lightseagreen': return 0x20b2aaff;\n    case 'lightskyblue': return 0x87cefaff;\n    case 'lightslategray': return 0x778899ff;\n    case 'lightslategrey': return 0x778899ff;\n    case 'lightsteelblue': return 0xb0c4deff;\n    case 'lightyellow': return 0xffffe0ff;\n    case 'lime': return 0x00ff00ff;\n    case 'limegreen': return 0x32cd32ff;\n    case 'linen': return 0xfaf0e6ff;\n    case 'magenta': return 0xff00ffff;\n    case 'maroon': return 0x800000ff;\n    case 'mediumaquamarine': return 0x66cdaaff;\n    case 'mediumblue': return 0x0000cdff;\n    case 'mediumorchid': return 0xba55d3ff;\n    case 'mediumpurple': return 0x9370dbff;\n    case 'mediumseagreen': return 0x3cb371ff;\n    case 'mediumslateblue': return 0x7b68eeff;\n    case 'mediumspringgreen': return 0x00fa9aff;\n    case 'mediumturquoise': return 0x48d1ccff;\n    case 'mediumvioletred': return 0xc71585ff;\n    case 'midnightblue': return 0x191970ff;\n    case 'mintcream': return 0xf5fffaff;\n    case 'mistyrose': return 0xffe4e1ff;\n    case 'moccasin': return 0xffe4b5ff;\n    case 'navajowhite': return 0xffdeadff;\n    case 'navy': return 0x000080ff;\n    case 'oldlace': return 0xfdf5e6ff;\n    case 'olive': return 0x808000ff;\n    case 'olivedrab': return 0x6b8e23ff;\n    case 'orange': return 0xffa500ff;\n    case 'orangered': return 0xff4500ff;\n    case 'orchid': return 0xda70d6ff;\n    case 'palegoldenrod': return 0xeee8aaff;\n    case 'palegreen': return 0x98fb98ff;\n    case 'paleturquoise': return 0xafeeeeff;\n    case 'palevioletred': return 0xdb7093ff;\n    case 'papayawhip': return 0xffefd5ff;\n    case 'peachpuff': return 0xffdab9ff;\n    case 'peru': return 0xcd853fff;\n    case 'pink': return 0xffc0cbff;\n    case 'plum': return 0xdda0ddff;\n    case 'powderblue': return 0xb0e0e6ff;\n    case 'purple': return 0x800080ff;\n    case 'rebeccapurple': return 0x663399ff;\n    case 'red': return 0xff0000ff;\n    case 'rosybrown': return 0xbc8f8fff;\n    case 'royalblue': return 0x4169e1ff;\n    case 'saddlebrown': return 0x8b4513ff;\n    case 'salmon': return 0xfa8072ff;\n    case 'sandybrown': return 0xf4a460ff;\n    case 'seagreen': return 0x2e8b57ff;\n    case 'seashell': return 0xfff5eeff;\n    case 'sienna': return 0xa0522dff;\n    case 'silver': return 0xc0c0c0ff;\n    case 'skyblue': return 0x87ceebff;\n    case 'slateblue': return 0x6a5acdff;\n    case 'slategray': return 0x708090ff;\n    case 'slategrey': return 0x708090ff;\n    case 'snow': return 0xfffafaff;\n    case 'springgreen': return 0x00ff7fff;\n    case 'steelblue': return 0x4682b4ff;\n    case 'tan': return 0xd2b48cff;\n    case 'teal': return 0x008080ff;\n    case 'thistle': return 0xd8bfd8ff;\n    case 'tomato': return 0xff6347ff;\n    case 'turquoise': return 0x40e0d0ff;\n    case 'violet': return 0xee82eeff;\n    case 'wheat': return 0xf5deb3ff;\n    case 'white': return 0xffffffff;\n    case 'whitesmoke': return 0xf5f5f5ff;\n    case 'yellow': return 0xffff00ff;\n    case 'yellowgreen': return 0x9acd32ff;\n  }\n  return null;\n}\n\nmodule.exports = normalizeColor;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n    for (var name in all) __defProp(target, name, {\n      get: all[name],\n      enumerable: !0\n    });\n  },\n  __copyProps = (to, from, except, desc) => {\n    if (from && typeof from == \"object\" || typeof from == \"function\") for (let key of __getOwnPropNames(from)) !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n    return to;\n  };\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: !0\n}), mod);\nvar index_exports = {};\n__export(index_exports, {\n  timer: () => timer\n});\nmodule.exports = __toCommonJS(index_exports);\nfunction timer() {\n  let runs = 0;\n  const typesOfRuns = /* @__PURE__ */new Set(),\n    timings = {};\n  function print() {\n    const typeRuns = runs / typesOfRuns.size;\n    let totalTime = 0;\n    const out = [`Ran ${typeRuns} per-type, ${runs} total`, ...[...typesOfRuns].map(name => {\n      if (name.endsWith(\"(ignore)\")) return;\n      const avg = `avg ${`${timings[name] / typeRuns}`.slice(0, 9).padEnd(9)}ms`,\n        total = timings[name];\n      return totalTime += total, `${name.slice(0, 30).padStart(31)} | ${avg} | total ${total}ms`;\n    }), `                                    total ${totalTime}ms`].join(`\n`);\n    return console.info(out), out;\n  }\n  return {\n    start(opts) {\n      const quiet = opts?.quiet ?? !0;\n      function time(strings, ...vars) {\n        const elapsed = performance.now() - start,\n          tag = templateToString(strings, ...vars);\n        if (typesOfRuns.add(tag), runs++, timings[tag] ??= 0, timings[tag] += elapsed, !quiet) {\n          let result = \"\";\n          strings.forEach((str, i) => {\n            result += `${str}${i === strings.length - 1 ? \"\" : vars[i]}`;\n          }), console.info(`${`${elapsed}ms`.slice(0, 6).padStart(7)} |`, result);\n        }\n        start = performance.now();\n      }\n      let start = performance.now();\n      return time.print = print, time;\n    },\n    profile() {\n      return {\n        timings,\n        runs\n      };\n    },\n    print\n  };\n}\nfunction templateToString(strings, ...vars) {\n  return strings.reduce((result, str, i) => result + str + (vars[i] !== void 0 ? vars[i] : \"\"), \"\");\n}", "const cache = new Map<string, string>()\nlet cacheSize = 0\n\nexport const simpleHash = (strIn: string, hashMin: number | 'strict' = 10): string => {\n  if (cache.has(strIn)) {\n    return cache.get(strIn)!\n  }\n\n  let str = strIn\n\n  // remove var()\n  if (str[0] === 'v' && str.startsWith('var(')) {\n    str = str.slice(6, str.length - 1)\n  }\n\n  let hash = 0\n  let valids = ''\n  let added = 0\n  const len = str.length\n\n  for (let i = 0; i < len; i++) {\n    if (hashMin !== 'strict' && added <= hashMin) {\n      const char = str.charCodeAt(i)\n      if (char === 46) {\n        valids += '--'\n        continue\n      }\n      if (isValidCSSCharCode(char)) {\n        added++\n        valids += str[i]\n        continue\n      }\n    }\n    hash = hashChar(hash, str[i])\n  }\n\n  const res = valids + (hash ? Math.abs(hash) : '')\n\n  if (cacheSize > 10_000) {\n    cache.clear()\n    cacheSize = 0\n  }\n\n  cache.set(strIn, res)\n  cacheSize++\n\n  return res\n}\n\nconst hashChar = (hash: number, c: string) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0\n\nfunction isValidCSSCharCode(code: number) {\n  return (\n    // A-Z\n    (code >= 65 && code <= 90) ||\n    // a-z\n    (code >= 97 && code <= 122) ||\n    // _\n    code === 95 ||\n    // -\n    code === 45 ||\n    // 0-9\n    (code >= 48 && code <= 57)\n  )\n}\n", "export function clamp(value: number, [min, max]: [number, number]): number {\n  return Math.min(max, Math.max(min, value))\n}\n", "type Events = Object\n\nexport type EventHandler<E extends Events> = (event: E) => void\n\nexport function composeEventHandlers<E extends Events>(\n  og?: EventHandler<E> | null,\n  next?: EventHandler<E> | null,\n  { checkDefaultPrevented = true } = {}\n) {\n  if (!og || !next) {\n    return next || og || undefined\n  }\n  return (event: E) => {\n    og?.(event)\n    if (\n      !event ||\n      !(\n        checkDefaultPrevented &&\n        typeof event === 'object' &&\n        'defaultPrevented' in event\n      ) ||\n      // @ts-ignore\n      ('defaultPrevented' in event && !event.defaultPrevented)\n    ) {\n      return next?.(event)\n    }\n  }\n}\n", "// perf sensitive so doing some weird stuff\n\n/**\n * next - take objects:\n *\n * { _shorthand: 'postfix' }\n *\n */\n\nexport function concatClassName(...args: any[]): any\nexport function concatClassName(_cn: Record<string, any> | null | undefined): string {\n  const args = arguments\n  const usedPrefixes: string[] = []\n  let final = ''\n\n  const len = args.length\n  let propObjects: any = null\n  for (let x = len; x >= 0; x--) {\n    const cns = args[x]\n\n    if (!cns) continue\n    if (!Array.isArray(cns) && typeof cns !== 'string') {\n      // is prop object\n      propObjects = propObjects || []\n      propObjects.push(cns)\n      continue\n    }\n\n    const names = Array.isArray(cns) ? cns : cns.split(' ')\n    const numNames = names.length\n    for (let i = numNames - 1; i >= 0; i--) {\n      const name = names[i]\n\n      if (!name || name === ' ') continue\n      if (name[0] !== '_') {\n        // not snack style (todo slightly stronger heuristic)\n        final = name + ' ' + final\n        continue\n      }\n\n      const splitIndex = name.indexOf('-')\n      if (splitIndex < 1) {\n        final = name + ' ' + final\n        // if (shouldDebug) console.log('debug exclude:', name, final)\n        continue\n      }\n\n      const nextChar = name[splitIndex + 1]\n      // synced to static-ui constants\n      // MEDIA_SEP\n      const isMediaQuery = nextChar === '_'\n      // PSEUDO_SEP\n      // commenting out three things to make pseudos override properly\n      // (leave in for a bit to see if other bugs pop up later):\n      // 1. const isPseudoQuery = nextChar === '0'\n      const styleKey = name.slice(1, name.lastIndexOf('-'))\n      // 2. isMediaQuery || isPseudoQuery\n      const mediaKey = isMediaQuery ? name.slice(splitIndex + 2, splitIndex + 7) : null\n      const uid = mediaKey ? styleKey + mediaKey : styleKey\n      // 3. && !isPseudoQuery\n\n      if (usedPrefixes.indexOf(uid) > -1) {\n        // if (shouldDebug) console.log('debug exclude:', usedPrefixes, name)\n        continue\n      }\n      usedPrefixes.push(uid)\n\n      // overrides for full safety\n      const propName = styleKey\n      if (propName && propObjects) {\n        if (\n          propObjects.some((po) => {\n            if (mediaKey) {\n              const propKey = pseudoInvert[mediaKey]\n              return po && po[propKey] && propName in po[propKey] && po[propKey] !== null\n            }\n            const res = po && propName in po && po[propName] !== null\n            return res\n          })\n        ) {\n          // if (shouldDebug) console.log('debug exclude:', name)\n          continue\n        }\n      }\n\n      final = name + ' ' + final\n    }\n  }\n\n  return final\n}\n\nconst pseudoInvert = {\n  hover: 'hoverStyle',\n  focus: 'focusStyle',\n  press: 'pressStyle',\n  focusVisible: 'focusVisibleStyle',\n  focusWithin: 'focusWithinStyle',\n  disabled: 'disabledStyle',\n}\n", "export type StyleObject = [\n  property: string,\n  value: any,\n  identifier: string,\n  pseudo: 'hover' | 'focus' | 'focus-visible' | 'focus-within' | 'active' | undefined,\n  rules: string[],\n]\n\nexport const StyleObjectProperty = 0\nexport const StyleObjectValue = 1\nexport const StyleObjectIdentifier = 2\nexport const StyleObjectPseudo = 3\nexport const StyleObjectRules = 4\n\nexport type MediaStyleObject = Omit<StyleObject, 'value'>\n", "import { useEffect, useLayoutEffect } from 'react'\n\nexport const isWeb: boolean = true\nexport const isWindowDefined: boolean = typeof window !== 'undefined'\nexport const isServer: boolean = isWeb && !isWindowDefined\nexport const isClient: boolean = isWeb && isWindowDefined\n\nexport const useIsomorphicLayoutEffect: typeof useEffect = isServer\n  ? useEffect\n  : useLayoutEffect\n\nexport const isChrome: boolean =\n  typeof navigator !== 'undefined' && /Chrome/.test(navigator.userAgent || '')\n\nexport const isWebTouchable: boolean =\n  isClient && ('ontouchstart' in window || navigator.maxTouchPoints > 0)\n\nexport const isTouchable: boolean = !isWeb || isWebTouchable\n// set :boolean to avoid inferring type to false\nexport const isAndroid: boolean = false\nexport const isIos: boolean = process.env.TEST_NATIVE_PLATFORM === 'ios'\nexport const currentPlatform: 'web' | 'ios' | 'native' | 'android' = 'web'\n", "import { currentPlatform } from '@tamagui/constants'\n\n// these types and helpers are to be used on the components that support the `native` prop\n// some usage examples are:\n// `<Component native` means render natively on any platform if possible\n// `<Component native={false}` means opt out of native\n// `<Component native=\"web\"` means render natively on web if possible\n// `<Component native={[\"web\", \"android\"]}` means render natively on web and android if possible\n// `<Component native={[\"mobile\"]}` means render natively on mobile (android or ios) if possible\n\nexport type NativePlatform =\n  | 'web'\n  | 'mobile' // called 'mobile' instead of 'native' because things could be 'native' to web as well\n  | 'android'\n  | 'ios'\n\nexport type ExplicitNativePlatform = Exclude<NativePlatform, 'mobile'>\n\nexport type NativeValue<Platform extends NativePlatform = NativePlatform> =\n  | boolean\n  | Platform\n  | Platform[]\n\nconst ALL_PLATFORMS: ExplicitNativePlatform[] = ['web', 'android', 'ios']\n/**\n *\n * takes in what user has inputted the native-supporting component and returns the name of the native platform we should render\n *\n * @example ['android'] => 'android' (when current platform is android)\n * @example ['android'] => null      (when current platform is not android)\n * @example ['mobile']  => 'ios'     (when current platform is ios)\n *\n * @param supportedSpecificNativeValues the platforms your component/system supports\n * @param nativeProp the platforms your user is requesting you to use\n * @returns\n */\nexport function shouldRenderNativePlatform(nativeProp?: NativeValue) {\n  if (!nativeProp) {\n    return null\n  }\n  const userRequestedPlatforms = resolvePlatformNames(nativeProp)\n\n  for (const platform of ALL_PLATFORMS) {\n    if (platform === currentPlatform && userRequestedPlatforms.has(platform)) {\n      return platform\n    }\n  }\n\n  return null\n}\n\nfunction resolvePlatformNames(nativeProp: NativeValue) {\n  const platforms: NativePlatform[] =\n    nativeProp === true // all native platforms\n      ? ALL_PLATFORMS\n      : nativeProp === false // no native platform\n        ? []\n        : Array.isArray(nativeProp)\n          ? nativeProp\n          : [nativeProp]\n  const set = new Set(platforms)\n\n  if (set.has('mobile')) {\n    // mobile means android and ios so we'll just use the explicit platforms here\n    set.add('android')\n    set.add('ios')\n    set.delete('mobile')\n  }\n  return set as Set<ExplicitNativePlatform>\n}\n", "import { isAndroid } from '@tamagui/constants'\n\n// generally organizing this so we don't duplicate things so its a bit weird\n\nconst textColors = {\n  color: true,\n  textDecorationColor: true,\n  textShadowColor: true,\n}\n\n// used for propMapping to find the right token category\n// just specificy the least costly, all else go to `space` (most keys - we can exclude)\nexport const tokenCategories = {\n  radius: {\n    borderRadius: true,\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomLeftRadius: true,\n    borderBottomRightRadius: true,\n\n    // logical\n    borderStartStartRadius: true,\n    borderStartEndRadius: true,\n    borderEndStartRadius: true,\n    borderEndEndRadius: true,\n  },\n  size: {\n    width: true,\n    height: true,\n    minWidth: true,\n    minHeight: true,\n    maxWidth: true,\n    maxHeight: true,\n    blockSize: true,\n    minBlockSize: true,\n    maxBlockSize: true,\n    inlineSize: true,\n    minInlineSize: true,\n    maxInlineSize: true,\n  },\n  zIndex: {\n    zIndex: true,\n  },\n  color: {\n    backgroundColor: true,\n    borderColor: true,\n    borderBlockStartColor: true,\n    borderBlockEndColor: true,\n    borderBlockColor: true,\n    borderBottomColor: true,\n    borderInlineColor: true,\n    borderInlineStartColor: true,\n    borderInlineEndColor: true,\n    borderTopColor: true,\n    borderLeftColor: true,\n    borderRightColor: true,\n    borderEndColor: true,\n    borderStartColor: true,\n    shadowColor: true,\n    ...textColors,\n    ...(process.env.TAMAGUI_TARGET === 'web' && {\n      outlineColor: true,\n      caretColor: true,\n    }),\n  },\n}\n\nexport const stylePropsUnitless = {\n  WebkitLineClamp: true,\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  gridTemplateColumns: true,\n  gridTemplateAreas: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  shadowOpacity: true,\n}\n\nexport const stylePropsTransform = {\n  x: true,\n  y: true,\n  scale: true,\n  perspective: true,\n  scaleX: true,\n  scaleY: true,\n  skewX: true,\n  skewY: true,\n  matrix: true,\n  rotate: true,\n  rotateY: true,\n  rotateX: true,\n  rotateZ: true,\n}\n\nexport const stylePropsView = {\n  backfaceVisibility: true,\n  borderBottomEndRadius: true,\n  borderBottomStartRadius: true,\n  borderBottomWidth: true,\n  borderLeftWidth: true,\n  borderRightWidth: true,\n  borderBlockWidth: true,\n  borderBlockEndWidth: true,\n  borderBlockStartWidth: true,\n  borderInlineWidth: true,\n  borderInlineEndWidth: true,\n  borderInlineStartWidth: true,\n  borderStyle: true,\n  borderBlockStyle: true,\n  borderBlockEndStyle: true,\n  borderBlockStartStyle: true,\n  borderInlineStyle: true,\n  borderInlineEndStyle: true,\n  borderInlineStartStyle: true,\n  borderTopEndRadius: true,\n  borderTopStartRadius: true,\n  borderTopWidth: true,\n  borderWidth: true,\n  transform: true,\n  transformOrigin: true,\n  alignContent: true,\n  alignItems: true,\n  alignSelf: true,\n  borderEndWidth: true,\n  borderStartWidth: true,\n  bottom: true,\n  display: true,\n  end: true,\n  flexBasis: true,\n  flexDirection: true,\n  flexWrap: true,\n  gap: true,\n  columnGap: true,\n  rowGap: true,\n  justifyContent: true,\n  left: true,\n  margin: true,\n  marginBlock: true,\n  marginBlockEnd: true,\n  marginBlockStart: true,\n  marginInline: true,\n  marginInlineStart: true,\n  marginInlineEnd: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n  overflow: true,\n  padding: true,\n  paddingBottom: true,\n  paddingInline: true,\n  paddingBlock: true,\n  paddingBlockStart: true,\n  paddingInlineEnd: true,\n  paddingInlineStart: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n  position: true,\n  right: true,\n  start: true,\n  top: true,\n  inset: true,\n  insetBlock: true,\n  insetBlockEnd: true,\n  insetBlockStart: true,\n  insetInline: true,\n  insetInlineEnd: true,\n  insetInlineStart: true,\n  direction: true,\n  shadowOffset: true,\n  shadowRadius: true,\n  ...tokenCategories.color,\n  ...tokenCategories.radius,\n  ...tokenCategories.size,\n  ...tokenCategories.radius,\n  ...stylePropsTransform,\n  ...stylePropsUnitless,\n\n  boxShadow: true,\n  filter: true,\n\n  // allow a few web only ones\n\n  ...(process.env.TAMAGUI_TARGET === 'web' && {\n    // RN doesn't support specific border styles per-edge\n    transition: true,\n    textWrap: true,\n    backdropFilter: true,\n    background: true,\n    backgroundAttachment: true,\n    backgroundBlendMode: true,\n    backgroundClip: true,\n    backgroundColor: true,\n    backgroundImage: true,\n    backgroundOrigin: true,\n    backgroundPosition: true,\n    backgroundRepeat: true,\n    backgroundSize: true,\n    borderBottomStyle: true,\n    borderImage: true,\n    borderLeftStyle: true,\n    borderRightStyle: true,\n    borderTopStyle: true,\n    boxSizing: true,\n    caretColor: true,\n    clipPath: true,\n    contain: true,\n    containerType: true,\n    content: true,\n    cursor: true,\n    float: true,\n    mask: true,\n    maskBorder: true,\n    maskBorderMode: true,\n    maskBorderOutset: true,\n    maskBorderRepeat: true,\n    maskBorderSlice: true,\n    maskBorderSource: true,\n    maskBorderWidth: true,\n    maskClip: true,\n    maskComposite: true,\n    maskImage: true,\n    maskMode: true,\n    maskOrigin: true,\n    maskPosition: true,\n    maskRepeat: true,\n    maskSize: true,\n    maskType: true,\n    mixBlendMode: true,\n    objectFit: true,\n    objectPosition: true,\n    outlineOffset: true,\n    outlineStyle: true,\n    outlineWidth: true,\n    overflowBlock: true,\n    overflowInline: true,\n    overflowX: true,\n    overflowY: true,\n    pointerEvents: true,\n    scrollbarWidth: true,\n    textEmphasis: true,\n    touchAction: true,\n    transformStyle: true,\n    userSelect: true,\n  }),\n  ...(isAndroid ? { elevationAndroid: true } : {}),\n}\n\nconst stylePropsFont = {\n  fontFamily: true,\n  fontSize: true,\n  fontStyle: true,\n  fontWeight: true,\n  fontVariant: true,\n  letterSpacing: true,\n  lineHeight: true,\n  textTransform: true,\n}\n\nexport const stylePropsTextOnly = {\n  ...stylePropsFont,\n  textAlign: true,\n  textDecorationLine: true,\n  textDecorationStyle: true,\n  ...textColors,\n  textShadowOffset: true,\n  textShadowRadius: true,\n  userSelect: true,\n  selectable: true,\n  verticalAlign: true,\n\n  // allow some web only ones\n  ...(process.env.TAMAGUI_TARGET === 'web' && {\n    whiteSpace: true,\n    wordWrap: true,\n    textOverflow: true,\n    textDecorationDistance: true,\n    cursor: true,\n    WebkitLineClamp: true,\n    WebkitBoxOrient: true,\n  }),\n}\n\nexport const stylePropsText = {\n  ...stylePropsView,\n  ...stylePropsTextOnly,\n}\n\nexport const stylePropsAll = stylePropsText\n\nexport const validPseudoKeys = {\n  enterStyle: true,\n  exitStyle: true,\n  hoverStyle: true,\n  pressStyle: true,\n  focusStyle: true,\n  disabledStyle: true,\n  focusWithinStyle: true,\n\n  // allow some web only ones\n  ...(process.env.TAMAGUI_TARGET === 'web' && {\n    focusVisibleStyle: true,\n  }),\n}\n\nexport const validStyles = stylePropsView\n", "import React from 'react'\n\nconst Decorated = Symbol()\n\ntype Combined<A, B> = A & B\n\nexport const withStaticProperties = <A extends Function, B>(\n  component: A,\n  staticProps: B\n): Combined<A, B> => {\n  // clone component if already wrapped once\n  const next = (() => {\n    if (component[Decorated]) {\n      const _ = React.forwardRef((props, ref) =>\n        React.createElement(component as any, { ...props, ref })\n      )\n      // attach existing things again\n      for (const key in component) {\n        const v = component[key]\n        // @ts-ignore\n        _[key] = v && typeof v === 'object' ? { ...v } : v\n      }\n    }\n    return component\n  })()\n\n  // add new things\n  Object.assign(next, staticProps)\n  next[Decorated] = true\n\n  return next as any as A & B\n}\n", "import { isWeb } from '@tamagui/constants'\n\nimport type {\n  ConfigListener,\n  GenericTamaguiSettings,\n  TamaguiInternalConfig,\n  Token,\n  Tokens,\n  TokensMerged,\n} from './types'\n\nlet conf: TamaguiInternalConfig | null\n\nconst haventCalledErrorMessage =\n  process.env.NODE_ENV === 'development'\n    ? `\nHaven't called createTamagui yet.\n\n  This often happens due to having duplicate Tamagui sub-dependencies.\n\n  Tamagui needs every @tamagui/* dependency to be on the exact same version, we include an upgrade script\n  with the starter kits that you can call with \"yarn upgrade:tamagui\" to help with this.\n\n  You may want to clear your node_modules as well and run a fresh install after ugprading.\n`\n    : `❌ Error 001`\n\nexport const getSetting = <Key extends keyof GenericTamaguiSettings>(\n  key: Key\n): GenericTamaguiSettings[Key] => {\n  if (process.env.NODE_ENV === 'development') {\n    if (!conf) throw new Error(haventCalledErrorMessage)\n  }\n  return (\n    conf!.settings[key] ??\n    // @ts-expect-error\n    conf[key]\n  )\n}\n\nexport const setConfig = (next: TamaguiInternalConfig) => {\n  conf = next\n}\n\nexport const setConfigFont = (name: string, font: any, fontParsed: any) => {\n  if (process.env.NODE_ENV === 'development') {\n    if (!conf) throw new Error(haventCalledErrorMessage)\n  }\n  conf!.fonts[name] = font\n  conf!.fontsParsed[`$${name}`] = fontParsed\n}\n\nexport const getConfig = () => {\n  if (!conf) {\n    throw new Error(\n      process.env.NODE_ENV !== 'production'\n        ? `Missing tamagui config, you either have a duplicate config, or haven't set it up. Be sure createTamagui is called before rendering. Also, make sure all of your tamagui dependencies are on the same version (\\`tamagui\\`, \\`@tamagui/package-name\\`, etc.) not just in your package.json, but in your lockfile.`\n        : 'Err0'\n    )\n  }\n  return conf\n}\n\nexport const getConfigMaybe = () => {\n  return conf\n}\n\nlet tokensMerged: TokensMerged\nexport function setTokens(_: TokensMerged) {\n  tokensMerged = _\n}\n\nexport const getTokens = ({\n  prefixed,\n}: {\n  /**\n   * Force either with $ or without $ prefix\n   */\n  prefixed?: boolean\n} = {}): TokensMerged => {\n  if (process.env.NODE_ENV === 'development') {\n    if (!conf) throw new Error(haventCalledErrorMessage)\n  }\n  const { tokens, tokensParsed } = conf!\n  if (prefixed === false) return tokens as any\n  if (prefixed === true) return tokensParsed as any\n  return tokensMerged\n}\n\nexport const getTokenObject = (value: Token, group?: keyof Tokens) => {\n  return (\n    conf!.specificTokens[value] ??\n    (group\n      ? tokensMerged[group]?.[value]\n      : tokensMerged[\n          Object.keys(tokensMerged).find((cat) => tokensMerged[cat][value]) || ''\n        ]?.[value])\n  )\n}\n\nexport const getToken = (value: Token, group?: keyof Tokens, useVariable = isWeb) => {\n  const token = getTokenObject(value, group)\n  return useVariable ? token?.variable : token?.val\n}\n\nexport const getTokenValue = (value: Token | 'unset' | 'auto', group?: keyof Tokens) => {\n  if (value === 'unset' || value === 'auto') return\n  return getToken(value, group, false)\n}\n\n/**\n * Note: this is the same as `getTokens`\n */\nexport const useTokens = getTokens\n\nexport const getThemes = () => conf!.themes\n\nexport const configListeners = new Set<ConfigListener>()\n\nexport const onConfiguredOnce = (cb: ConfigListener) => {\n  if (conf) {\n    cb(conf)\n  } else {\n    configListeners.add(cb)\n  }\n}\n\nexport const updateConfig = (key: string, value: any) => {\n  // for usage internally only\n  Object.assign(conf![key], value)\n}\n\n// searches by value name or token name\nexport const getFont = (name: string) => {\n  const conf = getConfig()\n  return (\n    conf.fontsParsed[name] ??\n    Object.entries(conf.fontsParsed).find(\n      ([k]) => conf.fontsParsed[k]?.family?.['val'] === name\n    )?.[1]\n  )\n}\n\ntype DevConfig = {\n  visualizer?:\n    | boolean\n    | {\n        key?: string\n        delay?: number\n      }\n}\n\nexport let devConfig: DevConfig | undefined\n\nexport function setupDev(conf: DevConfig) {\n  if (process.env.NODE_ENV === 'development') {\n    devConfig = conf\n  }\n}\n", "export * from '@tamagui/simple-hash'\nexport * from './clamp'\nexport * from './composeEventHandlers'\nexport * from './concatClassName'\nexport * from './types'\nexport * from './shouldRenderNativePlatform'\nexport * from './validStyleProps'\nexport * from './withStaticProperties'\n", "import { isWeb } from '@tamagui/constants'\nimport { simpleHash } from '@tamagui/helpers'\n\nimport { getConfig } from './config'\nimport type { TokenCategories } from './types'\n\n/**\n * Should rename this to Token\n * Moving to objects for React Server Components support\n */\n\nexport interface Variable<A = any> {\n  isVar: true\n  variable?: string\n  val: A\n  name: string\n  key: string\n}\n\nexport type MakeVariable<A = any> = A extends string | number ? Variable<A> : A\n\nfunction constructCSSVariableName(name: string) {\n  return `var(--${process.env.TAMAGUI_CSS_VARIABLE_PREFIX || ''}${name})`\n}\n\ntype VariableIn<A = any> = Pick<Variable<A>, 'key' | 'name' | 'val'>\n\nexport const createVariable = <A extends string | number | Variable = any>(\n  props: VariableIn<A>,\n  skipHash = false\n): Variable<A> => {\n  if (!skipHash && isVariable(props)) return props\n  const { key, name, val } = props\n  return {\n    isVar: true,\n    key,\n    name: skipHash ? name : simpleHash(name, 40),\n    val,\n    variable: isWeb\n      ? skipHash\n        ? constructCSSVariableName(name)\n        : createCSSVariable(name)\n      : '',\n  }\n}\n\n// could do weakmap cache\nexport function variableToString(vrble?: any, getValue = false) {\n  if (isVariable(vrble)) {\n    if (!getValue && isWeb && vrble.variable) {\n      return vrble.variable\n    }\n    return `${vrble.val}`\n  }\n  return `${vrble || ''}`\n}\n\nexport function isVariable(v: Variable | any): v is Variable {\n  return v && typeof v === 'object' && 'isVar' in v\n}\n\nexport function getVariable(\n  nameOrVariable: Variable | string | any,\n  group: TokenCategories = 'size'\n) {\n  // dynamic color-like\n  if (nameOrVariable?.dynamic) {\n    return nameOrVariable\n  }\n  setDidGetVariableValue(true)\n  if (isVariable(nameOrVariable)) {\n    return variableToString(nameOrVariable)\n  }\n  const tokens = getConfig().tokensParsed\n  return variableToString(tokens[group]?.[nameOrVariable] ?? nameOrVariable)\n}\n\nlet accessed = false\nexport const setDidGetVariableValue = (val: boolean) => (accessed = val)\nexport const didGetVariableValue = () => accessed\n\nexport function getVariableValue(v: Variable | any, group?: TokenCategories) {\n  if (isVariable(v)) {\n    setDidGetVariableValue(true)\n    return v.val\n  }\n  if (group) {\n    const tokens = getConfig().tokensParsed\n    const token = tokens[group]?.[v]\n    if (token) {\n      setDidGetVariableValue(true)\n      return token.val\n    }\n  }\n  return v\n}\n\nexport function getVariableName(v: Variable | any) {\n  if (isVariable(v)) return v.name\n  return v\n}\n\nexport function getVariableVariable(v: Variable | any) {\n  if (isVariable(v)) return v.variable\n  return v\n}\n\n// bugfix { space: { 0.5: 10 } } was generating var(--space-0.5) (invalid CSS):\nexport const createCSSVariable = (nameProp: string, includeVar = true) => {\n  if (process.env.NODE_ENV === 'development') {\n    if (!nameProp || typeof nameProp !== 'string') {\n      throw new Error(`createCSSVariable expected string, got: ${nameProp}`)\n    }\n  }\n  const name = simpleHash(nameProp, 60)\n  return includeVar ? constructCSSVariableName(name) : name\n}\n", "import type { MatchMedia, MediaQueryList } from '../types'\n\nexport const matchMedia =\n  (typeof window !== 'undefined' && window.matchMedia) || matchMediaFallback\n\nfunction matchMediaFallback(_: string): MediaQueryList {\n  return {\n    match: (a, b) => false,\n    addListener() {},\n    removeListener() {},\n    matches: false,\n  }\n}\n\nexport function setupMatchMedia(_: MatchMedia) {\n  // no-op web\n}\n", "import { isServer, isWeb } from '@tamagui/constants'\nimport { useRef, useSyncExternalStore } from 'react'\nimport { getConfig, getSetting } from '../config'\nimport { matchMedia } from '../helpers/matchMedia'\nimport { pseudoDescriptors } from '../helpers/pseudoDescriptors'\nimport type {\n  ComponentContextI,\n  DebugProp,\n  IsMediaType,\n  LayoutEvent,\n  MediaQueries,\n  MediaQueryObject,\n  MediaQueryState,\n  TamaguiInternalConfig,\n  UseMediaState,\n} from '../types'\n\nexport let mediaState: MediaQueryState =\n  // development only safeguard\n  process.env.NODE_ENV === 'development'\n    ? new Proxy(\n        {},\n        {\n          get(target, key) {\n            if (\n              typeof key === 'string' &&\n              key[0] === '$' &&\n              // dont error on $$typeof\n              key[1] !== '$'\n            ) {\n              throw new Error(`Access mediaState should not use \"$\": ${key}`)\n            }\n            return Reflect.get(target, key)\n          },\n        }\n      )\n    : ({} as any)\n\nexport const mediaQueryConfig: MediaQueries = {}\n\nexport const getMedia = () => mediaState\n\nexport const mediaKeys = new Set<string>() // with $ prefix\n\nconst mediaKeyRegex = /\\$(platform|theme|group)-/\n\nexport const isMediaKey = (key: string): IsMediaType => {\n  if (mediaKeys.has(key)) return true\n  if (key[0] === '$') {\n    const match = key.match(mediaKeyRegex)\n    if (match) return match[1] as 'platform' | 'theme' | 'group'\n  }\n  return false\n}\n\n// for SSR capture it at time of startup\nlet initState: MediaQueryState\n\n// media always above pseudos\nconst defaultMediaImportance = Object.keys(pseudoDescriptors).length\n\nlet mediaKeysOrdered: string[]\n\nexport const getMediaKeyImportance = (key: string) => {\n  if (process.env.NODE_ENV === 'development' && key[0] === '$') {\n    throw new Error('use short key')\n  }\n\n  const conf = getConfig()\n  if (conf.settings.mediaPropOrder) {\n    return defaultMediaImportance\n  }\n\n  // + 100 because we set base usedKeys=1, pseudos are 2-N (however many we have)\n  // all media go above all pseudos so we need to pad it based on that\n  // right now theres 5 pseudos but in the future could be a few more\n  return mediaKeysOrdered.indexOf(key) + 100\n}\n\nconst dispose = new Set<Function>()\n\nlet mediaVersion = 0\n\nexport const configureMedia = (config: TamaguiInternalConfig) => {\n  const { media } = config\n  const mediaQueryDefaultActive = getSetting('mediaQueryDefaultActive')\n  if (!media) return\n  mediaVersion++\n  for (const key in media) {\n    mediaState[key] = mediaQueryDefaultActive?.[key] || false\n    mediaKeys.add(`$${key}`)\n  }\n  Object.assign(mediaQueryConfig, media)\n  initState = { ...mediaState }\n  mediaKeysOrdered = Object.keys(media)\n  setupMediaListeners()\n}\n\nfunction unlisten() {\n  dispose.forEach((cb) => cb())\n  dispose.clear()\n}\n\n/**\n * Note: This should *not* set the state on the first render!\n * Because to avoid hydration issues SSR must match the server\n * *and then* re-render with the actual media query state.\n */\nlet setupVersion = -1\nexport function setupMediaListeners() {\n  if (isWeb && isServer) return\n  if (process.env.IS_STATIC) return\n\n  // avoid setting up more than once per config\n  if (setupVersion === mediaVersion) return\n  setupVersion = mediaVersion\n\n  // hmr, undo existing before re-binding\n  unlisten()\n\n  for (const key in mediaQueryConfig) {\n    const str = mediaObjectToString(mediaQueryConfig[key], key)\n    const getMatch = () => matchMedia(str)\n    const match = getMatch()\n    if (!match) {\n      throw new Error('⚠️ No match')\n    }\n\n    // react native needs these deprecated apis for now\n    match.addListener(update)\n    dispose.add(() => {\n      match.removeListener(update)\n    })\n\n    function update() {\n      const next = !!getMatch().matches\n      if (next === mediaState[key]) return\n      mediaState = { ...mediaState, [key]: next }\n      updateMediaListeners()\n    }\n\n    update()\n  }\n}\n\nconst listeners = new Set<any>()\n\nexport function updateMediaListeners() {\n  listeners.forEach((cb) => cb(mediaState))\n}\n\ntype MediaKeysState = {\n  [key: string]: any\n}\n\ntype MediaState = {\n  enabled?: boolean\n  keys?: Set<string> | null\n}\n\nconst States = new WeakMap<any, MediaState>()\n\nexport function setMediaShouldUpdate(\n  ref: any,\n  enabled?: boolean,\n  keys?: MediaState['keys']\n) {\n  const cur = States.get(ref)\n\n  if (!cur || cur.enabled !== enabled || keys) {\n    States.set(ref, {\n      ...cur,\n      enabled,\n      keys,\n    })\n  }\n}\n\nfunction subscribe(subscriber: () => void) {\n  listeners.add(subscriber)\n  return () => {\n    listeners.delete(subscriber)\n  }\n}\n\ntype ComponentMediaKeys = Set<string>\n\ntype ComponentMediaQueryState = MediaKeysState\n\nexport function useMedia(cc?: ComponentContextI, debug?: DebugProp): UseMediaState {\n  const componentState = cc ? States.get(cc) : null\n\n  const internalRef = useRef<{ keys: Set<string>; lastState?: MediaQueryState }>()\n  if (!internalRef.current) {\n    internalRef.current = {\n      keys: new Set(),\n    }\n  }\n\n  const { keys, lastState = getSetting('disableSSR') ? mediaState : initState } =\n    internalRef.current\n\n  // clear each render to track only rendered touched keys\n  if (keys.size) {\n    keys.clear()\n  }\n\n  const state = useSyncExternalStore(\n    subscribe,\n    () => {\n      if (componentState?.enabled) {\n        internalRef.current!.lastState = mediaState\n        return mediaState\n      }\n\n      const curKeys = componentState?.keys || keys\n\n      if (!curKeys.size) {\n        return lastState\n      }\n\n      for (const key of curKeys) {\n        if (mediaState[key] !== lastState[key]) {\n          if (process.env.NODE_ENV === 'development' && debug) {\n            console.warn(`useMedia() ✍️`, key, lastState[key], '=>', mediaState[key])\n          }\n          internalRef.current!.lastState = mediaState\n          return mediaState\n        }\n      }\n\n      return lastState\n    },\n    getServerSnapshot\n  )\n\n  return new Proxy(state, {\n    get(_, key) {\n      if (!disableMediaTouch && typeof key === 'string') {\n        keys.add(key)\n      }\n      return Reflect.get(state, key)\n    },\n  })\n}\n\nconst getServerSnapshot = () => initState\n\nlet disableMediaTouch = false\nexport function _disableMediaTouch(val: boolean) {\n  disableMediaTouch = val\n}\n\nexport function getMediaState(\n  mediaGroups: Set<string>,\n  layout: LayoutEvent['nativeEvent']['layout']\n) {\n  disableMediaTouch = true\n  let res: Record<string, boolean>\n  try {\n    res = Object.fromEntries(\n      [...mediaGroups].map((mediaKey) => {\n        return [mediaKey, mediaKeyMatch(mediaKey, layout as any)]\n      })\n    )\n  } finally {\n    disableMediaTouch = false\n  }\n  return res\n}\n\nexport const getMediaImportanceIfMoreImportant = (\n  mediaKey: string,\n  key: string,\n  importancesUsed: Record<string, number>,\n  isSizeMedia: boolean\n) => {\n  const importance =\n    isSizeMedia && !getSetting('mediaPropOrder')\n      ? getMediaKeyImportance(mediaKey)\n      : defaultMediaImportance\n  return !importancesUsed[key] || importance > importancesUsed[key] ? importance : null\n}\n\nfunction camelToHyphen(str: string) {\n  return str.replace(/[A-Z]/g, (m) => `-${m.toLowerCase()}`).toLowerCase()\n}\n\nconst cache = new WeakMap<any, string>()\nconst cachedMediaKeyToQuery: Record<string, string> = {}\n\nexport function mediaObjectToString(query: string | MediaQueryObject, key?: string) {\n  if (typeof query === 'string') {\n    return query\n  }\n  if (cache.has(query)) {\n    return cache.get(query)!\n  }\n  const res = Object.entries(query)\n    .map(([feature, value]) => {\n      feature = camelToHyphen(feature)\n      if (typeof value === 'string') {\n        return `(${feature}: ${value})`\n      }\n      if (typeof value === 'number' && /[height|width]$/.test(feature)) {\n        value = `${value}px`\n      }\n      return `(${feature}: ${value})`\n    })\n    .join(' and ')\n  if (key) {\n    cachedMediaKeyToQuery[key] = res\n  }\n  cache.set(query, res)\n  return res\n}\n\nexport function mediaKeyToQuery(key: string) {\n  return cachedMediaKeyToQuery[key] || mediaObjectToString(mediaQueryConfig[key], key)\n}\n\nexport function mediaKeyMatch(\n  key: string,\n  dimensions: { width: number; height: number }\n) {\n  const mediaQueries = mediaQueryConfig[key]\n  const result = Object.keys(mediaQueries).every((query) => {\n    const expectedVal = +mediaQueries[query]\n    const isMax = query.startsWith('max')\n    const isWidth = query.endsWith('Width')\n    const givenVal = dimensions[isWidth ? 'width' : 'height']\n    // if not max then min\n    return isMax ? givenVal < expectedVal : givenVal > expectedVal\n  })\n  return result\n}\n", "// *0 order matches to *1\n\nexport const pseudoDescriptorsBase = {\n  // order of keys here important! in priority order\n  hoverStyle: {\n    name: 'hover',\n    priority: 1,\n  },\n  pressStyle: {\n    name: 'active',\n    stateKey: 'press',\n    priority: 2,\n  },\n  focusVisibleStyle: {\n    name: 'focus-visible',\n    priority: 3,\n    stateKey: 'focusVisible',\n  },\n  focusStyle: {\n    name: 'focus',\n    priority: 3,\n  },\n  focusWithinStyle: {\n    name: 'focus-within',\n    priority: 3,\n    stateKey: 'focusWithin',\n  },\n  disabledStyle: {\n    name: 'disabled',\n    priority: 4,\n    stateKey: 'disabled',\n  },\n} as const\n\nexport const pseudoPriorities = {\n  hover: 1,\n  press: 2,\n  focus: 3,\n  focusVisible: 3,\n  focusWithin: 3,\n  disabled: 4,\n}\n\nexport const pseudoDescriptors: Record<\n  | 'hoverStyle'\n  | 'pressStyle'\n  | 'focusStyle'\n  | 'focusVisibleStyle'\n  | 'focusWithinStyle'\n  | 'enterStyle'\n  | 'exitStyle',\n  PseudoDescriptor\n> = {\n  ...pseudoDescriptorsBase,\n  enterStyle: {\n    name: 'enter',\n    selector: '.t_unmounted',\n    priority: 4,\n  },\n  exitStyle: {\n    name: 'exit',\n    priority: 5,\n  },\n}\n\nexport type PseudoDescriptor = {\n  name: string\n  priority: number\n  stateKey?: string\n  selector?: string\n}\n\nexport type PseudoDescriptors = {\n  [Key in keyof typeof pseudoDescriptors]: PseudoDescriptor\n}\n", "// from radix\n// https://raw.githubusercontent.com/radix-ui/primitives/main/packages/react/compose-refs/src/composeRefs.tsx\n\nimport * as React from 'react'\n\ntype PossibleRef<T> =\n  | React.Ref<T>\n  | React.ForwardedRef<T>\n  | React.RefObject<T>\n  | React.Dispatch<React.SetStateAction<T | null>>\n  | undefined\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nexport function setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value)\n  } else if (ref) {\n    ;(ref as React.MutableRefObject<T>).current = value\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nexport function composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node))\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nexport function useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  return React.useCallback(composeRefs(...refs), refs)\n}\n", "import React from 'react'\nimport type { Context, ProviderExoticComponent, ReactNode } from 'react'\n\nimport { objectIdentityKey } from './objectIdentityKey'\n\nexport type StyledContext<Props extends Object = any> = Omit<\n  Context<Props>,\n  'Provider'\n> & {\n  context: Context<Props>\n  props: Object | undefined\n  Provider: ProviderExoticComponent<\n    Partial<Props | undefined> & {\n      children?: ReactNode\n      scope?: string\n    }\n  >\n\n  useStyledContext: (scope?: string) => Props\n}\n\n// avoid react compiler - we aren't breaking its rules but it shouldn't compile this file because\n// it will mis-interpret how we change the context value. in\nconst createReactContext = React[Math.random() ? 'createContext' : 'createContext']\n\nexport function createStyledContext<VariantProps extends Record<string, any>>(\n  defaultValues?: VariantProps\n): StyledContext<VariantProps> {\n  const OGContext = createReactContext<VariantProps | undefined>(defaultValues)\n  const OGProvider = OGContext.Provider\n  const Context = OGContext as any as StyledContext<VariantProps>\n  const scopedContexts = new Map<string, Context<VariantProps | undefined>>()\n\n  function getOrCreateScopedContext(scope: string) {\n    let ScopedContext = scopedContexts.get(scope)\n    if (!ScopedContext) {\n      ScopedContext = createReactContext<VariantProps | undefined>(defaultValues)\n      scopedContexts.set(scope, ScopedContext)\n    }\n    return ScopedContext!\n  }\n\n  const Provider = ({\n    children,\n    scope,\n    ...values\n  }: VariantProps & { children?: ReactNode; scope: string }) => {\n    const next = React.useMemo(() => {\n      return {\n        // this ! is a workaround for ts error\n        ...defaultValues!,\n        ...values,\n      }\n    }, [objectIdentityKey(values)])\n    let Provider = OGProvider\n    if (scope) {\n      Provider = getOrCreateScopedContext(scope).Provider\n    }\n    return <Provider value={next}>{children}</Provider>\n  }\n\n  // use consumerComponent just to give a better error message\n  const useStyledContext = (scope?: string) => {\n    const context = scope ? getOrCreateScopedContext(scope) : OGContext\n    return React.useContext(context!) as VariantProps\n  }\n\n  // @ts-ignore\n  Context.Provider = Provider\n  Context.props = defaultValues\n  Context.context = OGContext as Context<VariantProps>\n  Context.useStyledContext = useStyledContext\n\n  return Context\n}\n\nexport type ScopedProps<P, K extends string> = P & { [Key in `__scope${K}`]?: string }\n", "export function objectIdentityKey(obj: Object) {\n  let k = ''\n  for (const key in obj) {\n    k += key\n    const arg = obj[key]\n    let type = typeof arg\n    if (!arg || (type !== 'object' && type !== 'function')) {\n      k += type + arg\n    } else if (cache.has(arg)) {\n      k += cache.get(arg)\n    } else {\n      let v = Math.random()\n      cache.set(arg, v)\n      k += v\n    }\n  }\n  return k\n}\n\nconst cache = new WeakMap()\n", "import { createStyledContext } from '../helpers/createStyledContext'\nimport type { ComponentContextI, GroupStateListener } from '../types'\n\nexport const ComponentContext = createStyledContext<ComponentContextI>({\n  disableSSR: undefined,\n  inText: false,\n  language: null,\n  animationDriver: null,\n  setParentFocusState: null,\n  groups: {\n    emit: null as unknown as GroupStateListener,\n    subscribe: null as unknown as (cb: GroupStateListener) => () => void,\n    state: {},\n  },\n})\n", "export const defaultOffset = { height: 0, width: 0 }\n", "import * as normalizeColor from '@react-native/normalize-color'\n\n// vite/webpack compat\nconst norm = normalizeColor.default || normalizeColor\nexport const normalizeCSSColor = norm as (color: string) => number | null\n\nexport function rgba(colorInt: number) {\n  const r = Math.round((colorInt & 0xff000000) >>> 24)\n  const g = Math.round((colorInt & 0x00ff0000) >>> 16)\n  const b = Math.round((colorInt & 0x0000ff00) >>> 8)\n  const a = ((colorInt & 0x000000ff) >>> 0) / 255\n  return {\n    r,\n    g,\n    b,\n    a,\n  }\n}\n\nexport default normalizeCSSColor\n", "import { normalizeCSSColor, rgba } from '@tamagui/normalize-css-color'\n\nexport { rgba } from '@tamagui/normalize-css-color'\n\nexport const normalizeColor = (color?: string | null, opacity?: number) => {\n  if (!color) return\n  if (color[0] === '$') return color\n  if (color.startsWith('var(')) {\n    if (typeof opacity === 'number' && opacity < 1) {\n      return `color-mix(in srgb, ${color} ${opacity * 100}%, transparent)`\n    }\n  } else {\n    const rgba = getRgba(color)\n    if (rgba) {\n      const colors = `${rgba.r},${rgba.g},${rgba.b}`\n      return opacity === 1\n        ? `rgb(${colors})`\n        : `rgba(${colors},${opacity ?? rgba.a ?? 1})`\n    }\n  }\n  return color\n}\n\nexport const getRgba = (color: string) => {\n  const colorNum = normalizeCSSColor(color)\n  if (colorNum != null) {\n    return rgba(colorNum)\n  }\n}\n", "/**\n * Some parts adapted from react-native-web\n * Copyright (c) Nicolas Gallagher licensed under the MIT license.\n */\n\nimport { isWeb } from '@tamagui/constants'\nimport { stylePropsAll, stylePropsUnitless } from '@tamagui/helpers'\n\n// only doing this on web on native it accepts pixel values\n\nconst stylePropsAllPlusTransforms = {\n  ...stylePropsAll,\n  translateX: true,\n  translateY: true,\n}\n\nexport function normalizeValueWithProperty(value: any, property = ''): any {\n  if (!isWeb) return value\n  if (\n    stylePropsUnitless[property] ||\n    (property && !stylePropsAllPlusTransforms[property]) ||\n    typeof value === 'boolean'\n  ) {\n    return value\n  }\n  let res = value\n  if (value && typeof value === 'object') return value\n  if (typeof value === 'number') {\n    res = `${value}px`\n  } else if (property) {\n    res = `${res}`\n  }\n  return res\n}\n", "import { normalizeValueWithProperty } from './normalizeValueWithProperty'\n\nexport function transformsToString(transforms: Object[]) {\n  return transforms\n    .map(\n      // { scale: 2 } => 'scale(2)'\n      // { translateX: 20 } => 'translateX(20px)'\n      // { matrix: [1,2,3,4,5,6] } => 'matrix(1,2,3,4,5,6)'\n      // { perspective: 1000 } => perspective(1000px)\n      (transform) => {\n        const type = Object.keys(transform)[0]\n        const value = transform[type]\n        if (type === 'matrix' || type === 'matrix3d') {\n          return `${type}(${value.join(',')})`\n        }\n        return `${type}(${normalizeValueWithProperty(value, type)})`\n      }\n    )\n    .join(' ')\n}\n", "/**\n * Some parts adapted from react-native-web\n * Copyright (c) Nicolas Gallagher licensed under the MIT license.\n */\n\nimport type { StyleObject } from '@tamagui/helpers'\nimport { simpleHash } from '@tamagui/helpers'\n\nimport { getConfig, getConfigMaybe } from '../config'\nimport type { TamaguiInternalConfig, ViewStyleWithPseudos } from '../types'\nimport { defaultOffset } from './defaultOffset'\nimport { normalizeColor } from './normalizeColor'\nimport { normalizeValueWithProperty } from './normalizeValueWithProperty'\nimport type { PseudoDescriptor } from './pseudoDescriptors'\nimport { pseudoDescriptors } from './pseudoDescriptors'\nimport { transformsToString } from './transformsToString'\nimport { isMediaKey } from '../hooks/useMedia'\n\n// refactor this file away next...\n\nexport function getCSSStylesAtomic(style: ViewStyleWithPseudos) {\n  styleToCSS(style)\n  const out: StyleObject[] = []\n  for (const key in style) {\n    if (key === '$$css') continue\n    const val = style[key]\n    if (key in pseudoDescriptors) {\n      if (val) {\n        out.push(...getStyleAtomic(val, pseudoDescriptors[key]))\n      }\n    } else if (isMediaKey(key)) {\n      for (const subKey in val) {\n        const so = getStyleObject(val, subKey)\n        if (so) {\n          so[0] = key // set the property to be eg $platform-web so we can use it above\n          out.push(so)\n        }\n      }\n    } else {\n      const so = getStyleObject(style, key)\n      if (so) {\n        out.push(so)\n      }\n    }\n  }\n  return out\n}\n\nexport const getStyleAtomic = (\n  style: ViewStyleWithPseudos,\n  pseudo?: PseudoDescriptor\n): StyleObject[] => {\n  styleToCSS(style)\n  const out: StyleObject[] = []\n  for (const key in style) {\n    const so = getStyleObject(style, key, pseudo)\n    if (so) {\n      out.push(so)\n    }\n  }\n  return out\n}\n\nlet conf: TamaguiInternalConfig | null = null\n\n// this could be cached for performance?\nconst getStyleObject = (\n  style: ViewStyleWithPseudos,\n  key: string,\n  pseudo?: PseudoDescriptor\n): StyleObject | undefined => {\n  let val = style[key]\n  if (val == null) return\n  // transform\n  if (key === 'transform' && Array.isArray(style.transform)) {\n    val = transformsToString(val)\n  }\n  const value = normalizeValueWithProperty(val, key)\n  const hash = simpleHash(typeof value === 'string' ? value : `${value}`)\n  const pseudoPrefix = pseudo ? `0${pseudo.name}-` : ''\n  conf ||= getConfigMaybe()\n  const shortProp = conf?.inverseShorthands[key] || key\n  const identifier = `_${shortProp}-${pseudoPrefix}${hash}`\n  const rules = createAtomicRules(identifier, key, value, pseudo)\n  return [\n    // array for performance\n    key,\n    value,\n    identifier,\n    pseudo?.name as any,\n    rules,\n  ]\n}\n\nexport function styleToCSS(style: Record<string, any>) {\n  // box-shadow\n  const { shadowOffset, shadowRadius, shadowColor, shadowOpacity } = style\n  if (shadowRadius || shadowColor) {\n    const offset = shadowOffset || defaultOffset\n    const width = normalizeValueWithProperty(offset.width)\n    const height = normalizeValueWithProperty(offset.height)\n    const radius = normalizeValueWithProperty(shadowRadius)\n    const color = normalizeColor(shadowColor, shadowOpacity)\n    const shadow = `${width} ${height} ${radius} ${color}`\n    style.boxShadow = style.boxShadow ? `${style.boxShadow}, ${shadow}` : shadow\n    delete style.shadowOffset\n    delete style.shadowRadius\n    delete style.shadowColor\n    delete style.shadowOpacity\n  }\n\n  // text-shadow\n  const { textShadowColor, textShadowOffset, textShadowRadius } = style\n  if (textShadowColor || textShadowOffset || textShadowRadius) {\n    const { height, width } = textShadowOffset || defaultOffset\n    const radius = textShadowRadius || 0\n    const color = normalizeValueWithProperty(textShadowColor, 'textShadowColor')\n    if (color && (height !== 0 || width !== 0 || radius !== 0)) {\n      const blurRadius = normalizeValueWithProperty(radius)\n      const offsetX = normalizeValueWithProperty(width)\n      const offsetY = normalizeValueWithProperty(height)\n      style.textShadow = `${offsetX} ${offsetY} ${blurRadius} ${color}`\n    }\n    delete style.textShadowColor\n    delete style.textShadowOffset\n    delete style.textShadowRadius\n  }\n}\n\nfunction createDeclarationBlock(style: [string, any][], important = false) {\n  let next = ''\n  for (const [key, value] of style) {\n    next += `${hyphenateStyleName(key)}:${value}${important ? ' !important' : ''};`\n  }\n  return `{${next}}`\n}\n\nconst hcache = {}\nconst toHyphenLower = (match: string) => `-${match.toLowerCase()}`\nconst hyphenateStyleName = (key: string) => {\n  if (key in hcache) return hcache[key]\n  const val = key.replace(/[A-Z]/g, toHyphenLower)\n  hcache[key] = val\n  return val\n}\n\n// adding one more :root so we always override react native web styles :/\nconst selectorPriority = (() => {\n  const res: Record<string, string> = {}\n  for (const key in pseudoDescriptors) {\n    const pseudo = pseudoDescriptors[key]\n    res[pseudo.name] = `${[...Array(pseudo.priority)].map(() => ':root').join('')} `\n  }\n  return res\n})()\n\nfunction createAtomicRules(\n  identifier: string,\n  property: string,\n  value: any,\n  pseudo?: PseudoDescriptor\n): string[] {\n  const pseudoIdPostfix = pseudo\n    ? pseudo.name === 'disabled'\n      ? `[aria-disabled]`\n      : `:${pseudo.name}`\n    : ''\n  const pseudoSelector = pseudo?.selector\n\n  let selector = pseudo\n    ? pseudoSelector\n      ? `${pseudoSelector} .${identifier}`\n      : `${selectorPriority[pseudo.name]} .${identifier}${pseudoIdPostfix}`\n    : `:root .${identifier}`\n\n  // enter style on css driver needs both:\n  //   .t_unmounted .selector\n  //   .selector.t_unmounted\n  if (pseudoSelector === pseudoDescriptors.enterStyle.selector) {\n    selector = `${selector}, .${identifier}${pseudoSelector}`\n  }\n\n  const important = !!pseudo\n\n  let rules: string[] = []\n\n  // Handle non-standard properties and object values that require multiple\n  // CSS rules to be created.\n  switch (property) {\n    // Equivalent to using '::placeholder'\n    case 'placeholderTextColor': {\n      const block = createDeclarationBlock(\n        [\n          ['color', value],\n          ['opacity', 1],\n        ],\n        important\n      )\n      rules.push(`${selector}::placeholder${block}`)\n      break\n    }\n\n    // all webkit prefixed rules\n    case 'backgroundClip':\n    case 'userSelect': {\n      const propertyCapitalized = `${property[0].toUpperCase()}${property.slice(1)}`\n      const webkitProperty = `Webkit${propertyCapitalized}`\n      const block = createDeclarationBlock(\n        [\n          [property, value],\n          [webkitProperty, value],\n        ],\n        important\n      )\n      rules.push(`${selector}${block}`)\n      break\n    }\n\n    // Polyfill for additional 'pointer-events' values\n    case 'pointerEvents': {\n      let finalValue = value\n      if (value === 'auto' || value === 'box-only') {\n        finalValue = 'auto'\n        if (value === 'box-only') {\n          rules.push(`${selector}>*${boxOnly}`)\n        }\n      } else if (value === 'none' || value === 'box-none') {\n        finalValue = 'none'\n        if (value === 'box-none') {\n          rules.push(`${selector}>*${boxNone}`)\n        }\n      }\n      const block = createDeclarationBlock([['pointerEvents', finalValue]], true)\n      rules.push(`${selector}${block}`)\n      break\n    }\n\n    default: {\n      const block = createDeclarationBlock([[property, value]], important)\n      rules.push(`${selector}${block}`)\n      break\n    }\n  }\n\n  // hover styles need to be conditional\n  // perhaps this can be generalized but for now lets just shortcut\n  // and hardcode for hover styles, if we need to later we can\n  // WEIRD SYNTAX, SEE:\n  //   https://stackoverflow.com/questions/40532204/media-query-for-devices-supporting-hover\n  if (pseudo?.name === 'hover') {\n    rules = rules.map((r) => `@media (hover) {${r}}`)\n  }\n\n  return rules\n}\n\nconst boxNone = createDeclarationBlock([['pointerEvents', 'auto']], true)\nconst boxOnly = createDeclarationBlock([['pointerEvents', 'none']], true)\n", "import { useRef } from 'react'\nimport type { ThemeParsed, ThemeProps, UseThemeWithStateProps } from '../types'\nimport { getThemeProxied, type ThemeProxied } from './getThemeProxied'\nimport type { ThemeState } from './useThemeState'\nimport { useThemeState } from './useThemeState'\n\nexport const useTheme = (props: ThemeProps = {}) => {\n  const [theme] = useThemeWithState(props)\n  const res = theme\n  return res as ThemeProxied\n}\n\nexport type ThemeWithState = [ThemeParsed, ThemeState]\n\n/**\n * Adds a proxy around themeState that tracks update keys\n */\nexport const useThemeWithState = (\n  props: UseThemeWithStateProps,\n  isRoot = false\n): ThemeWithState => {\n  const keys = useRef<Set<string> | null>(null)\n  const themeState = useThemeState(props, isRoot, keys)\n\n  if (process.env.NODE_ENV === 'development') {\n    if (!themeState?.theme) {\n      if (process.env.TAMAGUI_DISABLE_NO_THEME_WARNING !== '1') {\n        console.error(\n          `[tamagui] No theme found, this could be due to an invalid theme name (given theme props ${JSON.stringify(\n            props\n          )}).\\n\\nIf this is intended and you are using Tamagui without any themes, you can disable this warning by setting the environment variable TAMAGUI_DISABLE_NO_THEME_WARNING=1`\n        )\n      }\n    }\n  }\n\n  const themeProxied = getThemeProxied(props, themeState, keys)\n\n  return [themeProxied, themeState]\n}\n", "import { isIos } from '@tamagui/constants'\nimport type { MutableRefObject } from 'react'\nimport { getConfig, getSetting } from '../config'\nimport type { Variable } from '../createVariable'\nimport { getVariable } from '../createVariable'\nimport type {\n  ThemeParsed,\n  Tokens,\n  UseThemeWithStateProps,\n  VariableVal,\n  VariableValGeneric,\n} from '../types'\nimport { doesRootSchemeMatchSystem } from './doesRootSchemeMatchSystem'\nimport type { ThemeState } from './useThemeState'\n\nexport type ThemeProxied = {\n  [Key in keyof ThemeParsed | keyof Tokens['color']]: ThemeGettable<\n    Key extends keyof ThemeParsed ? ThemeParsed[Key] : Variable<any>\n  >\n} & {\n  // fallback to other tokens\n  [Key in string & {}]?: ThemeGettable<Variable<any>>\n}\n\ntype ThemeGettable<Val> = Val & {\n  /**\n   * Tries to return an optimized value that avoids the need for re-rendering:\n   * On web a CSS variable, on iOS a dynamic color, on Android it doesn't\n   * optimize and returns the underyling value.\n   *\n   * See: https://reactnative.dev/docs/dynamiccolorios\n   *\n   * @param platform when \"web\" it will only return the dynamic value for web, avoiding the iOS dynamic value.\n   * For things like SVG, gradients, or other external components that don't support it, use this option.\n   */\n  get: (\n    platform?: 'web'\n  ) =>\n    | string\n    | (Val extends Variable<infer X>\n        ? X extends VariableValGeneric\n          ? any\n          : Exclude<X, Variable>\n        : Val extends VariableVal\n          ? string | number\n          : unknown)\n}\n\n// only proxy each theme one time, after that we know that renders are sync,\n// so we can just change the focus of the proxied theme and it can be re-used\nconst cache: Map<ThemeParsed, ThemeProxied> = new Map()\n\nlet curKeys: MutableRefObject<Set<string> | null>\nlet curProps: UseThemeWithStateProps\nlet curState: ThemeState | null\n\nconst emptyObject = {}\n\nexport function getThemeProxied(\n  // underscore to prevent accidental usage below\n  _props: UseThemeWithStateProps,\n  _state: ThemeState | null,\n  _keys: MutableRefObject<Set<string> | null>\n): ThemeProxied {\n  if (!_state?.theme) {\n    return emptyObject\n  }\n\n  curKeys = _keys\n  curProps = _props\n  curState = _state\n\n  if (cache.has(curState.theme)) {\n    const proxied = cache.get(curState.theme)!\n    return proxied\n  }\n\n  // first time running on this theme, create:\n  // from here on only use current*\n\n  const config = getConfig()\n\n  function track(key: string) {\n    if (!curKeys) return\n    if (!curKeys.current) {\n      curKeys.current = new Set()\n    }\n    curKeys.current.add(key)\n    if (process.env.NODE_ENV === 'development' && curProps.debug) {\n      console.info(` 🎨 useTheme() tracking new key: ${key}`, curKeys)\n    }\n  }\n\n  const proxied = Object.fromEntries(\n    Object.entries(_state.theme).flatMap(([key, value]) => {\n      const proxied = {\n        ...value,\n        get val() {\n          // when they touch the actual value we only track it if its a variable (web), its ignored!\n          if (!globalThis.tamaguiAvoidTracking) {\n            // always track .val\n            track(key)\n          }\n          return value.val\n        },\n        get(platform?: 'web') {\n          if (!curState) return\n\n          const outVal = getVariable(value)\n          const { name, scheme, inverses } = curState\n\n          if (process.env.TAMAGUI_TARGET === 'native') {\n            // ios can avoid re-rendering in some cases when we are using a root light/dark\n            // disabled in cases where we have animations\n            const shouldOptimize =\n              scheme &&\n              platform !== 'web' &&\n              isIos &&\n              !curProps.deopt &&\n              getSetting('fastSchemeChange') &&\n              inverses === 0 &&\n              doesRootSchemeMatchSystem()\n\n            if (shouldOptimize) {\n              const oppositeScheme = scheme === 'dark' ? 'light' : 'dark'\n              const oppositeName = name.replace(scheme, oppositeScheme)\n              const color = getVariable(config.themes[name]?.[key])\n              const oppositeColor = getVariable(config.themes[oppositeName]?.[key])\n\n              const dynamicVal = {\n                dynamic: {\n                  [scheme]: color,\n                  [oppositeScheme]: oppositeColor,\n                },\n              }\n\n              return dynamicVal\n            }\n\n            if (process.env.NODE_ENV === 'development' && curProps.debug) {\n              console.info(` 🎨 useTheme() tracking new key because of: \n                not web: ${platform !== 'web'}\n                isIOS: ${isIos}\n                deopt: ${curProps.deopt}\n                fastScheme: ${getSetting('fastSchemeChange')}\n              `)\n            }\n\n            track(key)\n          }\n\n          return outVal\n        },\n      }\n\n      return [\n        [key, proxied],\n        [`$${key}`, proxied],\n      ]\n    })\n  ) as ThemeProxied\n\n  cache.set(_state.theme, proxied)\n\n  return proxied\n}\n", "import { useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useId,\n  useSyncExternalStore,\n  type MutableRefObject,\n} from 'react'\nimport { getConfig } from '../config'\nimport type { ThemeParsed, ThemeProps, UseThemeWithStateProps } from '../types'\n\ntype ID = string\n\nexport type ThemeState = {\n  id: ID\n  name: string\n  theme: ThemeParsed\n  inverses: number\n  parentName?: string\n  isInverse?: boolean\n  isNew?: boolean\n  parentId?: ID\n  scheme?: 'light' | 'dark'\n}\n\nexport const ThemeStateContext = createContext<ID>('')\n\nconst allListeners = new Map<ID, Function>()\nconst listenersByParent: Record<ID, Set<ID>> = {}\nconst HasRenderedOnce = new WeakMap<Object, boolean>()\nconst HadTheme = new WeakMap<Object, boolean>()\nconst PendingUpdate = new Map<any, boolean | 'force'>()\n\n// TODO this will gain memory over time but its not going to be a ton\nconst states: Map<ID, ThemeState | undefined> = new Map()\nconst localStates: Map<ID, ThemeState | undefined> = new Map()\n\nlet shouldForce = false\nexport const forceUpdateThemes = () => {\n  cacheVersion++\n  shouldForce = true\n  allListeners.forEach((cb) => cb())\n}\n\nexport const getThemeState = (id: ID) => states.get(id)\n\n// const cache = new Map<string, ThemeState>()\nlet cacheVersion = 0\n\nlet themes: Record<string, ThemeParsed> | null = null\n\nlet rootThemeState: ThemeState | null = null\nexport const getRootThemeState = () => rootThemeState\n\nexport const useThemeState = (\n  props: UseThemeWithStateProps,\n  isRoot = false,\n  keys: MutableRefObject<Set<string> | null>\n): ThemeState => {\n  const { disable } = props\n  const parentId = useContext(ThemeStateContext)\n\n  if (!parentId && !isRoot) {\n    throw new Error(`No parent?`)\n  }\n\n  if (disable) {\n    return (\n      states.get(parentId) || {\n        id: '',\n        name: 'light',\n        theme: getConfig().themes.light,\n        inverses: 0,\n      }\n    )\n  }\n\n  const id = useId()\n  const subscribe = useCallback(\n    (cb: Function) => {\n      listenersByParent[parentId] ||= new Set()\n      listenersByParent[parentId].add(id)\n      allListeners.set(id, () => {\n        PendingUpdate.set(id, shouldForce ? 'force' : true)\n        cb()\n      })\n      return () => {\n        allListeners.delete(id)\n        listenersByParent[parentId].delete(id)\n        localStates.delete(id)\n        states.delete(id)\n        PendingUpdate.delete(id)\n      }\n    },\n    [id, parentId]\n  )\n\n  const propsKey = getPropsKey(props)\n\n  const getSnapshot = () => {\n    let local = localStates.get(id)\n\n    const needsUpdate =\n      isRoot || props.name === 'light' || props.name === 'dark' || props.name === null\n        ? true\n        : !HasRenderedOnce.get(keys)\n          ? true\n          : keys?.current?.size\n            ? true\n            : props.needsUpdate?.()\n\n    // const parentState = states.get(parentId)\n    // const cacheKey = `${cacheVersion}${id}${propsKey}${parentState?.name || ''}${isRoot}`\n    // if (!needsUpdate) {\n    //   if (cache.has(cacheKey)) {\n    //     return cache.get(cacheKey)!\n    //   }\n    // }\n\n    const [rerender, next] = getNextState(\n      local,\n      props,\n      propsKey,\n      isRoot,\n      id,\n      parentId,\n      needsUpdate,\n      PendingUpdate.get(id)\n    )\n\n    PendingUpdate.delete(id)\n\n    // we always create a new localState for every component\n    // that way we can use it to de-opt and avoid renders granularly\n    // we always return the localState object in each component\n    // the global state (states) should always be up to date with the latest\n    if (!local || rerender) {\n      local = { ...next }\n      localStates.set(id, local)\n    }\n\n    if (\n      process.env.NODE_ENV === 'development' &&\n      props.debug &&\n      props.debug !== 'profile'\n    ) {\n      console.groupCollapsed(` ${id} 🪄 ${rerender}`, local.name, '>', next.name)\n      console.info({ props, propsKey, isRoot, parentId, local, next, needsUpdate })\n      console.groupEnd()\n    }\n\n    Object.assign(local, next)\n    local.id = id\n    states.set(id, next)\n\n    return local\n  }\n\n  if (process.env.NODE_ENV === 'development' && globalThis.time)\n    globalThis.time`theme-prep-uses`\n\n  const state = useSyncExternalStore(subscribe, getSnapshot, getSnapshot)\n\n  useIsomorphicLayoutEffect(() => {\n    if (!HasRenderedOnce.get(keys)) {\n      HasRenderedOnce.set(keys, true)\n      return\n    }\n    if (!propsKey) {\n      if (HadTheme.get(keys)) {\n        // we're removing the last theme, make sure to notify\n        scheduleUpdate(id)\n      }\n      HadTheme.set(keys, false)\n      return\n    }\n    if (\n      process.env.NODE_ENV === 'development' &&\n      props.debug &&\n      props.debug !== 'profile'\n    ) {\n      console.warn(` · useTheme(${id}) scheduleUpdate`, propsKey, states.get(id)?.name)\n    }\n    scheduleUpdate(id)\n    HadTheme.set(keys, true)\n  }, [keys, propsKey])\n\n  return state\n}\n\nconst getNextState = (\n  lastState: ThemeState | undefined,\n  props: UseThemeWithStateProps,\n  propsKey: string,\n  isRoot = false,\n  id: string,\n  parentId: string,\n  needsUpdate: boolean | undefined,\n  pendingUpdate: boolean | 'force' | undefined\n): [boolean, ThemeState] => {\n  const { debug } = props\n  const parentState = states.get(parentId)\n\n  if (!themes) {\n    themes = getConfig().themes\n  }\n\n  const name =\n    !propsKey && (!lastState || !lastState?.isNew)\n      ? null\n      : getNewThemeName(\n          parentState?.name,\n          props,\n          pendingUpdate === 'force' ? true : !!needsUpdate\n        )\n\n  const isSameAsParent = parentState && (!name || name === parentState.name)\n  const shouldRerender = Boolean(\n    needsUpdate && (pendingUpdate || lastState?.name !== parentState?.name)\n  )\n\n  if (process.env.NODE_ENV === 'development' && debug && debug !== 'profile') {\n    const message = ` · useTheme(${id}) => ${name} needsUpdate ${needsUpdate} shouldRerender ${shouldRerender}`\n    if (process.env.TAMAGUI_TARGET === 'native') {\n      console.info(message)\n    } else {\n      console.groupCollapsed(message)\n      console.trace({ name, lastState, parentState, props, propsKey, id, isSameAsParent })\n      console.groupEnd()\n    }\n  }\n\n  if (isSameAsParent) {\n    return [shouldRerender, { ...parentState, isNew: false }]\n  }\n\n  if (!name) {\n    const next = lastState ?? parentState\n\n    if (!next) {\n      throw new Error(`No theme and no parent?`)\n    }\n\n    if (shouldRerender) {\n      const updated = { ...(parentState || lastState)! }\n      return [true, updated]\n    }\n\n    return [false, next]\n  }\n\n  const scheme = getScheme(name)\n  const parentInverses = parentState?.inverses ?? 0\n  const isInverse = parentState && scheme !== parentState.scheme\n  const inverses = parentInverses + (isInverse ? 1 : 0)\n\n  const nextState = {\n    id,\n    name,\n    theme: themes[name],\n    scheme,\n    parentId,\n    parentName: parentState?.name,\n    inverses,\n    isInverse,\n    isNew: true,\n  } satisfies ThemeState\n\n  if (isRoot) {\n    rootThemeState = nextState\n  }\n\n  if (pendingUpdate !== 'force' && lastState && lastState.name === name) {\n    return [false, nextState]\n  }\n\n  const shouldAvoidRerender =\n    pendingUpdate !== 'force' &&\n    lastState &&\n    !needsUpdate &&\n    nextState.name === lastState.name\n\n  if (process.env.NODE_ENV === 'development' && debug && debug !== 'profile') {\n    console.groupCollapsed(\n      ` · useTheme(${id}) ⏭️ ${name} shouldAvoidRerender: ${shouldAvoidRerender}`\n    )\n    console.info({ lastState, needsUpdate, nextState, pendingUpdate })\n    console.groupEnd()\n  }\n\n  // we still update the state (not changing identity), that way children can properly resolve the right state\n  // but this one wont trigger an update\n  if (shouldAvoidRerender) {\n    return [false, nextState]\n  }\n\n  return [true, nextState]\n}\n\nconst regexParentScheme = /^(light|dark)_/\n\nfunction scheduleUpdate(id: string) {\n  const queue = [id]\n  const visited = new Set<string>()\n\n  while (queue.length) {\n    const parent = queue.shift()!\n    const children = listenersByParent[parent]\n    if (children) {\n      for (const childId of children) {\n        if (!visited.has(childId)) {\n          visited.add(childId)\n          queue.push(childId)\n        }\n      }\n    }\n  }\n\n  visited.forEach((childId) => {\n    const cb = allListeners.get(childId)\n    cb?.()\n  })\n}\n\nconst validSchemes = {\n  light: 'light',\n  dark: 'dark',\n} as const\n\nfunction getScheme(name: string) {\n  return validSchemes[name.split('_')[0]]\n}\n\nfunction getNewThemeName(\n  parentName = '',\n  { name, reset, componentName, inverse, debug }: UseThemeWithStateProps,\n  forceUpdate = false\n): string | null {\n  if (name && reset) {\n    throw new Error(\n      process.env.NODE_ENV === 'production'\n        ? `❌004`\n        : 'Cannot reset and set a new name at the same time.'\n    )\n  }\n\n  if (reset) {\n    if (!parentName) throw new Error(`‼️`)\n    const lastPartIndex = parentName.lastIndexOf('_')\n    return lastPartIndex <= 0 ? parentName : parentName.slice(lastPartIndex)\n  }\n\n  const { themes } = getConfig()\n  const parentParts = parentName.split('_')\n\n  // always remove component theme if it exists, we never sub a component theme\n  const lastName = parentParts[parentParts.length - 1]\n  if (lastName && lastName[0].toLowerCase() !== lastName[0]) {\n    parentParts.pop()\n  }\n\n  const subNames = [\n    name && componentName ? `${name}_${componentName}` : undefined,\n    name,\n    componentName,\n  ].filter(Boolean) as string[]\n\n  let found: string | null = null\n\n  const max = parentParts.length\n\n  for (let i = 0; i <= max; i++) {\n    const base = (i === 0 ? parentParts : parentParts.slice(0, -i)).join('_')\n\n    for (const subName of subNames) {\n      const potential = base ? `${base}_${subName}` : subName\n\n      if (potential in themes) {\n        found = potential\n        break\n      }\n    }\n\n    if (found) break\n  }\n\n  if (inverse) {\n    found ||= parentName\n    const scheme = found.split('_')[0]\n    found = found.replace(new RegExp(`^${scheme}`), scheme === 'light' ? 'dark' : 'light')\n  }\n\n  if (\n    !forceUpdate &&\n    found === parentName &&\n    // if its a scheme only sub-theme, we always consider it \"new\" because it likely inverses\n    // and we want to avoid reparenting\n    !validSchemes[found]\n  ) {\n    return null\n  }\n\n  return found\n}\n\nconst getPropsKey = ({\n  name,\n  reset,\n  inverse,\n  forceClassName,\n  componentName,\n}: ThemeProps) =>\n  `${name || ''}${inverse || ''}${reset || ''}${forceClassName || ''}${componentName || ''}`\n\nexport const hasThemeUpdatingProps = (props: ThemeProps) =>\n  'inverse' in props || 'name' in props || 'reset' in props || 'forceClassName' in props\n", "import * as React from 'react'\n\nexport function useDidFinishSSR<A = boolean>(value?: A): A | false {\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    // @ts-expect-error\n    return value ?? true\n  }\n\n  return React.useSyncExternalStore(\n    subscribe,\n    () => value ?? true,\n    () => {\n      return false as any\n    }\n  )\n}\n\nconst subscribe = () => () => {}\n\ntype FunctionOrValue<Value> = Value extends () => infer X ? X : Value\n\nexport function useClientValue<Value>(value?: Value): FunctionOrValue<Value> | undefined {\n  const done = useDidFinishSSR()\n  return !done ? undefined : typeof value === 'function' ? value() : value\n}\n", "import { isWeb } from '@tamagui/constants'\nimport type { MutableRefObject } from 'react'\nimport React, { Children, cloneElement, forwardRef, isValidElement, useRef } from 'react'\nimport { getSetting } from '../config'\nimport { variableToString } from '../createVariable'\nimport { useThemeWithState } from '../hooks/useTheme'\nimport {\n  getThemeState,\n  hasThemeUpdatingProps,\n  ThemeStateContext,\n  type ThemeState,\n} from '../hooks/useThemeState'\nimport type { ThemeProps } from '../types'\nimport { ThemeDebug } from './ThemeDebug'\n\nconst empty = { className: '', style: {} }\n\nexport const Theme = forwardRef(function Theme(props: ThemeProps, ref) {\n  // @ts-expect-error only for internal views\n  if (props.disable) {\n    return props.children\n  }\n\n  const isRoot = !!props['_isRoot']\n\n  const [_, themeState] = useThemeWithState(props, isRoot)\n\n  const disableDirectChildTheme = props['disable-child-theme']\n\n  let finalChildren = disableDirectChildTheme\n    ? Children.map(props.children, (child) =>\n        cloneElement(child, { ['data-disable-theme']: true })\n      )\n    : props.children\n\n  if (ref) {\n    try {\n      React.Children.only(finalChildren)\n      // TODO deprecate react 18 and then avoid clone here and just pass prop\n      finalChildren = cloneElement(finalChildren, { ref })\n    } catch {\n      //ok\n    }\n  }\n\n  const stateRef = useRef({\n    hasEverThemed: false,\n  })\n\n  return getThemedChildren(themeState, finalChildren, props, isRoot, stateRef)\n})\n\nTheme['avoidForwardRef'] = true\n\nexport function getThemedChildren(\n  themeState: ThemeState,\n  children: any,\n  props: ThemeProps,\n  isRoot = false,\n  stateRef: MutableRefObject<{ hasEverThemed?: boolean | 'wrapped' }>\n) {\n  const { shallow, forceClassName } = props\n\n  // always be true if ever themed so we avoid re-parenting\n  const state = stateRef.current\n  let hasEverThemed = state.hasEverThemed\n\n  let shouldRenderChildrenWithTheme =\n    hasEverThemed || themeState.isNew || isRoot || hasThemeUpdatingProps(props)\n\n  if (process.env.NODE_ENV === 'development' && props.debug === 'visualize') {\n    children = (\n      <ThemeDebug themeState={themeState} themeProps={props}>\n        {children}\n      </ThemeDebug>\n    )\n  }\n\n  if (!shouldRenderChildrenWithTheme) {\n    return children\n  }\n\n  // from here on out we have to be careful not to re-parent\n  children = (\n    <ThemeStateContext.Provider value={themeState.id}>\n      {children}\n    </ThemeStateContext.Provider>\n  )\n\n  const { isInverse, name } = themeState\n  const requiresExtraWrapper = isInverse || forceClassName\n\n  // it only ever progresses from false => true => 'wrapped'\n  if (!state.hasEverThemed) {\n    state.hasEverThemed = true\n  }\n  if (\n    requiresExtraWrapper ||\n    // if the theme is exactly dark or light, its likely to change between dark/light\n    // and that would require wrapping which would re-parent, so to avoid re-parenting do this\n    themeState.name === 'dark' ||\n    themeState.name === 'light'\n  ) {\n    state.hasEverThemed = 'wrapped'\n  }\n\n  // each children of these children wont get the theme\n  if (shallow) {\n    if (!themeState.parentId) {\n      // they are doing shallow but didnt change actually change a theme theme?\n    } else {\n      const parentState = getThemeState(\n        themeState.isNew ? themeState.id : themeState.parentId\n      )\n      if (!parentState) throw new Error(`‼️010`)\n      children = Children.toArray(children).map((child) => {\n        return isValidElement(child)\n          ? cloneElement(\n              child,\n              undefined,\n              <Theme name={parentState.name}>{(child as any).props.children}</Theme>\n            )\n          : child\n      })\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    if (props.debug) {\n      console.warn(` getThemedChildren`, {\n        requiresExtraWrapper,\n        forceClassName,\n        themeState,\n        state,\n        ...getThemeClassNameAndStyle(themeState, props, isRoot),\n      })\n    }\n  }\n\n  if (forceClassName === false) {\n    return children\n  }\n\n  if (isWeb) {\n    const { className, style } = getThemeClassNameAndStyle(themeState, props, isRoot)\n\n    children = (\n      <span\n        {...(process.env.NODE_ENV === 'development' && {\n          'data-theme-id': themeState.id,\n        })}\n        className={`${className} _dsp_contents is_Theme`}\n        style={style}\n      >\n        {children}\n      </span>\n    )\n\n    // to prevent tree structure changes always render this if inverse is true or false\n    if (state.hasEverThemed === 'wrapped') {\n      // but still calculate if we need the classnames\n      const className = requiresExtraWrapper\n        ? `${\n            isInverse\n              ? name.startsWith('light')\n                ? 't_light is_inversed'\n                : name.startsWith('dark')\n                  ? 't_dark is_inversed'\n                  : ''\n              : ''\n          } _dsp_contents`\n        : `_dsp_contents`\n      children = <span className={className}>{children}</span>\n    }\n\n    return children\n  }\n\n  return children\n}\n\nfunction getThemeClassNameAndStyle(\n  themeState: ThemeState,\n  props: ThemeProps,\n  isRoot = false\n) {\n  if (!themeState.isNew && !props.forceClassName) {\n    return empty\n  }\n\n  // in order to provide currentColor, set color by default\n  const themeColor =\n    themeState?.theme && themeState.isNew ? variableToString(themeState.theme.color) : ''\n\n  const style = themeColor\n    ? {\n        color: themeColor,\n      }\n    : undefined\n\n  const maxInverses = getSetting('maxDarkLightNesting') || 3\n  const themeClassName =\n    themeState.inverses >= maxInverses\n      ? themeState.name\n      : themeState.name.replace(schemePrefix, '')\n\n  const className = `${isRoot ? '' : 't_sub_theme'} t_${themeClassName}`\n\n  return { style, className }\n}\n\nconst schemePrefix = /^(dark|light)_/\n", "import { useDidFinishSSR } from '@tamagui/use-did-finish-ssr'\nimport { useEffect } from 'react'\nimport { createPortal } from 'react-dom'\nimport { getThemeState, type ThemeState } from '../hooks/useThemeState'\nimport type { ThemeProps } from '../types'\n\nlet node\n\nexport function ThemeDebug({\n  themeState,\n  themeProps,\n  children,\n}: { themeState: ThemeState; themeProps: ThemeProps; children: any }) {\n  if (process.env.NODE_ENV === 'development') {\n    const isHydrated = useDidFinishSSR()\n\n    if (process.env.NODE_ENV === 'development' && typeof document !== 'undefined') {\n      if (!node) {\n        node = document.createElement('div')\n        node.style.height = '200px'\n        node.style.overflowY = 'scroll'\n        node.style.position = 'fixed'\n        node.style.zIndex = 10000000\n        node.style.bottom = '30px'\n        node.style.left = '30px'\n        node.style.right = '30px'\n        node.style.display = 'flex'\n        node.style.border = '1px solid #888'\n        node.style.flexDirection = 'row'\n        node.style.background = 'var(--background)'\n      }\n    }\n\n    useEffect(() => {\n      document.body.appendChild(node)\n    }, [])\n\n    if (themeProps['disable-child-theme'] || !isHydrated) {\n      return children\n    }\n\n    const parentState = themeState.parentId ? getThemeState(themeState.parentId) : null\n\n    // hsla(0, 0%, 9%, 1)\n\n    return (\n      <>\n        {createPortal(\n          <code\n            style={{\n              whiteSpace: 'pre',\n              maxWidth: 250,\n              overflow: 'auto',\n              padding: 5,\n            }}\n          >\n            &lt;Theme {themeState.id} /&gt;&nbsp;\n            {JSON.stringify(\n              {\n                name: themeState.name,\n                color1: themeState.theme.color1.val,\n                parentId: themeState.parentId,\n                inverses: themeState.inverses,\n                isNew: themeState.isNew,\n                themeProps: {\n                  name: themeProps.name,\n                  componentName: themeProps.componentName,\n                  reset: themeProps.reset,\n                  inverse: themeProps.inverse,\n                },\n                parentState: {\n                  name: parentState?.name,\n                  isNew: parentState?.isNew,\n                },\n              },\n              null,\n              2\n            )}\n          </code>,\n          node\n        )}\n\n        <div style={{ color: 'red' }}>{themeState.id}</div>\n\n        {children}\n      </>\n    )\n  }\n  return children\n}\n\nThemeDebug['displayName'] = 'ThemeDebug'\n", "import React from 'react'\n\nimport type { StaticConfig, ThemeableProps, ThemeProps } from '../types'\nimport { Theme } from '../views/Theme'\n\nexport function themeable<ComponentType extends (props: any) => any>(\n  Component: ComponentType,\n  staticConfig?: Partial<StaticConfig>,\n  optimize = false\n) {\n  const withThemeComponent = React.forwardRef(function WithTheme(\n    props: ThemeableProps,\n    ref\n  ) {\n    const { themeInverse, theme, componentName, themeReset, ...rest } = props\n\n    let overriddenContextProps: Object | undefined\n    const context = staticConfig?.context\n    if (context) {\n      for (const key in context.props) {\n        const val = props[key]\n        if (val !== undefined) {\n          overriddenContextProps ||= {}\n          overriddenContextProps[key] = val\n        }\n      }\n    }\n\n    const element = (\n      // @ts-expect-error its ok\n      <Component ref={ref} {...rest} data-disable-theme />\n    )\n\n    // we filter out the props here, why?\n    // Theme internally avoids wrapping <span /> unless 'theme' in props\n    // reason for this is to avoid wrapping every single component with span\n    // *if* ever it themes once, it leaves the span, to avoid reparenting\n    // its expected if users want to avoid re-parenting, they keep the theme prop\n    // and just set it to null. but we need to \"respect\" that here by filtering\n    // one example of a bug caused by not doing this is in <Select native> on web\n    // where it renders to an <option />, and then Theme would wrap a <span /> in that\n    // which is not allowed in HTML and causes hydration errors / logs\n    let filteredProps: Partial<ThemeProps> | null = null\n\n    const compName = componentName || staticConfig?.componentName\n    if (compName) {\n      filteredProps ||= {}\n      filteredProps.componentName = compName\n    }\n    if ('debug' in props) {\n      filteredProps ||= {}\n      filteredProps.debug = props.debug\n    }\n    if ('theme' in props) {\n      filteredProps ||= {}\n      filteredProps.name = props.theme\n    }\n    if ('themeInverse' in props) {\n      filteredProps ||= {}\n      filteredProps.inverse = props.themeInverse\n    }\n    if ('themeReset' in props) {\n      filteredProps ||= {}\n      filteredProps.reset = themeReset\n    }\n\n    if (optimize && !filteredProps) {\n      // optimize by avoiding theme! this can re-parent but we should just document that to avoid performance\n      // in cases where you remove/add themes, just keep a theme={x ? '' : null} pattern\n      return element\n    }\n\n    let contents = (\n      <Theme disable-child-theme {...filteredProps}>\n        {element}\n      </Theme>\n    )\n\n    if (context) {\n      const Provider = context.Provider\n      const contextValue = React.useContext(context)\n      contents = (\n        <Provider {...contextValue} {...overriddenContextProps}>\n          {contents}\n        </Provider>\n      )\n    }\n\n    return contents\n  })\n\n  const withTheme: any = withThemeComponent\n  withTheme.displayName = `Themed(${\n    (Component as any)?.displayName || (Component as any)?.name || 'Anonymous'\n  })`\n\n  type FinalComponentType = ComponentType extends (props: infer P) => infer R\n    ? (props: Omit<P, 'theme' | 'themeInverse'> & ThemeableProps) => R\n    : unknown\n\n  return withTheme as FinalComponentType\n}\n", "import { composeRefs } from '@tamagui/compose-refs'\nimport { isClient, isServer, isWeb, useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport { composeEventHandlers, validStyles } from '@tamagui/helpers'\nimport React from 'react'\nimport { devConfig, onConfiguredOnce } from './config'\nimport { stackDefaultStyles } from './constants/constants'\nimport { isDevTools } from './constants/isDevTools'\nimport { ComponentContext } from './contexts/ComponentContext'\nimport { didGetVariableValue, setDidGetVariableValue } from './createVariable'\nimport { defaultComponentStateMounted } from './defaultComponentState'\nimport { groupCollapsed, groupEnd } from './helpers/consoleLog'\nimport { getShorthandValue } from './helpers/getShorthandValue'\nimport { useSplitStyles } from './helpers/getSplitStyles'\nimport { log } from './helpers/log'\nimport { mergeProps } from './helpers/mergeProps'\nimport { setElementProps } from './helpers/setElementProps'\nimport { subscribeToContextGroup } from './helpers/subscribeToContextGroup'\nimport { themeable } from './helpers/themeable'\nimport { wrapStyleTags } from './helpers/wrapStyleTags'\nimport { useComponentState } from './hooks/useComponentState'\nimport { setMediaShouldUpdate, useMedia } from './hooks/useMedia'\nimport { useThemeWithState } from './hooks/useTheme'\nimport type { TamaguiComponentEvents } from './interfaces/TamaguiComponentEvents'\nimport type { TamaguiComponentState } from './interfaces/TamaguiComponentState'\nimport type { WebOnlyPressEvents } from './interfaces/WebOnlyPressEvents'\nimport { hooks } from './setupHooks'\nimport type {\n  ComponentContextI,\n  DebugProp,\n  LayoutEvent,\n  SizeTokens,\n  SpaceDirection,\n  SpaceValue,\n  SpacerProps,\n  SpacerStyleProps,\n  StackNonStyleProps,\n  StackProps,\n  StaticConfig,\n  StyleableOptions,\n  TamaguiComponent,\n  TamaguiElement,\n  TamaguiInternalConfig,\n  TextProps,\n  UseAnimationHook,\n  UseAnimationProps,\n  UseThemeWithStateProps,\n} from './types'\nimport { Slot } from './views/Slot'\nimport { getThemedChildren } from './views/Theme'\n\n/**\n * All things that need one-time setup after createTamagui is called\n */\nlet time: any\n\nlet debugKeyListeners: Set<Function> | undefined\nlet startVisualizer: Function | undefined\n\ntype ComponentSetState = React.Dispatch<React.SetStateAction<TamaguiComponentState>>\n\nexport const componentSetStates = new Set<ComponentSetState>()\n\nif (typeof document !== 'undefined') {\n  const cancelTouches = () => {\n    // clear all press downs\n    componentSetStates.forEach((setState) =>\n      setState((prev) => {\n        if (prev.press || prev.pressIn) {\n          return {\n            ...prev,\n            press: false,\n            pressIn: false,\n          }\n        }\n        return prev\n      })\n    )\n    componentSetStates.clear()\n  }\n  addEventListener('mouseup', cancelTouches)\n  addEventListener('touchend', cancelTouches)\n  addEventListener('touchcancel', cancelTouches)\n\n  // hold option to see debug visualization\n  if (process.env.NODE_ENV === 'development') {\n    startVisualizer = () => {\n      const devVisualizerConfig = devConfig?.visualizer\n      if (devVisualizerConfig) {\n        debugKeyListeners = new Set()\n        let tm\n        let isShowing = false\n        const options = {\n          key: 'Alt',\n          delay: 800,\n          ...(typeof devVisualizerConfig === 'object' ? devVisualizerConfig : {}),\n        }\n\n        document.addEventListener('blur', () => {\n          clearTimeout(tm)\n        })\n\n        document.addEventListener('keydown', ({ key, defaultPrevented }) => {\n          if (defaultPrevented) return\n          clearTimeout(tm) // always clear so we dont trigger on chords\n          if (key === options.key) {\n            tm = setTimeout(() => {\n              isShowing = true\n              debugKeyListeners?.forEach((l) => l(true))\n            }, options.delay)\n          }\n        })\n\n        document.addEventListener('keyup', ({ key, defaultPrevented }) => {\n          if (defaultPrevented) return\n          if (key === options.key) {\n            clearTimeout(tm)\n            if (isShowing) {\n              debugKeyListeners?.forEach((l) => l(false))\n            }\n          }\n        })\n      }\n    }\n  }\n}\n\n/**\n * Only on native do we need the actual underlying View/Text\n * On the web we avoid react-native dep altogether.\n */\nlet BaseText: any\nlet BaseView: any\nlet hasSetupBaseViews = false\n\nconst lastInteractionWasKeyboard = { value: false }\nif (isWeb && globalThis['document']) {\n  document.addEventListener('keydown', () => {\n    lastInteractionWasKeyboard.value = true\n  })\n  document.addEventListener('mousedown', () => {\n    lastInteractionWasKeyboard.value = false\n  })\n  document.addEventListener('mousemove', () => {\n    lastInteractionWasKeyboard.value = false\n  })\n}\n\nexport function createComponent<\n  ComponentPropTypes extends Record<string, any> = {},\n  Ref extends TamaguiElement = TamaguiElement,\n  BaseProps = never,\n  BaseStyles extends Object = never,\n>(staticConfig: StaticConfig) {\n  const { componentName } = staticConfig\n\n  let config: TamaguiInternalConfig | null = null\n\n  let defaultProps = staticConfig.defaultProps\n\n  onConfiguredOnce((conf) => {\n    config = conf\n\n    if (componentName) {\n      // TODO this should be deprecated and removed likely or at least done differently\n      const defaultForComponent = conf.defaultProps?.[componentName]\n      if (defaultForComponent) {\n        defaultProps = { ...defaultForComponent, ...defaultProps }\n      }\n    }\n  })\n\n  const { Component, isText, isZStack, isHOC } = staticConfig\n\n  if (process.env.NODE_ENV === 'development' && staticConfig.defaultProps?.['debug']) {\n    if (process.env.IS_STATIC !== 'is_static') {\n      log(`🐛 [${componentName || 'Component'}]`, {\n        staticConfig,\n        defaultProps,\n        defaultPropsKeyOrder: defaultProps ? Object.keys(defaultProps) : [],\n      })\n    }\n  }\n\n  const component = React.forwardRef<Ref, ComponentPropTypes>((propsIn, forwardedRef) => {\n    const internalID = process.env.NODE_ENV === 'development' ? React.useId() : ''\n\n    if (process.env.NODE_ENV === 'development') {\n      if (startVisualizer) {\n        startVisualizer()\n        startVisualizer = undefined\n      }\n    }\n\n    if (process.env.TAMAGUI_TARGET === 'native') {\n      // todo this could be moved to a cleaner location\n      if (!hasSetupBaseViews) {\n        hasSetupBaseViews = true\n        const baseViews = hooks.getBaseViews?.()\n        if (baseViews) {\n          BaseText = baseViews.Text\n          BaseView = baseViews.View\n        }\n      }\n    }\n\n    // test only\n    if (process.env.NODE_ENV === 'test') {\n      if (propsIn['data-test-renders']) {\n        propsIn['data-test-renders']['current'] ??= 0\n        propsIn['data-test-renders']['current'] += 1\n      }\n    }\n\n    const componentContext = React.useContext(ComponentContext)\n\n    // set variants through context\n    // order is after default props but before props\n    let styledContextProps: Object | undefined\n    let overriddenContextProps: Object | undefined\n    let contextValue: Object | null | undefined\n    const { context, isReactNative } = staticConfig\n\n    if (context) {\n      contextValue = React.useContext(context)\n\n      if (contextValue) {\n        if (\n          process.env.NODE_ENV === 'development' &&\n          defaultProps?.['debug'] === 'verbose'\n        ) {\n          log(` 👇 contextValue`, contextValue)\n        }\n\n        for (const key in context.props) {\n          const propVal = getShorthandValue(propsIn, key)\n\n          // if not set, use context\n          if (propVal === undefined) {\n            const val = contextValue?.[key]\n            if (val !== undefined) {\n              styledContextProps ||= {}\n              styledContextProps[key] = val\n            }\n          }\n\n          // update context if needed (including value from defaultProps)\n          const finalVal = propVal ?? defaultProps?.[key]\n          if (finalVal !== undefined) {\n            overriddenContextProps ||= {}\n            overriddenContextProps[key] = finalVal\n          }\n        }\n      }\n    }\n\n    const debugProp = propsIn['debug'] as DebugProp\n\n    if (\n      !process.env.TAMAGUI_IS_CORE_NODE &&\n      process.env.NODE_ENV === 'development' &&\n      debugProp === 'profile' &&\n      !time\n    ) {\n      const timer = require('@tamagui/timer').timer()\n      time = timer.start()\n      globalThis['time'] = time\n    }\n    if (process.env.NODE_ENV === 'development' && time) time`non-tamagui time (ignore)`\n\n    // context overrides defaults but not props\n    const curDefaultProps = styledContextProps\n      ? { ...defaultProps, ...styledContextProps }\n      : defaultProps\n\n    // React inserts default props after your props for some reason...\n    // order important so we do loops, you can't just spread because JS does weird things\n    let props: StackProps | TextProps = propsIn\n    if (curDefaultProps) {\n      props = mergeProps(curDefaultProps, propsIn)\n    }\n\n    const componentName = props.componentName || staticConfig.componentName\n\n    if (process.env.NODE_ENV === 'development' && isClient) {\n      React.useEffect(() => {\n        let overlay: HTMLSpanElement | null = null\n\n        const debugVisualizerHandler = (show = false) => {\n          const node = curStateRef.host as HTMLElement\n          if (!node) return\n\n          if (show) {\n            overlay = document.createElement('span')\n            overlay.style.inset = '0px'\n            overlay.style.zIndex = '1000000'\n            overlay.style.position = 'absolute'\n            overlay.style.borderColor = 'red'\n            overlay.style.borderWidth = '1px'\n            overlay.style.borderStyle = 'dotted'\n\n            const dataAt = node.getAttribute('data-at') || ''\n            const dataIn = node.getAttribute('data-in') || ''\n\n            const tooltip = document.createElement('span')\n            tooltip.style.position = 'absolute'\n            tooltip.style.top = '0px'\n            tooltip.style.left = '0px'\n            tooltip.style.padding = '3px'\n            tooltip.style.background = 'rgba(0,0,0,0.75)'\n            tooltip.style.color = 'rgba(255,255,255,1)'\n            tooltip.style.fontSize = '12px'\n            tooltip.style.lineHeight = '12px'\n            tooltip.style.fontFamily = 'monospace'\n            tooltip.style['webkitFontSmoothing'] = 'none'\n            tooltip.innerText = `${componentName || ''} ${dataAt} ${dataIn}`.trim()\n\n            overlay.appendChild(tooltip)\n            node.appendChild(overlay)\n          } else {\n            if (overlay) {\n              node.removeChild(overlay)\n            }\n          }\n        }\n        debugKeyListeners ||= new Set()\n        debugKeyListeners.add(debugVisualizerHandler)\n        return () => {\n          debugKeyListeners?.delete(debugVisualizerHandler)\n        }\n      }, [componentName])\n    }\n\n    /**\n     * Component state for tracking animations, pseudos\n     */\n    const animationDriver = componentContext.animationDriver\n    const useAnimations = animationDriver?.useAnimations as UseAnimationHook | undefined\n\n    const {\n      curStateRef,\n      disabled,\n      groupName,\n      hasAnimationProp,\n      hasEnterStyle,\n      isAnimated,\n      isExiting,\n      isHydrated,\n      presence,\n      presenceState,\n      setState,\n      setStateShallow,\n      noClass,\n      state,\n      stateRef,\n      supportsCSSVars,\n      willBeAnimated,\n      willBeAnimatedClient,\n    } = useComponentState(props, componentContext, staticConfig, config!)\n\n    if (process.env.NODE_ENV === 'development' && time) time`use-state`\n\n    const hasTextAncestor = !!(isWeb && isText ? componentContext.inText : false)\n\n    const isTaggable = !Component || typeof Component === 'string'\n    const tagProp = props.tag\n    // default to tag, fallback to component (when both strings)\n    const element = isWeb ? (isTaggable ? tagProp || Component : Component) : Component\n\n    const BaseTextComponent = BaseText || element || 'span'\n    const BaseViewComponent = BaseView || element || (hasTextAncestor ? 'span' : 'div')\n\n    let elementType = isText ? BaseTextComponent : BaseViewComponent\n\n    if (animationDriver && isAnimated) {\n      elementType = animationDriver[isText ? 'Text' : 'View'] || elementType\n    }\n\n    // internal use only\n    const disableThemeProp =\n      process.env.TAMAGUI_TARGET === 'native' ? false : props['data-disable-theme']\n\n    const disableTheme = disableThemeProp || isHOC\n\n    if (process.env.NODE_ENV === 'development' && time) time`theme-props`\n\n    if (props.themeShallow) {\n      curStateRef.themeShallow = true\n    }\n\n    const themeStateProps: UseThemeWithStateProps = {\n      componentName,\n      disable: disableTheme,\n      shallow: curStateRef.themeShallow,\n      debug: debugProp,\n    }\n\n    // these two are set conditionally if existing in props because we wrap children with\n    // a span if they ever set one of these, so avoid wrapping all children with span\n    if ('themeInverse' in props) {\n      themeStateProps.inverse = props.themeInverse\n    }\n    if ('theme' in props) {\n      themeStateProps.name = props.theme\n    }\n    if (typeof curStateRef.isListeningToTheme === 'boolean') {\n      themeStateProps.needsUpdate = () => !!stateRef.current.isListeningToTheme\n    }\n    // on native we optimize theme changes if fastSchemeChange is enabled, otherwise deopt\n    if (process.env.TAMAGUI_TARGET === 'native') {\n      themeStateProps.deopt = willBeAnimated\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      if (debugProp && debugProp !== 'profile') {\n        const name = `${\n          componentName ||\n          Component?.displayName ||\n          Component?.name ||\n          '[Unnamed Component]'\n        }`\n\n        const type =\n          (hasEnterStyle ? '(hasEnter)' : ' ') +\n          (isAnimated ? '(animated)' : ' ') +\n          (isReactNative ? '(rnw)' : ' ') +\n          (noClass ? '(noClass)' : ' ') +\n          (state.press || state.pressIn ? '(PRESSED)' : ' ') +\n          (state.hover ? '(HOVERED)' : ' ') +\n          (state.focus ? '(FOCUSED)' : ' ') +\n          (state.focusWithin ? '(WITHIN FOCUSED)' : ' ') +\n          (presenceState?.isPresent === false ? '(EXIT)' : '')\n\n        const dataIs = propsIn['data-is'] || ''\n        const banner = `${internalID} ${name}${dataIs ? ` ${dataIs}` : ''} ${type}`\n        console.info(\n          `%c ${banner} (hydrated: ${isHydrated}) (unmounted: ${state.unmounted})`,\n          'background: green; color: white;'\n        )\n\n        if (isServer) {\n          log({ noClass, isAnimated, isWeb, supportsCSSVars })\n        } else {\n          // if strict mode or something messes with our nesting this fixes:\n          groupEnd()\n\n          const ch = propsIn.children\n          let childLog =\n            typeof ch === 'string' ? (ch.length > 4 ? ch.slice(0, 4) + '...' : ch) : ''\n          if (childLog.length) {\n            childLog = `(children: ${childLog})`\n          }\n\n          groupCollapsed(`${childLog} Props:`)\n          log('props in:', propsIn)\n          log('final props:', props)\n          log({ state, staticConfig, elementType, themeStateProps })\n          log({ contextProps: styledContextProps, overriddenContextProps })\n          log({ presence, isAnimated, isHOC, hasAnimationProp, useAnimations })\n          groupEnd()\n        }\n      }\n    }\n\n    if (process.env.NODE_ENV === 'development' && time) time`pre-theme-media`\n\n    const [theme, themeState] = useThemeWithState(themeStateProps)\n\n    if (process.env.NODE_ENV === 'development' && time) time`theme`\n\n    elementType = Component || elementType\n    const isStringElement = typeof elementType === 'string'\n\n    const mediaState = useMedia(componentContext, debugProp)\n\n    setDidGetVariableValue(false)\n\n    if (process.env.NODE_ENV === 'development' && time) time`media`\n\n    const resolveValues =\n      // if HOC + mounted + has animation prop, resolve as value so it passes non-variable to child\n      (isAnimated && !supportsCSSVars) ||\n      (isHOC && state.unmounted == false && hasAnimationProp)\n        ? 'value'\n        : 'auto'\n\n    const styleProps = {\n      mediaState,\n      noClass,\n      resolveValues,\n      isExiting,\n      isAnimated,\n      willBeAnimated,\n      styledContextProps,\n    } as const\n\n    const themeName = themeState?.name || ''\n\n    if (process.env.NODE_ENV === 'development' && time) time`split-styles-prepare`\n\n    const splitStyles = useSplitStyles(\n      props,\n      staticConfig,\n      theme,\n      themeName,\n      state,\n      styleProps,\n      null,\n      componentContext,\n      elementType,\n      debugProp\n    )\n\n    if (process.env.NODE_ENV === 'development' && time) time`split-styles`\n\n    // hide strategy will set this opacity = 0 until measured\n    if (props.group && props.untilMeasured === 'hide' && !curStateRef.hasMeasured) {\n      splitStyles.style ||= {}\n      splitStyles.style.opacity = 0\n    }\n\n    curStateRef.isListeningToTheme = splitStyles.dynamicThemeAccess\n\n    // only listen for changes if we are using raw theme values or media space, or dynamic media (native)\n    // array = space media breakpoints\n    const hasRuntimeMediaKeys = splitStyles.hasMedia && splitStyles.hasMedia !== true\n    const shouldListenForMedia =\n      didGetVariableValue() ||\n      hasRuntimeMediaKeys ||\n      (noClass && splitStyles.hasMedia === true)\n\n    const mediaListeningKeys = hasRuntimeMediaKeys\n      ? (splitStyles.hasMedia as Set<string>)\n      : null\n    if (process.env.NODE_ENV === 'development' && debugProp === 'verbose') {\n      console.info(`useMedia() createComponent`, shouldListenForMedia, mediaListeningKeys)\n    }\n\n    setMediaShouldUpdate(componentContext, shouldListenForMedia, mediaListeningKeys)\n\n    const {\n      viewProps: viewPropsIn,\n      pseudos,\n      style: splitStylesStyle,\n      classNames,\n      space,\n    } = splitStyles\n\n    const propsWithAnimation = props as UseAnimationProps\n\n    const {\n      asChild,\n      children,\n      themeShallow,\n      spaceDirection: _spaceDirection,\n      onPress,\n      onLongPress,\n      onPressIn,\n      onPressOut,\n      onHoverIn,\n      onHoverOut,\n      onMouseUp,\n      onMouseDown,\n      onMouseEnter,\n      onMouseLeave,\n      onFocus,\n      onBlur,\n      separator,\n      // ignore from here on out\n      forceStyle: _forceStyle,\n      // @ts-ignore  for next/link compat etc\n      onClick,\n      theme: _themeProp,\n      ...nonTamaguiProps\n    } = viewPropsIn\n\n    // these can ultimately be for DOM, react-native-web views, or animated views\n    // so the type is pretty loose\n    let viewProps = nonTamaguiProps\n\n    if (!isTaggable && props.forceStyle) {\n      viewProps.forceStyle = props.forceStyle\n    }\n\n    if (isHOC && _themeProp) {\n      viewProps.theme = _themeProp\n    }\n\n    if (tagProp && elementType['acceptTagProp']) {\n      viewProps.tag = tagProp\n    }\n\n    // once you set animation prop don't remove it, you can set to undefined/false\n    // reason is animations are heavy - no way around it, and must be run inline here (🙅 loading as a sub-component)\n    let animationStyles: any\n    const shouldUseAnimation = // if it supports css vars we run it on server too to get matching initial style\n      (supportsCSSVars ? willBeAnimatedClient : willBeAnimated) && useAnimations && !isHOC\n\n    if (shouldUseAnimation) {\n      const animations = useAnimations({\n        props: propsWithAnimation,\n        // if hydrating, send empty style\n        style: splitStylesStyle || {},\n        presence,\n        componentState: state,\n        styleProps,\n        theme,\n        pseudos: pseudos || null,\n        staticConfig,\n        stateRef,\n      })\n\n      if ((isAnimated || supportsCSSVars) && animations) {\n        animationStyles = animations.style\n        viewProps.style = animationStyles\n        if (animations.className) {\n          viewProps.className = `${state.unmounted === 'should-enter' ? 't_unmounted ' : ''}${viewProps.className || ''} ${animations.className}`\n        }\n      }\n\n      if (process.env.NODE_ENV === 'development' && time) time`animations`\n    }\n\n    if (process.env.NODE_ENV === 'development' && props.untilMeasured && !props.group) {\n      console.warn(\n        `You set the untilMeasured prop without setting group. This doesn't work, be sure to set untilMeasured on the parent that sets group, not the children that use the $group- prop.\\n\\nIf you meant to do this, you can disable this warning - either change untilMeasured and group at the same time, or do group={conditional ? 'name' : undefined}`\n      )\n    }\n\n    if (process.env.NODE_ENV === 'development' && time) time`destructure`\n\n    if (groupName) {\n      nonTamaguiProps.onLayout = composeEventHandlers(\n        nonTamaguiProps.onLayout,\n        (e: LayoutEvent) => {\n          const layout = e.nativeEvent.layout\n          stateRef.current.group!.layout = layout\n          stateRef.current.group!.emit(groupName, {\n            layout,\n          })\n\n          // force re-render if measure strategy is hide\n          if (!stateRef.current.hasMeasured && props.untilMeasured === 'hide') {\n            setState((prev) => ({ ...prev }))\n          }\n\n          stateRef.current.hasMeasured = true\n        }\n      )\n    }\n\n    viewProps =\n      hooks.usePropsTransform?.(\n        elementType,\n        nonTamaguiProps,\n        stateRef,\n        curStateRef.willHydrate\n      ) || nonTamaguiProps\n\n    if (!curStateRef.composedRef) {\n      curStateRef.composedRef = composeRefs<TamaguiElement>(\n        (x) => (stateRef.current.host = x as TamaguiElement),\n        forwardedRef,\n        setElementProps\n      )\n    }\n\n    viewProps.ref = curStateRef.composedRef\n\n    if (process.env.NODE_ENV === 'development') {\n      if (!isReactNative && !isText && isWeb && !isHOC) {\n        React.Children.toArray(props.children).forEach((item) => {\n          // allow newlines because why not its annoying with mdx\n          if (typeof item === 'string' && item !== '\\n') {\n            console.error(\n              `Unexpected text node: ${item}. A text node cannot be a child of a <${staticConfig.componentName || propsIn.tag || 'View'}>.`,\n              props\n            )\n          }\n        })\n      }\n    }\n\n    if (process.env.NODE_ENV === 'development' && time) time`events-hooks`\n\n    // combined multiple effects into one for performance so be careful with logic\n    // should not be a layout effect because otherwise it wont render the initial state\n    // for example css driver needs to render once with the first styles, then again with the next\n    // if its a layout effect it will just skip that first <render >output\n    const { pseudoGroups, mediaGroups } = splitStyles\n\n    const unPress = () => setStateShallow({ press: false, pressIn: false })\n\n    if (process.env.NODE_ENV === 'development' && isWeb) {\n      useIsomorphicLayoutEffect(() => {\n        if (debugProp === 'verbose') {\n          function cssStyleDeclarationToObject(style: CSSStyleDeclaration) {\n            const styleObject: Record<string, any> = {}\n            for (let i = 0; i < style.length; i++) {\n              let prop = style[i]\n              styleObject[prop] = style.getPropertyValue(prop)\n            }\n            return styleObject\n          }\n          const computed = cssStyleDeclarationToObject(\n            getComputedStyle(stateRef.current.host! as any)\n          )\n          groupCollapsed(`Rendered > (opacity: ${computed.opacity})`)\n          console.warn(stateRef.current.host)\n          console.warn(computed)\n          groupEnd()\n        }\n      })\n    }\n\n    useIsomorphicLayoutEffect(() => {\n      if (disabled) {\n        return\n      }\n\n      if (state.unmounted === true && hasEnterStyle) {\n        setStateShallow({ unmounted: 'should-enter' })\n        return\n      }\n\n      if (state.unmounted) {\n        setStateShallow({ unmounted: false })\n        return\n      }\n\n      const dispose =\n        pseudoGroups || mediaGroups\n          ? subscribeToContextGroup({\n              componentContext,\n              setStateShallow,\n              state,\n              mediaGroups,\n              pseudoGroups,\n            })\n          : null\n\n      return () => {\n        dispose?.()\n        componentSetStates.delete(setState)\n      }\n    }, [\n      state.unmounted,\n      disabled,\n      pseudoGroups ? Object.keys([...pseudoGroups]).join('') : 0,\n      mediaGroups ? Object.keys([...mediaGroups]).join('') : 0,\n    ])\n\n    useIsomorphicLayoutEffect(() => {\n      if (!groupName) return\n      curStateRef.group!.emit(groupName, {\n        pseudo: state,\n        layout: curStateRef.group?.layout,\n      })\n      const groupContextState = componentContext?.groups\n      if (groupContextState) {\n        // and mutate the current since its concurrent safe (children throw it in useState on mount)\n        const next = {\n          ...groupContextState[groupName],\n          ...state,\n        }\n        groupContextState[groupName] = next\n      }\n    }, [groupName, state])\n\n    // if its a group its gotta listen for pseudos to emit them to children\n\n    const runtimePressStyle = !disabled && noClass && pseudos?.pressStyle\n    const runtimeFocusStyle = !disabled && noClass && pseudos?.focusStyle\n    const runtimeFocusVisibleStyle = !disabled && noClass && pseudos?.focusVisibleStyle\n    const attachFocus = Boolean(\n      runtimePressStyle ||\n        runtimeFocusStyle ||\n        runtimeFocusVisibleStyle ||\n        onFocus ||\n        onBlur ||\n        !!componentContext.setParentFocusState\n    )\n    const attachPress = Boolean(\n      groupName ||\n        runtimePressStyle ||\n        onPress ||\n        onPressOut ||\n        onPressIn ||\n        onMouseDown ||\n        onMouseUp ||\n        onLongPress ||\n        onClick ||\n        pseudos?.focusVisibleStyle\n    )\n    const runtimeHoverStyle = !disabled && noClass && pseudos?.hoverStyle\n    const needsHoverState = Boolean(\n      groupName || runtimeHoverStyle || onHoverIn || onHoverOut\n    )\n    const attachHover =\n      isWeb && !!(groupName || needsHoverState || onMouseEnter || onMouseLeave)\n\n    // check presence rather than value to prevent reparenting bugs\n    // allows for onPress={x ? function : undefined} without re-ordering dom\n    const shouldAttach =\n      !disabled &&\n      !props.asChild &&\n      Boolean(\n        attachFocus ||\n          attachPress ||\n          attachHover ||\n          runtimePressStyle ||\n          runtimeHoverStyle ||\n          runtimeFocusStyle\n      )\n\n    const needsPressState = Boolean(groupName || runtimePressStyle)\n\n    if (process.env.NODE_ENV === 'development' && time) time`events-setup`\n\n    if (process.env.NODE_ENV === 'development' && debugProp === 'verbose') {\n      log(`🪩 events()`, {\n        runtimeFocusStyle,\n        runtimePressStyle,\n        runtimeHoverStyle,\n        runtimeFocusVisibleStyle,\n        attachPress,\n        attachFocus,\n        attachHover,\n        shouldAttach,\n        needsHoverState,\n        pseudos,\n      })\n    }\n\n    const events: TamaguiComponentEvents | null = shouldAttach\n      ? {\n          onPressOut: attachPress\n            ? (e) => {\n                unPress()\n                onPressOut?.(e)\n                onMouseUp?.(e)\n              }\n            : undefined,\n          ...((attachHover || attachPress) && {\n            onMouseEnter: (e) => {\n              const next: Partial<typeof state> = {}\n              if (needsHoverState) {\n                next.hover = true\n              }\n              if (needsPressState) {\n                if (state.pressIn) {\n                  next.press = true\n                }\n              }\n              setStateShallow(next)\n              onHoverIn?.(e)\n              onMouseEnter?.(e)\n            },\n            onMouseLeave: (e) => {\n              const next: Partial<typeof state> = {}\n              if (needsHoverState) {\n                next.hover = false\n              }\n              if (needsPressState) {\n                if (state.pressIn) {\n                  next.press = false\n                  next.pressIn = false\n                }\n              }\n              setStateShallow(next)\n              onHoverOut?.(e)\n              onMouseLeave?.(e)\n            },\n          }),\n          onPressIn: attachPress\n            ? (e) => {\n                if (runtimePressStyle || groupName) {\n                  setStateShallow({\n                    press: true,\n                    pressIn: true,\n                  })\n                }\n                onPressIn?.(e)\n                onMouseDown?.(e)\n                if (isWeb) {\n                  componentSetStates.add(setState)\n                }\n              }\n            : undefined,\n          onPress: attachPress\n            ? (e) => {\n                unPress()\n                // @ts-ignore\n                isWeb && onClick?.(e)\n                onPress?.(e)\n                if (process.env.TAMAGUI_TARGET === 'web') {\n                  onLongPress?.(e)\n                }\n              }\n            : undefined,\n          ...(process.env.TAMAGUI_TARGET === 'native' &&\n            attachPress &&\n            onLongPress && {\n              onLongPress: (e) => {\n                unPress()\n                onLongPress?.(e)\n              },\n            }),\n          ...(attachFocus && {\n            onFocus: (e) => {\n              if (componentContext.setParentFocusState) {\n                componentContext.setParentFocusState({ focusWithin: true })\n              }\n              if (pseudos?.focusVisibleStyle) {\n                setTimeout(() => {\n                  setStateShallow({\n                    focus: true,\n                    focusVisible: !!lastInteractionWasKeyboard.value,\n                  })\n                }, 0)\n              } else {\n                setStateShallow({\n                  focus: true,\n                  focusVisible: false,\n                })\n              }\n              onFocus?.(e)\n            },\n            onBlur: (e) => {\n              if (componentContext.setParentFocusState) {\n                componentContext.setParentFocusState({ focusWithin: false })\n              }\n              setStateShallow({\n                focus: false,\n                focusVisible: false,\n              })\n              onBlur?.(e)\n            },\n          }),\n        }\n      : null\n\n    if (process.env.TAMAGUI_TARGET === 'native' && events && !asChild) {\n      // replicating TouchableWithoutFeedback\n      Object.assign(events, {\n        cancelable: !viewProps.rejectResponderTermination,\n        disabled: disabled,\n        hitSlop: viewProps.hitSlop,\n        delayLongPress: viewProps.delayLongPress,\n        delayPressIn: viewProps.delayPressIn,\n        delayPressOut: viewProps.delayPressOut,\n        focusable: viewProps.focusable ?? true,\n        minPressDuration: 0,\n      })\n    }\n\n    if (process.env.TAMAGUI_TARGET === 'web' && events && !isReactNative) {\n      Object.assign(viewProps, getWebEvents(events))\n    }\n\n    if (process.env.NODE_ENV === 'development' && time) time`events`\n\n    if (process.env.NODE_ENV === 'development' && debugProp === 'verbose') {\n      log(`events`, { events, attachHover, attachPress })\n    }\n\n    // EVENTS native\n    hooks.useEvents?.(viewProps, events, splitStyles, setStateShallow, staticConfig)\n\n    const direction = props.spaceDirection || 'both'\n\n    if (process.env.NODE_ENV === 'development' && time) time`hooks`\n\n    let content =\n      !children || asChild\n        ? children\n        : spacedChildren({\n            separator,\n            children,\n            space,\n            direction,\n            isZStack,\n            debug: debugProp,\n          })\n\n    if (asChild) {\n      elementType = Slot\n      // on native this is already merged into viewProps in hooks.useEvents\n      if (process.env.TAMAGUI_TARGET === 'web') {\n        const webStyleEvents = asChild === 'web' || asChild === 'except-style-web'\n        const passEvents = getWebEvents(\n          {\n            onPress,\n            onLongPress,\n            onPressIn,\n            onPressOut,\n            onMouseUp,\n            onMouseDown,\n            onMouseEnter,\n            onMouseLeave,\n          },\n          webStyleEvents\n        )\n        Object.assign(viewProps, passEvents)\n      } else {\n        Object.assign(viewProps, { onPress, onLongPress })\n      }\n    }\n\n    if (process.env.NODE_ENV === 'development' && time) time`spaced-as-child`\n\n    let useChildrenResult: any\n    if (hooks.useChildren) {\n      useChildrenResult = hooks.useChildren(elementType, content, viewProps)\n    }\n\n    if (process.env.NODE_ENV === 'development' && time) time`use-children`\n\n    if (useChildrenResult) {\n      content = useChildrenResult\n    } else {\n      content = React.createElement(elementType, viewProps, content)\n    }\n\n    // needs to reset the presence state for nested children\n    const ResetPresence = config?.animations?.ResetPresence\n    if (\n      ResetPresence &&\n      willBeAnimated &&\n      (hasEnterStyle || presenceState) &&\n      content &&\n      typeof content !== 'string'\n    ) {\n      content = <ResetPresence>{content}</ResetPresence>\n    }\n\n    if (process.env.NODE_ENV === 'development' && time) time`create-element`\n\n    // must override context so siblings don't clobber initial state\n    const groupState = curStateRef.group\n    const subGroupContext = React.useMemo(() => {\n      if (!groupState || !groupName) return\n      groupState.listeners.clear()\n      // change reference so context value updates\n      return {\n        ...componentContext.groups,\n        // change reference so as we mutate it doesn't affect siblings etc\n        state: {\n          ...componentContext.groups.state,\n          [groupName]: {\n            pseudo: defaultComponentStateMounted,\n            // capture just initial width and height if they exist\n            // will have top, left, width, height (not x, y)\n            layout: {\n              width: fromPx(splitStyles.style?.width as any),\n              height: fromPx(splitStyles.style?.height as any),\n            } as any,\n          },\n        },\n        emit: groupState.emit,\n        subscribe: groupState.subscribe,\n      } satisfies ComponentContextI['groups']\n    }, [groupName])\n\n    if ('group' in props || propsIn.focusWithinStyle) {\n      content = (\n        <ComponentContext.Provider\n          {...componentContext}\n          groups={subGroupContext}\n          setParentFocusState={setStateShallow}\n        >\n          {content}\n        </ComponentContext.Provider>\n      )\n    }\n\n    if (process.env.NODE_ENV === 'development' && time) time`group-context`\n\n    content = disableTheme\n      ? content\n      : getThemedChildren(themeState, content, themeStateProps, false, stateRef)\n\n    if (process.env.NODE_ENV === 'development' && time) time`themed-children`\n\n    if (process.env.TAMAGUI_TARGET === 'web') {\n      if (isReactNative && !asChild) {\n        content = (\n          <span\n            className=\"_dsp_contents\"\n            {...(isHydrated && events && getWebEvents(events))}\n          >\n            {content}\n          </span>\n        )\n      }\n    }\n\n    // ensure we override new context with style resolved values\n    if (staticConfig.context) {\n      const contextProps = staticConfig.context.props\n      for (const key in contextProps) {\n        if ((viewProps.style && key in viewProps.style) || key in viewProps) {\n          overriddenContextProps ||= {}\n          overriddenContextProps[key] = viewProps.style?.[key] ?? viewProps[key]\n        }\n      }\n    }\n\n    if (overriddenContextProps) {\n      const Provider = staticConfig.context!.Provider!\n      content = (\n        <Provider {...contextValue} {...overriddenContextProps}>\n          {content}\n        </Provider>\n      )\n    }\n\n    // add in <style> tags inline\n    const { rulesToInsert } = splitStyles\n    if (process.env.TAMAGUI_TARGET === 'web' && process.env.TAMAGUI_REACT_19) {\n      content = wrapStyleTags(Object.values(rulesToInsert), content)\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      if (debugProp && debugProp !== 'profile') {\n        const element = typeof elementType === 'string' ? elementType : 'Component'\n        const title = `render <${element} /> (${internalID}) with props`\n        if (!isWeb) {\n          log(title)\n          log(`state: `, state)\n          if (isDevTools) {\n            log('viewProps', viewProps)\n          }\n          log(`final styles:`)\n          for (const key in splitStylesStyle) {\n            log(key, splitStylesStyle[key])\n          }\n        } else {\n          groupCollapsed(title)\n          try {\n            log('viewProps', viewProps)\n            log('children', content)\n            if (typeof window !== 'undefined') {\n              log({\n                propsIn,\n                props,\n                animationStyles,\n                classNames,\n                content,\n                defaultProps,\n                elementType,\n                events,\n                isAnimated,\n                hasRuntimeMediaKeys,\n                isStringElement,\n                mediaListeningKeys,\n                pseudos,\n                shouldAttach,\n                noClass,\n                shouldListenForMedia,\n                splitStyles,\n                splitStylesStyle,\n                state,\n                stateRef,\n                staticConfig,\n                styleProps,\n                themeState,\n                viewProps,\n                willBeAnimated,\n              })\n            }\n          } catch {\n            // RN can run into PayloadTooLargeError: request entity too large\n          } finally {\n            groupEnd()\n          }\n        }\n        if (debugProp === 'break') {\n          // biome-ignore lint/suspicious/noDebugger: ok\n          debugger\n        }\n      }\n    }\n\n    if (process.env.NODE_ENV === 'development' && time) {\n      time`rest`\n      if (!globalThis['willPrint']) {\n        globalThis['willPrint'] = true\n        setTimeout(() => {\n          delete globalThis['willPrint']\n          time.print()\n          time = null\n        }, 50)\n      }\n    }\n\n    return content\n  })\n\n  // let hasLogged = false\n\n  if (staticConfig.componentName) {\n    component.displayName = staticConfig.componentName\n  }\n\n  type ComponentType = TamaguiComponent<\n    ComponentPropTypes,\n    Ref,\n    BaseProps,\n    BaseStyles,\n    {}\n  >\n\n  let res: ComponentType = component as any\n\n  if (process.env.TAMAGUI_FORCE_MEMO || staticConfig.memo) {\n    res = React.memo(res) as any\n  }\n\n  res.staticConfig = staticConfig\n\n  function extendStyledConfig(extended?: Partial<StaticConfig>) {\n    return {\n      ...staticConfig,\n      ...extended,\n      neverFlatten: true,\n      isHOC: true,\n      isStyledHOC: false,\n    }\n  }\n\n  function extractable(Component: any, extended?: Partial<StaticConfig>) {\n    Component.staticConfig = extendStyledConfig(extended)\n    Component.styleable = styleable\n    return Component\n  }\n\n  function styleable(Component: any, options?: StyleableOptions) {\n    const isForwardedRefAlready = Component.render?.length === 2\n\n    let out = isForwardedRefAlready\n      ? (Component as any)\n      : React.forwardRef(Component as any)\n\n    const extendedConfig = extendStyledConfig(options?.staticConfig)\n\n    out = options?.disableTheme ? out : (themeable(out, extendedConfig, true) as any)\n\n    if (process.env.TAMAGUI_MEMOIZE_STYLEABLE) {\n      out = React.memo(out)\n    }\n\n    out.staticConfig = extendedConfig\n    out.styleable = styleable\n    return out\n  }\n\n  res.extractable = extractable\n  res.styleable = styleable\n\n  return res\n}\n\ntype EventKeys = keyof (TamaguiComponentEvents & WebOnlyPressEvents)\ntype EventLikeObject = { [key in EventKeys]?: any }\n\nfunction getWebEvents<E extends EventLikeObject>(events: E, webStyle = true) {\n  return {\n    onMouseEnter: events.onMouseEnter,\n    onMouseLeave: events.onMouseLeave,\n    [webStyle ? 'onClick' : 'onPress']: events.onPress,\n    onMouseDown: events.onPressIn,\n    onMouseUp: events.onPressOut,\n    onTouchStart: events.onPressIn,\n    onTouchEnd: events.onPressOut,\n    onFocus: events.onFocus,\n    onBlur: events.onBlur,\n  }\n}\n\n// for elements to avoid spacing\nexport function Unspaced(props: { children?: any }) {\n  return props.children\n}\nUnspaced['isUnspaced'] = true\n\nconst getSpacerSize = (size: SizeTokens | number | boolean, { tokens }) => {\n  size = size === true ? '$true' : size\n  const sizePx = tokens.space[size as any] ?? size\n  return {\n    width: sizePx,\n    height: sizePx,\n    minWidth: sizePx,\n    minHeight: sizePx,\n  }\n}\n\n// dont used styled() here to avoid circular deps\n// keep inline to avoid circular deps\nexport const Spacer = createComponent<\n  SpacerProps,\n  TamaguiElement,\n  StackNonStyleProps,\n  SpacerStyleProps\n>({\n  acceptsClassName: true,\n  memo: true,\n  componentName: 'Spacer',\n  validStyles,\n\n  defaultProps: {\n    ...stackDefaultStyles,\n    // avoid nesting issues\n    tag: 'span',\n    size: true,\n    pointerEvents: 'none',\n  },\n\n  variants: {\n    size: {\n      '...': getSpacerSize,\n    },\n\n    flex: {\n      true: {\n        flexGrow: 1,\n      },\n    },\n\n    direction: {\n      horizontal: {\n        height: 0,\n        minHeight: 0,\n      },\n      vertical: {\n        width: 0,\n        minWidth: 0,\n      },\n      both: {},\n    },\n  } as const,\n})\n\nexport type SpacedChildrenProps = {\n  isZStack?: boolean\n  children?: React.ReactNode\n  space?: SpaceValue\n  spaceFlex?: boolean | number\n  direction?: SpaceDirection | 'unset'\n  separator?: React.ReactNode\n  ensureKeys?: boolean\n  debug?: DebugProp\n}\n\nexport function spacedChildren(props: SpacedChildrenProps) {\n  const { isZStack, children, space, direction, spaceFlex, separator, ensureKeys } = props\n  const hasSpace = !!(space || spaceFlex)\n  const hasSeparator = !(separator === undefined || separator === null)\n  const areChildrenArray = Array.isArray(children)\n\n  if (!ensureKeys && !(hasSpace || hasSeparator || isZStack)) {\n    return children\n  }\n\n  const childrenList = areChildrenArray\n    ? (children as any[])\n    : React.Children.toArray(children)\n\n  const len = childrenList.length\n  if (len <= 1 && !isZStack && !childrenList[0]?.['type']?.['shouldForwardSpace']) {\n    return children\n  }\n\n  const final: React.ReactNode[] = []\n  for (let [index, child] of childrenList.entries()) {\n    const isEmpty =\n      child === null ||\n      child === undefined ||\n      (Array.isArray(child) && child.length === 0)\n\n    // forward space\n    if (!isEmpty && React.isValidElement(child) && child.type?.['shouldForwardSpace']) {\n      child = React.cloneElement(child, {\n        space,\n        spaceFlex,\n        separator,\n        key: child.key,\n      } as any)\n    }\n\n    // push them all, but wrap some in Fragment\n    if (isEmpty || !child || (child['key'] && !isZStack)) {\n      final.push(child)\n    } else {\n      final.push(\n        <React.Fragment key={`${index}0t`}>\n          {isZStack ? <AbsoluteFill>{child}</AbsoluteFill> : child}\n        </React.Fragment>\n      )\n    }\n\n    // first child unspaced avoid insert space\n    if (isUnspaced(child) && index === 0) continue\n    // no spacing on ZStack\n    if (isZStack) continue\n\n    const next = childrenList[index + 1]\n\n    if (next && !isEmpty && !isUnspaced(next)) {\n      if (separator) {\n        if (hasSpace) {\n          final.push(\n            createSpacer({\n              key: `_${index}_00t`,\n              direction,\n              space,\n              spaceFlex,\n            })\n          )\n        }\n        final.push(<React.Fragment key={`${index}03t`}>{separator}</React.Fragment>)\n        if (hasSpace) {\n          final.push(\n            createSpacer({\n              key: `_${index}01t`,\n              direction,\n              space,\n              spaceFlex,\n            })\n          )\n        }\n      } else {\n        final.push(\n          createSpacer({\n            key: `_${index}02t`,\n            direction,\n            space,\n            spaceFlex,\n          })\n        )\n      }\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    if (props.debug) {\n      log(`  Spaced children`, final, props)\n    }\n  }\n\n  return final\n}\n\ntype CreateSpacerProps = SpacedChildrenProps & { key: string }\n\nfunction createSpacer({ key, direction, space, spaceFlex }: CreateSpacerProps) {\n  return (\n    <Spacer\n      key={key}\n      size={space}\n      direction={direction}\n      {...(typeof spaceFlex !== 'undefined' && {\n        flex: spaceFlex === true ? 1 : spaceFlex === false ? 0 : spaceFlex,\n      })}\n    />\n  )\n}\n\nfunction isUnspaced(child: React.ReactNode) {\n  const t = child?.['type']\n  return t?.['isVisuallyHidden'] || t?.['isUnspaced']\n}\n\nconst AbsoluteFill: any = createComponent({\n  defaultProps: {\n    ...stackDefaultStyles,\n    flexDirection: 'column',\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    pointerEvents: 'box-none',\n  },\n})\n\nconst fromPx = (val?: number | string) =>\n  typeof val !== 'string' ? val : +val.replace('px', '')\n", "import type { StackStyle } from '../types'\n\nexport const THEME_NAME_SEPARATOR = '_'\nexport const THEME_CLASSNAME_PREFIX = 't_'\nexport const FONT_DATA_ATTRIBUTE_NAME = 'data-tamagui-font'\n\nexport const stackDefaultStyles = {}\n\nexport const webViewFlexCompatStyles: StackStyle = {\n  display: 'flex',\n  alignItems: 'stretch',\n  flexDirection: 'column',\n  flexBasis: 'auto',\n  // @ts-expect-error\n  boxSizing: 'border-box',\n  position: process.env.TAMAGUI_POSITION_STATIC === '1' ? 'static' : 'relative',\n  minHeight: 0,\n  minWidth: 0,\n  flexShrink: 0,\n}\n\nif (process.env.TAMAGUI_TARGET === 'web') {\n  Object.assign(stackDefaultStyles, webViewFlexCompatStyles)\n}\n", "// for verbose logging outside node/cli\n\nexport const isDevTools = (() => {\n  if (process.env.NODE_ENV === 'development') {\n    try {\n      return new Function('try {return this===window;}catch(e){ return false;}')()\n    } catch {\n      //\n    }\n  }\n  return false\n})()\n", "import type { TamaguiComponentState } from './interfaces/TamaguiComponentState'\n\nexport const defaultComponentState: TamaguiComponentState = {\n  hover: false,\n  press: false,\n  pressIn: false,\n  focus: false,\n  focusVisible: false,\n  focusWithin: false,\n  unmounted: true,\n  disabled: false,\n}\n\nexport const defaultComponentStateMounted: TamaguiComponentState = {\n  ...defaultComponentState,\n  unmounted: false,\n}\n\nexport const defaultComponentStateShouldEnter: TamaguiComponentState = {\n  ...defaultComponentState,\n  unmounted: 'should-enter',\n}\n", "import { isWeb } from '@tamagui/constants'\n\n// \"hide logs during second invocation in strict mode\" messing things up\n// this actually didn't really fix it at all\n\nexport const groupEnd = console.groupEnd.bind(console)\nconst gc = console.groupCollapsed.bind(console)\nexport const groupCollapsed = isWeb ? gc : console.info\n", "import { getConfig } from '../config'\nimport type { GenericShorthands } from '../types'\n\nlet inverseShorthands: GenericShorthands | null = null\n\nexport const getShorthandValue = (props: Record<string, any>, key: string) => {\n  inverseShorthands ||= getConfig().inverseShorthands\n  return props[key] ?? (inverseShorthands ? props[inverseShorthands[key]] : undefined)\n}\n", "import { isAndroid, isClient, isWeb, useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport {\n  StyleObjectIdentifier,\n  StyleObjectProperty,\n  StyleObjectPseudo,\n  StyleObjectRules,\n  stylePropsText,\n  stylePropsTransform,\n  tokenCategories,\n  validPseudoKeys,\n  validStyles as validStylesView,\n} from '@tamagui/helpers'\nimport React from 'react'\n\nimport { getConfig, getFont } from '../config'\nimport { accessibilityDirectMap } from '../constants/accessibilityDirectMap'\nimport { webViewFlexCompatStyles } from '../constants/constants'\nimport { isDevTools } from '../constants/isDevTools'\nimport {\n  getMediaImportanceIfMoreImportant,\n  mediaState as globalMediaState,\n  isMediaKey,\n  mediaKeyMatch,\n  mediaQueryConfig,\n} from '../hooks/useMedia'\nimport type { TamaguiComponentState } from '../interfaces/TamaguiComponentState'\nimport type {\n  ClassNamesObject,\n  ComponentContextI,\n  DebugProp,\n  GetStyleResult,\n  GetStyleState,\n  IsMediaType,\n  MediaQueryKey,\n  PseudoPropKeys,\n  PseudoStyles,\n  RulesToInsert,\n  SpaceTokens,\n  SplitStyleProps,\n  StaticConfig,\n  StyleObject,\n  TamaguiInternalConfig,\n  TextStyle,\n  ThemeParsed,\n  ViewStyleWithPseudos,\n} from '../types'\nimport { groupCollapsed, groupEnd } from './consoleLog'\nimport { createMediaStyle } from './createMediaStyle'\nimport { fixStyles } from './expandStyles'\nimport { getCSSStylesAtomic, getStyleAtomic, styleToCSS } from './getCSSStylesAtomic'\nimport { getGroupPropParts } from './getGroupPropParts'\nimport { insertStyleRules, shouldInsertStyleRules, updateRules } from './insertStyleRule'\nimport { isActivePlatform } from './isActivePlatform'\nimport { isActiveTheme } from './isActiveTheme'\nimport { log } from './log'\nimport { normalizeValueWithProperty } from './normalizeValueWithProperty'\nimport { propMapper } from './propMapper'\nimport { pseudoDescriptors, pseudoPriorities } from './pseudoDescriptors'\nimport { skipProps } from './skipProps'\nimport { sortString } from './sortString'\nimport { transformsToString } from './transformsToString'\n\nexport type SplitStyles = ReturnType<typeof getSplitStyles>\n\nexport type SplitStyleResult = ReturnType<typeof getSplitStyles>\n\ntype TransformNamespaceKey = 'transform' | PseudoPropKeys | MediaQueryKey\n\nlet conf: TamaguiInternalConfig\n\ntype StyleSplitter = (\n  props: { [key: string]: any },\n  staticConfig: StaticConfig,\n  theme: ThemeParsed,\n  themeName: string,\n  componentState: TamaguiComponentState,\n  styleProps: SplitStyleProps,\n  parentSplitStyles?: GetStyleResult | null,\n  context?: ComponentContextI,\n  // web-only\n  elementType?: string,\n  debug?: DebugProp\n) => GetStyleResult\n\nexport const PROP_SPLIT = '-'\n\n// if you need and easier way to test performance, you can do something like this\n// add this early return somewhere in this file and you can see roughly where it slows down:\n\n// return {\n//   space,\n//   hasMedia,\n//   fontFamily: styleState.fontFamily,\n//   viewProps: {\n//     children: props.children,\n//   },\n//   style: {\n//     borderColor: props.borderColor,\n//     borderWidth: props.borderWidth,\n//     padding: props.padding,\n//   },\n//   pseudos,\n//   classNames,\n//   rulesToInsert,\n//   dynamicThemeAccess,\n// }\n\nfunction isValidStyleKey(\n  key: string,\n  validStyles: Record<string, boolean>,\n  accept?: Record<string, any>\n) {\n  return key in validStyles ? true : accept && key in accept\n}\n\nexport const getSplitStyles: StyleSplitter = (\n  props,\n  staticConfig,\n  theme,\n  themeName,\n  componentState,\n  styleProps,\n  parentSplitStyles,\n  context,\n  elementType,\n  debug\n) => {\n  conf = conf || getConfig()\n\n  // a bit icky, we need no normalize but not fully\n  if (\n    isWeb &&\n    styleProps.isAnimated &&\n    conf.animations.isReactNative &&\n    !styleProps.noNormalize\n  ) {\n    styleProps.noNormalize = 'values'\n  }\n\n  const { shorthands } = conf\n  const {\n    isHOC,\n    isText,\n    isInput,\n    variants,\n    isReactNative,\n    inlineProps,\n    inlineWhenUnflattened,\n    parentStaticConfig,\n    acceptsClassName,\n  } = staticConfig\n\n  const viewProps: GetStyleResult['viewProps'] = {}\n  const mediaState = styleProps.mediaState || globalMediaState\n  const usedKeys: Record<string, number> = {}\n  const shouldDoClasses = acceptsClassName && isWeb && !styleProps.noClass\n  const rulesToInsert: RulesToInsert =\n    process.env.TAMAGUI_TARGET === 'native' ? (undefined as any) : {}\n  const classNames: ClassNamesObject = {}\n\n  let pseudos: PseudoStyles | null = null\n  let space: SpaceTokens | null = props.space\n  let hasMedia: boolean | Set<string> = false\n  let dynamicThemeAccess: boolean | undefined\n  let pseudoGroups: Set<string> | undefined\n  let mediaGroups: Set<string> | undefined\n  let className = (props.className as string) || '' // existing classNames\n  let mediaStylesSeen = 0\n\n  const validStyles =\n    staticConfig.validStyles ||\n    (staticConfig.isText || staticConfig.isInput ? stylePropsText : validStylesView)\n\n  if (process.env.NODE_ENV === 'development' && debug === 'profile') {\n    // @ts-expect-error\n    time`split-styles-setup`\n  }\n\n  /**\n   * Not the biggest fan of creating an object but it is a nice API\n   */\n  const styleState: GetStyleState = {\n    classNames,\n    conf,\n    props,\n    styleProps,\n    componentState,\n    staticConfig,\n    style: null,\n    theme,\n    usedKeys,\n    viewProps,\n    context,\n    debug,\n  }\n\n  // only used by compiler\n  if (process.env.IS_STATIC === 'is_static') {\n    const { fallbackProps } = styleProps\n    if (fallbackProps) {\n      styleState.props = new Proxy(props, {\n        get(_, key, val) {\n          if (!Reflect.has(props, key)) {\n            return Reflect.get(fallbackProps, key)\n          }\n          return Reflect.get(props, key)\n        },\n      })\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development' && debug === 'profile') {\n    // @ts-expect-error\n    time`style-state`\n  }\n\n  if (\n    process.env.NODE_ENV === 'development' &&\n    debug &&\n    debug !== 'profile' &&\n    isClient\n  ) {\n    groupCollapsed('getSplitStyles (collapsed)')\n    log({\n      props,\n      staticConfig,\n      shouldDoClasses,\n      styleProps,\n      rulesToInsert,\n      componentState,\n      styleState,\n      theme: { ...theme },\n    })\n    groupEnd()\n  }\n\n  const { asChild } = props\n  const { accept } = staticConfig\n  const { noSkip, disableExpandShorthands, noExpand } = styleProps\n  const { webContainerType } = conf.settings\n  const parentVariants = parentStaticConfig?.variants\n\n  for (const keyOg in props) {\n    let keyInit = keyOg\n    let valInit = props[keyInit]\n\n    if (keyInit === 'children') {\n      viewProps[keyInit] = valInit\n      continue\n    }\n\n    if (process.env.NODE_ENV === 'development' && debug === 'profile') {\n      // @ts-expect-error\n      time`before-prop-${keyInit}`\n    }\n\n    if (process.env.NODE_ENV === 'test' && keyInit === 'jestAnimatedStyle') {\n      continue\n    }\n\n    // for custom accept sub-styles\n    if (accept) {\n      const accepted = accept[keyInit]\n      if (\n        (accepted === 'style' || accepted === 'textStyle') &&\n        valInit &&\n        typeof valInit === 'object'\n      ) {\n        viewProps[keyInit] = getSubStyle(styleState, keyInit, valInit, styleProps.noClass)\n        continue\n      }\n    }\n\n    if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n      // otherwise things just keep nesting - careful don't leave these around\n      // they cause big performance dips in Chrome, only use them when debug prop set\n      groupEnd()\n    }\n\n    // normalize shorthands up front\n    if (!disableExpandShorthands) {\n      if (keyInit in shorthands) {\n        keyInit = shorthands[keyInit]\n      }\n    }\n\n    if (keyInit === 'className') continue // handled above first\n    if (keyInit in usedKeys) continue\n\n    if (process.env.TAMAGUI_TARGET === 'web') {\n      // skip the webViewFlexCompatStyles when asChild on web\n      if (asChild && webViewFlexCompatStyles[keyInit] === valInit) {\n        continue\n      }\n    }\n\n    // keyInit === 'style' is handled in skipProps\n    if (keyInit in skipProps && !noSkip && !isHOC) {\n      if (keyInit === 'group') {\n        if (process.env.TAMAGUI_TARGET === 'web') {\n          // add container style\n          const identifier = `t_group_${valInit}`\n          const containerType = webContainerType || 'inline-size'\n          const containerCSS = [\n            'continer',\n            undefined,\n            identifier,\n            undefined,\n            [\n              `.${identifier} { container-name: ${valInit}; container-type: ${containerType}; }`,\n            ],\n          ] satisfies StyleObject\n          addStyleToInsertRules(rulesToInsert, containerCSS)\n        }\n      }\n      continue\n    }\n\n    const valInitType = typeof valInit\n    let isValidStyleKeyInit = isValidStyleKey(keyInit, validStyles, accept)\n\n    // this is all for partially optimized (not flattened)... maybe worth removing?\n    if (process.env.TAMAGUI_TARGET === 'web') {\n      // react-native-web ignores data-* attributes, fixes passing them to animated views\n      if (staticConfig.isReactNative && keyInit.startsWith('data-')) {\n        keyInit = keyInit.replace('data-', '')\n        viewProps['dataSet'] ||= {}\n        viewProps['dataSet'][keyInit] = valInit\n        continue\n      }\n    }\n\n    if (process.env.TAMAGUI_TARGET === 'native') {\n      if (!isValidStyleKeyInit) {\n        if (!isAndroid) {\n          // only works in android\n          if (keyInit === 'elevationAndroid') continue\n        }\n\n        // map userSelect to native prop\n        if (keyInit === 'userSelect') {\n          keyInit = 'selectable'\n          valInit = valInit !== 'none'\n        } else if (keyInit.startsWith('data-')) {\n          continue\n        }\n      }\n    }\n\n    // TODO deprecate dataSet be sure we map on native from data-\n    if (keyInit === 'dataSet') {\n      for (const keyInit in valInit) {\n        viewProps[`data-${hyphenate(keyInit)}`] = valInit[keyInit]\n      }\n      continue\n    }\n\n    if (process.env.TAMAGUI_TARGET === 'web') {\n      if (!noExpand) {\n        /**\n         * Copying in the accessibility/prop handling from react-native-web here\n         * Keeps it in a single loop, avoids dup de-structuring to avoid bundle size\n         */\n\n        if (keyInit === 'disabled' && valInit === true) {\n          viewProps['aria-disabled'] = true\n          // Enhance with native semantics\n          if (\n            elementType === 'button' ||\n            elementType === 'form' ||\n            elementType === 'input' ||\n            elementType === 'select' ||\n            elementType === 'textarea'\n          ) {\n            viewProps.disabled = true\n          }\n          if (!variants?.disabled) {\n            continue\n          }\n        }\n\n        if (keyInit === 'testID') {\n          viewProps[isReactNative ? keyInit : 'data-testid'] = valInit\n          continue\n        }\n\n        if (keyInit === 'id' || keyInit === 'nativeID') {\n          // nativeId now deprecated for RN\n          viewProps.id = valInit\n          continue\n        }\n\n        let didUseKeyInit = false\n\n        if (isReactNative) {\n          // pass along to react-native-web\n          if (keyInit in accessibilityDirectMap || keyInit.startsWith('accessibility')) {\n            viewProps[keyInit] = valInit\n            continue\n          }\n        } else {\n          didUseKeyInit = true\n\n          if (keyInit in accessibilityDirectMap) {\n            viewProps[accessibilityDirectMap[keyInit]] = valInit\n            continue\n          }\n          // TODO: remove this in the future when react native a11y API is removed\n          switch (keyInit) {\n            case 'accessibilityRole': {\n              if (valInit === 'none') {\n                viewProps.role = 'presentation'\n              } else {\n                viewProps.role = accessibilityRoleToWebRole[valInit] || valInit\n              }\n              continue\n            }\n            case 'accessibilityLabelledBy':\n            case 'accessibilityFlowTo':\n            case 'accessibilityControls':\n            case 'accessibilityDescribedBy': {\n              viewProps[`aria-${keyInit.replace('accessibility', '').toLowerCase()}`] =\n                processIDRefList(valInit)\n              continue\n            }\n            case 'accessibilityKeyShortcuts': {\n              if (Array.isArray(valInit)) {\n                viewProps['aria-keyshortcuts'] = valInit.join(' ')\n              }\n              continue\n            }\n            case 'accessibilityLiveRegion': {\n              viewProps['aria-live'] = valInit === 'none' ? 'off' : valInit\n              continue\n            }\n            case 'accessibilityReadOnly': {\n              viewProps['aria-readonly'] = valInit\n              // Enhance with native semantics\n              if (\n                elementType === 'input' ||\n                elementType === 'select' ||\n                elementType === 'textarea'\n              ) {\n                viewProps.readOnly = true\n              }\n              continue\n            }\n            case 'accessibilityRequired': {\n              viewProps['aria-required'] = valInit\n              // Enhance with native semantics\n              if (\n                elementType === 'input' ||\n                elementType === 'select' ||\n                elementType === 'textarea'\n              ) {\n                viewProps.required = valInit\n              }\n              continue\n            }\n            default: {\n              didUseKeyInit = false\n            }\n          }\n        }\n\n        if (didUseKeyInit) {\n          continue\n        }\n      }\n    }\n\n    /**\n     * There's (some) reason to this madness: we want to allow returning media/pseudo from variants\n     * Say you have a variant hoverable: { true: { hoverStyle: {} } }\n     * We run propMapper first to expand variant, then we run the inner loop and look again\n     * for if there's a pseudo/media returned from it.\n     */\n\n    let isVariant = !isValidStyleKeyInit && variants && keyInit in variants\n\n    const isStyleLikeKey = isValidStyleKeyInit || isVariant\n\n    let isPseudo = keyInit in validPseudoKeys\n    let isMedia: IsMediaType = !isStyleLikeKey && !isPseudo && isMediaKey(keyInit)\n    let isMediaOrPseudo = Boolean(isMedia || isPseudo)\n\n    if (isMediaOrPseudo && keyInit.startsWith('$group-')) {\n      const parts = keyInit.split('-')\n      if (\n        // check if its actually a simple group selector to avoid breaking selectors\n        parts.length === 2 ||\n        (parts.length === 3 && pseudoPriorities[parts[parts.length - 1]])\n      ) {\n        const name = parts[1]\n        if (context?.groups.subscribe && !context?.groups.state[name]) {\n          keyInit = keyInit.replace('$group-', `$group-true-`)\n        }\n      }\n    }\n\n    const isStyleProp = isValidStyleKeyInit || isMediaOrPseudo || (isVariant && !noExpand)\n\n    if (isStyleProp && (asChild === 'except-style' || asChild === 'except-style-web')) {\n      continue\n    }\n\n    const shouldPassProp =\n      (!isStyleProp && isHOC) ||\n      // is in parent variants\n      (isHOC && parentVariants && keyInit in parentVariants) ||\n      inlineProps?.has(keyInit)\n\n    const parentVariant = parentVariants?.[keyInit]\n    const isHOCShouldPassThrough = Boolean(\n      isHOC &&\n        (isValidStyleKeyInit || isMediaOrPseudo || parentVariant || keyInit in skipProps)\n    )\n\n    const shouldPassThrough = shouldPassProp || isHOCShouldPassThrough\n\n    if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n      groupEnd() // react native was not nesting right\n      groupEnd() // react native was not nesting right\n      groupCollapsed(\n        `  🔑 ${keyOg}${keyInit !== keyOg ? ` (shorthand for ${keyInit})` : ''} ${\n          shouldPassThrough ? '(pass)' : ''\n        }`\n      )\n      log({ isVariant, valInit, shouldPassProp })\n      if (isClient) {\n        log({\n          variants,\n          variant: variants?.[keyInit],\n          isVariant,\n          isHOCShouldPassThrough,\n          parentStaticConfig,\n        })\n      }\n    }\n\n    if (shouldPassThrough) {\n      // // TODO bring this back but probably improve it?\n      // if (isPseudo) {\n      //   // this is a lot... but we need to track sub-keys so we don't override them in future things that aren't passed down\n      //   // like our own variants that aren't in parent\n      //   const pseudoStyleObject = getSubStyle(\n      //     styleState,\n      //     keyInit,\n      //     valInit,\n      //     fontFamily,\n      //     true,\n      //     state.noClass\n      //   )\n      //   const descriptor = pseudoDescriptors[keyInit]\n      //   for (const key in pseudoStyleObject) {\n      //     debugger\n      //   }\n      // }\n\n      passDownProp(viewProps, keyInit, valInit, isMediaOrPseudo)\n\n      // if it's a variant here, we have a two layer variant...\n      // aka styled(Input, { unstyled: true, variants: { unstyled: {} } })\n      // which now has it's own unstyled + the child unstyled...\n      // so *don't* skip applying the styles if its different from the parent one\n      if (!isVariant) {\n        continue\n      }\n    }\n\n    // after shouldPassThrough\n    if (!noSkip) {\n      if (keyInit in skipProps) {\n        continue\n      }\n    }\n\n    // we sort of have to update fontFamily all the time: before variants run, after each variant\n    if (isText || isInput) {\n      if (\n        valInit &&\n        (keyInit === 'fontFamily' || keyInit === shorthands['fontFamily']) &&\n        valInit in conf.fontsParsed\n      ) {\n        styleState.fontFamily = valInit\n      }\n    }\n\n    const disablePropMap = isMediaOrPseudo || !isStyleLikeKey\n\n    propMapper(keyInit, valInit, styleState, disablePropMap, (key, val) => {\n      const isStyledContextProp =\n        styleProps.styledContextProps && key in styleProps.styledContextProps\n\n      if (!isHOC && disablePropMap && !isStyledContextProp && !isMediaOrPseudo) {\n        viewProps[key] = val\n        return\n      }\n\n      if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n        groupCollapsed('  💠 expanded', keyInit, '=>', key)\n        log(val)\n        groupEnd()\n      }\n\n      if (val == null) return\n      if (key in usedKeys) return\n\n      if (process.env.TAMAGUI_TARGET === 'native') {\n        if (key === 'pointerEvents') {\n          viewProps[key] = val\n          return\n        }\n      }\n\n      if (\n        (!isHOC && isValidStyleKey(key, validStyles, accept)) ||\n        (process.env.TAMAGUI_TARGET === 'native' && isAndroid && key === 'elevation')\n      ) {\n        mergeStyle(styleState, key, val)\n        return\n      }\n\n      isPseudo = key in validPseudoKeys\n      isMedia = !isPseudo && isMediaKey(key)\n      isMediaOrPseudo = Boolean(isMedia || isPseudo)\n      isVariant = variants && key in variants\n\n      if (\n        inlineProps?.has(key) ||\n        (process.env.IS_STATIC === 'is_static' && inlineWhenUnflattened?.has(key))\n      ) {\n        viewProps[key] = props[key] ?? val\n      }\n\n      // have to run this logic again here because expansions may need to be passed down\n      // see StyledButtonVariantPseudoMerge test\n      const shouldPassThrough =\n        (styleProps.noExpand && isPseudo) ||\n        (isHOC && (isMediaOrPseudo || parentStaticConfig?.variants?.[keyInit]))\n\n      if (shouldPassThrough) {\n        passDownProp(viewProps, key, val, isMediaOrPseudo)\n        if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n          groupCollapsed(` - passing down prop ${key}`)\n          log({ val, after: { ...viewProps[key] } })\n          groupEnd()\n        }\n        return\n      }\n\n      if (isPseudo) {\n        if (!val) return\n\n        // TODO can avoid processing this if !shouldDoClasses + state is off\n        // (note: can't because we need to set defaults on enter/exit or else enforce that they should)\n        const pseudoStyleObject = getSubStyle(\n          styleState,\n          key,\n          val,\n          styleProps.noClass && !(process.env.IS_STATIC === 'is_static')\n        )\n\n        if (!shouldDoClasses || process.env.IS_STATIC === 'is_static') {\n          pseudos ||= {}\n          pseudos[key] ||= {}\n\n          // if compiler we can just set this and continue on our way\n          if (process.env.IS_STATIC === 'is_static') {\n            Object.assign(pseudos[key], pseudoStyleObject)\n            return\n          }\n        }\n\n        const descriptor = pseudoDescriptors[key as keyof typeof pseudoDescriptors]\n        const isEnter = key === 'enterStyle'\n        const isExit = key === 'exitStyle'\n\n        // don't continue here on isEnter && !state.unmounted because we need to merge defaults\n        if (!descriptor) {\n          return\n        }\n\n        // on server only generate classes for enterStyle\n        if (shouldDoClasses && !isExit) {\n          const pseudoStyles = getStyleAtomic(pseudoStyleObject, descriptor)\n\n          if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n            console.info('pseudo:', key, pseudoStyleObject, pseudoStyles)\n          }\n\n          for (const psuedoStyle of pseudoStyles) {\n            const fullKey = `${psuedoStyle[StyleObjectProperty]}${PROP_SPLIT}${descriptor.name}`\n            if (fullKey in usedKeys) continue\n            addStyleToInsertRules(rulesToInsert, psuedoStyle)\n            classNames[fullKey] = psuedoStyle[StyleObjectIdentifier]\n          }\n        }\n\n        if (!shouldDoClasses || isExit || isEnter) {\n          // we don't skip this if disabled because we need to animate to default states that aren't even set:\n          // so if we have <Stack enterStyle={{ opacity: 0 }} />\n          // we need to animate from 0 => 1 once enter is finished\n          // see the if (isDisabled) block below which loops through animatableDefaults\n\n          const descriptorKey = descriptor.stateKey || descriptor.name\n\n          let isDisabled = componentState[descriptorKey] === false\n          if (isExit) {\n            isDisabled = !styleProps.isExiting\n          }\n          if (isEnter && componentState.unmounted === false) {\n            isDisabled = true\n          }\n\n          if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n            groupCollapsed('pseudo', key, { isDisabled })\n            log({ pseudoStyleObject, isDisabled, descriptor, componentState })\n            groupEnd()\n          }\n\n          const importance = descriptor.priority\n\n          for (const pkey in pseudoStyleObject) {\n            const val = pseudoStyleObject[pkey]\n            // when disabled ensure the default value is set for future animations to align\n\n            if (isDisabled) {\n              applyDefaultStyle(pkey, styleState)\n            } else {\n              const curImportance = usedKeys[pkey] || 0\n              const shouldMerge = importance >= curImportance\n\n              if (shouldMerge) {\n                if (process.env.IS_STATIC === 'is_static') {\n                  pseudos ||= {}\n                  pseudos[key] ||= {}\n                  pseudos[key][pkey] = val\n                }\n                mergeStyle(styleState, pkey, val)\n              }\n\n              if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n                log('    subKey', pkey, shouldMerge, {\n                  importance,\n                  curImportance,\n                  pkey,\n                  val,\n                })\n              }\n            }\n          }\n\n          // set this after the loop over pseudoStyleObject so it applies before setting usedKeys\n          if (!isDisabled) {\n            // mark usedKeys based on pseudoStyleObject\n            for (const key in val) {\n              const k = shorthands[key] || key\n              usedKeys[k] = Math.max(importance, usedKeys[k] || 0)\n            }\n          }\n        }\n\n        return\n      }\n\n      // media\n      if (isMedia) {\n        if (!val) return\n\n        // for some reason 'space' in val upsetting next ssr during prod build\n        // technically i guess this also will not apply if 0 space which makes sense?\n        const hasSpace = val['space']\n        const mediaKeyShort = key.slice(isMedia == 'theme' ? 7 : 1)\n\n        hasMedia ||= true\n\n        if (hasSpace || !shouldDoClasses || styleProps.willBeAnimated) {\n          if (!hasMedia || typeof hasMedia === 'boolean') {\n            hasMedia = new Set()\n          }\n          hasMedia.add(mediaKeyShort)\n        }\n\n        // can bail early\n        if (isMedia === 'platform') {\n          if (!isActivePlatform(key)) {\n            return\n          }\n        }\n\n        if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n          log(`  📺 ${key}`, {\n            key,\n            val,\n            props,\n            shouldDoClasses,\n            acceptsClassName,\n            componentState,\n            mediaState,\n          })\n        }\n\n        if (shouldDoClasses) {\n          const mediaStyle = getSubStyle(styleState, key, val, false)\n\n          if (hasSpace) {\n            delete mediaStyle['space']\n            // TODO group/theme/platform + space support (or just make it official not supported in favor of gap)\n            if (mediaState[mediaKeyShort]) {\n              const importance = getMediaImportanceIfMoreImportant(\n                mediaKeyShort,\n                'space',\n                usedKeys,\n                true\n              )\n              if (importance) {\n                space = val['space']\n                usedKeys['space'] = importance\n                if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n                  log(\n                    `Found more important space for current media ${mediaKeyShort}: ${val} (importance: ${importance})`\n                  )\n                }\n              }\n            }\n          }\n\n          const mediaStyles = getCSSStylesAtomic(mediaStyle)\n          const priority = mediaStylesSeen\n          mediaStylesSeen += 1\n\n          for (const style of mediaStyles) {\n            // handle nested media:\n            // for now we're doing weird stuff, getCSSStylesAtomic will put the\n            // $platform-web into property so we can check it here\n            const property = style[StyleObjectProperty]\n            const isSubStyle = property[0] === '$'\n            if (isSubStyle && !isActivePlatform(property)) {\n              continue\n            }\n\n            const out = createMediaStyle(\n              style,\n              mediaKeyShort,\n              mediaQueryConfig,\n              isMedia,\n              false,\n              priority\n            )\n            if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n              log(`📺 media style:`, out)\n            }\n            // this is imperfect it should be fixed fruther down, we mess up property when dealing with\n            // media-sub-style, like $sm={{ $platform-web: {} }}\n            // property is just $platform-web, it should br $platform-web-bg, so we add extra info from style\n            // but that info includes the value too\n            const subKey = isSubStyle ? style[2] : ''\n            const fullKey = `${style[StyleObjectProperty]}${subKey}${PROP_SPLIT}${mediaKeyShort}${\n              style[StyleObjectPseudo] || ''\n            }`\n\n            if (fullKey in usedKeys) continue\n            addStyleToInsertRules(rulesToInsert, out as any)\n            classNames[fullKey] = out[StyleObjectIdentifier]\n          }\n        } else {\n          const isThemeMedia = isMedia === 'theme'\n          const isGroupMedia = isMedia === 'group'\n          const isPlatformMedia = isMedia === 'platform'\n\n          if (!isThemeMedia && !isPlatformMedia && !isGroupMedia) {\n            if (!mediaState[mediaKeyShort]) {\n              if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n                log(`  📺 ❌ DISABLED ${mediaKeyShort}`)\n              }\n              return\n            }\n            if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n              log(`  📺 ✅ ENABLED ${mediaKeyShort}`)\n            }\n          }\n\n          const mediaStyle = getSubStyle(styleState, key, val, true)\n\n          let importanceBump = 0\n\n          if (isThemeMedia) {\n            // needed to get updates when theme changes\n            dynamicThemeAccess = true\n\n            if (!(themeName === mediaKeyShort || themeName.startsWith(mediaKeyShort))) {\n              return\n            }\n          } else if (isGroupMedia) {\n            const groupInfo = getGroupPropParts(mediaKeyShort)\n            const groupName = groupInfo.name\n\n            // $group-x\n            const groupContext = context?.groups.state[groupName]\n\n            if (!groupContext) {\n              if (process.env.NODE_ENV === 'development' && debug) {\n                log(`No parent with group prop, skipping styles: ${groupName}`)\n              }\n              return\n            }\n\n            const groupPseudoKey = groupInfo.pseudo\n            const groupMediaKey = groupInfo.media\n            const componentGroupState = componentState.group?.[groupName]\n\n            if (groupMediaKey) {\n              mediaGroups ||= new Set()\n              mediaGroups.add(groupMediaKey)\n              const mediaState = componentGroupState?.media\n              let isActive = mediaState?.[groupMediaKey]\n\n              // use parent styles if width and height hardcoded we can do an inline media match and avoid double render\n              if (!mediaState && groupContext.layout) {\n                isActive = mediaKeyMatch(groupMediaKey, groupContext.layout)\n              }\n\n              if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n                log(` 🏘️ GROUP media ${groupMediaKey} active? ${isActive}`)\n              }\n              if (!isActive) {\n                // ensure we set the defaults so animations work\n                for (const pkey in mediaStyle) {\n                  applyDefaultStyle(pkey, styleState)\n                }\n\n                return\n              }\n              importanceBump = 2\n            }\n\n            if (groupPseudoKey) {\n              pseudoGroups ||= new Set()\n              pseudoGroups.add(groupName)\n              const componentGroupPseudoState = (\n                componentGroupState ||\n                // fallback to context initially\n                context.groups.state[groupName]\n              ).pseudo\n\n              const isActive = componentGroupPseudoState?.[groupPseudoKey]\n              const priority = pseudoPriorities[groupPseudoKey]\n\n              if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n                log(\n                  ` 🏘️ GROUP pseudo ${groupMediaKey} active? ${isActive}, priority ${priority}`\n                )\n              }\n              if (!isActive) {\n                // ensure we set the defaults so animations work\n                for (const pkey in mediaStyle) {\n                  applyDefaultStyle(pkey, styleState)\n                }\n\n                return\n              }\n              importanceBump = priority\n            }\n          }\n\n          function mergeMediaStyle(key: string, val: any) {\n            styleState.style ||= {}\n            const didMerge = mergeMediaByImportance(\n              styleState,\n              mediaKeyShort,\n              key,\n              val,\n              usedKeys,\n              mediaState[mediaKeyShort],\n              importanceBump,\n              debug\n            )\n            if (didMerge && key === 'fontFamily') {\n              styleState.fontFamily = mediaStyle.fontFamily as string\n            }\n          }\n\n          for (const subKey in mediaStyle) {\n            if (subKey === 'space') {\n              space = valInit.space\n              continue\n            }\n            if (subKey[0] === '$') {\n              if (!isActivePlatform(subKey)) continue\n              if (!isActiveTheme(subKey, themeName)) continue\n              for (const subSubKey in mediaStyle[subKey]) {\n                mergeMediaStyle(subSubKey, mediaStyle[subKey][subSubKey])\n              }\n            } else {\n              mergeMediaStyle(subKey, mediaStyle[subKey])\n            }\n          }\n        }\n\n        return // end media\n      }\n\n      // pass to view props\n      if (!isVariant) {\n        if (isStyledContextProp) {\n          return\n        }\n\n        viewProps[key] = val\n      }\n    })\n\n    if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n      try {\n        log(` ✔️ expand complete`, keyInit)\n        log('style', { ...styleState.style })\n        log('viewProps', { ...viewProps })\n      } catch {\n        // RN can run into PayloadTooLargeError: request entity too large\n      }\n      groupEnd()\n    }\n  } // end prop loop\n\n  if (process.env.NODE_ENV === 'development' && debug === 'profile') {\n    // @ts-expect-error\n    time`split-styles-propsend`\n  }\n\n  // style prop after:\n\n  const avoidNormalize = styleProps.noNormalize === false\n\n  if (!avoidNormalize) {\n    if (styleState.style) {\n      fixStyles(styleState.style)\n\n      if (!styleProps.noExpand && !styleProps.noMergeStyle) {\n        // shouldn't this be better? but breaks some tests weirdly, need to check\n        if (isWeb && !isReactNative) {\n          styleToCSS(styleState.style)\n        }\n      }\n    }\n\n    // these are only the flat transforms\n    // always do this at the very end to preserve the order strictly (animations, origin)\n    // and allow proper merging of all pseudos before applying\n    if (styleState.flatTransforms) {\n      // we need to match the order for animations to work because it needs consistent order\n      // was thinking of having something like `state.prevTransformsOrder = ['y', 'x', ...]\n      // but if we just handle it here its not a big cost and avoids having stateful things\n      // so the strategy is: always sort by a consistent order, until you run into a \"duplicate\"\n      // because you can have something like:\n      //   [{ translateX: 0 }, { scale: 1 }, { translateX: 10 }]\n      // so basically we sort until we get to a duplicate... we could sort even smarter but\n      // this should work for most (all?) of our cases since the order preservation really only needs to apply\n      // to the \"flat\" transform props\n      styleState.style ||= {}\n      mergeFlatTransforms(styleState.style, styleState.flatTransforms)\n    }\n\n    // add in defaults if not set:\n    if (parentSplitStyles) {\n      if (process.env.TAMAGUI_TARGET === 'web') {\n        if (shouldDoClasses) {\n          for (const key in parentSplitStyles.classNames) {\n            const val = parentSplitStyles.classNames[key]\n            if ((styleState.style && key in styleState.style) || key in classNames)\n              continue\n            classNames[key] = val\n          }\n        }\n      }\n      if (!shouldDoClasses) {\n        for (const key in parentSplitStyles.style) {\n          if (key in classNames || (styleState.style && key in styleState.style)) continue\n          styleState.style ||= {}\n          styleState.style[key] = parentSplitStyles.style[key]\n        }\n      }\n    }\n  }\n\n  // Button for example uses disableClassName: true but renders to a 'button' element, so needs this\n  if (process.env.TAMAGUI_TARGET === 'web') {\n    const shouldStringifyTransforms =\n      !styleProps.noNormalize &&\n      !staticConfig.isReactNative &&\n      !staticConfig.isHOC &&\n      (!styleProps.isAnimated || conf.animations.supportsCSSVars)\n    if (shouldStringifyTransforms && Array.isArray(styleState.style?.transform)) {\n      styleState.style.transform = transformsToString(styleState.style!.transform) as any\n    }\n  }\n\n  if (process.env.TAMAGUI_TARGET === 'web') {\n    if (!styleProps.noMergeStyle && styleState.style && shouldDoClasses) {\n      let retainedStyles: ViewStyleWithPseudos | undefined\n      let shouldRetain = false\n\n      if (styleState.style['$$css']) {\n        // avoid re-processing for rnw\n      } else {\n        const atomic = getCSSStylesAtomic(styleState.style)\n\n        for (const atomicStyle of atomic) {\n          const [key, value, identifier] = atomicStyle\n          const isAnimatedAndAnimateOnly =\n            styleProps.isAnimated &&\n            styleProps.noClass &&\n            props.animateOnly?.includes(key)\n\n          // or not animated but you have animateOnly\n          // (moves it to style={}, nice to avoid generating lots of classnames)\n          const nonAnimatedAnimateOnly =\n            !isAnimatedAndAnimateOnly &&\n            !styleProps.isAnimated &&\n            props.animateOnly?.includes(key)\n\n          if (isAnimatedAndAnimateOnly) {\n            retainedStyles ||= {}\n            retainedStyles[key] = styleState.style[key]\n          } else if (nonAnimatedAnimateOnly) {\n            retainedStyles ||= {}\n            retainedStyles[key] = value\n            shouldRetain = true\n          } else {\n            addStyleToInsertRules(rulesToInsert, atomicStyle)\n            classNames[key] = identifier\n          }\n        }\n\n        if (process.env.NODE_ENV === 'development' && props.debug === 'verbose') {\n          groupEnd() // ensure group ended from loop above\n          groupCollapsed(`🔹 getSplitStyles final style object`)\n          console.info(styleState.style)\n          console.info(`retainedStyles`, retainedStyles)\n          groupEnd()\n        }\n\n        if (shouldRetain || !(process.env.IS_STATIC === 'is_static')) {\n          styleState.style = retainedStyles || {}\n        }\n      }\n    }\n\n    if (isReactNative) {\n      if (viewProps.tabIndex === 0) {\n        viewProps.accessible ??= true\n      }\n    } else {\n      if (viewProps.tabIndex == null) {\n        const isFocusable = viewProps.focusable ?? viewProps.accessible\n\n        if (viewProps.focusable) {\n          delete viewProps.focusable\n        }\n\n        const role = viewProps.role\n        if (isFocusable === false) {\n          viewProps.tabIndex = '-1'\n        }\n        if (\n          // These native elements are focusable by default\n          elementType === 'a' ||\n          elementType === 'button' ||\n          elementType === 'input' ||\n          elementType === 'select' ||\n          elementType === 'textarea'\n        ) {\n          if (isFocusable === false || props.accessibilityDisabled === true) {\n            viewProps.tabIndex = '-1'\n          }\n        } else if (\n          // These roles are made focusable by default\n          role === 'button' ||\n          role === 'checkbox' ||\n          role === 'link' ||\n          role === 'radio' ||\n          // @ts-expect-error (consistent with RNW)\n          role === 'textbox' ||\n          role === 'switch'\n        ) {\n          if (isFocusable !== false) {\n            viewProps.tabIndex = '0'\n          }\n        }\n        // Everything else must explicitly set the prop\n        if (isFocusable) {\n          viewProps.tabIndex = '0'\n          delete viewProps.focusable\n        }\n      }\n    }\n  }\n\n  // merge after the prop loop - and always keep it on style dont turn into className except if RN gives us\n  const styleProp = props.style\n\n  if (!styleProps.noMergeStyle && styleProp) {\n    if (isHOC) {\n      viewProps.style = normalizeStyle(styleProp)\n    } else {\n      const isArray = Array.isArray(styleProp)\n      const len = isArray ? styleProp.length : 1\n      for (let i = 0; i < len; i++) {\n        const style = isArray ? styleProp[i] : styleProp\n        if (style) {\n          if (style['$$css']) {\n            Object.assign(styleState.classNames, style)\n          } else {\n            styleState.style ||= {}\n            Object.assign(styleState.style, normalizeStyle(style))\n          }\n        }\n      }\n    }\n  }\n\n  // native: swap out the right family based on weight/style\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    const style = styleState.style\n    if (style?.fontFamily) {\n      const faceInfo = getFont(style.fontFamily as string)?.face\n      if (faceInfo) {\n        const overrideFace =\n          faceInfo[style.fontWeight as string]?.[style.fontStyle || 'normal']?.val\n        if (overrideFace) {\n          style.fontFamily = overrideFace\n          styleState.fontFamily = overrideFace\n          // If we pass both font family (e.g. InterBold) and a font weight (e.g. 900), android gets confused and just shows the default font, so we remove these:\n          delete style.fontWeight\n          delete style.fontStyle\n        }\n      }\n      if (process.env.NODE_ENV === 'development' && debug && debug !== 'profile') {\n        log(`Found fontFamily native: ${style.fontFamily}`, faceInfo)\n      }\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development' && debug === 'profile') {\n    // @ts-expect-error\n    time`split-styles-pre-result`\n  }\n\n  const result: GetStyleResult = {\n    space,\n    hasMedia,\n    fontFamily: styleState.fontFamily,\n    viewProps,\n    style: styleState.style as any,\n    pseudos,\n    classNames,\n    rulesToInsert,\n    dynamicThemeAccess,\n    pseudoGroups,\n    mediaGroups,\n  }\n\n  const asChildExceptStyleLike =\n    asChild === 'except-style' || asChild === 'except-style-web'\n\n  if (!styleProps.noMergeStyle) {\n    if (!asChildExceptStyleLike) {\n      const style = styleState.style\n\n      if (process.env.TAMAGUI_TARGET === 'web') {\n        // merge className and style back into viewProps:\n        let fontFamily =\n          isText || isInput\n            ? styleState.fontFamily || staticConfig.defaultProps?.fontFamily\n            : null\n        if (fontFamily && fontFamily[0] === '$') {\n          fontFamily = fontFamily.slice(1)\n        }\n        const fontFamilyClassName = fontFamily ? `font_${fontFamily}` : ''\n        const groupClassName = props.group ? `t_group_${props.group}` : ''\n        const componentNameFinal = props.componentName || staticConfig.componentName\n        const componentClassName =\n          props.asChild || !componentNameFinal ? '' : `is_${componentNameFinal}`\n\n        let classList: string[] = []\n        if (componentClassName) classList.push(componentClassName)\n        if (fontFamilyClassName) classList.push(fontFamilyClassName)\n        if (classNames) classList.push(Object.values(classNames).join(' '))\n        if (groupClassName) classList.push(groupClassName)\n        if (props.className) classList.push(props.className)\n        const finalClassName = classList.join(' ')\n\n        if (styleProps.isAnimated && !conf.animations.supportsCSSVars && isReactNative) {\n          if (style) {\n            viewProps.style = style as any\n          }\n        } else if (isReactNative) {\n          const cnStyles = { $$css: true }\n          for (const name of finalClassName.split(' ')) {\n            cnStyles[name] = name\n          }\n          viewProps.style = [...(Array.isArray(style) ? style : [style]), cnStyles]\n        } else {\n          if (finalClassName) {\n            viewProps.className = finalClassName\n          }\n          if (style) {\n            viewProps.style = style as any\n          }\n        }\n      } else {\n        if (style) {\n          // native assign styles\n          viewProps.style = style as any\n        }\n      }\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n    if (isDevTools) {\n      groupCollapsed('🔹 getSplitStyles ===>')\n      try {\n        // prettier-ignore\n        const logs = {\n          ...result,\n          className,\n          componentState,\n          viewProps,\n          rulesToInsert,\n          parentSplitStyles,\n        }\n        for (const key in logs) {\n          log(key, logs[key])\n        }\n      } catch {\n        // RN can run into PayloadTooLargeError: request entity too large\n      }\n      groupEnd()\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development' && debug === 'profile') {\n    // @ts-expect-error\n    time`split-styles-done`\n  }\n\n  return result\n}\n\nfunction mergeFlatTransforms(target: TextStyle, flatTransforms: Record<string, any>) {\n  Object.entries(flatTransforms)\n    .sort(([a], [b]) => sortString(a, b))\n    .forEach(([key, val]) => {\n      mergeTransform(target, key, val, true)\n    })\n}\n\nfunction mergeStyle(\n  styleState: GetStyleState,\n  key: string,\n  val: any,\n  disableNormalize = false\n) {\n  const { viewProps, styleProps, staticConfig } = styleState\n  if (key in stylePropsTransform) {\n    styleState.flatTransforms ||= {}\n    styleState.flatTransforms[key] = val\n  } else {\n    const shouldNormalize = isWeb && !disableNormalize && !styleProps.noNormalize\n    const out = shouldNormalize ? normalizeValueWithProperty(val, key) : val\n    if (\n      // accept is for props not styles\n      staticConfig.accept &&\n      key in staticConfig.accept\n    ) {\n      viewProps[key] = out\n    } else {\n      styleState.style ||= {}\n      styleState.style[key] =\n        // if you dont do this you'll be passing props.transform arrays directly here and then mutating them\n        // if theres any flatTransforms later, causing issues (mutating props is bad, in strict mode styles get borked)\n        key === 'transform' && Array.isArray(out) ? [...out] : out\n    }\n  }\n}\n\nexport const getSubStyle = (\n  styleState: GetStyleState,\n  subKey: string,\n  styleIn: Object,\n  avoidMergeTransform?: boolean\n): TextStyle => {\n  const { staticConfig, conf, styleProps } = styleState\n  const styleOut: TextStyle = {}\n\n  for (let key in styleIn) {\n    const val = styleIn[key]\n    key = conf.shorthands[key] || key\n\n    const shouldSkip = !staticConfig.isHOC && key in skipProps && !styleProps.noSkip\n    if (shouldSkip) {\n      continue\n    }\n\n    propMapper(key, val, styleState, false, (skey, sval) => {\n      // pseudo inside media\n      if (skey in validPseudoKeys) {\n        sval = getSubStyle(styleState, skey, sval, avoidMergeTransform)\n      }\n      if (!avoidMergeTransform && skey in stylePropsTransform) {\n        mergeTransform(styleOut, skey, sval)\n      } else {\n        styleOut[skey] = styleProps.noNormalize\n          ? sval\n          : normalizeValueWithProperty(sval, key)\n      }\n    })\n  }\n\n  if (!avoidMergeTransform) {\n    if (Array.isArray(styleOut.transform)) {\n      const parentTransform = styleState.style?.transform\n      if (parentTransform) {\n        styleOut.transform = [...parentTransform, ...styleOut.transform]\n      }\n    }\n    if (styleState.flatTransforms) {\n      mergeFlatTransforms(styleOut, styleState.flatTransforms)\n    }\n  }\n\n  if (!styleProps.noNormalize) {\n    fixStyles(styleOut)\n  }\n\n  return styleOut\n}\n\n// on native no need to insert any css\nconst useInsertEffectCompat = isWeb\n  ? React.useInsertionEffect || useIsomorphicLayoutEffect\n  : () => {}\n\n// perf: ...args a bit expensive on native\nexport const useSplitStyles: StyleSplitter = (a, b, c, d, e, f, g, h, i, j) => {\n  conf = conf || getConfig()\n  const res = getSplitStyles(a, b, c, d, e, f, g, h, i, j)\n\n  if (process.env.TAMAGUI_TARGET !== 'native') {\n    if (!process.env.TAMAGUI_REACT_19) {\n      useInsertEffectCompat(() => {\n        insertStyleRules(res.rulesToInsert)\n      }, [res.rulesToInsert])\n    }\n  }\n\n  return res\n}\n\nfunction addStyleToInsertRules(rulesToInsert: RulesToInsert, styleObject: StyleObject) {\n  // if (process.env.NODE_ENV === 'development') {\n  //   if (rulesToInsert[styleObject[2]!]) {\n  //     console.log('already have this style rule to insert?', styleObject, rulesToInsert)\n  //   }\n  // }\n  if (process.env.TAMAGUI_TARGET === 'web') {\n    const identifier = styleObject[StyleObjectIdentifier]\n    if (!process.env.TAMAGUI_REACT_19) {\n      if (shouldInsertStyleRules(identifier)) {\n        updateRules(identifier, styleObject[StyleObjectRules])\n      }\n    }\n    rulesToInsert[identifier] = styleObject\n  }\n}\n\nfunction processIDRefList(idRefList: string | Array<string>): string {\n  return Array.isArray(idRefList) ? idRefList.join(' ') : idRefList\n}\n\nconst defaultColor = process.env.TAMAGUI_DEFAULT_COLOR || 'rgba(0,0,0,0)'\nconst animatableDefaults = {\n  ...Object.fromEntries(\n    Object.entries(tokenCategories.color).map(([k, v]) => [k, defaultColor])\n  ),\n  opacity: 1,\n  scale: 1,\n  rotate: '0deg',\n  rotateY: '0deg',\n  rotateX: '0deg',\n  x: 0,\n  y: 0,\n  borderRadius: 0,\n}\n\nconst lowercaseHyphenate = (match: string) => `-${match.toLowerCase()}`\nconst hyphenate = (str: string) => str.replace(/[A-Z]/g, lowercaseHyphenate)\n\nconst mergeTransform = (obj: TextStyle, key: string, val: any, backwards = false) => {\n  if (typeof obj.transform === 'string') {\n    return\n  }\n  obj.transform ||= []\n  obj.transform[backwards ? 'unshift' : 'push']({\n    [mapTransformKeys[key] || key]: val,\n  } as any)\n}\n\nconst mapTransformKeys = {\n  x: 'translateX',\n  y: 'translateY',\n}\n\nconst accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  header: 'heading',\n  image: 'img',\n  link: 'link',\n  none: 'presentation',\n  summary: 'region',\n}\n\nfunction passDownProp(\n  viewProps: Object,\n  key: string,\n  val: any,\n  shouldMergeObject = false\n) {\n  if (shouldMergeObject) {\n    const next = {\n      ...viewProps[key],\n      ...val,\n    }\n    // need to re-insert it at current position\n    delete viewProps[key]\n    viewProps[key] = next\n  } else {\n    viewProps[key] = val\n  }\n}\n\nfunction mergeMediaByImportance(\n  styleState: GetStyleState,\n  mediaKey: string,\n  key: string,\n  value: any,\n  importancesUsed: Record<string, number>,\n  isSizeMedia: boolean,\n  importanceBump?: number,\n  debugProp?: DebugProp\n) {\n  let importance = getMediaImportanceIfMoreImportant(\n    mediaKey,\n    key,\n    importancesUsed,\n    isSizeMedia\n  )\n  if (importanceBump) {\n    importance = (importance || 0) + importanceBump\n  }\n  if (process.env.NODE_ENV === 'development' && debugProp === 'verbose') {\n    log(\n      `mergeMediaByImportance ${key} importance existing ${importancesUsed[key]} next ${importance}`\n    )\n  }\n  if (importance === null) {\n    return false\n  }\n  importancesUsed[key] = importance\n\n  if (key in pseudoDescriptors) {\n    const descriptor = pseudoDescriptors[key]\n    const descriptorKey = descriptor.stateKey || descriptor.name\n    const isDisabled = styleState.componentState[descriptorKey] === false\n    if (isDisabled) {\n      return false\n    }\n    for (const subKey in value) {\n      mergeStyle(styleState, subKey, value[subKey])\n    }\n  } else {\n    mergeStyle(styleState, key, value)\n  }\n\n  return true\n}\n\nfunction normalizeStyle(style: any) {\n  const out: Record<string, any> = {}\n  for (const key in style) {\n    const val = style[key]\n    if (key in stylePropsTransform) {\n      mergeTransform(out, key, val)\n    } else {\n      out[key] = normalizeValueWithProperty(val, key)\n    }\n  }\n  if (isWeb && Array.isArray(out.transform)) {\n    out.transform = transformsToString(out.transform)\n  }\n  fixStyles(out)\n  return out\n}\n\nfunction applyDefaultStyle(pkey: string, styleState: GetStyleState) {\n  const defaultValues = animatableDefaults[pkey]\n  if (\n    defaultValues != null &&\n    !(pkey in styleState.usedKeys) &&\n    (!styleState.style || !(pkey in styleState.style))\n  ) {\n    mergeStyle(styleState, pkey, defaultValues)\n  }\n}\n", "// web only maps accessibility to aria props\nexport const accessibilityDirectMap: Record<string, string> = {}\n\nif (process.env.TAMAGUI_TARGET === 'web') {\n  // bundle size shave\n  const items = {\n    Hidden: true,\n    ActiveDescendant: true,\n    Atomic: true,\n    AutoComplete: true,\n    Busy: true,\n    Checked: true,\n    ColumnCount: 'colcount',\n    ColumnIndex: 'colindex',\n    ColumnSpan: 'colspan',\n    Current: true,\n    Details: true,\n    ErrorMessage: true,\n    Expanded: true,\n    HasPopup: true,\n    Invalid: true,\n    Label: true,\n    Level: true,\n    Modal: true,\n    Multiline: true,\n    MultiSelectable: true,\n    Orientation: true,\n    Owns: true,\n    Placeholder: true,\n    PosInSet: true,\n    Pressed: true,\n    RoleDescription: true,\n    RowCount: true,\n    RowIndex: true,\n    RowSpan: true,\n    Selected: true,\n    SetSize: true,\n    Sort: true,\n    ValueMax: true,\n    ValueMin: true,\n    ValueNow: true,\n    ValueText: true,\n  }\n  for (const key in items) {\n    let val = items[key]\n    if (val === true) {\n      val = key.toLowerCase()\n    }\n    accessibilityDirectMap[`accessibility${key}`] = `aria-${val}`\n  }\n}\n\nexport const webToNativeAccessibilityDirectMap = null as unknown as Record<string, string>\nexport const nativeAccessibilityValue = null as unknown as Record<string, string>\n\nexport const nativeAccessibilityState = null as unknown as Record<string, string>\nexport const accessibilityWebRoleToNativeRole = null as unknown as Record<string, string>\n", "import { getMedia } from '../hooks/useMedia'\n\nexport type GroupParts = { name: string; pseudo?: string; media?: string }\n\nexport function getGroupPropParts(groupProp: string): GroupParts {\n  const mediaQueries = getMedia()\n  const [_, name, part3, part4] = groupProp.split('-')\n  let pseudo:\n    | 'focus'\n    | 'press'\n    | 'hover'\n    | 'focus-visible'\n    | 'focus-within'\n    | 'disabled'\n    | undefined\n  const media = part3 in mediaQueries ? part3 : undefined\n  if (!media) {\n    pseudo = part3 as any\n  } else {\n    pseudo = part4 as any\n  }\n  return { name, pseudo, media }\n}\n", "import { getSetting } from '../config'\nimport { mediaObjectToString } from '../hooks/useMedia'\nimport type { IsMediaType, MediaQueries, MediaStyleObject, StyleObject } from '../types'\nimport { getGroupPropParts, type GroupParts } from './getGroupPropParts'\n\n// TODO have this be used by extractMediaStyle in tamagui static\n// not synced to static/constants for now\nexport const MEDIA_SEP = '_'\n\nlet prefixes: Record<string, string> | null = null\nlet selectors: Record<string, string> | null = null\n\nconst groupPseudoToPseudoCSSMap = {\n  press: 'active',\n  focusVisible: 'focus-visible',\n  focusWithin: 'focus-within',\n}\n\nconst specificities = new Array(5)\n  .fill(0)\n  .map((_, i) => new Array(i).fill(':root').join(''))\n\nfunction getThemeOrGroupSelector(\n  name: string,\n  styleInner: string,\n  isGroup: boolean,\n  groupParts: GroupParts,\n  isTheme = false,\n  precedenceImportancePrefix = ''\n) {\n  const selectorStart = styleInner.lastIndexOf(':root') + 5\n  const selectorEnd = styleInner.lastIndexOf('{')\n  const selector = styleInner.slice(selectorStart, selectorEnd)\n  const precedenceSpace = getSetting('themeClassNameOnRoot') && isTheme ? '' : ' '\n  const pseudoSelectorName = groupParts.pseudo\n    ? groupPseudoToPseudoCSSMap[groupParts.pseudo] || groupParts.pseudo\n    : undefined\n\n  const pseudoSelector = pseudoSelectorName ? `:${pseudoSelectorName}` : ''\n  const presedencePrefix = `:root${precedenceImportancePrefix}${precedenceSpace}`\n  const mediaSelector = `.t_${isGroup ? 'group_' : ''}${name}${pseudoSelector}`\n  return [\n    selector,\n    `${presedencePrefix}${mediaSelector} ${selector.replaceAll(':root', '')}`,\n  ] as const\n}\n\nexport const createMediaStyle = (\n  styleObject: StyleObject,\n  mediaKeyIn: string,\n  mediaQueries: MediaQueries,\n  type: IsMediaType,\n  negate?: boolean,\n  priority?: number\n): MediaStyleObject => {\n  const [propertyIn, , identifier, pseudoIn, rules] = styleObject\n  let property = propertyIn\n  const enableMediaPropOrder = getSetting('mediaPropOrder')\n  const isTheme = type === 'theme'\n  const isPlatform = type === 'platform'\n  const isGroup = type === 'group'\n  const isNonWindowMedia = isTheme || isPlatform || isGroup\n  const negKey = negate ? '0' : ''\n  const ogPrefix = identifier.slice(0, identifier.indexOf('-') + 1)\n  const id = `${ogPrefix}${MEDIA_SEP}${mediaKeyIn.replace('-', '')}${negKey}${MEDIA_SEP}`\n\n  let styleRule = ''\n  let groupPriority = ''\n  let groupMediaKey: string | undefined\n  let containerName: string | undefined\n  let nextIdentifier = identifier.replace(ogPrefix, id)\n  let styleInner = rules.map((rule) => rule.replace(identifier, nextIdentifier)).join(';')\n  let isHover = false\n\n  if (isNonWindowMedia) {\n    let specificity = (priority || 0) + (isGroup || isPlatform ? 1 : 0)\n\n    if (isTheme || isGroup) {\n      const groupParts = getGroupPropParts(isTheme ? 'theme-' + mediaKeyIn : mediaKeyIn)\n      const { name, media, pseudo } = groupParts\n      groupMediaKey = media\n      if (isGroup) {\n        containerName = name\n      }\n      if (pseudo === 'press' || pseudoIn === 'active') {\n        specificity += 2\n      }\n      if (pseudo === 'hover') {\n        isHover = true\n      }\n      const [selector, nextSelector] = getThemeOrGroupSelector(\n        name,\n        styleInner,\n        isGroup,\n        groupParts,\n        isTheme,\n        specificities[specificity]\n      )\n      // const selectors = `${nextSelector}, :root${nextSelector}`\n      // add back in the { we used to split\n      styleRule = styleInner.replace(selector, nextSelector)\n    } else {\n      styleRule = `${specificities[specificity]}${styleInner}`\n    }\n  }\n\n  if (!isNonWindowMedia || groupMediaKey) {\n    // one time cost:\n    // TODO MOVE THIS INTO SETUP AREA AND EXPORT IT\n    if (!selectors) {\n      const mediaKeys = Object.keys(mediaQueries)\n      selectors = Object.fromEntries(\n        mediaKeys.map((key) => [key, mediaObjectToString(mediaQueries[key])])\n      )\n      if (!enableMediaPropOrder) {\n        prefixes = Object.fromEntries(\n          mediaKeys.map((k, index) => [k, new Array(index + 1).fill(':root').join('')])\n        )\n      }\n    }\n\n    const mediaKey = groupMediaKey || mediaKeyIn\n    const mediaSelector = selectors[mediaKey]\n    const screenStr = negate ? 'not all and ' : ''\n    const mediaQuery = `${screenStr}${mediaSelector}`\n    const precedenceImportancePrefix = groupMediaKey\n      ? groupPriority\n      : enableMediaPropOrder && priority\n        ? // this new array should be cached\n          specificities[priority]\n        : // @ts-ignore\n          prefixes[mediaKey]\n    const prefix = groupMediaKey ? `@container ${containerName}` : '@media'\n\n    if (groupMediaKey) {\n      styleInner = styleRule\n    }\n\n    // combines media queries if they already exist\n    if (styleInner.includes(prefix)) {\n      // combine\n      styleRule = styleInner\n        .replace('{', ` and ${mediaQuery} {`)\n        // temp bugfix can be better done\n        .replace(`and screen and`, `and`)\n    } else {\n      styleRule = `${prefix} ${mediaQuery}{${precedenceImportancePrefix}${styleInner}}`\n    }\n\n    // add @supports for legacy browser support to not break container queries\n    if (groupMediaKey) {\n      styleRule = `@supports (contain: ${\n        getSetting('webContainerType') || 'inline-size'\n      }) {${styleRule}}`\n    }\n  }\n\n  if (isHover) {\n    styleRule = `@media (hover:hover){${styleRule}}`\n  }\n\n  return [property, undefined, nextIdentifier, undefined, [styleRule]]\n}\n", "import { defaultOffset } from './defaultOffset'\nimport { getRgba, normalizeColor } from './normalizeColor'\n\nexport function normalizeShadow({\n  shadowColor,\n  shadowOffset,\n  shadowOpacity,\n  shadowRadius,\n}: Record<string, any>) {\n  const { height, width } = shadowOffset || defaultOffset\n  return {\n    shadowOffset: {\n      width: width || 0,\n      height: height || 0,\n    },\n    shadowRadius: shadowRadius || 0,\n    shadowColor: normalizeColor(shadowColor, 1),\n    shadowOpacity: shadowOpacity ?? (shadowColor ? getRgba(shadowColor)?.a : 1),\n  }\n}\n", "import { isWeb } from '@tamagui/constants'\nimport { normalizeShadow } from './normalizeShadow'\n\nexport function fixStyles(style: Record<string, any>) {\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    if ('elevationAndroid' in style) {\n      // @ts-ignore\n      style['elevation'] = style.elevationAndroid\n      // @ts-ignore\n      delete style.elevationAndroid\n    }\n  }\n\n  // TODO deprecate for web-style shadows\n  if (\n    style.shadowRadius != null ||\n    style.shadowColor ||\n    style.shadowOpacity != null ||\n    style.shadowOffset\n  ) {\n    Object.assign(style, normalizeShadow(style))\n  }\n\n  // could be optimized better\n  // ensure border style set by default to solid\n  for (const key in borderDefaults) {\n    if (key in style) {\n      style[borderDefaults[key]] ||= 'solid'\n    }\n  }\n}\n\n// native doesn't support specific border edge style\nconst nativeStyle = isWeb ? null : 'borderStyle'\nconst borderDefaults = {\n  borderWidth: 'borderStyle',\n  borderBottomWidth: nativeStyle || 'borderBottomStyle',\n  borderTopWidth: nativeStyle || 'borderTopStyle',\n  borderLeftWidth: nativeStyle || 'borderLeftStyle',\n  borderRightWidth: nativeStyle || 'borderRightStyle',\n  // TODO: need to add borderBlock and borderInline here, but they are alot and might impact performance\n}\n", "import { isClient } from '@tamagui/constants'\nimport { StyleObjectIdentifier, StyleObjectRules } from '@tamagui/helpers'\nimport { createVariable } from '../createVariable'\nimport type {\n  DedupedTheme,\n  DedupedThemes,\n  RulesToInsert,\n  ThemeParsed,\n  TokensParsed,\n} from '../types'\n\n// only cache tamagui styles\n// TODO merge totalSelectorsInserted and allSelectors?\nconst scannedCache = new WeakMap<CSSStyleSheet, string>()\nconst totalSelectorsInserted = new Map<string, number>()\nconst allSelectors: Record<string, string> = {}\nconst allRules: Record<string, string> = {}\nexport const insertedTransforms = {}\n\nexport const getAllSelectors = () => allSelectors\nexport const getAllRules = () => Object.values(allRules)\nexport const getAllTransforms = () => insertedTransforms\n\n// keep transforms in map for merging later\nfunction addTransform(identifier: string, css: string, rule?: CSSRule) {\n  const s = css.indexOf('transform:')\n  if (s === -1) {\n    if (process.env.NODE_ENV === 'development') {\n      console.error(`❌ Invalid transform, likely used deg/% improperly ${identifier}`)\n    }\n    return\n  }\n  const startI = s + 'transform:'.length\n  const endI = css.indexOf(';')\n  const value = css.slice(startI, endI)\n  if (!insertedTransforms[identifier]) {\n    insertedTransforms[identifier] = value\n    return true\n  }\n}\n\n// once react 19 onyl supported we can remove most of this\n// gets existing ones (client side)\n// takes ~0.1ms for a fairly large page\n// used now for three things:\n//   1. debugging at dev time\n//   2. avoid duplicate insert styles at runtime\n//   3. used now for merging transforms atomically\n\n// multiple sheets could have the same ids so we have to count\n\nexport function listenForSheetChanges() {\n  if (!isClient) return\n\n  const mo = new MutationObserver((entries) => {\n    for (const entry of entries) {\n      if (\n        (entry instanceof HTMLStyleElement && entry.sheet) ||\n        (entry instanceof HTMLLinkElement && entry.href.endsWith('.css'))\n      ) {\n        scanAllSheets()\n        break\n      }\n    }\n  })\n\n  mo.observe(document.head, {\n    childList: true,\n  })\n}\n\nlet lastScannedSheets: Set<CSSStyleSheet> | null = null\n\nexport function scanAllSheets(\n  collectThemes = false,\n  tokens?: TokensParsed\n): DedupedThemes | undefined {\n  if (process.env.NODE_ENV === 'test') return\n  if (!isClient) return\n\n  let themes: DedupedThemes | undefined\n\n  const sheets = document.styleSheets || []\n  const prev = lastScannedSheets\n  const current = new Set(sheets as any as CSSStyleSheet[])\n\n  for (const sheet of current) {\n    if (sheet) {\n      const out = updateSheetStyles(sheet, false, collectThemes, tokens)\n      if (out) {\n        themes = out\n      }\n    }\n  }\n\n  lastScannedSheets = current\n\n  if (prev) {\n    for (const sheet of prev) {\n      if (sheet && !current.has(sheet)) {\n        updateSheetStyles(sheet, true)\n      }\n    }\n  }\n\n  return themes\n}\n\nfunction track(id: string, remove = false) {\n  const next = (totalSelectorsInserted.get(id) || 0) + (remove ? -1 : 1)\n  totalSelectorsInserted.set(id, next)\n  return next\n}\n\nconst bailAfterEnv = process.env.TAMAGUI_BAIL_AFTER_SCANNING_X_CSS_RULES\nconst bailAfter = bailAfterEnv ? +bailAfterEnv : 700\n\nfunction updateSheetStyles(\n  sheet: CSSStyleSheet,\n  remove = false,\n  collectThemes = false,\n  tokens?: TokensParsed\n): DedupedThemes | undefined {\n  // avoid errors on cross origin sheets\n  // https://stackoverflow.com/questions/49993633/uncaught-domexception-failed-to-read-the-cssrules-property\n  let rules: CSSRuleList\n  try {\n    rules = sheet.cssRules\n    if (!rules) {\n      return\n    }\n  } catch {\n    return\n  }\n\n  const firstSelector = getTamaguiSelector(rules[0], collectThemes)?.[0]\n  const lastSelector = getTamaguiSelector(rules[rules.length - 1], collectThemes)?.[0]\n  const cacheKey = `${rules.length}${firstSelector}${lastSelector}`\n  const lastScanned = scannedCache.get(sheet)\n\n  if (!remove) {\n    // avoid re-scanning\n    if (lastScanned === cacheKey) {\n      return\n    }\n  }\n\n  const len = rules.length\n  let fails = 0\n\n  let dedupedThemes: DedupedThemes | undefined\n\n  // because end-users can add their own css like .t_dark { --something: #000 }\n  // and this actually entirely breaks scanning, we need to ensure we can handle multiple\n  // themes, so track that here. also, css processing utils could cause this too\n  const nameToTheme: Record<string, ThemeParsed> = {}\n\n  for (let i = 0; i < len; i++) {\n    const rule = rules[i]\n    if (!(rule instanceof CSSStyleRule)) continue\n\n    const response = getTamaguiSelector(rule, collectThemes)\n\n    if (response) {\n      // reset to 0 on any success as eg every other theme scan we get empty\n      fails = 0\n    } else {\n      fails++\n      if (fails > bailAfter) {\n        // conservatively bail out of non-tamagui sheets\n        return\n      }\n      continue\n    }\n\n    const [identifier, cssRule, isTheme] = response\n\n    if (isTheme) {\n      const deduped = addThemesFromCSS(cssRule, tokens)\n      if (deduped) {\n        for (const name of deduped.names) {\n          if (nameToTheme[name]) {\n            Object.apply(nameToTheme[name], deduped.theme as any)\n            deduped.names = deduped.names.filter((x) => x !== name)\n          } else {\n            nameToTheme[name] = deduped.theme\n          }\n        }\n        dedupedThemes ||= []\n        dedupedThemes.push(deduped)\n      }\n      continue\n    }\n\n    if (!process.env.TAMAGUI_REACT_19) {\n      // track references\n      const total = track(identifier, remove)\n\n      if (remove) {\n        if (total === 0) {\n          delete allSelectors[identifier]\n        }\n      } else if (!(identifier in allSelectors)) {\n        const isTransform = identifier.startsWith('_transform-')\n        const shouldInsert = isTransform\n          ? addTransform(identifier, cssRule.cssText, cssRule)\n          : true\n        if (shouldInsert) {\n          allSelectors[identifier] = cssRule.cssText\n        }\n      }\n    }\n  }\n\n  scannedCache.set(sheet, cacheKey)\n\n  return dedupedThemes\n}\n\nlet colorVarToVal: Record<string, string>\nlet rootComputedStyle: CSSStyleDeclaration | null = null\n\nfunction addThemesFromCSS(cssStyleRule: CSSStyleRule, tokens?: TokensParsed) {\n  const selectors = cssStyleRule.selectorText.split(',')\n  if (!selectors.length) return\n\n  if (tokens?.color && !colorVarToVal) {\n    colorVarToVal = {}\n    for (const key in tokens.color) {\n      const token = tokens.color[key]\n      colorVarToVal[token.name] = token.val\n    }\n  }\n\n  const rulesWithBraces = (cssStyleRule.cssText || '').slice(\n    cssStyleRule.selectorText.length + 2,\n    -1\n  )\n\n  const rules = rulesWithBraces.split(';')\n\n  // get theme object parsed\n  const values: ThemeParsed = {}\n  // build values first\n  for (const rule of rules) {\n    const sepI = rule.indexOf(':')\n    if (sepI === -1) continue\n    const varIndex = rule.indexOf('--')\n    let key = rule.slice(varIndex === -1 ? 0 : varIndex + 2, sepI)\n    if (process.env.TAMAGUI_CSS_VARIABLE_PREFIX) {\n      key = key.replace(process.env.TAMAGUI_CSS_VARIABLE_PREFIX, '')\n    }\n    const val = rule.slice(sepI + 2)\n    let value: string\n    if (val[0] === 'v' && val.startsWith('var(')) {\n      // var()\n      const varName = val.slice(6, -1)\n      const tokenVal = colorVarToVal[varName]\n      // either hydrate it from tokens directly or from computed style on body if no token\n      if (tokenVal) {\n        value = tokenVal\n      } else {\n        rootComputedStyle ||= getComputedStyle(document.body)\n        value = rootComputedStyle.getPropertyValue('--' + varName)\n      }\n    } else {\n      value = val\n    }\n    values[key] = createVariable(\n      {\n        key,\n        name: key,\n        val: value,\n      },\n      true\n    ) as any\n  }\n\n  const names = new Set<string>()\n\n  // loop selectors and build deduped\n  for (const selector of selectors) {\n    if (selector === ' .tm_xxt') continue\n    const lastThemeSelectorIndex = selector.lastIndexOf('.t_')\n    const name = selector.slice(lastThemeSelectorIndex).slice(3)\n    const [schemeChar] = selector[lastThemeSelectorIndex - 5]\n    const scheme = schemeChar === 'd' ? 'dark' : schemeChar === 'i' ? 'light' : ''\n    const themeName = scheme && scheme !== name ? `${scheme}_${name}` : name\n    if (!themeName || themeName === 'light_dark' || themeName === 'dark_light') {\n      continue\n    }\n    names.add(themeName)\n  }\n\n  return {\n    names: [...names],\n    theme: values,\n  } satisfies DedupedTheme\n}\n\nconst tamaguiSelectorRegex = /\\.tm_xxt/\n\nfunction getTamaguiSelector(\n  rule: CSSRule | null,\n  collectThemes = false\n): readonly [string, CSSStyleRule] | [string, CSSStyleRule, true] | undefined {\n  if (rule instanceof CSSStyleRule) {\n    const text = rule.selectorText\n\n    // only matches t_ starting selector chains\n    if (text[0] === ':' && text[1] === 'r' && tamaguiSelectorRegex.test(text)) {\n      const id = getIdentifierFromTamaguiSelector(\n        // next.js minifies it so its in front\n        text.replace(tamaguiSelectorRegex, '')\n      )\n      return collectThemes ? [id, rule, true] : [id, rule]\n    }\n  } else if (rule instanceof CSSMediaRule) {\n    // tamagui only ever inserts 1 rule per media\n    if (rule.cssRules.length > 1) return\n    return getTamaguiSelector(rule.cssRules[0])\n  }\n}\n\nconst getIdentifierFromTamaguiSelector = (selector: string) => {\n  const dotIndex = selector.indexOf(':')\n  if (dotIndex > -1) {\n    return selector.slice(7, dotIndex)\n  }\n  return selector.slice(7)\n}\n\nlet sheet: CSSStyleSheet | null = null\n\nexport function updateRules(identifier: string, rules: string[]) {\n  if (!process.env.TAMAGUI_REACT_19) {\n    if (identifier in allRules) {\n      return false\n    }\n    allRules[identifier] = rules.join(' ')\n    if (identifier.startsWith('_transform-')) {\n      return addTransform(identifier, rules[0])\n    }\n    return true\n  }\n}\n\nlet nonce = ''\nexport function setNonce(_: string) {\n  nonce = _\n}\n\nexport function insertStyleRules(rulesToInsert: RulesToInsert) {\n  if (!process.env.TAMAGUI_REACT_19) {\n    if (!sheet && isClient && document.head) {\n      const styleTag = document.createElement('style')\n      if (nonce) {\n        styleTag.nonce = nonce\n      }\n      sheet = document.head.appendChild(styleTag).sheet\n    }\n    if (!sheet) return\n\n    for (const key in rulesToInsert) {\n      const styleObject = rulesToInsert[key]\n      const identifier = styleObject[StyleObjectIdentifier]\n\n      if (!shouldInsertStyleRules(identifier)) {\n        continue\n      }\n\n      const rules = styleObject[StyleObjectRules]\n      allSelectors[identifier] = rules.join('\\n')\n      track(identifier)\n      updateRules(identifier, rules)\n\n      for (const rule of rules) {\n        if (process.env.NODE_ENV === 'production') {\n          try {\n            sheet.insertRule(rule, sheet.cssRules.length)\n          } catch (err) {\n            console.error(`Error inserting CSS`, err)\n          }\n        } else {\n          sheet.insertRule(rule, sheet.cssRules.length)\n        }\n      }\n    }\n  }\n}\n\n// The way browser or next.js work you end up with CSS being removed *after* the new CSS loads for the upcoming page\n// this causes many bugs. We defaulted to \"2\" here for safety, meaning we sacrificed some performance\n// setting TAMAGUI_INSERT_SELECTOR_TRIES=1 will be faster so long as you are concatting your CSS together\n\nconst minInsertAmt = process.env.TAMAGUI_INSERT_SELECTOR_TRIES\n  ? +process.env.TAMAGUI_INSERT_SELECTOR_TRIES\n  : 1\n\nexport function shouldInsertStyleRules(identifier: string) {\n  if (process.env.TAMAGUI_REACT_19) {\n    return true\n  } else {\n    if (process.env.IS_STATIC === 'is_static') {\n      return true\n    }\n    const total = totalSelectorsInserted.get(identifier)\n\n    if (process.env.NODE_ENV === 'development') {\n      if (\n        totalSelectorsInserted.size >\n        +(process.env.TAMAGUI_STYLE_INSERTION_WARNING_LIMIT || 10000)\n      ) {\n        console.warn(\n          `Warning: inserting many CSS rules, you may be animating something and generating many CSS insertions, which can degrade performance. Instead, try using the \"disableClassName\" property on elements that change styles often. To disable this warning set TAMAGUI_STYLE_INSERTION_WARNING_LIMIT from 50000 to something higher`\n        )\n      }\n    }\n    // note we are being conservative allowing duplicates\n    return total === undefined || total < minInsertAmt\n  }\n}\n", "import { currentPlatform } from '@tamagui/constants'\n\nexport function isActivePlatform(key: string) {\n  if (!key.startsWith('$platform')) {\n    return true\n  }\n  const platform = key.slice(10)\n  return (\n    // web, ios, android\n    platform === currentPlatform ||\n    // web, native\n    platform === process.env.TAMAGUI_TARGET\n  )\n}\n", "export function isActiveTheme(key: string, activeThemeName: string) {\n  if (!key.startsWith('$theme-')) return\n  return key.slice(7).startsWith(activeThemeName)\n}\n", "import { _disableMediaTouch } from '../hooks/useMedia'\n\nexport function log(...args: any[]) {\n  if (process.env.NODE_ENV === 'production') return\n  _disableMediaTouch(true)\n  try {\n    if (process.env.TAMAGUI_TARGET === 'web') {\n      return console.info(...args)\n    }\n    // react native doesn't log in the cli unless it's log\n    // biome-ignore lint/suspicious/noConsoleLog: <explanation>\n    return console.log(...args)\n  } catch (err) {\n    console.error(err)\n  } finally {\n    _disableMediaTouch(false)\n  }\n}\n", "export const webToNativeDynamicExpansion: Record<string, (val: any) => [string, any][]> =\n  {} as any\nexport const webToNativeExpansion: Record<string, string[]> = {} as any\n", "/**\n * Some parts adapted from react-native-web\n * Copyright (c) Nicolas Gallagher licensed under the MIT license.\n */\n\nimport { isAndroid, isWeb } from '@tamagui/constants'\n\nimport { getSetting } from '../config'\nimport {\n  webToNativeDynamicExpansion,\n  webToNativeExpansion,\n} from '../constants/webToNativeProps'\nimport type { PropMappedValue } from '../types'\n\nconst neg1Flex = [\n  ['flexGrow', 0],\n  ['flexShrink', 1],\n  ['flexBasis', 'auto'],\n] satisfies PropMappedValue\n\nexport function expandStyle(key: string, value: any): PropMappedValue {\n  if (process.env.TAMAGUI_TARGET === 'web') {\n    if (key === 'flex') {\n      if (value === -1) {\n        return neg1Flex\n      }\n      return [\n        ['flexGrow', value],\n        ['flexShrink', 1],\n        ['flexBasis', getSetting('styleCompat') === 'react-native' ? 0 : 'auto'],\n      ]\n    }\n\n    // web only\n    switch (key) {\n      case 'textAlignVertical': {\n        return [['verticalAlign', value === 'center' ? 'middle' : value]]\n      }\n      case 'writingDirection': {\n        return [['direction', value]]\n      }\n    }\n  }\n\n  if (\n    process.env.TAMAGUI_TARGET === 'native' &&\n    isAndroid &&\n    key === 'elevationAndroid'\n  ) {\n    return [['elevation', value]]\n  }\n\n  if (key in EXPANSIONS) {\n    return EXPANSIONS[key].map((key) => {\n      return [key, value]\n    })\n  }\n\n  if (key in webToNativeExpansion) {\n    return webToNativeExpansion[key].map((key) => {\n      return [key, value]\n    })\n  }\n\n  if (key in webToNativeDynamicExpansion) {\n    return webToNativeDynamicExpansion[key](value)\n  }\n}\n\nconst all = ['Top', 'Right', 'Bottom', 'Left']\nconst horiz = ['Right', 'Left']\nconst vert = ['Top', 'Bottom']\nconst xy = ['X', 'Y']\n\nconst EXPANSIONS: Record<string, string[]> = {\n  borderColor: ['TopColor', 'RightColor', 'BottomColor', 'LeftColor'],\n  borderRadius: [\n    'TopLeftRadius',\n    'TopRightRadius',\n    'BottomRightRadius',\n    'BottomLeftRadius',\n  ],\n  borderWidth: ['TopWidth', 'RightWidth', 'BottomWidth', 'LeftWidth'],\n  margin: all,\n  marginHorizontal: horiz,\n  marginVertical: vert,\n  overscrollBehavior: xy,\n  padding: all,\n  paddingHorizontal: horiz,\n  paddingVertical: vert,\n  ...(isWeb && {\n    // react-native only supports borderStyle\n    borderStyle: ['TopStyle', 'RightStyle', 'BottomStyle', 'LeftStyle'],\n    // react-native doesn't support X / Y\n    overflow: xy,\n  }),\n}\n\nfor (const parent in EXPANSIONS) {\n  const prefix = parent.slice(0, /[A-Z]/.exec(parent)?.index ?? parent.length)\n  EXPANSIONS[parent] = EXPANSIONS[parent].map((k) => `${prefix}${k}`)\n}\n", "import { getVariableValue } from '../createVariable'\nimport type { GenericFonts, GetStyleState } from '../types'\nimport type { LanguageContextType } from '../views/FontLanguage.types'\n\nconst cache = new WeakMap()\n\nexport const getVariantExtras = (styleState: GetStyleState) => {\n  if (cache.has(styleState)) {\n    return cache.get(styleState)\n  }\n\n  const { props, conf, context, theme } = styleState\n  let fonts = conf.fontsParsed\n  if (context?.language) {\n    fonts = getFontsForLanguage(conf.fontsParsed, context.language)\n  }\n\n  const next = {\n    fonts,\n    tokens: conf.tokensParsed,\n    theme,\n    get fontFamily() {\n      return (\n        getVariableValue(styleState.fontFamily || styleState.props.fontFamily) ||\n        props.fontFamily ||\n        getVariableValue(styleState.conf.defaultFont)\n      )\n    },\n    get font() {\n      return (\n        fonts[this.fontFamily] ||\n        (!props.fontFamily || props.fontFamily[0] === '$'\n          ? fonts[styleState.conf.defaultFont!]\n          : undefined)\n      )\n    },\n    props,\n  }\n\n  cache.set(styleState, next)\n\n  return next as any\n}\n\nconst fontLanguageCache = new WeakMap()\n\nexport function getFontsForLanguage(fonts: GenericFonts, language: LanguageContextType) {\n  if (fontLanguageCache.has(language)) {\n    return fontLanguageCache.get(language)\n  }\n  const next = {\n    ...fonts,\n    ...Object.fromEntries(\n      Object.entries(language).map(([name, lang]) => {\n        if (lang === 'default') {\n          return []\n        }\n        const langKey = `$${name}_${lang}`\n        return [`$${name}`, fonts[langKey]]\n      })\n    ),\n  }\n  fontLanguageCache.set(language, next)\n  return next\n}\n", "export const isObj = (x: any) => x && !Array.isArray(x) && typeof x === 'object'\n", "import { expandStyle } from './expandStyle'\nimport { fixStyles } from './expandStyles'\nimport { isObj } from './isObj'\nimport { normalizeValueWithProperty } from './normalizeValueWithProperty'\nimport { pseudoDescriptors } from './pseudoDescriptors'\n\n/**\n * This is what you want to run before Object.assign() a style onto another.\n * It does the following:\n *   1. Shorthands into longhands, px = paddingHorizontal\n *   2. Expands flex, borderColor and other properties that can expand into sub-parts\n *   3. Normalizes all sub pseudo-media-etc styles\n */\n\nexport function normalizeStyle(style: Record<string, any>, disableNormalize = false) {\n  const res: Record<string, any> = {}\n\n  for (let key in style) {\n    const prop = style[key]\n    if (prop == null) continue\n    if (\n      key in pseudoDescriptors ||\n      // this should capture all parent-based styles like media, group, etc\n      (key[0] === '$' && isObj(prop))\n    ) {\n      res[key] = normalizeStyle(prop, disableNormalize)\n      continue\n    }\n    const value = disableNormalize ? prop : normalizeValueWithProperty(prop, key)\n    // expand react-native shorthands\n    const out = expandStyle(key, value)\n    if (out) {\n      Object.assign(res, Object.fromEntries(out))\n    } else {\n      res[key] = value\n    }\n  }\n\n  fixStyles(res)\n\n  return res\n}\n", "import { webPropsToSkip } from './webPropsToSkip'\n\n/**\n * These are props that dont pass down below Tamagui styled components\n */\nexport const skipProps = {\n  untilMeasured: 1,\n  animation: 1,\n  space: 1,\n  animateOnly: 1,\n  disableClassName: 1,\n  debug: 1,\n  componentName: 1,\n  disableOptimization: 1,\n  tag: 1,\n  style: 1, // handled after loop so pseudos set usedKeys and override it if necessary\n  group: 1,\n  themeInverse: 1,\n  animatePresence: 1,\n}\n\nif (process.env.NODE_ENV === 'test') {\n  skipProps['data-test-renders'] = 1\n}\n\n// native only skips\nif (process.env.TAMAGUI_TARGET === 'native') {\n  Object.assign(skipProps, webPropsToSkip)\n} else {\n  if (process.env.NODE_ENV !== 'production') {\n    // native only, not web props\n    // we only skip them in dev to avoid warnings, in prod they silently drop\n    Object.assign(skipProps, {\n      ellipsizeMode: 1,\n      accessibilityElementsHidden: 1,\n      accessibilityIgnoresInvertColors: 1,\n      accessibilityLanguage: 1,\n      adjustsFontSizeToFit: 1,\n      allowFontScaling: 1,\n      dataDetectorType: 1,\n      dynamicTypeRamp: 1,\n      elevationAndroid: 1,\n      hapticFeedback: 1,\n      hapticStyle: 1,\n      hitSlop: 1,\n      onAccessibilityAction: 1,\n      importantForAccessibility: 1,\n      lineBreakStrategyIOS: 1,\n      maxFontSizeMultiplier: 1,\n      minimumFontScale: 1,\n      needsOffscreenAlphaCompositing: 1,\n      nextFocusDown: 1,\n      nextFocusForward: 1,\n      nextFocusLeft: 1,\n      nextFocusRight: 1,\n      nextFocusUp: 1,\n      onMagicTap: 1,\n      selectionColor: 1,\n      shouldRasterizeIOS: 1,\n      suppressHighlighting: 1,\n      textBreakStrategy: 1,\n    })\n  }\n}\n", "import { isAndroid } from '@tamagui/constants'\nimport { tokenCategories } from '@tamagui/helpers'\nimport { getConfig } from '../config'\nimport type { Variable } from '../createVariable'\nimport { getVariableValue, isVariable } from '../createVariable'\nimport type {\n  GetStyleState,\n  PropMapper,\n  ResolveVariableAs,\n  SplitStyleProps,\n  StyleResolver,\n  TamaguiInternalConfig,\n  VariantSpreadFunction,\n} from '../types'\nimport { expandStyle } from './expandStyle'\nimport { getFontsForLanguage, getVariantExtras } from './getVariantExtras'\nimport { isObj } from './isObj'\nimport { normalizeStyle } from './normalizeStyle'\nimport { pseudoDescriptors } from './pseudoDescriptors'\nimport { skipProps } from './skipProps'\n\nexport const propMapper: PropMapper = (key, value, styleState, disabled, map) => {\n  if (disabled) {\n    return map(key, value)\n  }\n\n  lastFontFamilyToken = null\n\n  if (!(process.env.TAMAGUI_TARGET === 'native' && isAndroid)) {\n    // this shouldnt be necessary and handled in the outer loop\n    if (key === 'elevationAndroid') return\n  }\n\n  const { conf, styleProps, staticConfig } = styleState\n\n  if (value === 'unset') {\n    const unsetVal = conf.unset?.[key]\n    if (unsetVal != null) {\n      value = unsetVal\n    } else {\n      // if no unset found, do nothing\n      return\n    }\n  }\n\n  const { variants } = staticConfig\n\n  if (!styleProps.noExpand) {\n    if (variants && key in variants) {\n      const variantValue = resolveVariants(key, value, styleProps, styleState, '')\n      if (variantValue) {\n        variantValue.forEach(([key, value]) => map(key, value))\n        return\n      }\n    }\n  }\n\n  // handle shorthands\n  if (!styleProps.disableExpandShorthands) {\n    if (key in conf.shorthands) {\n      key = conf.shorthands[key]\n    }\n  }\n\n  if (value != null) {\n    if (value[0] === '$') {\n      value = getTokenForKey(key, value, styleProps, styleState)\n    } else if (isVariable(value)) {\n      value = resolveVariableValue(key, value, styleProps.resolveValues)\n    }\n  }\n\n  if (value != null) {\n    if (key === 'fontFamily' && lastFontFamilyToken) {\n      styleState.fontFamily = lastFontFamilyToken\n    }\n\n    const expanded = styleProps.noExpand ? null : expandStyle(key, value)\n\n    if (expanded) {\n      const max = expanded.length\n      for (let i = 0; i < max; i++) {\n        const [nkey, nvalue] = expanded[i]\n        map(nkey, nvalue)\n      }\n    } else {\n      map(key, value)\n    }\n  }\n}\n\nconst resolveVariants: StyleResolver = (\n  key,\n  value,\n  styleProps,\n  styleState,\n  parentVariantKey\n) => {\n  const { staticConfig, conf, debug } = styleState\n  const { variants } = staticConfig\n  if (!variants) return\n\n  let variantValue = getVariantDefinition(variants[key], value, conf)\n\n  if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n    console.groupCollapsed(`♦️♦️♦️ resolve variant ${key}`)\n    console.info({\n      key,\n      value,\n      variantValue,\n      variants,\n    })\n    console.groupEnd()\n  }\n\n  if (!variantValue) {\n    // variant at key exists, but no matching variant\n    // disabling warnings, its fine to pass through, could re-enable later somehoiw\n    if (process.env.TAMAGUI_WARN_ON_MISSING_VARIANT === '1') {\n      // don't warn on missing booleans\n      if (typeof value !== 'boolean') {\n        const name = staticConfig.componentName || '[UnnamedComponent]'\n        console.warn(\n          `No variant found: ${name} has variant \"${key}\", but no matching value \"${value}\"`\n        )\n      }\n    }\n    return\n  }\n\n  if (typeof variantValue === 'function') {\n    const fn = variantValue as VariantSpreadFunction<any>\n    const extras = getVariantExtras(styleState)\n    variantValue = fn(value, extras)\n\n    if (\n      process.env.NODE_ENV === 'development' &&\n      debug === 'verbose' &&\n      process.env.TAMAGUI_TARGET !== 'native'\n    ) {\n      console.groupCollapsed('   expanded functional variant', key)\n      console.info({ fn, variantValue, extras })\n      console.groupEnd()\n    }\n  }\n\n  let fontFamilyResult: any\n\n  if (isObj(variantValue)) {\n    const fontFamilyUpdate =\n      variantValue.fontFamily || variantValue[conf.inverseShorthands.fontFamily]\n\n    if (fontFamilyUpdate) {\n      fontFamilyResult = getFontFamilyFromNameOrVariable(fontFamilyUpdate, conf)\n      styleState.fontFamily = fontFamilyResult\n\n      if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n        console.info(`   updating font family`, fontFamilyResult)\n      }\n    }\n\n    variantValue = resolveTokensAndVariants(\n      key,\n      variantValue,\n      styleProps,\n      styleState,\n      parentVariantKey\n    )\n  }\n\n  if (variantValue) {\n    const expanded = normalizeStyle(variantValue, !!styleProps.noNormalize)\n\n    if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n      console.info(`   expanding styles from `, variantValue, `to`, expanded)\n    }\n    const next = Object.entries(expanded)\n\n    // store any changed font family (only support variables for now)\n    if (fontFamilyResult && fontFamilyResult[0] === '$') {\n      lastFontFamilyToken = getVariableValue(fontFamilyResult)\n    }\n\n    return next\n  }\n}\n\n// handles finding and resolving the fontFamily to the token name\n// this is used as `font_[name]` in className for nice css variable support\nexport function getFontFamilyFromNameOrVariable(input: any, conf: TamaguiInternalConfig) {\n  if (isVariable(input)) {\n    const val = variableToFontNameCache.get(input)\n    if (val) return val\n    for (const key in conf.fontsParsed) {\n      const familyVariable = conf.fontsParsed[key].family\n      if (isVariable(familyVariable)) {\n        variableToFontNameCache.set(familyVariable, key)\n        if (familyVariable === input) {\n          return key\n        }\n      }\n    }\n  } else if (typeof input === 'string') {\n    if (input[0] === '$') {\n      return input\n    }\n  }\n}\n\nconst variableToFontNameCache = new WeakMap<Variable, string>()\n\nconst resolveTokensAndVariants: StyleResolver<Object> = (\n  key, // we dont use key assume value is object instead\n  value,\n  styleProps,\n  styleState,\n  parentVariantKey\n) => {\n  const { conf, staticConfig, debug, theme } = styleState\n  const { variants } = staticConfig\n  const res = {}\n\n  if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n    console.info(`   - resolveTokensAndVariants`, key, value)\n  }\n\n  for (const _key in value) {\n    const subKey = conf.shorthands[_key] || _key\n    const val = value[_key]\n\n    if (!styleProps.noSkip && subKey in skipProps) {\n      continue\n    }\n\n    if (styleProps.noExpand) {\n      res[subKey] = val\n    } else {\n      if (variants && subKey in variants) {\n        // avoids infinite loop if variant is matching a style prop\n        // eg: { variants: { flex: { true: { flex: 2 } } } }\n        if (parentVariantKey && parentVariantKey === key) {\n          res[subKey] =\n            // SYNC WITH *1\n            val[0] === '$' ? getTokenForKey(subKey, val, styleProps, styleState) : val\n        } else {\n          const variantOut = resolveVariants(subKey, val, styleProps, styleState, key)\n\n          // apply, merging sub-styles\n          if (variantOut) {\n            for (const [key, val] of variantOut) {\n              if (val == null) continue\n              if (key in pseudoDescriptors) {\n                res[key] ??= {}\n                Object.assign(res[key], val)\n              } else {\n                res[key] = val\n              }\n            }\n          }\n        }\n        continue\n      }\n    }\n\n    if (isVariable(val)) {\n      res[subKey] = resolveVariableValue(subKey, val, styleProps.resolveValues)\n\n      if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n        console.info(`variable`, subKey, res[subKey])\n      }\n      continue\n    }\n\n    if (typeof val === 'string') {\n      const fVal =\n        // SYNC WITH *1\n        val[0] === '$' ? getTokenForKey(subKey, val, styleProps, styleState) : val\n\n      res[subKey] = fVal\n      continue\n    }\n\n    if (isObj(val)) {\n      const subObject = resolveTokensAndVariants(subKey, val, styleProps, styleState, key)\n\n      if (process.env.NODE_ENV === 'development' && debug === 'verbose') {\n        console.info(`object`, subKey, subObject)\n      }\n\n      // sub-objects: media queries, pseudos, shadowOffset\n      res[subKey] ??= {}\n      Object.assign(res[subKey], subObject)\n    } else {\n      // nullish values cant be tokens, need no extra parsing\n      res[subKey] = val\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      if (debug) {\n        if (res[subKey]?.[0] === '$') {\n          console.warn(\n            `⚠️ Missing token in theme ${theme.name}:`,\n            subKey,\n            res[subKey],\n            theme\n          )\n        }\n      }\n    }\n  }\n\n  return res\n}\n\nconst tokenCats = ['size', 'color', 'radius', 'space', 'zIndex'].map((name) => ({\n  name,\n  spreadName: `...${name}`,\n}))\n\n// goes through specificity finding best matching variant function\nfunction getVariantDefinition(variant: any, value: any, conf: TamaguiInternalConfig) {\n  if (!variant) return\n  if (typeof variant === 'function') {\n    return variant\n  }\n  const exact = variant[value]\n  if (exact) {\n    return exact\n  }\n  if (value != null) {\n    const { tokensParsed } = conf\n    for (const { name, spreadName } of tokenCats) {\n      if (spreadName in variant && value in tokensParsed[name]) {\n        return variant[spreadName]\n      }\n    }\n    const fontSizeVariant = variant['...fontSize']\n    if (fontSizeVariant && conf.fontSizeTokens.has(value)) {\n      return fontSizeVariant\n    }\n  }\n  // fallback to catch all | size\n  return variant[`:${typeof value}`] || variant['...']\n}\n\nconst fontShorthand = {\n  fontSize: 'size',\n  fontWeight: 'weight',\n}\n\nlet lastFontFamilyToken: any = null\n\nexport const getTokenForKey = (\n  key: string,\n  value: string,\n  styleProps: SplitStyleProps,\n  styleState: Partial<GetStyleState>\n) => {\n  let resolveAs = styleProps.resolveValues || 'none'\n\n  if (resolveAs === 'none') {\n    return value\n  }\n\n  const { theme, conf = getConfig(), context, fontFamily, staticConfig } = styleState\n\n  const themeValue = theme ? theme[value] || theme[value.slice(1)] : undefined\n\n  const tokensParsed = conf.tokensParsed\n  let valOrVar: any\n  let hasSet = false\n\n  const customTokenAccept = staticConfig?.accept?.[key]\n  if (customTokenAccept) {\n    const val = themeValue ?? tokensParsed[customTokenAccept][value]\n    if (val != null) {\n      resolveAs = 'value' // always resolve custom tokens as values\n      valOrVar = val\n      hasSet = true\n    }\n  }\n\n  if (themeValue) {\n    if (resolveAs === 'except-theme') {\n      return value\n    }\n\n    valOrVar = themeValue\n    if (process.env.NODE_ENV === 'development' && styleState.debug === 'verbose') {\n      globalThis.tamaguiAvoidTracking = true\n      console.info(\n        ` - resolving ${key} to theme value ${value} resolveAs ${resolveAs}`,\n        valOrVar\n      )\n      globalThis.tamaguiAvoidTracking = false\n    }\n    hasSet = true\n  } else {\n    if (value in conf.specificTokens) {\n      hasSet = true\n      valOrVar = conf.specificTokens[value]\n    } else {\n      switch (key) {\n        case 'fontFamily': {\n          const fontsParsed = context?.language\n            ? getFontsForLanguage(conf.fontsParsed, context.language)\n            : conf.fontsParsed\n          valOrVar = fontsParsed[value]?.family || value\n          lastFontFamilyToken = value\n          hasSet = true\n          break\n        }\n        case 'fontSize':\n        case 'lineHeight':\n        case 'letterSpacing':\n        case 'fontWeight': {\n          const fam = fontFamily || conf.defaultFontToken\n          if (fam) {\n            const fontsParsed = context?.language\n              ? getFontsForLanguage(conf.fontsParsed, context.language)\n              : conf.fontsParsed\n            const font = fontsParsed[fam] || fontsParsed[conf.defaultFontToken]\n            valOrVar = font?.[fontShorthand[key] || key]?.[value] || value\n            hasSet = true\n          }\n          break\n        }\n      }\n      for (const cat in tokenCategories) {\n        if (key in tokenCategories[cat]) {\n          const res = tokensParsed[cat][value]\n          if (res != null) {\n            valOrVar = res\n            hasSet = true\n          }\n        }\n      }\n    }\n\n    if (!hasSet) {\n      const spaceVar = tokensParsed.space[value]\n      if (spaceVar != null) {\n        valOrVar = spaceVar\n        hasSet = true\n      }\n    }\n  }\n\n  if (hasSet) {\n    const out = resolveVariableValue(key, valOrVar, resolveAs)\n    if (process.env.NODE_ENV === 'development' && styleState.debug === 'verbose') {\n      globalThis.tamaguiAvoidTracking = true\n      console.info(`resolved`, resolveAs, valOrVar, out)\n      globalThis.tamaguiAvoidTracking = false\n    }\n    return out\n  }\n\n  // they didn't define this token don't return anything, we could warn?\n\n  if (process.env.NODE_ENV === 'development' && styleState.debug === 'verbose') {\n    console.warn(`Warning: no token found for ${key}, omitting`)\n  }\n}\n\nfunction resolveVariableValue(\n  key: string,\n  valOrVar: Variable | any,\n  resolveValues?: ResolveVariableAs\n) {\n  if (resolveValues === 'none') {\n    return valOrVar\n  }\n  if (isVariable(valOrVar)) {\n    if (resolveValues === 'value') {\n      return valOrVar.val\n    }\n\n    // @ts-expect-error this is fine until we can type better\n    const get = valOrVar?.get\n\n    // shadowColor doesn't support dynamic style\n    if (process.env.TAMAGUI_TARGET !== 'native' || key !== 'shadowColor') {\n      if (typeof get === 'function') {\n        const resolveDynamicFor = resolveValues === 'web' ? 'web' : undefined\n        return get(resolveDynamicFor)\n      }\n    }\n\n    return process.env.TAMAGUI_TARGET === 'native' ? valOrVar.val : valOrVar.variable\n  }\n  return valOrVar\n}\n", "export const sortString = (a: string, b: string) => (a < b ? -1 : a > b ? 1 : 0)\n", "/**\n * Preserves prop ordering, so that the order most closely matches the last spread objects\n * Useful for having { ...defaultProps, ...props } that ensure props ordering is always kept\n *\n *    Given:\n *      mergeProps({ a: 1, b: 2 }, { b: 1, a: 2 })\n *    The final key order will be:\n *      b, a\n *\n * Handles a couple special tamagui cases\n *   - classNames can be extracted out separately\n *   - shorthands can be expanded before merging\n */\n\nimport { mediaKeys } from '../hooks/useMedia'\nimport { pseudoDescriptors } from './pseudoDescriptors'\n\ntype AnyRecord = Record<string, any>\n\nexport const mergeProps = (a: Object, b?: Object, inverseShorthands?: AnyRecord) => {\n  const out: AnyRecord = {}\n  for (const key in a) {\n    mergeProp(out, a, b, key, inverseShorthands)\n  }\n  if (b) {\n    for (const key in b) {\n      mergeProp(out, b, undefined, key, inverseShorthands)\n    }\n  }\n  return out\n}\n\nfunction mergeProp(\n  out: AnyRecord,\n  a: Object,\n  b: Object | undefined,\n  key: string,\n  inverseShorthands?: AnyRecord\n) {\n  const longhand = inverseShorthands?.[key] || null\n  const val = a[key]\n  if (key in pseudoDescriptors || mediaKeys.has(key)) {\n    out[key] = {\n      ...out[key],\n      ...val,\n    }\n    return\n  }\n  if (b && (key in b || (longhand && longhand in b))) {\n    return\n  }\n  out[longhand || key] = val\n}\n", "import type { TamaguiComponentEvents } from './interfaces/TamaguiComponentEvents'\nimport type { TamaguiComponentState } from './interfaces/TamaguiComponentState'\nimport type { GetStyleResult, StaticConfig, TamaguiComponentStateRef } from './types'\n\nexport const hooks: InternalHooks = {}\n\n// internal hooks setup\nexport function setupHooks(next: InternalHooks) {\n  Object.assign(hooks, next)\n}\n\ntype InternalHooks = {\n  usePropsTransform?: (\n    elementType: any,\n    props: Record<string, any>,\n    stateRef: { current: TamaguiComponentStateRef },\n    willHydrate?: boolean\n  ) => any\n\n  setElementProps?: (node?: any) => void\n\n  useEvents?: (\n    viewProps: Record<string, any>,\n    events: TamaguiComponentEvents | null,\n    splitStyles: GetStyleResult,\n    setStateShallow: (next: Partial<TamaguiComponentState>) => void,\n    staticConfig: StaticConfig\n  ) => any\n\n  useChildren?: (elementType: any, children: any, viewProps: Record<string, any>) => any\n\n  getBaseViews?: () => {\n    View: any\n    Text: any\n    TextAncestor: any\n  }\n}\n", "import { hooks } from '../setupHooks'\n\nexport const setElementProps = (node) => {\n  hooks.setElementProps?.(node)\n}\n", "import type React from 'react'\nimport type { DebugProp } from '../types'\nimport { startTransition, useCallback } from 'react'\n\nconst callImmediate = (cb) => cb()\n\nexport function createShallowSetState<State extends Object>(\n  setter: React.Dispatch<React.SetStateAction<State>>,\n  onlyAllow?: string[],\n  transition?: boolean,\n  debugIn?: DebugProp\n) {\n  // this must be memoized or it ruins performance in components\n  return useCallback(\n    (next?: Partial<State>) => {\n      const wrap = transition ? startTransition : callImmediate\n      wrap(() => {\n        setter((prev) => {\n          return mergeIfNotShallowEqual(prev, next, onlyAllow, debugIn)\n        })\n      })\n    },\n    [setter, onlyAllow ? onlyAllow.join('') : '', transition, debugIn]\n  )\n}\n\nexport function mergeIfNotShallowEqual(\n  prev: any,\n  next: any,\n  onlyAllow?: string[],\n  debug?: DebugProp\n) {\n  if (onlyAllow) {\n    let allowed = {}\n    for (const key in next) {\n      if (onlyAllow.includes(key)) {\n        allowed[key] = next[key]\n      }\n    }\n    next = allowed\n  }\n  if (!prev || !next || isEqualShallow(prev, next)) {\n    if (!prev) return next\n    return prev\n  }\n  if (process.env.NODE_ENV === 'development') {\n    if (debug) {\n      console.info(`setStateShallow CHANGE`, { prev, next })\n      if (debug === 'break') {\n        // biome-ignore lint/suspicious/noDebugger: <explanation>\n        debugger\n      }\n    }\n  }\n  return { ...prev, ...next }\n}\n\nexport function isEqualShallow(prev, next) {\n  for (const key in next) {\n    if (prev[key] !== next[key]) {\n      return false\n    }\n  }\n  return true\n}\n", "import { getMediaState } from '../hooks/useMedia'\nimport type { ComponentContextI, GroupState, TamaguiComponentState } from '../types'\nimport { mergeIfNotShallowEqual } from './createShallowSetState'\n\nexport const subscribeToContextGroup = ({\n  setStateShallow,\n  pseudoGroups,\n  mediaGroups,\n  componentContext,\n  state,\n}: {\n  setStateShallow: (next?: Partial<TamaguiComponentState> | undefined) => void\n  pseudoGroups?: Set<string>\n  mediaGroups?: Set<string>\n  componentContext: ComponentContextI\n  state: TamaguiComponentState\n}) => {\n  // parent group pseudo listening\n  if (pseudoGroups || mediaGroups) {\n    if (process.env.NODE_ENV === 'development' && !componentContext.groups) {\n      console.debug(`No context group found`)\n    }\n\n    return componentContext.groups?.subscribe?.((name, { layout, pseudo }) => {\n      const current: GroupState = state.group?.[name] || {\n        pseudo: {},\n        media: {},\n      }\n\n      if (pseudo && pseudoGroups?.has(String(name))) {\n        // we emit a partial so merge it + change reference so mergeIfNotShallowEqual runs\n        Object.assign(current.pseudo!, pseudo)\n        persist()\n      } else if (layout && mediaGroups) {\n        const mediaState = getMediaState(mediaGroups, layout)\n        const next = mergeIfNotShallowEqual(current.media, mediaState)\n        if (next !== current.media) {\n          Object.assign(current.media!, next)\n          persist()\n        }\n      }\n      function persist() {\n        // force it to be referentially different so it always updates\n        const group = {\n          ...state.group,\n          [name]: current,\n        }\n        setStateShallow({\n          group,\n        })\n      }\n    })\n  }\n}\n", "import { StyleObjectIdentifier, StyleObjectRules } from '@tamagui/helpers'\nimport type { StyleObject } from '../types'\n\nexport function wrapStyleTags(styles: StyleObject[], content?: any) {\n  if (process.env.TAMAGUI_REACT_19 && process.env.TAMAGUI_TARGET !== 'native') {\n    if (styles.length) {\n      return (\n        <>\n          {content}\n          {/* lets see if we can put a single style tag per rule for optimal de-duping */}\n          {styles.map((styleObject) => {\n            const identifier = styleObject[StyleObjectIdentifier]\n            return (\n              <style\n                key={identifier}\n                // @ts-ignore\n                href={`t_${identifier}`}\n                // @ts-ignore\n                precedence=\"default\"\n              >\n                {styleObject[StyleObjectRules].join('\\n')}\n              </style>\n            )\n          })}\n        </>\n      )\n    }\n  }\n\n  return content\n}\n", "import { isServer, isWeb } from '@tamagui/constants'\nimport { useDidFinishSSR } from '@tamagui/use-did-finish-ssr'\nimport { useMemo, useRef, useState } from 'react'\nimport {\n  defaultComponentState,\n  defaultComponentStateMounted,\n  defaultComponentStateShouldEnter,\n} from '../defaultComponentState'\nimport { createShallowSetState } from '../helpers/createShallowSetState'\nimport { isObj } from '../helpers/isObj'\nimport { log } from '../helpers/log'\nimport type {\n  ComponentContextI,\n  GroupStateListener,\n  StackProps,\n  StaticConfig,\n  TamaguiComponentState,\n  TamaguiComponentStateRef,\n  TamaguiInternalConfig,\n  TextProps,\n  UseAnimationHook,\n} from '../types'\n\nexport const useComponentState = (\n  props: StackProps | TextProps | Record<string, any>,\n  { animationDriver }: ComponentContextI,\n  staticConfig: StaticConfig,\n  config: TamaguiInternalConfig\n) => {\n  const isHydrated = useDidFinishSSR()\n  const useAnimations = animationDriver?.useAnimations as UseAnimationHook | undefined\n\n  const stateRef = useRef<TamaguiComponentStateRef>(\n    undefined as any as TamaguiComponentStateRef\n  )\n  if (!stateRef.current) {\n    stateRef.current = {}\n  }\n\n  // after we get states mount we need to turn off isAnimated for server side\n  const hasAnimationProp = Boolean(\n    'animation' in props || (props.style && hasAnimatedStyleValue(props.style))\n  )\n\n  // disable for now still ssr issues\n  const supportsCSSVars = animationDriver?.supportsCSSVars\n  const curStateRef = stateRef.current\n\n  const willBeAnimatedClient = (() => {\n    const next = !!(hasAnimationProp && !staticConfig.isHOC && useAnimations)\n    return Boolean(next || curStateRef.hasAnimated)\n  })()\n\n  const willBeAnimated = !isServer && willBeAnimatedClient\n\n  // once animated, always animated to preserve hooks / vdom structure\n  if (willBeAnimated && !curStateRef.hasAnimated) {\n    curStateRef.hasAnimated = true\n  }\n\n  const { disableClassName } = props\n\n  // HOOK\n  const presence =\n    (willBeAnimated &&\n      props['animatePresence'] !== false &&\n      animationDriver?.usePresence?.()) ||\n    null\n  const presenceState = presence?.[2]\n  const isExiting = presenceState?.isPresent === false\n  const isEntering = presenceState?.isPresent === true && presenceState.initial !== false\n\n  const hasEnterStyle = !!props.enterStyle\n\n  const hasAnimationThatNeedsHydrate =\n    hasAnimationProp &&\n    !isHydrated &&\n    (animationDriver?.isReactNative || !supportsCSSVars)\n\n  const hasEnterState = hasEnterStyle || isEntering\n\n  // this can be conditional because its only ever needed with animations\n  const shouldEnter =\n    hasEnterState ||\n    hasAnimationThatNeedsHydrate ||\n    // disableClassName doesnt work server side, only client, so needs hydrate\n    // this is just for a better ux, supports css variables for light/dark, media queries, etc\n    disableClassName\n\n  // two stage enter: because we switch from css driver to spring driver\n  //   - first render: render to match server with css driver\n  //   - second render: state.unmounted = should-enter, still rendering the initial,\n  //     non-entered state but now with the spring animation driver\n\n  const initialState = shouldEnter\n    ? // on the very first render we switch all spring animation drivers to css rendering\n      // this is because we need to use css variables, which they don't support to do proper SSR\n      // without flickers of the wrong colors.\n      // but once we do that initial hydration and we are in client side rendering mode,\n      // we can avoid the extra re-render on mount\n      hasEnterState\n      ? defaultComponentStateShouldEnter\n      : defaultComponentState\n    : defaultComponentStateMounted\n\n  // will be nice to deprecate half of these:\n  const disabled = isDisabled(props)\n\n  if (disabled != null) {\n    initialState.disabled = disabled\n  }\n\n  // HOOK\n  const states = useState<TamaguiComponentState>(initialState)\n\n  const state = props.forceStyle ? { ...states[0], [props.forceStyle]: true } : states[0]\n  const setState = states[1]\n\n  // only web server + initial client render run this when not hydrated:\n  let isAnimated = willBeAnimated\n  if (isWeb && hasAnimationThatNeedsHydrate && !staticConfig.isHOC && !isHydrated) {\n    isAnimated = false\n    curStateRef.willHydrate = true\n  }\n\n  // immediately update disabled state and reset component state\n  if (disabled !== state.disabled) {\n    state.disabled = disabled\n    // if disabled remove all press/focus/hover states\n    if (disabled) {\n      Object.assign(state, defaultComponentStateMounted)\n    }\n    setState({ ...state })\n  }\n\n  const groupName = props.group as any as string\n\n  let setStateShallow = createShallowSetState(\n    setState,\n    disabled ? ['disabled'] : undefined,\n    false,\n    props.debug\n  )\n\n  // set enter/exit variants onto our new props object\n  if (presenceState && isAnimated && isHydrated && staticConfig.variants) {\n    if (process.env.NODE_ENV === 'development' && props.debug === 'verbose') {\n      console.warn(`has presenceState ${JSON.stringify(presenceState)}`)\n    }\n    const { enterVariant, exitVariant, enterExitVariant, custom } = presenceState\n    if (isObj(custom)) {\n      Object.assign(props, custom)\n    }\n    const exv = exitVariant ?? enterExitVariant\n    const env = enterVariant ?? enterExitVariant\n    if (state.unmounted && env && staticConfig.variants[env]) {\n      if (process.env.NODE_ENV === 'development' && props.debug === 'verbose') {\n        console.warn(`Animating presence ENTER \"${env}\"`)\n      }\n      props[env] = true\n    } else if (isExiting && exv) {\n      if (process.env.NODE_ENV === 'development' && props.debug === 'verbose') {\n        console.warn(`Animating presence EXIT \"${exv}\"`)\n      }\n      props[exv] = exitVariant !== enterExitVariant\n    }\n  }\n\n  let noClass = !isWeb || !!props.forceStyle\n\n  // on server for SSR and animation compat added the && isHydrated but perhaps we want\n  // disableClassName=\"until-hydrated\" to be more straightforward\n  // see issue if not, Button sets disableClassName to true <Button animation=\"\" /> with\n  // the react-native driver errors because it tries to animate var(--color) to rbga(..)\n  if (isWeb) {\n    // no matter what if fully unmounted or on the server we use className\n    // only once we hydrate do we switch to spring animation drivers or disableClassName etc\n    if (!isServer || isHydrated) {\n      const isAnimatedAndHydrated = isAnimated && !supportsCSSVars\n\n      const isClassNameDisabled =\n        !staticConfig.acceptsClassName && (config.disableSSR || !state.unmounted)\n\n      const isDisabledManually = disableClassName && !state.unmounted\n\n      if (isAnimatedAndHydrated || isDisabledManually || isClassNameDisabled) {\n        noClass = true\n\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          log(`avoiding className`, {\n            isAnimatedAndHydrated,\n            isDisabledManually,\n            isClassNameDisabled,\n          })\n        }\n      }\n    }\n  }\n\n  if (groupName && !curStateRef.group) {\n    const listeners = new Set<GroupStateListener>()\n    curStateRef.group = {\n      listeners,\n      emit(name, state) {\n        listeners.forEach((l) => l(name, state))\n      },\n      subscribe(cb) {\n        listeners.add(cb)\n        return () => {\n          listeners.delete(cb)\n        }\n      },\n    }\n  }\n\n  return {\n    curStateRef,\n    disabled,\n    groupName,\n    hasAnimationProp,\n    hasEnterStyle,\n    isAnimated,\n    isExiting,\n    isHydrated,\n    presence,\n    presenceState,\n    setState,\n    setStateShallow,\n    noClass,\n    state,\n    stateRef,\n    supportsCSSVars,\n    willBeAnimated,\n    willBeAnimatedClient,\n  }\n}\n\nfunction hasAnimatedStyleValue(style: Object) {\n  return Object.keys(style).some((k) => {\n    const val = style[k]\n    return val && typeof val === 'object' && '_animation' in val\n  })\n}\n\nconst isDisabled = (props: any) => {\n  return (\n    props.disabled ||\n    props.accessibilityState?.disabled ||\n    props['aria-disabled'] ||\n    props.accessibilityDisabled ||\n    false\n  )\n}\n", "// via radix\n\nimport { composeRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport { composeEventHandlers } from '@tamagui/helpers'\nimport type { ReactNode } from 'react'\nimport { Children, cloneElement, forwardRef, isValidElement, version, memo } from 'react'\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps {\n  children: ReactNode\n}\n\nconst is19 = version.startsWith('19.')\n\nexport const Slot = memo(\n  forwardRef<any, SlotProps>(function Slot(props, forwardedRef) {\n    const { children, ...slotProps } = props\n\n    if (isValidElement(children)) {\n      const mergedProps = mergeSlotProps(children, slotProps)\n      return cloneElement(\n        children,\n        children.type['avoidForwardRef']\n          ? mergedProps\n          : {\n              ...mergedProps,\n              ref: composeRefs(\n                forwardedRef,\n                is19 ? (children as any).props.ref : (children as any).ref\n              ),\n            }\n      )\n    }\n\n    return Children.count(children) > 1 ? Children.only(null) : null\n  })\n)\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nexport const Slottable = ({ children }: { children: ReactNode }) => {\n  return <>{children}</>\n}\n\nSlottable['displayName'] = 'Slottable'\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst pressMap = isWeb\n  ? {\n      onPress: 'onClick',\n      onPressOut: 'onMouseUp',\n      onPressIn: 'onMouseDown',\n    }\n  : {}\n\nfunction mergeSlotProps(child: any, slotProps: Record<string, any>) {\n  const childProps = child.props\n\n  // all child props should override\n  const overrideProps = { ...childProps }\n  const isHTMLChild = typeof child.type === 'string'\n\n  if (isHTMLChild) {\n    for (const key in pressMap) {\n      if (key in slotProps) {\n        slotProps[pressMap[key]] = slotProps[key]\n        delete slotProps[key]\n      }\n    }\n  }\n\n  for (let propName in childProps) {\n    const slotPropValue = slotProps[propName]\n    const childPropValue = childProps[propName]\n\n    if (isHTMLChild && propName in pressMap) {\n      propName = pressMap[propName]\n      delete overrideProps[propName]\n    }\n\n    const isHandler = handleRegex.test(propName)\n    // if it's a handler, modify the override by composing the base handler\n    if (isHandler) {\n      overrideProps[propName] = composeEventHandlers(childPropValue, slotPropValue)\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue }\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ')\n    }\n  }\n\n  return { ...slotProps, ...overrideProps }\n}\n\nconst handleRegex = /^on[A-Z]/\n", "import type { CreateShorthands } from './types'\n\n// just a type helper util\n\nexport function createShorthands<A extends CreateShorthands>(shorthands: A): A {\n  return Object.freeze(shorthands) as any\n}\n", "import type { Variable } from './createVariable'\n\ntype GenericTheme = { [key: string]: string | Variable }\n\n/**\n * @deprecated no need to use this anymore, can just remove the call and use plain objects\n */\nexport const createTheme = <Theme extends GenericTheme>(theme: Theme): Theme => {\n  return theme\n}\n", "import type { FontWeightValues, GenericFont } from './types'\n\nconst fontWeights: FontWeightValues[] = [\n  '100',\n  '200',\n  '300',\n  '400',\n  '500',\n  '600',\n  '700',\n  '800',\n  '900',\n]\n\nconst processSection = <T>(\n  section: string | Record<string, T>,\n  keys: string[],\n  defaultValue?: any\n): string | Record<string, T> => {\n  if (typeof section === 'string') return section\n\n  const sectionKeys = Object.keys(section)\n  let fillValue = section[sectionKeys[0]]\n\n  return Object.fromEntries(\n    [...new Set([...keys, ...sectionKeys])].map((key) => {\n      const value = section[key] ?? defaultValue ?? fillValue\n      fillValue = value\n      defaultValue = value\n      return [key, value]\n    })\n  )\n}\n\nexport const createFont = <A extends GenericFont>(font: A): A => {\n  const sizeKeys = Object.keys(font.size || {})\n  const processedFont = Object.fromEntries(\n    Object.entries(font).map(([key, section]) => {\n      return [\n        key,\n        processSection(\n          section as any,\n          key === 'face' ? fontWeights : sizeKeys,\n          key === 'face' ? { normal: font.family } : undefined\n        ),\n      ]\n    })\n  )\n  return Object.freeze(processedFont) as A\n}\n", "import { simpleHash } from '@tamagui/helpers'\n\nimport type { Variable } from './createVariable'\nimport { createVariable, isVariable } from './createVariable'\n\ntype DeepTokenObject<Val extends string | number = any> = {\n  [key: string]: Val | DeepTokenObject<Val>\n}\n\nexport type DeepVariableObject<A extends DeepTokenObject> = {\n  [Key in keyof A]: A[Key] extends string | number\n    ? Variable<A[Key]>\n    : A[Key] extends DeepTokenObject\n      ? DeepVariableObject<A[Key]>\n      : never\n}\n\nconst cache = new WeakMap()\n\n// recursive...\n\nexport const createVariables = <A extends DeepTokenObject>(\n  tokens: A,\n  parentPath = '',\n  isFont = false\n): DeepVariableObject<A> => {\n  if (cache.has(tokens)) return tokens\n\n  const res: any = {}\n  let i = 0\n  for (let keyIn in tokens) {\n    i++\n    const val = tokens[keyIn]\n    const isPrefixed = keyIn[0] === '$'\n    const keyWithPrefix = isPrefixed ? keyIn : `$${keyIn}`\n    const key = isPrefixed ? keyWithPrefix.slice(1) : keyIn\n\n    if (isVariable(val)) {\n      res[key] = val\n      continue\n    }\n    const niceKey = simpleHash(key, 1000)\n    const name =\n      parentPath && parentPath !== 't-color' ? `${parentPath}-${niceKey}` : `c-${niceKey}`\n\n    if (val && typeof val === 'object') {\n      // recurse\n      res[key] = createVariables(\n        tokens[key] as any,\n        name,\n        false /* note: don't pass isFont down, we want to avoid it past the first level */\n      )\n      continue\n    }\n    const finalValue = isVariable(val)\n      ? val\n      : createVariable({ val, name, key: keyWithPrefix })\n    res[key] = finalValue\n  }\n\n  cache.set(res, true)\n  return res\n}\n", "import type { Variable } from '../createVariable'\nimport { createCSSVariable, getVariableValue } from '../createVariable'\nimport type { VariableVal } from '../types'\n\nexport const registerCSSVariable = (v: Variable | VariableVal) => {\n  tokensValueToVariable.set(getVariableValue(v), v)\n}\n\nexport const variableToCSS = (v: Variable, unitless = false) => {\n  return `--${process.env.TAMAGUI_CSS_VARIABLE_PREFIX || ''}${createCSSVariable(\n    v.name,\n    false\n  )}:${!unitless && typeof v.val === 'number' ? `${v.val}px` : v.val}`\n}\n\nexport const tokensValueToVariable = new Map<any, any>()\n", "import { setConfigFont } from './config'\nimport { FONT_DATA_ATTRIBUTE_NAME } from './constants/constants'\nimport { createFont } from './createFont'\nimport type { Variable } from './createVariable'\nimport type { DeepVariableObject } from './createVariables'\nimport { createVariables } from './createVariables'\nimport { registerCSSVariable, variableToCSS } from './helpers/registerCSSVariable'\nimport type { GenericFont } from './types'\n\n/**\n * Runtime dynamic insert font\n */\nexport function insertFont<A extends GenericFont>(\n  name: string,\n  fontIn: A\n): DeepVariableObject<A> {\n  const font = createFont(fontIn)\n  const tokened = createVariables(font, name) as GenericFont\n  const parsed = parseFont(tokened) as DeepVariableObject<A>\n  if (process.env.TAMAGUI_TARGET === 'web' && typeof document !== 'undefined') {\n    const fontVars = registerFontVariables(parsed)\n    const styleElement: HTMLStyleElement =\n      document.querySelector(`style[${FONT_DATA_ATTRIBUTE_NAME}=\"${name}\"]`) ||\n      document.createElement('style')\n    styleElement.innerText = `:root .font_${name} {${fontVars.join(';')}}`\n    styleElement.setAttribute(FONT_DATA_ATTRIBUTE_NAME, name)\n    document.head.appendChild(styleElement)\n  }\n  setConfigFont(name, tokened, parsed)\n  return parsed\n}\n\nexport const updateFont = insertFont\n\nexport function parseFont<A extends GenericFont>(definition: A): DeepVariableObject<A> {\n  const parsed: any = {}\n  for (const attrKey in definition) {\n    const attr = definition[attrKey]\n    if (attrKey === 'family' || attrKey === 'face') {\n      parsed[attrKey] = attr\n    } else {\n      parsed[attrKey] = {}\n      for (const key in attr) {\n        let val = attr[key] as any\n        // is a theme reference\n        if (val.val?.[0] === '$') {\n          val = val.val\n        }\n        parsed[attrKey][`$${key}`] = val\n      }\n    }\n  }\n  return parsed\n}\n\nexport function registerFontVariables(parsedFont: any) {\n  const response: string[] = []\n\n  for (const fkey in parsedFont) {\n    if (fkey === 'face') continue\n    if (fkey === 'family') {\n      const val = parsedFont[fkey] as Variable\n      registerCSSVariable(val)\n      response.push(variableToCSS(val))\n    } else {\n      for (const fskey in parsedFont[fkey]) {\n        const fval = parsedFont[fkey][fskey]\n        if (typeof fval === 'string') {\n          // no need to add its a theme reference like \"$borderColor\"\n        } else {\n          const val = parsedFont[fkey][fskey] as Variable\n          registerCSSVariable(val)\n          response.push(variableToCSS(val))\n        }\n      }\n    }\n  }\n  return response\n}\n", "import type { Variable } from './createVariable'\nimport { createVariables } from './createVariables'\nimport type { CreateTokens } from './types'\n\nexport function createTokens<T extends CreateTokens>(tokens: T): MakeTokens<T> {\n  return createVariables(tokens, process.env.TAMAGUI_TOKEN_PREFIX ?? 't') as any\n}\n\ntype NormalizeTokens<A, Type = A[keyof A]> = {\n  [Key in keyof A extends number ? `${keyof A}` : keyof A]: Variable<Type>\n}\n\ntype MakeTokens<T extends CreateTokens> = T extends {\n  color?: infer E\n  space?: infer F\n  size?: infer G\n  radius?: infer H\n  zIndex?: infer J\n}\n  ? {\n      color: NormalizeTokens<E, string>\n      space: NormalizeTokens<F, number>\n      size: NormalizeTokens<G, number>\n      radius: NormalizeTokens<H, number>\n      zIndex: NormalizeTokens<J, number>\n    } & Omit<\n      {\n        [key in keyof T]: NormalizeTokens<T[key]>\n      },\n      'color' | 'space' | 'size' | 'radius' | 'zIndex'\n    >\n  : never\n", "import type { StaticConfig } from './types'\n\nconst ReactNativeStaticConfigs = new WeakMap<any, Partial<StaticConfig> | null>()\n\nexport function getReactNativeConfig(Component: any) {\n  if (!Component) return\n\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    if (Component.propTypes?.onTextInput || Component.propTypes?.onChangeText) {\n      return RNConfigs.TextInput\n    }\n    if (Component.getSizeWithHeaders) {\n      return RNConfigs.Image\n    }\n    if (Component.propTypes?.textBreakStrategy) {\n      return RNConfigs.Text\n    }\n\n    // can optimize plain View or Text to not be react native specific\n\n    // can assume everything else is react native on native\n    return RNConfigs.default\n  }\n  if (Component.getSize && Component.prefetch) {\n    return RNConfigs.Image\n  }\n  if (Component.displayName === 'Text' && Component.render) {\n    return RNConfigs.Text\n  }\n  if (\n    Component.render &&\n    (Component.displayName === 'ScrollView' || Component.displayName === 'View')\n  ) {\n    return RNConfigs.default\n  }\n  if (Component.State?.blurTextInput) {\n    return RNConfigs.TextInput\n  }\n\n  return ReactNativeStaticConfigs.get(Component)\n}\n\nconst RNConfigs = {\n  Image: {\n    isReactNative: true,\n    inlineProps: new Set(['src', 'width', 'height']),\n  },\n  Text: {\n    isReactNative: true,\n    isText: true,\n  },\n  TextInput: {\n    isReactNative: true,\n    isInput: true,\n    isText: true,\n  },\n  default: {\n    isReactNative: true,\n  },\n} satisfies Record<string, Partial<StaticConfig>>\n\n/**\n * @deprecated this is no longer necessary, tamagui auto-detects RN views\n */\nexport function setupReactNative(rnExports: Record<string, any>) {\n  // no-op\n  // for (const key in rnExports) {\n  //   if (key[0].toLowerCase() === key[0]) continue\n  //   const val = rnExports[key]\n  //   if (val && typeof val === 'object') {\n  //     ReactNativeStaticConfigs.set(val, {\n  //       isReactNative: true,\n  //       isText: key === 'Text' || key === 'TextInput',\n  //       isInput: key === 'TextInput' || key === 'TextArea',\n  //       inlineProps: key === 'Image' ? new Set(['src', 'width', 'height']) : undefined,\n  //     })\n  //   }\n  // }\n}\n", "import type { GenericVariantDefinitions } from '../types'\n\n// deep merge variants\n// except for functions which override any parents\n\nexport const mergeVariants = (\n  parentVariants: GenericVariantDefinitions,\n  ourVariants: GenericVariantDefinitions,\n  level = 0\n) => {\n  const variants = {}\n\n  for (const key in ourVariants) {\n    const parentVariant = parentVariants?.[key]\n    const ourVariant = ourVariants[key]\n    if (!parentVariant || typeof ourVariant === 'function') {\n      variants[key] = ourVariant\n    } else if (parentVariant && !ourVariant) {\n      variants[key] = parentVariant[key]\n    } else {\n      if (level === 0) {\n        variants[key] = mergeVariants(\n          parentVariant as Record<string, any>,\n          ourVariant as Record<string, any>,\n          level + 1\n        )\n      } else {\n        variants[key] = {\n          ...parentVariant,\n          ...ourVariant,\n        }\n      }\n    }\n  }\n\n  return {\n    ...parentVariants,\n    ...variants,\n  }\n}\n", "import { createComponent } from './createComponent'\nimport type { StyledContext } from './helpers/createStyledContext'\nimport { mergeVariants } from './helpers/mergeVariants'\nimport type { GetRef } from './interfaces/GetRef'\nimport { getReactNativeConfig } from './setupReactNative'\nimport type {\n  GetBaseStyles,\n  GetNonStyledProps,\n  GetStaticConfig,\n  GetStyledVariants,\n  GetVariantValues,\n  InferStyledProps,\n  StaticConfig,\n  StaticConfigPublic,\n  StylableComponent,\n  TamaDefer,\n  TamaguiComponent,\n  ThemeValueGet,\n  VariantDefinitions,\n  VariantSpreadFunction,\n} from './types'\nimport type { Text } from './views/Text'\n\ntype AreVariantsUndefined<Variants> =\n  // because we pass in the Generic variants which for some reason has this :)\n  Required<Variants> extends { _isEmpty: 1 } ? true : false\n\ntype GetVariantAcceptedValues<V> = V extends Object\n  ? {\n      [Key in keyof V]?: V[Key] extends VariantSpreadFunction<any, infer Val>\n        ? Val\n        : GetVariantValues<keyof V[Key]>\n    }\n  : undefined\n\nexport function styled<\n  ParentComponent extends StylableComponent,\n  StyledStaticConfig extends StaticConfigPublic,\n  Variants extends VariantDefinitions<ParentComponent, StyledStaticConfig>,\n>(\n  ComponentIn: ParentComponent,\n  // this should be Partial<GetProps<ParentComponent>> but causes excessively deep type issues\n  options?: Partial<InferStyledProps<ParentComponent, StyledStaticConfig>> & {\n    name?: string\n    variants?: Variants | undefined\n    defaultVariants?: GetVariantAcceptedValues<Variants>\n    context?: StyledContext\n    /** @deprecated pass in instead as the third argument to styled() */\n    acceptsClassName?: boolean\n  },\n  staticExtractionOptions?: StyledStaticConfig\n) {\n  // do type stuff at top for easier readability\n\n  // get parent props without pseudos and medias so we can rebuild both with new variants\n  // get parent props without pseudos and medias so we can rebuild both with new variants\n  type ParentNonStyledProps = GetNonStyledProps<ParentComponent>\n  type ParentStylesBase = GetBaseStyles<ParentComponent, StyledStaticConfig>\n  type ParentVariants = GetStyledVariants<ParentComponent>\n\n  type OurVariantProps = AreVariantsUndefined<Variants> extends true\n    ? {}\n    : GetVariantAcceptedValues<Variants>\n  type MergedVariants = AreVariantsUndefined<Variants> extends true\n    ? ParentVariants\n    : AreVariantsUndefined<ParentVariants> extends true\n      ? Omit<OurVariantProps, '_isEmpty'>\n      : {\n          // exclude _isEmpty as it no longer is empty\n          [Key in Exclude<keyof ParentVariants | keyof OurVariantProps, '_isEmpty'>]?:\n            | (Key extends keyof ParentVariants ? ParentVariants[Key] : undefined)\n            | (Key extends keyof OurVariantProps ? OurVariantProps[Key] : undefined)\n        }\n\n  type Accepted = StyledStaticConfig['accept']\n  type CustomTokenProps = Accepted extends Record<string, any>\n    ? {\n        [Key in keyof Accepted]?:\n          | (Key extends keyof ParentStylesBase ? ParentStylesBase[Key] : never)\n          | (Accepted[Key] extends 'style'\n              ? Partial<InferStyledProps<ParentComponent, StyledStaticConfig>>\n              : Accepted[Key] extends 'textStyle'\n                ? Partial<InferStyledProps<typeof Text, StyledStaticConfig>>\n                : Omit<ThemeValueGet<Accepted[Key]>, 'unset'>)\n      }\n    : {}\n\n  /**\n   * de-opting a bit of type niceness because were hitting depth issues too soon\n   * before we had:\n   *\n   * type OurPropsBase = OurStylesBase & PseudoProps<Partial<OurStylesBase>>\n   * and then below in type Props you would remove the PseudoProps line\n   * that would give you nicely merged pseudo sub-styles but its just too much for TS\n   * so now pseudos wont be nicely typed inside media queries, but at least we can nest\n   */\n\n  type StyledComponent = TamaguiComponent<\n    TamaDefer,\n    GetRef<ParentComponent>,\n    ParentNonStyledProps,\n    Accepted extends Record<string, any>\n      ? ParentStylesBase & CustomTokenProps\n      : ParentStylesBase,\n    MergedVariants,\n    GetStaticConfig<ParentComponent, StyledStaticConfig>\n  >\n\n  // validate not using a variant over an existing valid style\n  if (process.env.NODE_ENV !== 'production') {\n    if (!ComponentIn) {\n      throw new Error(`No component given to styled()`)\n    }\n  }\n\n  const parentStaticConfig = ComponentIn['staticConfig'] as StaticConfig | undefined\n\n  const isPlainStyledComponent =\n    !!parentStaticConfig &&\n    !(parentStaticConfig.isReactNative || parentStaticConfig.isHOC)\n\n  const isNonStyledHOC = parentStaticConfig?.isHOC && !parentStaticConfig?.isStyledHOC\n\n  let Component: any =\n    isNonStyledHOC || isPlainStyledComponent\n      ? ComponentIn\n      : parentStaticConfig?.Component || ComponentIn\n\n  const reactNativeConfig = !parentStaticConfig\n    ? getReactNativeConfig(Component)\n    : undefined\n\n  const isReactNative = Boolean(\n    reactNativeConfig ||\n      staticExtractionOptions?.isReactNative ||\n      parentStaticConfig?.isReactNative\n  )\n\n  const staticConfigProps = (() => {\n    let {\n      variants,\n      name,\n      defaultVariants,\n      acceptsClassName: acceptsClassNameProp,\n      context,\n      ...defaultProps\n    } = options || {}\n\n    let parentDefaultVariants\n    let parentDefaultProps\n\n    if (parentStaticConfig) {\n      const avoid = parentStaticConfig.isHOC && !parentStaticConfig.isStyledHOC\n      if (!avoid) {\n        const pdp = parentStaticConfig.defaultProps\n\n        // apply parent props only if not already defined, they are lesser specificity\n        for (const key in pdp) {\n          const val = pdp[key]\n          if (parentStaticConfig.defaultVariants) {\n            if (key in parentStaticConfig.defaultVariants) {\n              // ensure we don't add it if its also in our default variants so we keep the order!\n              if (!defaultVariants || !(key in defaultVariants)) {\n                parentDefaultVariants ||= {}\n                parentDefaultVariants[key] = val\n              }\n            }\n          }\n          if (!(key in defaultProps) && (!defaultVariants || !(key in defaultVariants))) {\n            parentDefaultProps ||= {}\n            parentDefaultProps[key] = pdp[key]\n          }\n        }\n        if (parentStaticConfig.variants) {\n          // @ts-expect-error\n          variants = mergeVariants(parentStaticConfig.variants, variants)\n        }\n      }\n    }\n\n    // applies everything in the right order! order is important\n    if (parentDefaultProps || defaultVariants || parentDefaultVariants) {\n      defaultProps = {\n        ...parentDefaultProps,\n        ...parentDefaultVariants,\n        ...defaultProps,\n        ...defaultVariants,\n      }\n    }\n\n    if (parentStaticConfig?.isHOC) {\n      // if HOC we map name => componentName as we have a difference in how we name prop vs styled() there\n      if (name) {\n        // @ts-ignore\n        defaultProps.componentName = name\n      }\n    }\n\n    const isText = Boolean(staticExtractionOptions?.isText || parentStaticConfig?.isText)\n\n    const acceptsClassName =\n      staticExtractionOptions?.acceptsClassName ??\n      acceptsClassNameProp ??\n      (isPlainStyledComponent ||\n        isReactNative ||\n        (parentStaticConfig?.isHOC && parentStaticConfig?.acceptsClassName))\n\n    const conf: Partial<StaticConfig> = {\n      ...parentStaticConfig,\n      ...staticExtractionOptions,\n      ...(!isPlainStyledComponent && {\n        Component,\n      }),\n      // @ts-expect-error\n      variants,\n      defaultProps,\n      defaultVariants,\n      componentName: name || parentStaticConfig?.componentName,\n      isReactNative,\n      isText,\n      acceptsClassName,\n      context,\n      ...reactNativeConfig,\n      isStyledHOC: Boolean(parentStaticConfig?.isHOC),\n      parentStaticConfig,\n    }\n\n    // bail on non className views as well\n    if (defaultProps['children'] || !acceptsClassName || context) {\n      conf.neverFlatten = true\n    }\n\n    return conf\n  })()\n\n  const component = createComponent(staticConfigProps || {})\n\n  for (const key in ComponentIn) {\n    // dont inherit propTypes\n    if (key === 'propTypes') continue\n    if (key in component) continue\n    // @ts-expect-error assigning static properties over\n    component[key] = ComponentIn[key]\n  }\n\n  return component as any as StyledComponent\n}\n\n// sanity check types:\n\n// type YP = GetProps<typeof InputFrame>\n// type x = YP['onChangeText']\n// type x2 = YP['size']\n// const X = <InputFrame placeholder=\"red\" hoverStyle={{}} />\n\n// import { Stack } from './views/Stack'\n// const X = styled(Stack, {\n//   variants: {\n//     size: {\n//       '...size': (val) => {\n//         return {\n//           pointerEvents: 'auto'\n//         }\n//       }\n//     },\n//     disabled: {\n//       true: {\n//         alignContent: 'center',\n//         opacity: 0.5,\n//         pointerEvents: 'none',\n//       },\n//     },\n//   } as const\n// })\n// // type variants = GetStyledVariants<typeof X>\n// const y = <X disabled size=\"$10\" />\n\n// sanity check more complex types:\n\n// import { Paragraph } from '../../text/src/Paragraph'\n// import { Text } from './views/Text'\n// import { getFontSized } from '../../get-font-sized/src'\n// import { SizableText } from '../../text/src/SizableText'\n// const Text1 = styled(Text, {\n//   name: 'SizableText',\n//   fontFamily: '$body',\n\n//   variants: {\n//     size: getFontSized,\n//   } as const,\n\n//   defaultVariants: {\n//     size: '$true',\n//   },\n// })\n\n// const Test2 = styled(Text1, {\n//   tag: 'p',\n//   userSelect: 'auto',\n//   color: '$color',\n// })\n\n// const Test3 = styled(Test2, {\n//   tag: 'p',\n//   userSelect: 'auto',\n//   color: '$color',\n\n//   variants: {\n//     ork: {\n//       true: {}\n//     }\n//   }\n// })\n\n// const Test = styled(Paragraph, {\n//   tag: 'p',\n//   userSelect: 'auto',\n//   color: '$color',\n\n//   variants: {\n//     someting: {\n//       true: {},\n//     },\n//   } as const,\n// })\n\n// type X = typeof Paragraph\n// type Props1 = GetProps<typeof Paragraph>\n// type z = typeof Text1\n// type ParentV = GetVariantProps<typeof Text1>\n// type Props = GetProps<typeof Test>\n\n// const y = <Test someting>sadad</Test>\n// const z = <Test3 someting=\"$true\" ork>sadad</Test3>\n\n//\n// merges variant types properly:\n\n// const OneVariant = styled(Stack, {\n//   variants: {\n//     variant: {\n//       test: { backgroundColor: 'gray' },\n//     },\n//   } as const,\n// })\n// const Second = styled(Stack, {\n//   variants: {\n//     variant: {\n//       simple: { backgroundColor: 'gray' },\n//       colorful: { backgroundColor: 'violet' },\n//     },\n//   } as const,\n// })\n// const TwoVariant = styled(OneVariant, {\n//   variants: {\n//     variant: {\n//       simple: { backgroundColor: 'gray' },\n//       colorful: { backgroundColor: 'violet' },\n//     },\n//   } as const,\n// })\n\n// type X = typeof OneVariant extends TamaguiComponent<any, any, any, infer V> ? V : any\n// type V = typeof Second extends TamaguiComponent<any, any, any, infer V> ? V : any\n\n// type V2 = VariantDefinitions<typeof OneVariant>\n\n// type R = typeof TwoVariant extends TamaguiComponent<any, any, any, infer V> ? V : any\n\n// type Keys = keyof X | keyof V\n// type Z = {\n//   [Key in Keys]: V[Key] | X[Key]\n// }\n\n// const a: Z = {\n//   variant: 'colorful',\n// }\n// const b: Z = {\n//   variant: 'simple',\n// }\n// const c: Z = {\n//   variant: 'invalid',\n// }\n\n// const y = <TwoVariant variant=\"colorful\" />\n", "import type { StaticConfig } from '../types'\n\nexport function isTamaguiComponent<A>(\n  comp: A,\n  name?: string\n): comp is A & {\n  staticConfig: StaticConfig\n} {\n  const config = comp?.['staticConfig'] as StaticConfig | undefined\n  return Boolean(config && (name ? name === config.componentName : true))\n}\n", "import React from 'react'\n\nimport type { StaticConfig } from '../types'\nimport { isTamaguiComponent } from './isTamaguiComponent'\n\nexport const isTamaguiElement = (\n  child: any,\n  name?: string\n): child is React.ReactElement<any> & { type: { staticConfig: StaticConfig } } => {\n  return React.isValidElement(child) && isTamaguiComponent(child.type, name)\n}\n", "import type { ThemeName } from '../types'\nimport { useThemeState } from './useThemeState'\n\n// can probably simplify this way down\nconst forceUpdateState = { forceClassName: true, deopt: true, needsUpdate: () => true }\nconst forceKeys = { current: new Set(['']) }\n\nexport function useThemeName(): ThemeName {\n  return useThemeState(forceUpdateState, false, forceKeys)?.name || ''\n}\n", "import React from 'react'\n\nimport { getConfig } from '../config'\nimport { ComponentContext } from '../contexts/ComponentContext'\n\nexport const useConfiguration = () => {\n  const { groups, animationDriver, ...restComponentConfig } =\n    React.useContext(ComponentContext)\n  const { animations, ...restConfig } = getConfig()\n  return {\n    ...restConfig,\n    ...restComponentConfig,\n    animationDriver: animationDriver ?? getConfig().animations,\n  }\n}\n", "import { isTouchable, isWeb } from '@tamagui/constants'\nimport { useDidFinishSSR } from '@tamagui/use-did-finish-ssr'\n\nexport const useIsTouchDevice = () => {\n  return !isWeb ? true : useDidFinishSSR() ? isTouchable : false\n}\n", "import { useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport React from 'react'\nimport { getConfig } from '../config'\nimport { ComponentContext } from '../contexts/ComponentContext'\nimport { useSplitStyles } from '../helpers/getSplitStyles'\nimport { subscribeToContextGroup } from '../helpers/subscribeToContextGroup'\nimport type { SplitStyleProps, StaticConfig, ThemeParsed, UseMediaState } from '../types'\nimport { Stack } from '../views/Stack'\nimport type { ViewProps, ViewStyle } from '../views/View'\nimport { useComponentState } from './useComponentState'\nimport { mediaState, useMedia } from './useMedia'\nimport { useThemeWithState } from './useTheme'\n\ntype UsePropsOptions = Pick<\n  SplitStyleProps,\n  'noExpand' | 'noNormalize' | 'noClass' | 'resolveValues'\n> & {\n  disableExpandShorthands?: boolean\n  forComponent?: { staticConfig: StaticConfig }\n  noClass?: boolean\n\n  /**\n   * Disable watching for media queries\n   */\n  noMedia?: boolean\n}\n\nexport type PropsWithoutMediaStyles<A> = {\n  // remove all media\n  [Key in keyof A extends `$${string}` ? never : keyof A]?: A[Key]\n}\n\ntype PropsLikeObject = (ViewProps & Record<string, any>) | Object\ntype StyleLikeObject = (ViewStyle & Record<string, any>) | Object\n\n/**\n * Returns props and style as a single object, expanding and merging shorthands and media queries.\n *\n * Use sparingly, it will loop props and trigger re-render on all media queries you access.\n *\n * */\nexport function useProps<A extends PropsLikeObject>(\n  props: A,\n  opts?: UsePropsOptions\n): PropsWithoutMediaStyles<A> {\n  const [propsOut, styleOut] = usePropsAndStyle(props, {\n    ...opts,\n    noExpand: true,\n    noNormalize: true,\n    resolveValues: 'none',\n  })\n  return {\n    ...propsOut,\n    ...styleOut,\n  }\n}\n\n/**\n * Returns only style values fully resolved and flattened with merged media queries and shorthands with all theme and token values resolved.\n *\n * Use sparingly, it will loop props and trigger re-render on all media queries you access.\n *\n * */\nexport function useStyle<A extends StyleLikeObject>(\n  props: A,\n  opts?: UsePropsOptions\n): PropsWithoutMediaStyles<A> {\n  return usePropsAndStyle(props, opts)[1] || {}\n}\n\n/**\n * Returns [props, styles, theme, media] fully resolved and flattened with merged media queries and shorthands with all theme and token values resolved.\n *\n * Use sparingly, it will loop props and trigger re-render on all media queries you access.\n *\n * */\nexport function usePropsAndStyle<A extends PropsLikeObject>(\n  props: A,\n  opts?: UsePropsOptions\n): [PropsWithoutMediaStyles<A>, PropsWithoutMediaStyles<A>, ThemeParsed, UseMediaState] {\n  const staticConfig = opts?.forComponent?.staticConfig ?? Stack.staticConfig\n  const [theme, themeState] = useThemeWithState({\n    componentName: staticConfig.componentName,\n    name: 'theme' in props ? props.theme : undefined,\n    inverse: 'themeInverse' in props ? props.themeInverse : undefined,\n    needsUpdate() {\n      return true\n    },\n  })\n  const componentContext = React.useContext(ComponentContext as any) as any\n  const { state, disabled, setStateShallow } = useComponentState(\n    props,\n    componentContext,\n    staticConfig,\n    getConfig()\n  )\n\n  const mediaStateNow = opts?.noMedia\n    ? // not safe to use mediaState but really marginal to hit this\n      mediaState\n    : useMedia()\n\n  const splitStyles = useSplitStyles(\n    props,\n    staticConfig,\n    theme,\n    themeState?.name || '',\n    state,\n    {\n      isAnimated: false,\n      mediaState: mediaStateNow,\n      noSkip: true,\n      noMergeStyle: true,\n      noClass: true,\n      resolveValues: 'auto',\n      ...opts,\n    },\n    null,\n    componentContext\n  )\n\n  const { mediaGroups, pseudoGroups } = splitStyles\n\n  useIsomorphicLayoutEffect(() => {\n    if (disabled) {\n      return\n    }\n\n    if (state.unmounted) {\n      setStateShallow({ unmounted: false })\n      return\n    }\n\n    return subscribeToContextGroup({\n      componentContext,\n      setStateShallow,\n      state,\n      mediaGroups,\n      pseudoGroups,\n    })\n  }, [\n    disabled,\n    pseudoGroups ? Object.keys([...pseudoGroups]).join('') : 0,\n    mediaGroups ? Object.keys([...mediaGroups]).join('') : 0,\n  ])\n\n  return [splitStyles.viewProps, splitStyles.style || {}, theme, mediaState] as any\n}\n", "import { validStyles } from '@tamagui/helpers'\n\nimport { stackDefaultStyles } from '../constants/constants'\nimport { createComponent } from '../createComponent'\nimport type {\n  StackNonStyleProps,\n  StackProps,\n  StackStyleBase,\n  TamaguiElement,\n} from '../types'\n\nexport type Stack = TamaguiElement\n\nexport const Stack = createComponent<\n  StackProps,\n  Stack,\n  StackNonStyleProps,\n  StackStyleBase\n>({\n  acceptsClassName: true,\n  defaultProps: stackDefaultStyles,\n  validStyles,\n})\n\nStack['displayName'] = 'Stack'\n\n// test types\n// export const YStack = styled(Stack, {\n//   flexDirection: 'column',\n// })\n// // test types\n// const x00 = <Stack missing={0} /> // should err\n// const x0 = <YStack missing={0} /> // should err\n// const x1 = (props: StackProps) => <YStack {...props} />\n// type ys = typeof YStack\n// type ysv = ys extends StaticComponent<any, infer V> ? V : unknown\n", "import type { FontLanguageProps } from './FontLanguage.types'\n\nexport const FontLanguage = ({ children, ...props }: FontLanguageProps) => {\n  return (\n    <div\n      style={{\n        display: 'contents',\n      }}\n      className={Object.entries(props)\n        .map(([name, language]) => `t_lang-${name}-${language}`)\n        .join(' ')}\n    >\n      {children}\n    </div>\n  )\n}\n\nFontLanguage['displayName'] = 'FontLanguage'\n", "import React from 'react'\n\nimport { ComponentContext } from '../contexts/ComponentContext'\nimport type { AnimationDriver } from '../types'\n\ninterface ConfigurationProps {\n  animationDriver?: AnimationDriver | null\n  children: React.ReactNode\n}\n\nexport const Configuration = (props: ConfigurationProps) => {\n  const current = React.useContext(ComponentContext)\n  return <ComponentContext.Provider {...current} {...props} />\n}\n\nConfiguration['displayName'] = 'Configuration'\n", "import { useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport * as React from 'react'\n\n// keeps a reference to the current value easily\n\nexport function useGet<A>(\n  currentValue: A,\n  initialValue?: any,\n  forwardToFunction?: boolean\n): () => A {\n  const curRef = React.useRef<any>(initialValue ?? currentValue)\n  useIsomorphicLayoutEffect(() => {\n    curRef.current = currentValue\n  })\n\n  return React.useCallback(\n    forwardToFunction\n      ? (...args) => curRef.current?.apply(null, args)\n      : () => curRef.current,\n    []\n  )\n}\n", "import { useGet } from './useGet'\n\ntype AnyFunction = (...args: any[]) => any\n\nexport function useEvent<T extends AnyFunction>(callback?: T): T {\n  return useGet(callback, defaultValue, true) as T\n}\n\nconst defaultValue = () => {\n  throw new Error('Cannot call an event handler while rendering.')\n}\n", "import * as Helpers from '@tamagui/helpers'\n\nimport { getConfig } from './config'\nimport { getAllRules, getAllSelectors, getAllTransforms } from './helpers/insertStyleRule'\nimport { mediaState } from './hooks/useMedia'\n\n// easy introspection\n// only included in dev mode\n\nexport const Tamagui = (() => {\n  if (process.env.NODE_ENV === 'development') {\n    class TamaguiManager {\n      Helpers = Helpers\n\n      get mediaState() {\n        return { ...mediaState }\n      }\n\n      get config() {\n        return getConfig()\n      }\n\n      get insertedRules() {\n        return getAllRules()\n      }\n\n      get allSelectors() {\n        return getAllSelectors()\n      }\n\n      get allTransforms() {\n        return getAllTransforms()\n      }\n\n      get identifierToValue() {\n        return identifierToValue\n      }\n    }\n    return new TamaguiManager()\n  }\n})()\n\nconst identifierToValue = new Map<string, any>()\n\nexport const getValueFromIdentifier = (identifier: string) => {\n  return identifierToValue.get(identifier)\n}\n\nexport const setIdentifierValue = (identifier: string, value: any) => {\n  identifierToValue.set(identifier, value)\n}\n", "import { simpleHash } from '@tamagui/helpers'\n\nimport { THEME_CLASSNAME_PREFIX } from '../constants/constants'\nimport type { Variable } from '../createVariable'\nimport { variableToString } from '../createVariable'\nimport type { CreateTamaguiProps, ThemeParsed } from '../types'\nimport { tokensValueToVariable } from './registerCSSVariable'\nimport { getSetting } from '../config'\nimport { sortString } from './sortString'\n\nconst darkLight = ['dark', 'light']\nconst lightDark = ['light', 'dark']\n\nexport function getThemeCSSRules(props: {\n  config: CreateTamaguiProps\n  themeName: string\n  theme: ThemeParsed\n  names: string[]\n  hasDarkLight?: boolean\n}) {\n  const cssRuleSets: string[] = []\n\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    return cssRuleSets\n  }\n  if (\n    !process.env.TAMAGUI_DOES_SSR_CSS ||\n    process.env.TAMAGUI_DOES_SSR_CSS === 'mutates-themes' ||\n    process.env.TAMAGUI_DOES_SSR_CSS === 'false'\n  ) {\n    const { config, themeName, theme, names } = props\n\n    // special case for SSR\n    const hasDarkLight =\n      props.hasDarkLight ??\n      (config.themes && ('light' in config.themes || 'dark' in config.themes))\n\n    const CNP = `.${THEME_CLASSNAME_PREFIX}`\n    let vars = ''\n\n    // themeToVariableToValueMap.set(theme, {})\n    // const varToValMap = themeToVariableToValueMap.get(theme)\n    for (const themeKey in theme) {\n      const variable = theme[themeKey] as Variable\n      let value: any = null\n\n      if (!tokensValueToVariable.has(variable.val)) {\n        value = variable.val\n      } else {\n        value = tokensValueToVariable.get(variable.val)!.variable\n      }\n      // Hash themeKey in case it has invalid chars too\n      vars += `--${process.env.TAMAGUI_CSS_VARIABLE_PREFIX || ''}${simpleHash(\n        themeKey,\n        40\n      )}:${value};`\n    }\n\n    const isDarkBase = themeName === 'dark'\n    const isLightBase = themeName === 'light'\n    const baseSelectors = names.map((name) => `${CNP}${name}`)\n    const selectorsSet = new Set(isDarkBase || isLightBase ? baseSelectors : [])\n\n    // since we dont specify dark/light in classnames we have to do an awkward specificity war\n    // use config.maxDarkLightNesting to determine how deep you can nest until it breaks\n    if (hasDarkLight) {\n      const maxDepth = getSetting('maxDarkLightNesting') ?? 3\n\n      for (const subName of names) {\n        const isDark = isDarkBase || subName.startsWith('dark_')\n        const isLight = !isDark && (isLightBase || subName.startsWith('light_'))\n\n        if (!(isDark || isLight)) {\n          // neither light nor dark subtheme, just generate one selector with :root:root which\n          // will override all :root light/dark selectors generated below\n          selectorsSet.add(`${CNP}${subName}`)\n          continue\n        }\n\n        const childSelector = `${CNP}${subName.replace(/^(dark|light)_/, '')}`\n        const order = isDark ? darkLight : lightDark\n        const [stronger, weaker] = order\n        const numSelectors = Math.round(maxDepth * 1.5)\n\n        for (let depth = 0; depth < numSelectors; depth++) {\n          const isOdd = depth % 2 === 1\n\n          // wtf is this continue:\n          if (isOdd && depth < 3) {\n            continue\n          }\n\n          const parents = new Array(depth + 1).fill(0).map((_, idx) => {\n            return `${CNP}${idx % 2 === 0 ? stronger : weaker}`\n          })\n\n          let parentSelectors = parents.length > 1 ? parents.slice(1) : parents\n\n          if (isOdd) {\n            const [_first, second, ...rest] = parentSelectors\n            parentSelectors = [second, ...rest, second]\n          }\n\n          const lastParentSelector = parentSelectors[parentSelectors.length - 1]\n          const nextChildSelector =\n            childSelector === lastParentSelector ? '' : childSelector\n\n          // for light/dark/light:\n          const parentSelectorString = parentSelectors.join(' ')\n          selectorsSet.add(`${parentSelectorString} ${nextChildSelector}`)\n          // selectorsSet.add(\n          //   `${parentSelectors.join(' ')} ${nextChildSelector}.is_inversed`.trim()\n          // )\n        }\n      }\n    }\n\n    const selectors = [...selectorsSet].sort(sortString)\n\n    // only do our :root attach if it's not light/dark - not support sub themes on root saves a lot of effort/size\n    // this isBaseTheme logic could probably be done more efficiently above\n    const selectorsString =\n      selectors\n        .map((x) => {\n          const rootSep = isBaseTheme(x) && getSetting('themeClassNameOnRoot') ? '' : ' '\n          return `:root${rootSep}${x}`\n        })\n        .join(', ') + `, .tm_xxt`\n\n    const css = `${selectorsString} {${vars}}`\n    cssRuleSets.push(css)\n\n    if (getSetting('shouldAddPrefersColorThemes')) {\n      const bgString = theme.background\n        ? `background:${variableToString(theme.background)};`\n        : ''\n      const fgString = theme.color ? `color:${variableToString(theme.color)}` : ''\n      const bodyRules = `body{${bgString}${fgString}}`\n      const isDark = themeName.startsWith('dark')\n      const baseName = isDark ? 'dark' : 'light'\n      const lessSpecificSelectors = selectors\n        .map((x) => {\n          if (x == darkSelector || x === lightSelector) return `:root`\n          if (\n            (isDark && x.startsWith(lightSelector)) ||\n            (!isDark && x.startsWith(darkSelector))\n          ) {\n            return\n          }\n          return x.replace(/^\\.t_(dark|light) /, '').trim()\n        })\n        .filter(Boolean)\n        .join(', ')\n\n      const themeRules = `${lessSpecificSelectors} {${vars}}`\n      const prefersMediaSelectors = `@media(prefers-color-scheme:${baseName}){\n    ${bodyRules}\n    ${themeRules}\n  }`\n      cssRuleSets.push(prefersMediaSelectors)\n    }\n\n    const selectionStyles = getSetting('selectionStyles')\n    if (selectionStyles) {\n      const rules = selectionStyles(theme as any)\n      if (rules) {\n        const selectionSelectors = baseSelectors.map((s) => `${s} ::selection`).join(', ')\n        const styles = Object.entries(rules)\n          .flatMap(([k, v]) =>\n            v\n              ? `${k === 'backgroundColor' ? 'background' : k}:${variableToString(v)}`\n              : []\n          )\n          .join(';')\n        if (styles) {\n          const css = `${selectionSelectors}{${styles}}`\n          cssRuleSets.push(css)\n        }\n      }\n    }\n  }\n\n  return cssRuleSets\n}\n\nconst darkSelector = '.t_dark'\nconst lightSelector = '.t_light'\nconst isBaseTheme = (x: string) =>\n  x === darkSelector ||\n  x === lightSelector ||\n  x.startsWith('.t_dark ') ||\n  x.startsWith('.t_light ')\n", "import type { DedupedThemes, ThemeParsed } from '../types'\n\nconst themesRaw: Record<string, ThemeParsed> = {}\n\n// this seems expensive but its necessary to do two loops unless we want to refactor a variety of things again\n// not *too* much work but not a big cost doing the two loops\nexport function proxyThemesToParents(\n  dedupedThemes: DedupedThemes\n): Record<string, ThemeParsed> {\n  // fill it in so we can look it up next\n  for (const { names, theme } of dedupedThemes) {\n    for (const name of names) {\n      themesRaw[name] = theme\n    }\n  }\n\n  const themes: Record<string, ThemeParsed> = {}\n  // now go back and re-fill it in\n  // we do have to call this once per non-duplicated theme!\n  // because they could have different parent chains\n  // despite being the same theme\n\n  for (const { names, theme } of dedupedThemes) {\n    for (const themeName of names) {\n      const proxiedTheme = proxyThemeToParents(themeName, theme)\n      themes[themeName] = proxiedTheme\n    }\n  }\n\n  return themes\n}\n\nexport function proxyThemeToParents(themeName: string, theme: ThemeParsed) {\n  const out = {}\n  const cur: string[] = []\n\n  // if theme is dark_blue_alt1_Button\n  // this will be the parent names in order: ['dark', 'dark_blue', 'dark_blue_alt1\"]\n  const parents = themeName\n    .split('_')\n    .slice(0, -1)\n    .map((part) => {\n      cur.push(part)\n      return cur.join('_')\n    })\n\n  for (const parent of parents) {\n    Object.assign(out, themesRaw[parent])\n  }\n  Object.assign(out, theme)\n  return out\n}\n", "import { createVariable, isVariable } from '../createVariable'\n\n// mutates, freeze after\n// shared by createTamagui so extracted here\nexport function ensureThemeVariable(theme: any, key: string) {\n  const val = theme[key]\n  if (!isVariable(val)) {\n    theme[key] = createVariable({\n      key,\n      name: key,\n      val,\n    })\n  } else {\n    if (val.name !== key) {\n      // rename to theme name\n      theme[key] = createVariable({\n        key: val.name,\n        name: key,\n        val: val.val,\n      })\n    }\n  }\n}\n", "import { isWeb } from '@tamagui/constants'\nimport { configListeners, setConfig, setTokens } from './config'\nimport type { Variable } from './createVariable'\nimport type { DeepVariableObject } from './createVariables'\nimport { createVariables } from './createVariables'\nimport { getThemeCSSRules } from './helpers/getThemeCSSRules'\nimport {\n  getAllRules,\n  listenForSheetChanges,\n  scanAllSheets,\n} from './helpers/insertStyleRule'\nimport { proxyThemesToParents } from './helpers/proxyThemeToParents'\nimport { registerCSSVariable, variableToCSS } from './helpers/registerCSSVariable'\nimport { ensureThemeVariable } from './helpers/themes'\nimport { configureMedia } from './hooks/useMedia'\nimport { parseFont, registerFontVariables } from './insertFont'\nimport { Tamagui } from './Tamagui'\nimport type {\n  CreateTamaguiProps,\n  DedupedTheme,\n  DedupedThemes,\n  GenericFont,\n  GetCSS,\n  InferTamaguiConfig,\n  TamaguiInternalConfig,\n  ThemeParsed,\n  ThemesLikeObject,\n  TokensMerged,\n  TokensParsed,\n} from './types'\n\n// config is re-run by @tamagui/static, dont double validate\nconst createdConfigs = new WeakMap<any, boolean>()\n\nexport function createTamagui<Conf extends CreateTamaguiProps>(\n  configIn: Conf\n): InferTamaguiConfig<Conf> {\n  if (process.env.NODE_ENV === 'test' && globalThis.__tamaguiConfig) {\n    console.warn(\n      `Warning: You somehow have duplicate Tamagui dependencies, this can cause issues. Tamagui is working around this by loading a previously loaded config in test mode. `\n    )\n    return globalThis.__tamaguiConfig\n  }\n\n  if (createdConfigs.has(configIn)) {\n    return configIn as any\n  }\n\n  // ensure variables\n  const tokensParsed: TokensParsed = {} as any\n  const tokens = createVariables(configIn.tokens || {})\n\n  if (configIn.tokens) {\n    // faster lookups\n    const tokensMerged: TokensMerged = {} as any\n    for (const cat in tokens) {\n      tokensParsed[cat] = {}\n      tokensMerged[cat] = {}\n      const tokenCat = tokens[cat]\n      for (const key in tokenCat) {\n        const val = tokenCat[key]\n        const prefixedKey = `$${key}`\n        tokensParsed[cat][prefixedKey] = val as any\n        tokensMerged[cat][prefixedKey] = val as any\n        tokensMerged[cat][key] = val as any\n      }\n    }\n    setTokens(tokensMerged)\n  }\n\n  let foundThemes: DedupedThemes | undefined\n  if (configIn.themes) {\n    const noThemes = Object.keys(configIn.themes).length === 0\n    if (noThemes) {\n      foundThemes = scanAllSheets(noThemes, tokensParsed)\n    }\n    if (process.env.TAMAGUI_REACT_19 && process.env.TAMAGUI_SKIP_THEME_OPTIMIZATION) {\n      // save some bundle\n    } else {\n      if (noThemes) {\n        listenForSheetChanges()\n      }\n    }\n  }\n\n  let fontSizeTokens: Set<string> | null = null\n  let fontsParsed:\n    | {\n        [k: string]: DeepVariableObject<GenericFont<string>>\n      }\n    | undefined\n\n  if (configIn.fonts) {\n    const fontTokens = Object.fromEntries(\n      Object.entries(configIn.fonts).map(([k, v]) => {\n        return [k, createVariables(v, 'f', true)]\n      })\n    )\n\n    fontsParsed = (() => {\n      const res = {} as typeof fontTokens\n      for (const familyName in fontTokens) {\n        const font = fontTokens[familyName]\n        const fontParsed = parseFont(font)\n        res[`$${familyName}`] = fontParsed\n        if (!fontSizeTokens && fontParsed.size) {\n          fontSizeTokens = new Set(Object.keys(fontParsed.size))\n        }\n      }\n      return res!\n    })()\n  }\n\n  const specificTokens = {}\n\n  const themeConfig = (() => {\n    const cssRuleSets: string[] = []\n\n    const declarations: string[] = []\n    const fontDeclarations: Record<\n      string,\n      { name: string; declarations: string[]; language?: string }\n    > = {}\n\n    for (const key in tokens) {\n      for (const skey in tokens[key]) {\n        const variable = tokens[key][skey] as any as Variable\n\n        // set specific tokens (like $size.sm)\n        specificTokens[`$${key}.${skey}`] = variable\n\n        if (process.env.NODE_ENV === 'development') {\n          if (typeof variable === 'undefined') {\n            throw new Error(\n              `No value for tokens.${key}.${skey}:\\n${JSON.stringify(variable, null, 2)}`\n            )\n          }\n        }\n\n        if (isWeb) {\n          registerCSSVariable(variable)\n          declarations.push(variableToCSS(variable, key === 'zIndex'))\n        }\n      }\n    }\n\n    if (process.env.TAMAGUI_TARGET === 'web') {\n      for (const key in fontsParsed) {\n        const fontParsed = fontsParsed[key]\n        const [name, language] = key.includes('_') ? key.split('_') : [key]\n        const fontVars = registerFontVariables(fontParsed)\n        fontDeclarations[key] = {\n          name: name.slice(1),\n          declarations: fontVars,\n          language,\n        }\n      }\n\n      const sep = configIn.cssStyleSeparator || ''\n      function declarationsToRuleSet(decs: string[], selector = '') {\n        return `:root${selector} {${sep}${[...decs].join(`;${sep}`)}${sep}}`\n      }\n\n      // non-font\n      cssRuleSets.push(declarationsToRuleSet(declarations))\n\n      // fonts\n      if (fontDeclarations) {\n        for (const key in fontDeclarations) {\n          const { name, declarations, language = 'default' } = fontDeclarations[key]\n          const fontSelector = `.font_${name}`\n          const langSelector = `:root .t_lang-${name}-${language} ${fontSelector}`\n          const selectors =\n            language === 'default' ? ` ${fontSelector}, ${langSelector}` : langSelector\n          const specificRuleSet = declarationsToRuleSet(declarations, selectors)\n          cssRuleSets.push(specificRuleSet)\n        }\n      }\n    }\n\n    const themesIn = configIn.themes as ThemesLikeObject\n    const dedupedThemes = foundThemes ?? getThemesDeduped(themesIn)\n    const themes = proxyThemesToParents(dedupedThemes)\n\n    return {\n      themes,\n      cssRuleSets,\n      getThemeRulesSets() {\n        // then, generate CSS from de-duped\n        let themeRuleSets: string[] = []\n\n        if (isWeb) {\n          for (const { names, theme } of dedupedThemes) {\n            const nextRules = getThemeCSSRules({\n              config: configIn,\n              themeName: names[0],\n              names,\n              theme,\n            })\n\n            themeRuleSets = [...themeRuleSets, ...nextRules]\n          }\n        }\n\n        return themeRuleSets\n      },\n    }\n  })()\n\n  const shorthands = configIn.shorthands || {}\n\n  let lastCSSInsertedRulesIndex = -1\n\n  const getCSS: GetCSS = (opts = {}) => {\n    if (process.env.TAMAGUI_TARGET === 'web') {\n      const { separator = '\\n', sinceLastCall, exclude } = opts\n      if (sinceLastCall && lastCSSInsertedRulesIndex >= 0) {\n        // after first run with sinceLastCall\n        const rules = getAllRules()\n        lastCSSInsertedRulesIndex = rules.length\n        return rules.slice(lastCSSInsertedRulesIndex).join(separator)\n      }\n\n      // set so next time getNewCSS will trigger only new rules\n      lastCSSInsertedRulesIndex = 0\n\n      const runtimeStyles = getAllRules().join(separator)\n\n      if (exclude === 'design-system') {\n        return runtimeStyles\n      }\n\n      const designSystem = `._ovs-contain {overscroll-behavior:contain;}\n  .is_Text .is_Text {display:inline-flex;}\n  ._dsp_contents {display:contents;}\n  ${themeConfig.cssRuleSets.join(separator)}`\n\n      return `${designSystem}\n  ${exclude ? '' : themeConfig.getThemeRulesSets().join(separator)}\n  ${runtimeStyles}`\n    } else {\n      return ''\n    }\n  }\n\n  const getNewCSS: GetCSS = (opts) => getCSS({ ...opts, sinceLastCall: true })\n\n  const defaultFontSetting = configIn.settings?.defaultFont ?? configIn.defaultFont\n\n  const defaultFont = (() => {\n    let val = defaultFontSetting\n    if (val?.[0] === '$') {\n      val = val.slice(1)\n    }\n    return val\n  })()\n\n  // ensure prefixed with $\n  const defaultFontToken = defaultFont ? `$${defaultFont}` : ''\n\n  const unset = { ...configIn.unset }\n  if (!unset.fontFamily && defaultFont) {\n    unset.fontFamily = defaultFontToken\n  }\n\n  const config: TamaguiInternalConfig = {\n    fonts: {},\n    onlyAllowShorthands: false,\n    fontLanguages: [],\n    animations: {} as any,\n    media: {},\n    ...configIn,\n    unset,\n    settings: {\n      // move deprecated settings here so we can reference them all using `getSetting`\n      // TODO remove this on v2\n      disableSSR: configIn.disableSSR,\n      defaultFont: configIn.defaultFont,\n      disableRootThemeClass: configIn.disableRootThemeClass,\n      onlyAllowShorthands: configIn.onlyAllowShorthands,\n      mediaQueryDefaultActive: configIn.mediaQueryDefaultActive,\n      themeClassNameOnRoot: configIn.themeClassNameOnRoot,\n      cssStyleSeparator: configIn.cssStyleSeparator,\n\n      webContainerType: 'inline-size',\n      ...configIn.settings,\n    },\n    tokens: tokens as any,\n    // vite made this into a function if it wasn't set\n    shorthands,\n    inverseShorthands: shorthands\n      ? Object.fromEntries(Object.entries(shorthands).map(([k, v]) => [v, k]))\n      : {},\n    themes: themeConfig.themes as any,\n    fontsParsed: fontsParsed || {},\n    themeConfig,\n    tokensParsed: tokensParsed as any,\n    parsed: true,\n    getNewCSS,\n    getCSS,\n    defaultFont,\n    fontSizeTokens: fontSizeTokens || new Set(),\n    specificTokens,\n    defaultFontToken,\n    // const tokens = [...getToken(tokens.size[0])]\n    // .spacer-sm + ._dsp_contents._dsp-sm-hidden { margin-left: -var(--${}) }\n  }\n\n  setConfig(config)\n  configureMedia(config)\n\n  createdConfigs.set(config, true)\n\n  if (process.env.NODE_ENV === 'test') {\n    globalThis.__tamaguiConfig = config\n  }\n\n  if (configListeners.size) {\n    configListeners.forEach((cb) => cb(config))\n    configListeners.clear()\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.DEBUG?.startsWith('tamagui')) {\n      console.info('Tamagui config:', config)\n    }\n    if (!globalThis['Tamagui']) {\n      globalThis['Tamagui'] = Tamagui\n    }\n  }\n\n  return config as any\n}\n\n// dedupes the themes if given them via JS config\nfunction getThemesDeduped(themes: ThemesLikeObject): DedupedThemes {\n  const dedupedThemes: DedupedThemes = []\n  const existing = new Map<string, DedupedTheme>()\n\n  // first, de-dupe and parse them\n  for (const themeName in themes) {\n    // forces us to separate the dark/light themes (otherwise we generate bad t_light prefix selectors)\n    const darkOrLightSpecificPrefix = themeName.startsWith('dark')\n      ? 'dark'\n      : themeName.startsWith('light')\n        ? 'light'\n        : ''\n\n    const rawTheme = themes[themeName]\n\n    // dont force referential equality but may need something more consistent than JSON.stringify\n    // separate between dark/light\n    const key = darkOrLightSpecificPrefix + JSON.stringify(rawTheme)\n\n    // if existing, avoid\n    if (existing.has(key)) {\n      const e = existing.get(key)!\n      e.names.push(themeName)\n      continue\n    }\n\n    // ensure each theme object unique for dedupe\n    // is ThemeParsed because we call ensureThemeVariable\n    const theme = { ...rawTheme } as any as ThemeParsed\n    // parse into variables\n    for (const key in theme) {\n      // make sure properly names theme variables\n      ensureThemeVariable(theme, key)\n    }\n\n    // set deduped\n    const deduped: DedupedTheme = {\n      names: [themeName],\n      theme,\n    }\n    dedupedThemes.push(deduped)\n    existing.set(key, deduped)\n  }\n\n  return dedupedThemes\n}\n", "import React from 'react'\nimport { useTheme } from './hooks/useTheme'\n\n/** internal: this is for tamagui babel plugin usage only */\n\nexport const _withStableStyle = (\n  Component: any,\n  styleProvider: (theme: any, expressions: any[]) => Object\n) =>\n  React.forwardRef((props: any, ref) => {\n    const { _expressions = [], ...rest } = props\n    const theme = useTheme()\n    return <Component ref={ref} style={styleProvider(theme, _expressions)} {...rest} />\n  })\n", "import { validStyles } from '@tamagui/helpers'\n\nimport { stackDefaultStyles } from '../constants/constants'\nimport { createComponent } from '../createComponent'\nimport type {\n  StackNonStyleProps,\n  StackProps,\n  StackStyle,\n  StackStyleBase,\n  TamaguiElement,\n} from '../types'\n\nexport type View = TamaguiElement\nexport type ViewProps = StackProps\nexport type ViewNonStyleProps = StackNonStyleProps\nexport type ViewStylePropsBase = StackStyleBase\nexport type ViewStyle = StackStyle\n\nexport const View = createComponent<\n  StackProps,\n  View,\n  ViewNonStyleProps,\n  ViewStylePropsBase\n>({\n  acceptsClassName: true,\n  defaultProps: stackDefaultStyles,\n  validStyles,\n})\n", "import { stylePropsTextOnly, validStyles } from '@tamagui/helpers'\n\nimport { createComponent } from '../createComponent'\nimport type {\n  TamaguiTextElement,\n  TextNonStyleProps,\n  TextProps,\n  TextStylePropsBase,\n} from '../types'\n\nconst ellipseStyle = {\n  maxWidth: '100%',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n}\n\nexport type Text = TamaguiTextElement\n\nconst defaultWebStyle = {\n  display: 'inline', // display: inline breaks css transform styles\n  boxSizing: 'border-box',\n  wordWrap: 'break-word',\n  whiteSpace: 'pre-wrap',\n  margin: 0,\n}\n\nconst ellipsisStyle =\n  process.env.TAMAGUI_TARGET === 'web'\n    ? ellipseStyle\n    : {\n        numberOfLines: 1,\n        lineBreakMode: 'clip',\n      }\n\nexport const Text = createComponent<\n  TextProps,\n  Text,\n  TextNonStyleProps,\n  TextStylePropsBase\n>({\n  acceptsClassName: true,\n  isText: true,\n\n  defaultProps: {\n    fontFamily: 'unset',\n    ...(process.env.TAMAGUI_TARGET === 'web'\n      ? defaultWebStyle\n      : {\n          suppressHighlighting: true,\n        }),\n  },\n\n  inlineWhenUnflattened: new Set(['fontFamily']),\n\n  variants: {\n    ...(process.env.TAMAGUI_TARGET === 'web' && {\n      numberOfLines: {\n        1: ellipseStyle,\n\n        ':number': (numberOfLines) =>\n          numberOfLines >= 1\n            ? {\n                WebkitLineClamp: numberOfLines,\n                WebkitBoxOrient: 'vertical',\n                display: '-webkit-box',\n                overflow: 'hidden',\n              }\n            : null,\n      },\n    }),\n\n    ...(process.env.TAMAGUI_TARGET === 'web' && {\n      selectable: {\n        true: {\n          userSelect: 'text',\n          cursor: 'text',\n        },\n        false: {\n          userSelect: 'none',\n          cursor: 'default',\n        },\n      },\n    }),\n\n    /**\n     * @deprecated Use ellipsis instead\n     */\n    ellipse: {\n      true: ellipsisStyle,\n    },\n\n    ellipsis: {\n      true: ellipsisStyle,\n    },\n  },\n\n  validStyles: {\n    ...validStyles,\n    ...stylePropsTextOnly,\n  },\n})\n\nText['displayName'] = 'Text'\n", "import { isClient, useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport { useId } from 'react'\n\nimport { getSetting } from '../config'\nimport { THEME_CLASSNAME_PREFIX } from '../constants/constants'\nimport { Theme } from './Theme'\n\nexport type ThemeProviderProps = {\n  className?: string\n  defaultTheme: string\n  /** @deprecated moved to createTamagui({ settings: { disableRootThemeClass } }) */\n  disableRootThemeClass?: boolean\n  /** @deprecated moved to createTamagui({ settings: { themeClassNameOnRoot } }) */\n  themeClassNameOnRoot?: boolean\n  children?: any\n  reset?: boolean\n}\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const disableRootThemeClass =\n    props.disableRootThemeClass ?? getSetting('disableRootThemeClass')\n  const themeClassNameOnRoot =\n    props.themeClassNameOnRoot ?? getSetting('themeClassNameOnRoot')\n\n  // ensure theme is attached to root body node as well to work with modals by default\n  if (isClient) {\n    useIsomorphicLayoutEffect(() => {\n      if (disableRootThemeClass) return\n      const cn = `${THEME_CLASSNAME_PREFIX}${props.defaultTheme}`\n      const target = themeClassNameOnRoot ? document.documentElement : document.body\n      target.classList.add(cn)\n      return () => {\n        target.classList.remove(cn)\n      }\n    }, [props.defaultTheme, disableRootThemeClass, themeClassNameOnRoot])\n  }\n\n  return (\n    <Theme\n      className={props.className}\n      name={props.defaultTheme}\n      // if root class disabled, force class here\n      forceClassName={!disableRootThemeClass && !themeClassNameOnRoot}\n      // @ts-expect-error\n      _isRoot={useId}\n    >\n      {props.children}\n    </Theme>\n  )\n}\n", "import { isClient, isWeb, useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport React from 'react'\nimport { getSetting } from '../config'\nimport { ComponentContext } from '../contexts/ComponentContext'\nimport type { TamaguiProviderProps } from '../types'\nimport { ThemeProvider } from './ThemeProvider'\nimport { updateMediaListeners } from '../hooks/useMedia'\n\nexport function TamaguiProvider({\n  children,\n  disableInjectCSS,\n  config,\n  className,\n  defaultTheme,\n  disableRootThemeClass,\n  reset,\n  themeClassNameOnRoot,\n}: TamaguiProviderProps) {\n  if (!process.env.TAMAGUI_REACT_19) {\n    if (isClient) {\n      // inject CSS if asked to (not SSR compliant)\n      useIsomorphicLayoutEffect(() => {\n        if (!config) return\n        if (!disableInjectCSS) {\n          const style = document.createElement('style')\n          style.appendChild(document.createTextNode(config.getCSS()))\n          document.head.appendChild(style)\n          return () => {\n            document.head.removeChild(style)\n          }\n        }\n      }, [config, disableInjectCSS])\n    }\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    updateMediaListeners()\n  }, [])\n\n  return (\n    <>\n      <UnmountedClassName>\n        <ComponentContext.Provider animationDriver={config?.animations}>\n          <ThemeProvider\n            themeClassNameOnRoot={\n              themeClassNameOnRoot ?? getSetting('themeClassNameOnRoot')\n            }\n            disableRootThemeClass={\n              disableRootThemeClass ?? getSetting('disableRootThemeClass')\n            }\n            defaultTheme={defaultTheme ?? (config ? Object.keys(config.themes)[0] : '')}\n            reset={reset}\n            className={className}\n          >\n            {children}\n          </ThemeProvider>\n        </ComponentContext.Provider>\n      </UnmountedClassName>\n\n      {process.env.TAMAGUI_TARGET !== 'native' &&\n        process.env.TAMAGUI_REACT_19 &&\n        config &&\n        !disableInjectCSS && (\n          <style\n            // react 19 feature to hoist style tags to header:\n            // https://react.dev/reference/react-dom/components/style\n            // @ts-ignore\n            precedence=\"default\"\n            href=\"tamagui-css\"\n            key=\"tamagui-css\"\n          >\n            {config.getCSS()}\n          </style>\n        )}\n    </>\n  )\n}\n\n// for CSS animations\nfunction UnmountedClassName(props: { children: React.ReactNode }) {\n  const [mounted, setMounted] = React.useState(false)\n\n  React.useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  if (!isWeb) {\n    return props.children\n  }\n\n  return (\n    <span style={{ display: 'contents' }} className={mounted ? '' : 't_unmounted'}>\n      {props.children}\n    </span>\n  )\n}\n\nTamaguiProvider['displayName'] = 'TamaguiProvider'\n", "// web-only use platform:\n\nimport type { MatchMedia } from '@tamagui/web'\n\nexport const matchMedia: MatchMedia = globalThis['matchMedia']\n", "import type { MediaQueryObject } from '@tamagui/web'\nimport { setupMatchMedia } from '@tamagui/web'\n\nimport { matchMedia } from './matchMedia'\n\n/**\n * @deprecated you no longer need to call createMedia or import @tamagui/react-native-media-driver at all.\n * Tamagui now automatically handles setting this up, you can just pass a plain object to createTamagui.\n */\nexport function createMedia<\n  A extends {\n    [key: string]: MediaQueryObject\n  },\n>(media: A): A {\n  // this should ideally return a diff object that is then passed to createTamagui\n  // but works for now we dont really support swapping out media drivers\n  setupMatchMedia(matchMedia)\n  return media\n}\n", "/**\n * Copyright (c) Nicolas Gallagher\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from 'react'\n\nimport * as ResponderSystem from './ResponderSystem'\n\nexport * from './utils'\n\nconst emptyObject = {}\n\nconst Attached = new WeakMap<any, boolean>()\nconst Ids = new WeakMap<any, string>()\n\nexport function useResponderEvents(\n  hostRef: any,\n  configIn: ResponderSystem.ResponderConfig = emptyObject\n) {\n  const config = getResponderConfigIfDefined(configIn)\n  // tamagui + rnw compat\n  const node = hostRef?.current?.host || hostRef?.current\n\n  // Register and unregister with the Responder System as necessary\n  React.useEffect(() => {\n    if (config === emptyObject) return\n\n    ResponderSystem.attachListeners()\n\n    if (!Ids.has(hostRef)) {\n      Ids.set(hostRef, `${Math.random()}`)\n    }\n    const id = Ids.get(hostRef)!\n\n    ResponderSystem.addNode(id, node, config)\n    Attached.set(hostRef, true)\n\n    return () => {\n      ResponderSystem.removeNode(node)\n      Attached.set(hostRef, false)\n    }\n  }, [config, hostRef])\n\n  if (process.env.NODE_ENV === 'development') {\n    React.useDebugValue({\n      isResponder: node === ResponderSystem.getResponderNode(),\n    })\n    React.useDebugValue(config)\n  }\n}\n\nexport function getResponderConfigIfDefined({\n  onMoveShouldSetResponder,\n  onMoveShouldSetResponderCapture,\n  onResponderEnd,\n  onResponderGrant,\n  onResponderMove,\n  onResponderReject,\n  onResponderRelease,\n  onResponderStart,\n  onResponderTerminate,\n  onResponderTerminationRequest,\n  onScrollShouldSetResponder,\n  onScrollShouldSetResponderCapture,\n  onSelectionChangeShouldSetResponder,\n  onSelectionChangeShouldSetResponderCapture,\n  onStartShouldSetResponder,\n  onStartShouldSetResponderCapture,\n}: ResponderSystem.ResponderConfig): ResponderSystem.ResponderConfig {\n  return onMoveShouldSetResponder ||\n    onMoveShouldSetResponderCapture ||\n    onResponderEnd ||\n    onResponderGrant ||\n    onResponderMove ||\n    onResponderReject ||\n    onResponderRelease ||\n    onResponderStart ||\n    onResponderTerminate ||\n    onResponderTerminationRequest ||\n    onScrollShouldSetResponder ||\n    onScrollShouldSetResponderCapture ||\n    onSelectionChangeShouldSetResponder ||\n    onSelectionChangeShouldSetResponderCapture ||\n    onStartShouldSetResponder ||\n    onStartShouldSetResponderCapture\n    ? {\n        onMoveShouldSetResponder,\n        onMoveShouldSetResponderCapture,\n        onResponderEnd,\n        onResponderGrant,\n        onResponderMove,\n        onResponderReject,\n        onResponderRelease,\n        onResponderStart,\n        onResponderTerminate,\n        onResponderTerminationRequest,\n        onScrollShouldSetResponder,\n        onScrollShouldSetResponderCapture,\n        onSelectionChangeShouldSetResponder,\n        onSelectionChangeShouldSetResponderCapture,\n        onStartShouldSetResponder,\n        onStartShouldSetResponderCapture,\n      }\n    : emptyObject\n}\n", "/**\n * Copyright (c) Nicolas Gallagher\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keyName = '__reactResponderId'\n\nexport const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n)\n\nexport const getBoundingClientRect = (node: HTMLElement | null): void | DOMRect => {\n  if (!node) return\n  if (node.nodeType !== 1) return\n  if (node.getBoundingClientRect) {\n    return node.getBoundingClientRect()\n  }\n}\n\nfunction getEventPath(domEvent: any): Array<any> {\n  // The 'selectionchange' event always has the 'document' as the target.\n  // Use the anchor node as the initial target to reconstruct a path.\n  // (We actually only need the first \"responder\" node in practice.)\n  if (domEvent.type === 'selectionchange') {\n    const target = window.getSelection()?.anchorNode\n    return composedPathFallback(target)\n  }\n  const path =\n    domEvent.composedPath != null\n      ? domEvent.composedPath()\n      : composedPathFallback(domEvent.target)\n  return path\n}\n\nfunction composedPathFallback(target: any): Array<any> {\n  const path: any[] = []\n  while (target != null && target !== document.body) {\n    path.push(target)\n    target = target.parentNode\n  }\n  return path\n}\n\n/**\n * Retrieve the responderId from a host node\n */\nfunction getResponderId(node: any): number | null {\n  if (node != null) {\n    return node[keyName]\n  }\n  return null\n}\n\n/**\n * Store the responderId on a host node\n */\nexport function setResponderId(node: any, id: any) {\n  if (node != null) {\n    node[keyName] = id\n  }\n}\n\n/**\n * Filter the event path to contain only the nodes attached to the responder system\n */\nexport function getResponderPaths(domEvent: any): {\n  idPath: Array<number>\n  nodePath: Array<any>\n} {\n  const idPath: any[] = []\n  const nodePath: any[] = []\n  const eventPath = getEventPath(domEvent)\n\n  for (let i = 0; i < eventPath.length; i++) {\n    const node = eventPath[i]\n    const id = getResponderId(node)\n    if (id != null) {\n      idPath.push(id)\n      nodePath.push(node)\n    }\n  }\n  return { idPath, nodePath }\n}\n\n/**\n * Walk the paths and find the first common ancestor\n */\nexport function getLowestCommonAncestor(pathA: Array<any>, pathB: Array<any>): any {\n  let pathALength = pathA.length\n  let pathBLength = pathB.length\n  if (\n    // If either path is empty\n    pathALength === 0 ||\n    pathBLength === 0 ||\n    // If the last elements aren't the same there can't be a common ancestor\n    // that is connected to the responder system\n    pathA[pathALength - 1] !== pathB[pathBLength - 1]\n  ) {\n    return null\n  }\n\n  let itemA = pathA[0]\n  let indexA = 0\n  let itemB = pathB[0]\n  let indexB = 0\n\n  // If A is deeper, skip indices that can't match.\n  if (pathALength - pathBLength > 0) {\n    indexA = pathALength - pathBLength\n    itemA = pathA[indexA]\n    pathALength = pathBLength\n  }\n\n  // If B is deeper, skip indices that can't match\n  if (pathBLength - pathALength > 0) {\n    indexB = pathBLength - pathALength\n    itemB = pathB[indexB]\n    pathBLength = pathALength\n  }\n\n  // Walk in lockstep until a match is found\n  let depth = pathALength\n  while (depth--) {\n    if (itemA === itemB) {\n      return itemA\n    }\n    itemA = pathA[indexA++]\n    itemB = pathB[indexB++]\n  }\n  return null\n}\n\n/**\n * Determine whether any of the active touches are within the current responder.\n * This cannot rely on W3C `targetTouches`, as neither IE11 nor Safari implement it.\n */\nexport function hasTargetTouches(target: any, touches: any): boolean {\n  if (!touches || touches.length === 0) {\n    return false\n  }\n  for (let i = 0; i < touches.length; i++) {\n    const node = touches[i].target\n    if (node != null) {\n      if (target.contains(node)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\n/**\n * Ignore 'selectionchange' events that don't correspond with a person's intent to\n * select text.\n */\nexport function hasValidSelection(domEvent: any): boolean {\n  if (domEvent.type === 'selectionchange') {\n    return isSelectionValid()\n  }\n  return domEvent.type === 'select'\n}\n\n/**\n * Events are only valid if the primary button was used without specific modifier keys.\n */\nexport function isPrimaryPointerDown(domEvent: any): boolean {\n  const { altKey, button, buttons, ctrlKey, type } = domEvent\n  const isTouch = type === 'touchstart' || type === 'touchmove'\n  const isPrimaryMouseDown = type === 'mousedown' && (button === 0 || buttons === 1)\n  const isPrimaryMouseMove = type === 'mousemove' && buttons === 1\n  const noModifiers = altKey === false && ctrlKey === false\n\n  if (\n    isTouch ||\n    (isPrimaryMouseDown && noModifiers) ||\n    (isPrimaryMouseMove && noModifiers)\n  ) {\n    return true\n  }\n  return false\n}\n\nexport function isSelectionValid(): boolean {\n  const selection = window.getSelection()\n  if (!selection) return false\n  const string = selection.toString()\n  const anchorNode = selection.anchorNode\n  const focusNode = selection.focusNode\n  const isTextNode =\n    (anchorNode && anchorNode.nodeType === window.Node.TEXT_NODE) ||\n    (focusNode && focusNode.nodeType === window.Node.TEXT_NODE)\n  return string.length >= 1 && string !== '\\n' && !!isTextNode\n}\n", "/**\n * Copyright (c) Nicolas Gallagher\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {\n  ResponderTouchHistoryStore,\n  TouchHistory,\n} from './ResponderTouchHistoryStore'\nimport { getBoundingClientRect } from './utils'\n\nexport type ResponderEvent = {\n  bubbles: boolean\n  cancelable: boolean\n  currentTarget: any\n  defaultPrevented: boolean | null\n  dispatchConfig: {\n    registrationName?: string\n    phasedRegistrationNames?: {\n      bubbled: string\n      captured: string\n    }\n  }\n  eventPhase: number | null\n  isDefaultPrevented: () => boolean\n  isPropagationStopped: () => boolean\n  isTrusted: boolean | null\n  preventDefault: () => void\n  stopPropagation: () => void\n  nativeEvent: TouchEvent\n  persist: () => void\n  target: any | null\n  timeStamp: number\n  touchHistory: TouchHistory\n}\n\nconst emptyFunction = () => {}\nconst emptyObject = {}\nconst emptyArray = []\n\n/**\n * Safari produces very large identifiers that would cause the `touchBank` array\n * length to be so large as to crash the browser, if not normalized like this.\n * In the future the `touchBank` should use an object/map instead.\n */\nfunction normalizeIdentifier(identifier) {\n  return identifier > 20 ? identifier % 20 : identifier\n}\n\n/**\n * Converts a native DOM event to a ResponderEvent.\n * Mouse events are transformed into fake touch events.\n */\nexport default function createResponderEvent(\n  domEvent: any,\n  responderTouchHistoryStore: ResponderTouchHistoryStore\n): ResponderEvent {\n  let rect\n  let propagationWasStopped = false\n  let changedTouches\n  let touches\n\n  const domEventChangedTouches = domEvent.changedTouches\n  const domEventType = domEvent.type\n\n  const metaKey = domEvent.metaKey === true\n  const shiftKey = domEvent.shiftKey === true\n  const force = domEventChangedTouches?.[0].force || 0\n  const identifier = normalizeIdentifier(domEventChangedTouches?.[0].identifier || 0)\n  const clientX = domEventChangedTouches?.[0].clientX || domEvent.clientX\n  const clientY = domEventChangedTouches?.[0].clientY || domEvent.clientY\n  const pageX = domEventChangedTouches?.[0].pageX || domEvent.pageX\n  const pageY = domEventChangedTouches?.[0].pageY || domEvent.pageY\n  const preventDefault =\n    typeof domEvent.preventDefault === 'function'\n      ? domEvent.preventDefault.bind(domEvent)\n      : emptyFunction\n  const timestamp = domEvent.timeStamp\n\n  function normalizeTouches(touches) {\n    return Array.prototype.slice.call(touches).map((touch) => {\n      return {\n        force: touch.force,\n        identifier: normalizeIdentifier(touch.identifier),\n        get locationX() {\n          return locationX(touch.clientX)\n        },\n        get locationY() {\n          return locationY(touch.clientY)\n        },\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n        target: touch.target,\n        timestamp,\n      }\n    })\n  }\n\n  if (domEventChangedTouches != null) {\n    changedTouches = normalizeTouches(domEventChangedTouches)\n    touches = normalizeTouches(domEvent.touches)\n  } else {\n    const emulatedTouches = [\n      {\n        force,\n        identifier,\n        get locationX() {\n          return locationX(clientX)\n        },\n        get locationY() {\n          return locationY(clientY)\n        },\n        pageX,\n        pageY,\n        target: domEvent.target,\n        timestamp,\n      },\n    ]\n    changedTouches = emulatedTouches\n    touches =\n      domEventType === 'mouseup' || domEventType === 'dragstart'\n        ? emptyArray\n        : emulatedTouches\n  }\n\n  const responderEvent = {\n    bubbles: true,\n    cancelable: true,\n    // `currentTarget` is set before dispatch\n    currentTarget: null,\n    defaultPrevented: domEvent.defaultPrevented,\n    dispatchConfig: emptyObject,\n    eventPhase: domEvent.eventPhase,\n    isDefaultPrevented() {\n      return domEvent.defaultPrevented\n    },\n    isPropagationStopped() {\n      return propagationWasStopped\n    },\n    isTrusted: domEvent.isTrusted,\n    nativeEvent: {\n      altKey: false,\n      ctrlKey: false,\n      metaKey,\n      shiftKey,\n      changedTouches,\n      force,\n      identifier,\n      get locationX() {\n        return locationX(clientX)\n      },\n      get locationY() {\n        return locationY(clientY)\n      },\n      pageX,\n      pageY,\n      target: domEvent.target,\n      timestamp,\n      touches,\n      type: domEventType,\n    },\n    persist: emptyFunction,\n    preventDefault,\n    stopPropagation() {\n      propagationWasStopped = true\n    },\n    target: domEvent.target,\n    timeStamp: timestamp,\n    touchHistory: responderTouchHistoryStore.touchHistory,\n  }\n\n  // Using getters and functions serves two purposes:\n  // 1) The value of `currentTarget` is not initially available.\n  // 2) Measuring the clientRect may cause layout jank and should only be done on-demand.\n  function locationX(x) {\n    rect = rect || getBoundingClientRect(responderEvent.currentTarget)\n    if (rect) {\n      return x - rect.left\n    }\n  }\n  function locationY(y) {\n    rect = rect || getBoundingClientRect(responderEvent.currentTarget)\n    if (rect) {\n      return y - rect.top\n    }\n  }\n\n  return responderEvent as any\n}\n", "/**\n * Copyright (c) Nicolas Gallagher\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport type Touch = {\n  force: number\n  identifier: number\n  // The locationX and locationY properties are non-standard additions\n  locationX: any\n  locationY: any\n  pageX: number\n  pageY: number\n  target: any\n  // Touches in a list have a timestamp property\n  timestamp: number\n}\n\nexport type TouchEvent = {\n  altKey: boolean\n  ctrlKey: boolean\n  metaKey: boolean\n  shiftKey: boolean\n  // TouchList is an array in the Responder system\n  changedTouches: Array<Touch>\n  force: number\n  // React Native adds properties to the \"nativeEvent that are usually only found on W3C Touches ‾\\_(ツ)_/‾\n  identifier: number\n  locationX: any\n  locationY: any\n  pageX: number\n  pageY: number\n  target: any\n  // The timestamp has a lowercase \"s\" in the Responder system\n  timestamp: number\n  // TouchList is an array in the Responder system\n  touches: Array<Touch>\n}\n\nexport const BLUR = 'blur'\nexport const CONTEXT_MENU = 'contextmenu'\nexport const FOCUS_OUT = 'focusout'\nexport const MOUSE_DOWN = 'mousedown'\nexport const MOUSE_MOVE = 'mousemove'\nexport const MOUSE_UP = 'mouseup'\nexport const MOUSE_CANCEL = 'dragstart'\nexport const TOUCH_START = 'touchstart'\nexport const TOUCH_MOVE = 'touchmove'\nexport const TOUCH_END = 'touchend'\nexport const TOUCH_CANCEL = 'touchcancel'\nexport const SCROLL = 'scroll'\nexport const SELECT = 'select'\nexport const SELECTION_CHANGE = 'selectionchange'\n\nexport function isStartish(eventType: unknown): boolean {\n  return eventType === TOUCH_START || eventType === MOUSE_DOWN\n}\n\nexport function isMoveish(eventType: unknown): boolean {\n  return eventType === TOUCH_MOVE || eventType === MOUSE_MOVE\n}\n\nexport function isEndish(eventType: unknown): boolean {\n  return eventType === TOUCH_END || eventType === MOUSE_UP || isCancelish(eventType)\n}\n\nexport function isCancelish(eventType: unknown): boolean {\n  return eventType === TOUCH_CANCEL || eventType === MOUSE_CANCEL\n}\n\nexport function isScroll(eventType: unknown): boolean {\n  return eventType === SCROLL\n}\n\nexport function isSelectionChange(eventType: unknown): boolean {\n  return eventType === SELECT || eventType === SELECTION_CHANGE\n}\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type { Touch, TouchEvent } from './types'\nimport { isEndish, isMoveish, isStartish } from './types'\n\nexport class ResponderTouchHistoryStore {\n  _touchHistory = {\n    touchBank: [], //Array<TouchRecord>\n    numberActiveTouches: 0,\n    // If there is only one active touch, we remember its location. This prevents\n    // us having to loop through all of the touches all the time in the most\n    // common case.\n    indexOfSingleActiveTouch: -1,\n    mostRecentTimeStamp: 0,\n  }\n\n  recordTouchTrack(topLevelType: string, nativeEvent: TouchEvent): void {\n    const touchHistory = this._touchHistory\n    if (isMoveish(topLevelType)) {\n      nativeEvent.changedTouches.forEach((touch) => recordTouchMove(touch, touchHistory))\n    } else if (isStartish(topLevelType)) {\n      nativeEvent.changedTouches.forEach((touch) => recordTouchStart(touch, touchHistory))\n      touchHistory.numberActiveTouches = nativeEvent.touches.length\n      if (touchHistory.numberActiveTouches === 1) {\n        touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier\n      }\n    } else if (isEndish(topLevelType)) {\n      nativeEvent.changedTouches.forEach((touch) => recordTouchEnd(touch, touchHistory))\n      touchHistory.numberActiveTouches = nativeEvent.touches.length\n      if (touchHistory.numberActiveTouches === 1) {\n        const { touchBank } = touchHistory\n        for (let i = 0; i < touchBank.length; i++) {\n          const touchTrackToCheck = touchBank[i]\n          //  @ts-ignore\n          if (touchTrackToCheck?.touchActive) {\n            touchHistory.indexOfSingleActiveTouch = i\n            break\n          }\n        }\n        if (process.env.NODE_ENV === 'development') {\n          const activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch]\n          //  @ts-ignore\n          if (!activeRecord?.touchActive) {\n            console.error('Cannot find single active touch.')\n          }\n        }\n      }\n    }\n  }\n\n  get touchHistory(): TouchHistory {\n    return this._touchHistory\n  }\n}\n\ntype TouchRecord = {\n  currentPageX: number\n  currentPageY: number\n  currentTimeStamp: number\n  previousPageX: number\n  previousPageY: number\n  previousTimeStamp: number\n  startPageX: number\n  startPageY: number\n  startTimeStamp: number\n  touchActive: boolean\n}\n\nexport type TouchHistory = {\n  indexOfSingleActiveTouch: number\n  mostRecentTimeStamp: number\n  numberActiveTouches: number\n  touchBank: Array<TouchRecord>\n}\n\n/**\n * Tracks the position and time of each active touch by `touch.identifier`. We\n * should typically only see IDs in the range of 1-20 because IDs get recycled\n * when touches end and start again.\n */\n\nconst MAX_TOUCH_BANK = 20\n\nfunction timestampForTouch(touch: Touch): number {\n  // The legacy internal implementation provides \"timeStamp\", which has been\n  // renamed to \"timestamp\".\n  return touch['timeStamp'] || touch.timestamp\n}\n\n/**\n * TODO: Instead of making gestures recompute filtered velocity, we could\n * include a built in velocity computation that can be reused globally.\n */\nfunction createTouchRecord(touch: Touch): TouchRecord {\n  return {\n    touchActive: true,\n    startPageX: touch.pageX,\n    startPageY: touch.pageY,\n    startTimeStamp: timestampForTouch(touch),\n    currentPageX: touch.pageX,\n    currentPageY: touch.pageY,\n    currentTimeStamp: timestampForTouch(touch),\n    previousPageX: touch.pageX,\n    previousPageY: touch.pageY,\n    previousTimeStamp: timestampForTouch(touch),\n  }\n}\n\nfunction resetTouchRecord(touchRecord: TouchRecord, touch: Touch): void {\n  touchRecord.touchActive = true\n  touchRecord.startPageX = touch.pageX\n  touchRecord.startPageY = touch.pageY\n  touchRecord.startTimeStamp = timestampForTouch(touch)\n  touchRecord.currentPageX = touch.pageX\n  touchRecord.currentPageY = touch.pageY\n  touchRecord.currentTimeStamp = timestampForTouch(touch)\n  touchRecord.previousPageX = touch.pageX\n  touchRecord.previousPageY = touch.pageY\n  touchRecord.previousTimeStamp = timestampForTouch(touch)\n}\n\nfunction getTouchIdentifier({ identifier }: Touch): number {\n  if (identifier == null) {\n    console.error('Touch object is missing identifier.')\n  }\n  if (process.env.NODE_ENV === 'development') {\n    if (identifier > MAX_TOUCH_BANK) {\n      console.error(\n        'Touch identifier %s is greater than maximum supported %s which causes ' +\n          'performance issues backfilling array locations for all of the indices.',\n        identifier,\n        MAX_TOUCH_BANK\n      )\n    }\n  }\n  return identifier\n}\n\nfunction recordTouchStart(touch: Touch, touchHistory): void {\n  const identifier = getTouchIdentifier(touch)\n  const touchRecord = touchHistory.touchBank[identifier]\n  if (touchRecord) {\n    resetTouchRecord(touchRecord, touch)\n  } else {\n    touchHistory.touchBank[identifier] = createTouchRecord(touch)\n  }\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch)\n}\n\nfunction recordTouchMove(touch: Touch, touchHistory): void {\n  const touchRecord = touchHistory.touchBank[getTouchIdentifier(touch)]\n  if (touchRecord) {\n    touchRecord.touchActive = true\n    touchRecord.previousPageX = touchRecord.currentPageX\n    touchRecord.previousPageY = touchRecord.currentPageY\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp\n    touchRecord.currentPageX = touch.pageX\n    touchRecord.currentPageY = touch.pageY\n    touchRecord.currentTimeStamp = timestampForTouch(touch)\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch)\n  } else {\n    console.warn(\n      'Cannot record touch move without a touch start.\\n',\n      `Touch Move: ${printTouch(touch)}\\n`,\n      `Touch Bank: ${printTouchBank(touchHistory)}`\n    )\n  }\n}\n\nfunction recordTouchEnd(touch: Touch, touchHistory): void {\n  const touchRecord = touchHistory.touchBank[getTouchIdentifier(touch)]\n  if (touchRecord) {\n    touchRecord.touchActive = false\n    touchRecord.previousPageX = touchRecord.currentPageX\n    touchRecord.previousPageY = touchRecord.currentPageY\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp\n    touchRecord.currentPageX = touch.pageX\n    touchRecord.currentPageY = touch.pageY\n    touchRecord.currentTimeStamp = timestampForTouch(touch)\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch)\n  } else {\n    console.warn(\n      'Cannot record touch end without a touch start.\\n',\n      `Touch End: ${printTouch(touch)}\\n`,\n      `Touch Bank: ${printTouchBank(touchHistory)}`\n    )\n  }\n}\n\nfunction printTouch(touch: Touch): string {\n  return JSON.stringify({\n    identifier: touch.identifier,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    timestamp: timestampForTouch(touch),\n  })\n}\n\nfunction printTouchBank(touchHistory): string {\n  const { touchBank } = touchHistory\n  let printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK))\n  if (touchBank.length > MAX_TOUCH_BANK) {\n    printed += ` (original size: ${touchBank.length})`\n  }\n  return printed\n}\n", "/**\n * Copyright (c) Nicolas Gallagher\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type { ResponderEvent } from './createResponderEvent'\nimport createResponderEvent from './createResponderEvent'\nimport { ResponderTouchHistoryStore } from './ResponderTouchHistoryStore'\nimport {\n  isCancelish,\n  isEndish,\n  isMoveish,\n  isScroll,\n  isSelectionChange,\n  isStartish,\n} from './types'\nimport { canUseDOM } from './utils'\nimport {\n  getLowestCommonAncestor,\n  getResponderPaths,\n  hasTargetTouches,\n  hasValidSelection,\n  isPrimaryPointerDown,\n  setResponderId,\n} from './utils'\n\n/* ------------ TYPES ------------ */\n\ntype ResponderId = string\n\ntype ActiveResponderInstance = {\n  id: ResponderId\n  idPath: Array<number>\n  node: any\n}\n\ntype EmptyResponderInstance = {\n  id: null\n  idPath: null\n  node: null\n}\n\ntype ResponderInstance = ActiveResponderInstance | EmptyResponderInstance\n\nexport type ResponderConfig = {\n  // Direct responder events dispatched directly to responder. Do not bubble.\n  onResponderEnd?: ((e: ResponderEvent) => void) | null\n  onResponderGrant?: ((e: ResponderEvent) => void | boolean) | null\n  onResponderMove?: ((e: ResponderEvent) => void) | null\n  onResponderRelease?: ((e: ResponderEvent) => void) | null\n  onResponderReject?: ((e: ResponderEvent) => void) | null\n  onResponderStart?: ((e: ResponderEvent) => void) | null\n  onResponderTerminate?: ((e: ResponderEvent) => void) | null\n  onResponderTerminationRequest?: ((e: ResponderEvent) => boolean) | null\n  // On pointer down, should this element become the responder?\n  onStartShouldSetResponder?: ((e: ResponderEvent) => boolean) | null\n  onStartShouldSetResponderCapture?: ((e: ResponderEvent) => boolean) | null\n  // On pointer move, should this element become the responder?\n  onMoveShouldSetResponder?: ((e: ResponderEvent) => boolean) | null\n  onMoveShouldSetResponderCapture?: ((e: ResponderEvent) => boolean) | null\n  // On scroll, should this element become the responder? Do no bubble\n  onScrollShouldSetResponder?: ((e: ResponderEvent) => boolean) | null\n  onScrollShouldSetResponderCapture?: ((e: ResponderEvent) => boolean) | null\n  // On text selection change, should this element become the responder?\n  onSelectionChangeShouldSetResponder?: ((e: ResponderEvent) => boolean) | null\n  onSelectionChangeShouldSetResponderCapture?: ((e: ResponderEvent) => boolean) | null\n}\n\nconst emptyObject = {}\n\n/* ------------ IMPLEMENTATION ------------ */\n\nconst startRegistration = [\n  'onStartShouldSetResponderCapture',\n  'onStartShouldSetResponder',\n  { bubbles: true },\n]\nconst moveRegistration = [\n  'onMoveShouldSetResponderCapture',\n  'onMoveShouldSetResponder',\n  { bubbles: true },\n]\nconst scrollRegistration = [\n  'onScrollShouldSetResponderCapture',\n  'onScrollShouldSetResponder',\n  { bubbles: false },\n]\nconst shouldSetResponderEvents = {\n  touchstart: startRegistration,\n  mousedown: startRegistration,\n  touchmove: moveRegistration,\n  mousemove: moveRegistration,\n  scroll: scrollRegistration,\n}\n\nconst emptyResponder = { id: null, idPath: null, node: null }\nconst responderListenersMap = new Map()\n\nlet isEmulatingMouseEvents = false\nlet trackedTouchCount = 0\nlet currentResponder: ResponderInstance = {\n  id: null,\n  node: null,\n  idPath: null,\n}\nconst responderTouchHistoryStore = new ResponderTouchHistoryStore()\n\nfunction changeCurrentResponder(responder: ResponderInstance) {\n  currentResponder = responder\n}\n\nfunction getResponderConfig(id: ResponderId): ResponderConfig | any {\n  const config = responderListenersMap.get(id)\n  return config != null ? config : emptyObject\n}\n\n/**\n * Process native events\n *\n * A single event listener is used to manage the responder system.\n * All pointers are tracked in the ResponderTouchHistoryStore. Native events\n * are interpreted in terms of the Responder System and checked to see if\n * the responder should be transferred. Each host node that is attached to\n * the Responder System has an ID, which is used to look up its associated\n * callbacks.\n */\nfunction eventListener(domEvent: any) {\n  const eventType = domEvent.type\n  const eventTarget = domEvent.target\n\n  /**\n   * Manage emulated events and early bailout.\n   * Since PointerEvent is not used yet (lack of support in older Safari), it's\n   * necessary to manually manage the mess of browser touch/mouse events.\n   * And bailout early for termination events when there is no active responder.\n   */\n\n  // Flag when browser may produce emulated events\n  if (eventType === 'touchstart') {\n    isEmulatingMouseEvents = true\n  }\n  // Remove flag when browser will not produce emulated events\n  if (eventType === 'touchmove' || trackedTouchCount > 1) {\n    isEmulatingMouseEvents = false\n  }\n  // Ignore various events in particular circumstances\n  if (\n    // Ignore browser emulated mouse events\n    (eventType === 'mousedown' && isEmulatingMouseEvents) ||\n    (eventType === 'mousemove' && isEmulatingMouseEvents) ||\n    // Ignore mousemove if a mousedown didn't occur first\n    (eventType === 'mousemove' && trackedTouchCount < 1)\n  ) {\n    return\n  }\n  // Remove flag after emulated events are finished\n  if (isEmulatingMouseEvents && eventType === 'mouseup') {\n    if (trackedTouchCount === 0) {\n      isEmulatingMouseEvents = false\n    }\n    return\n  }\n\n  const isStartEvent = isStartish(eventType) && isPrimaryPointerDown(domEvent)\n  const isMoveEvent = isMoveish(eventType)\n  const isEndEvent = isEndish(eventType)\n  const isScrollEvent = isScroll(eventType)\n  const isSelectionChangeEvent = isSelectionChange(eventType)\n  const responderEvent = createResponderEvent(domEvent, responderTouchHistoryStore)\n\n  /**\n   * Record the state of active pointers\n   */\n\n  if (isStartEvent || isMoveEvent || isEndEvent) {\n    if (domEvent.touches) {\n      trackedTouchCount = domEvent.touches.length\n    } else {\n      if (isStartEvent) {\n        trackedTouchCount = 1\n      } else if (isEndEvent) {\n        trackedTouchCount = 0\n      }\n    }\n    responderTouchHistoryStore.recordTouchTrack(\n      eventType,\n      responderEvent.nativeEvent as any\n    )\n  }\n\n  /**\n   * Responder System logic\n   */\n\n  let eventPaths: any = getResponderPaths(domEvent)\n  let wasNegotiated = false\n  let wantsResponder\n\n  // If an event occured that might change the current responder...\n  if (isStartEvent || isMoveEvent || (isScrollEvent && trackedTouchCount > 0)) {\n    // If there is already a responder, prune the event paths to the lowest common ancestor\n    // of the existing responder and deepest target of the event.\n    const currentResponderIdPath = currentResponder.idPath\n    const eventIdPath = eventPaths.idPath\n\n    if (currentResponderIdPath != null && eventIdPath != null) {\n      const lowestCommonAncestor = getLowestCommonAncestor(\n        currentResponderIdPath,\n        eventIdPath\n      )\n      if (lowestCommonAncestor != null) {\n        const indexOfLowestCommonAncestor = eventIdPath.indexOf(lowestCommonAncestor)\n        // Skip the current responder so it doesn't receive unexpected \"shouldSet\" events.\n        const index =\n          indexOfLowestCommonAncestor +\n          (lowestCommonAncestor === currentResponder.id ? 1 : 0)\n        eventPaths = {\n          idPath: eventIdPath.slice(index),\n          nodePath: eventPaths.nodePath.slice(index),\n        }\n      } else {\n        eventPaths = null\n      }\n    }\n\n    if (eventPaths != null) {\n      // If a node wants to become the responder, attempt to transfer.\n      wantsResponder = findWantsResponder(eventPaths, domEvent, responderEvent)\n      if (wantsResponder != null) {\n        // Sets responder if none exists, or negotates with existing responder.\n        attemptTransfer(responderEvent, wantsResponder)\n        wasNegotiated = true\n      }\n    }\n  }\n\n  // If there is now a responder, invoke its callbacks for the lifecycle of the gesture.\n  if (currentResponder.id != null && currentResponder.node != null) {\n    const { id, node } = currentResponder\n    const {\n      onResponderStart,\n      onResponderMove,\n      onResponderEnd,\n      onResponderRelease,\n      onResponderTerminate,\n      onResponderTerminationRequest,\n    } = getResponderConfig(id)\n\n    responderEvent.bubbles = false\n    responderEvent.cancelable = false\n    responderEvent.currentTarget = node\n\n    // Start\n    if (isStartEvent) {\n      if (onResponderStart != null) {\n        responderEvent.dispatchConfig.registrationName = 'onResponderStart'\n        onResponderStart(responderEvent)\n      }\n    }\n    // Move\n    else if (isMoveEvent) {\n      if (onResponderMove != null) {\n        responderEvent.dispatchConfig.registrationName = 'onResponderMove'\n        onResponderMove(responderEvent)\n      }\n    } else {\n      const isTerminateEvent =\n        isCancelish(eventType) ||\n        // native context menu\n        eventType === 'contextmenu' ||\n        // window blur\n        (eventType === 'blur' && eventTarget === window) ||\n        // responder (or ancestors) blur\n        (eventType === 'blur' &&\n          eventTarget.contains(node) &&\n          domEvent.relatedTarget !== node) ||\n        // native scroll without using a pointer\n        (isScrollEvent && trackedTouchCount === 0) ||\n        // native scroll on node that is parent of the responder (allow siblings to scroll)\n        (isScrollEvent && eventTarget.contains(node) && eventTarget !== node) ||\n        // native select/selectionchange on node\n        (isSelectionChangeEvent && hasValidSelection(domEvent))\n\n      const isReleaseEvent =\n        isEndEvent && !isTerminateEvent && !hasTargetTouches(node, domEvent.touches)\n\n      // End\n      if (isEndEvent) {\n        if (onResponderEnd != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderEnd'\n          onResponderEnd(responderEvent)\n        }\n      }\n      // Release\n      if (isReleaseEvent) {\n        if (onResponderRelease != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderRelease'\n          onResponderRelease(responderEvent)\n        }\n        changeCurrentResponder(emptyResponder)\n      }\n      // Terminate\n      if (isTerminateEvent) {\n        let shouldTerminate = true\n\n        // Responders can still avoid termination but only for these events.\n        if (\n          eventType === 'contextmenu' ||\n          eventType === 'scroll' ||\n          eventType === 'selectionchange'\n        ) {\n          // Only call this function is it wasn't already called during negotiation.\n          if (wasNegotiated) {\n            shouldTerminate = false\n          } else if (onResponderTerminationRequest != null) {\n            responderEvent.dispatchConfig.registrationName =\n              'onResponderTerminationRequest'\n            if (onResponderTerminationRequest(responderEvent) === false) {\n              shouldTerminate = false\n            }\n          }\n        }\n\n        if (shouldTerminate) {\n          if (onResponderTerminate != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderTerminate'\n            onResponderTerminate(responderEvent)\n          }\n          changeCurrentResponder(emptyResponder)\n          isEmulatingMouseEvents = false\n          trackedTouchCount = 0\n        }\n      }\n    }\n  }\n}\n\n/**\n * Walk the event path to/from the target node. At each node, stop and call the\n * relevant \"shouldSet\" functions for the given event type. If any of those functions\n * call \"stopPropagation\" on the event, stop searching for a responder.\n */\nfunction findWantsResponder(eventPaths, domEvent, responderEvent) {\n  const shouldSetCallbacks = shouldSetResponderEvents[domEvent.type as any] // for Flow\n\n  if (shouldSetCallbacks != null) {\n    const { idPath, nodePath } = eventPaths\n\n    const shouldSetCallbackCaptureName = shouldSetCallbacks[0]\n    const shouldSetCallbackBubbleName = shouldSetCallbacks[1]\n    const { bubbles } = shouldSetCallbacks[2]\n\n    const check = (id, node, callbackName) => {\n      const config = getResponderConfig(id)\n      const shouldSetCallback = config[callbackName]\n      if (shouldSetCallback != null) {\n        responderEvent.currentTarget = node\n        if (shouldSetCallback(responderEvent) === true) {\n          // Start the path from the potential responder\n          const prunedIdPath = idPath.slice(idPath.indexOf(id))\n          return { id, node, idPath: prunedIdPath }\n        }\n      }\n    }\n\n    // capture\n    for (let i = idPath.length - 1; i >= 0; i--) {\n      const id = idPath[i]\n      const node = nodePath[i]\n      const result = check(id, node, shouldSetCallbackCaptureName)\n      if (result != null) {\n        return result\n      }\n      if (responderEvent.isPropagationStopped() === true) {\n        return\n      }\n    }\n\n    // bubble\n    if (bubbles) {\n      for (let i = 0; i < idPath.length; i++) {\n        const id = idPath[i]\n        const node = nodePath[i]\n        const result = check(id, node, shouldSetCallbackBubbleName)\n        if (result != null) {\n          return result\n        }\n        if (responderEvent.isPropagationStopped() === true) {\n          return\n        }\n      }\n    } else {\n      const id = idPath[0]\n      const node = nodePath[0]\n      const target = domEvent.target\n      if (target === node) {\n        return check(id, node, shouldSetCallbackBubbleName)\n      }\n    }\n  }\n}\n\n/**\n * Attempt to transfer the responder.\n */\nfunction attemptTransfer(\n  responderEvent: ResponderEvent,\n  wantsResponder: ActiveResponderInstance\n) {\n  const { id: currentId, node: currentNode } = currentResponder\n  const { id, node } = wantsResponder\n\n  const { onResponderGrant, onResponderReject } = getResponderConfig(id)\n\n  responderEvent.bubbles = false\n  responderEvent.cancelable = false\n  responderEvent.currentTarget = node\n\n  // Set responder\n  if (currentId == null) {\n    if (onResponderGrant != null) {\n      responderEvent.currentTarget = node\n      responderEvent.dispatchConfig.registrationName = 'onResponderGrant'\n      onResponderGrant(responderEvent)\n    }\n    changeCurrentResponder(wantsResponder)\n  }\n  // Negotiate with current responder\n  else {\n    const { onResponderTerminate, onResponderTerminationRequest } =\n      getResponderConfig(currentId)\n\n    let allowTransfer = true\n    if (onResponderTerminationRequest != null) {\n      responderEvent.currentTarget = currentNode\n      responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest'\n      if (onResponderTerminationRequest(responderEvent) === false) {\n        allowTransfer = false\n      }\n    }\n\n    if (allowTransfer) {\n      // Terminate existing responder\n      if (onResponderTerminate != null) {\n        responderEvent.currentTarget = currentNode\n        responderEvent.dispatchConfig.registrationName = 'onResponderTerminate'\n        onResponderTerminate(responderEvent)\n      }\n      // Grant next responder\n      if (onResponderGrant != null) {\n        responderEvent.currentTarget = node\n        responderEvent.dispatchConfig.registrationName = 'onResponderGrant'\n        onResponderGrant(responderEvent)\n      }\n      changeCurrentResponder(wantsResponder)\n    } else {\n      // Reject responder request\n      if (onResponderReject != null) {\n        responderEvent.currentTarget = node\n        responderEvent.dispatchConfig.registrationName = 'onResponderReject'\n        onResponderReject(responderEvent)\n      }\n    }\n  }\n}\n\n/* ------------ PUBLIC API ------------ */\n\n/**\n * Attach Listeners\n *\n * Use native events as ReactDOM doesn't have a non-plugin API to implement\n * this system.\n */\nconst documentEventsCapturePhase = ['blur', 'scroll']\nconst documentEventsBubblePhase = [\n  // mouse\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'dragstart',\n  // touch\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  // other\n  'contextmenu',\n  'select',\n  'selectionchange',\n]\n\nconst isTamaguiResponderActive = Symbol()\n\nexport function attachListeners() {\n  if (canUseDOM && !window[isTamaguiResponderActive]) {\n    window.addEventListener('blur', eventListener)\n    documentEventsBubblePhase.forEach((eventType) => {\n      document.addEventListener(eventType, eventListener)\n    })\n    documentEventsCapturePhase.forEach((eventType) => {\n      document.addEventListener(eventType, eventListener, true)\n    })\n    window[isTamaguiResponderActive] = true\n  }\n}\n\n/**\n * Register a node with the ResponderSystem.\n */\nexport function addNode(id: ResponderId, node: any, config: ResponderConfig) {\n  setResponderId(node, id)\n  responderListenersMap.set(id, config)\n}\n\n/**\n * Unregister a node with the ResponderSystem.\n */\nexport function removeNode(id: ResponderId) {\n  if (currentResponder.id === id) {\n    terminateResponder()\n  }\n  if (responderListenersMap.has(id)) {\n    responderListenersMap.delete(id)\n  }\n}\n\n/**\n * Allow the current responder to be terminated from within components to support\n * more complex requirements, such as use with other React libraries for working\n * with scroll views, input views, etc.\n */\nexport function terminateResponder() {\n  const { id, node } = currentResponder\n  if (id != null && node != null) {\n    const { onResponderTerminate } = getResponderConfig(id)\n    if (onResponderTerminate != null) {\n      const event = createResponderEvent({}, responderTouchHistoryStore)\n      event.currentTarget = node\n      onResponderTerminate(event)\n    }\n    changeCurrentResponder(emptyResponder)\n  }\n  isEmulatingMouseEvents = false\n  trackedTouchCount = 0\n}\n\n/**\n * Allow unit tests to inspect the current responder in the system.\n * FOR TESTING ONLY.\n */\nexport function getResponderNode(): any {\n  return currentResponder.node\n}\n", "import { createMedia } from '@tamagui/react-native-media-driver'\nimport { useResponderEvents } from '@tamagui/react-native-use-responder-events'\nimport type {\n  StackNonStyleProps,\n  StackStyleBase,\n  TamaDefer,\n  TamaguiComponent,\n  TamaguiElement,\n  TamaguiTextElement,\n  TextNonStyleProps,\n  TextProps,\n  TextStylePropsBase,\n} from '@tamagui/web'\nimport {\n  Stack as WebStack,\n  Text as WebText,\n  View as WebView,\n  composeEventHandlers,\n  createTamagui as createTamaguiWeb,\n  setupHooks,\n} from '@tamagui/web'\nimport React from 'react'\n\nimport { createOptimizedView } from './createOptimizedView'\nimport { getBaseViews } from './getBaseViews'\nimport { getRect } from './helpers/getRect'\nimport { measureLayout, useElementLayout } from './hooks/useElementLayout'\nimport type { RNTextProps, RNViewProps } from './reactNativeTypes'\nimport { usePressability } from './vendor/Pressability'\nimport { addNativeValidStyles } from './addNativeValidStyles'\n\n// add newer style props based on react native version\naddNativeValidStyles()\n\n// adds extra types to View/Stack/Text:\n\ntype RNExclusiveViewProps = Omit<RNViewProps, keyof StackNonStyleProps>\nexport interface RNTamaguiViewNonStyleProps\n  extends StackNonStyleProps,\n    RNExclusiveViewProps {}\n\ntype RNTamaguiView = TamaguiComponent<\n  TamaDefer,\n  TamaguiElement,\n  RNTamaguiViewNonStyleProps,\n  StackStyleBase,\n  {}\n>\n\ntype RNExclusiveTextProps = Omit<RNTextProps, keyof TextProps>\nexport interface RNTamaguiTextNonStyleProps\n  extends TextNonStyleProps,\n    RNExclusiveTextProps {}\n\ntype RNTamaguiText = TamaguiComponent<\n  TamaDefer,\n  TamaguiTextElement,\n  RNTamaguiTextNonStyleProps,\n  TextStylePropsBase,\n  {}\n>\n\n// re-exports all of @tamagui/web just adds hooks\nexport * from '@tamagui/web'\n// fixes issues with TS saying internal type usage is breaking\n// see https://discord.com/channels/909986013848412191/1146150253490348112/1146150253490348112\nexport * from './reactNativeTypes'\n\n// automate using the react native media driver\nexport const createTamagui: typeof createTamaguiWeb = (conf) => {\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    if (conf.media) {\n      conf.media = createMedia(conf.media)\n    }\n  }\n  return createTamaguiWeb(conf)\n}\n\nconst baseViews = getBaseViews()\n\n// setup internal hooks:\n\nsetupHooks({\n  getBaseViews,\n\n  setElementProps: (node) => {\n    // web only\n    if (node && !node['measure']) {\n      // @ts-ignore\n      node.measure ||= (callback) => measureLayout(node, null, callback)\n      // @ts-ignore\n      node.measureLayout ||= (relativeToNode, success) =>\n        measureLayout(node as HTMLElement, relativeToNode, success)\n      // @ts-ignore\n      node.measureInWindow ||= (callback) => {\n        setTimeout(() => {\n          const { height, left, top, width } = getRect(node as HTMLElement)!\n          callback(left, top, width, height)\n        }, 0)\n      }\n    }\n  },\n\n  usePropsTransform(elementType, propsIn, stateRef, willHydrate) {\n    if (process.env.TAMAGUI_TARGET === 'web') {\n      const isDOM = typeof elementType === 'string'\n\n      // replicate react-native-web functionality\n      const {\n        // remove event props handles by useResponderEvents\n        onMoveShouldSetResponder,\n        onMoveShouldSetResponderCapture,\n        onResponderEnd,\n        onResponderGrant,\n        onResponderMove,\n        onResponderReject,\n        onResponderRelease,\n        onResponderStart,\n        onResponderTerminate,\n        onResponderTerminationRequest,\n        onScrollShouldSetResponder,\n        onScrollShouldSetResponderCapture,\n        onSelectionChangeShouldSetResponder,\n        onSelectionChangeShouldSetResponderCapture,\n        onStartShouldSetResponder,\n        onStartShouldSetResponderCapture,\n\n        // android\n        collapsable,\n        focusable,\n\n        // deprecated,\n        accessible,\n        accessibilityDisabled,\n\n        onLayout,\n        hrefAttrs,\n\n        ...plainDOMProps\n      } = propsIn\n\n      if (willHydrate || isDOM) {\n        useElementLayout(stateRef, !isDOM ? undefined : (onLayout as any))\n        useResponderEvents(stateRef, !isDOM ? undefined : propsIn)\n      }\n\n      if (isDOM) {\n        // TODO move into getSplitStyles\n        if (plainDOMProps.href && hrefAttrs) {\n          const { download, rel, target } = hrefAttrs\n          if (download != null) {\n            plainDOMProps.download = download\n          }\n          if (rel) {\n            plainDOMProps.rel = rel\n          }\n          if (typeof target === 'string') {\n            plainDOMProps.target = target.charAt(0) !== '_' ? `_${target}` : target\n          }\n        }\n        return plainDOMProps\n      }\n    }\n  },\n\n  useEvents(viewProps, events, { pseudos }, setStateShallow, staticConfig) {\n    if (process.env.TAMAGUI_TARGET === 'native') {\n      if (events) {\n        if (events.onFocus) {\n          viewProps['onFocus'] = events.onFocus\n        }\n        if (events.onBlur) {\n          viewProps['onBlur'] = events.onBlur\n        }\n      }\n\n      if (staticConfig.isInput) {\n        if (events) {\n          const { onPressIn, onPressOut, onPress } = events\n          const inputEvents = {\n            onPressIn,\n            onPressOut: onPressOut || onPress,\n          }\n          if (onPressOut && onPress) {\n            // only supports onPressIn and onPressOut so combine them\n            inputEvents.onPressOut = composeEventHandlers(onPress, onPressOut)\n          }\n          Object.assign(viewProps, inputEvents)\n        }\n      } else {\n        // use Pressability to get smooth unPress when you press + hold + move out\n        // only ever create once, use .configure() to update later\n        if (events && viewProps.hitSlop) {\n          events.hitSlop = viewProps.hitSlop\n        }\n\n        // note we do events checks more than we should because we need this hook to always run\n        const pressability = usePressability(events)\n\n        if (events) {\n          if (process.env.NODE_ENV === 'development') {\n            if (viewProps['debug']) {\n              console.info(\n                `Checking for press ${!!events.onPress} then applying pressability props: ${Object.keys(\n                  pressability || {}\n                )}`\n              )\n            }\n          }\n\n          if (events.onPress) {\n            for (const key in pressability) {\n              const og = viewProps[key]\n              const val = pressability[key]\n              viewProps[key] =\n                og && !dontComposePressabilityKeys[key]\n                  ? composeEventHandlers(og, val)\n                  : val\n            }\n          }\n        }\n      }\n    }\n  },\n\n  // attempt at properly fixing RN input, but <Pressable><TextInput /> just doesnt work on RN\n  ...(process.env.TAMAGUI_TARGET === 'native' && {\n    useChildren(elementType, children, viewProps) {\n      if (process.env.NODE_ENV === 'test') {\n        // test mode - just use regular views since optimizations cause weirdness\n        return\n      }\n\n      if (elementType === baseViews.View) {\n        // optimize view\n        return createOptimizedView(children, viewProps, baseViews)\n      }\n\n      if (process.env.TAMAGUI_OPTIMIZE_NATIVE_VIEWS) {\n        if (elementType === baseViews.Text) {\n          // further optimize by not even caling elementType.render\n          viewProps.children = children\n          return React.createElement('RCTText', viewProps)\n        }\n      }\n    },\n  }),\n})\n\nconst dontComposePressabilityKeys = {\n  onClick: true,\n}\n\n// overwrite web versions:\n// putting at the end ensures it overwrites in dist/cjs/index.js\nexport const View = WebView as any as RNTamaguiView\nexport const Stack = WebStack as any as RNTamaguiView\nexport const Text = WebText as any as RNTamaguiText\n\n// easily test type declaration output and if it gets messy:\n\n// export const X = styled(WebView, {\n//   variants: {\n//     abc: {\n//       true: {},\n//     },\n//   } as const,\n// })\n\n// export const Y = styled(X, {\n//   variants: {\n//     zys: {\n//       true: {},\n//     },\n//   } as const,\n// })\n\n// export const Z = styled(Y, {\n//   variants: {\n//     xxx: {\n//       true: {},\n//     },\n//   } as const,\n// })\n\n// export const A = styled(Z, {\n//   variants: {} as const,\n// })\n\n// const zz = <A />\n\n// const variants = {\n//   fullscreen: {\n//     true: {},\n//   },\n//   elevation: {\n//     '...size': () => ({}),\n//     ':number': () => ({}),\n//   },\n// } as const\n\n// export const YStack = styled(View, {\n//   flexDirection: 'column',\n//   variants,\n// })\n\n// import { TextInput } from 'react-native'\n// export const InputFrame = styled(\n//   TextInput,\n//   {\n//     name: 'Input',\n//     backgroundColor: 'green',\n\n//     variants: {\n//       // unstyled: {\n//       //   false: {},\n//       // },\n\n//       size: {\n//         '...size': () => ({}),\n//       },\n\n//       // disabled: {\n//       //   ':boolean': () => ({})\n//       // },\n//     } as const,\n\n//     // defaultVariants: {\n//     //   unstyled: process.env.TAMAGUI_HEADLESS === '1' ? true : false,\n//     // },\n//   },\n//   {\n//     isText: true,\n//     accept: {\n//       placeholderTextColor: 'color',\n//     },\n//   }\n// )\n\n// export const StyledInputFrame = styled(InputFrame, {\n//   fontSize: 16,\n//   fontFamily: '$silkscreen',\n//   color: '$color5',\n//   minWidth: 0,\n//   borderWidth: 0,\n//   borderColor: 'transparent',\n\n//   variants: {\n//     unset: {\n//       false: {\n//         borderWidth: 2,\n//         py: 12,\n//         px: 14,\n//         borderRadius: 6,\n//         bg: '$color3',\n//         focusStyle: {\n//           bg: '$color4',\n//           margin: 0,\n//         },\n//       },\n//     },\n//   } as const,\n\n//   defaultVariants: {\n//     unset: false,\n//   },\n// })\n\n// export const StyledStyledInputFrame = styled(\n//   StyledInputFrame,\n//   {\n//     fontSize: 16,\n//     fontFamily: '$silkscreen',\n//     color: '$color5',\n//     minWidth: 0,\n//     borderWidth: 0,\n//     borderColor: 'transparent',\n\n//     variants: {\n//       unset: {\n//         false: {\n//           borderWidth: 2,\n//           py: 12,\n//           px: 14,\n//           borderRadius: 6,\n//           bg: '$color3',\n//           focusStyle: {\n//             bg: '$color4',\n//             margin: 0,\n//           },\n//         },\n//       },\n//     } as const,\n\n//     defaultVariants: {\n//       unset: false,\n//     },\n//   },\n//   {\n//     inlineProps: new Set(['id', 'testID']),\n//   }\n// )\n// export const DepthTest = () => <StyledStyledInputFrame placeholder=\"\" />\n", "export function getBaseViews() {\n  // empty\n  return null as any\n}\n", "export const getBoundingClientRect = (node: HTMLElement | null): undefined | DOMRect => {\n  if (!node || node.nodeType !== 1) return\n  return node.getBoundingClientRect?.()\n}\n", "import { getBoundingClientRect } from './getBoundingClientRect'\n\nexport const getRect = (node: HTMLElement) => {\n  const rect = getBoundingClientRect(node)\n  if (!rect) return\n  const { x, y, top, left } = rect\n  return { x, y, width: node.offsetWidth, height: node.offsetHeight, top, left }\n}\n", "import { useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport type { TamaguiComponentStateRef } from '@tamagui/web'\nimport type { RefObject } from 'react'\nimport { getBoundingClientRect } from '../helpers/getBoundingClientRect'\n\nconst LayoutHandlers = new WeakMap<Element, Function>()\nconst resizeListeners = new Set<Function>()\n\nexport type LayoutValue = {\n  x: number\n  y: number\n  width: number\n  height: number\n  left: number\n  top: number\n}\n\nexport type LayoutEvent = {\n  nativeEvent: {\n    layout: LayoutValue\n    target: any\n  }\n  timeStamp: number\n}\n\nlet resizeObserver: ResizeObserver | null = null\n\nif (typeof window !== 'undefined' && 'ResizeObserver' in window) {\n  // node resize/move\n  resizeObserver = new ResizeObserver((entries) => {\n    for (const { target } of entries) {\n      const onLayout = LayoutHandlers.get(target)\n      if (typeof onLayout !== 'function') return\n      measureElement(target as HTMLElement).then((event) => {\n        onLayout(event)\n      })\n    }\n  })\n\n  // window resize\n  if (typeof window.addEventListener === 'function') {\n    let tm\n    window.addEventListener('resize', () => {\n      clearTimeout(tm)\n      tm = setTimeout(() => {\n        resizeListeners.forEach((cb) => cb())\n      }, 4)\n    })\n  }\n}\n\nexport const measureElement = async (target: HTMLElement): Promise<LayoutEvent> => {\n  return new Promise((res) => {\n    measureLayout(target, null, (x, y, width, height, left, top) => {\n      res({\n        nativeEvent: {\n          layout: { x, y, width, height, left, top },\n          target,\n        },\n        timeStamp: Date.now(),\n      })\n    })\n  })\n}\n\nconst cache = new WeakMap()\n\nexport const measureLayout = (\n  node: HTMLElement,\n  relativeTo: HTMLElement | null,\n  callback: (\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    left: number,\n    top: number\n  ) => void\n) => {\n  const relativeNode = relativeTo || node?.parentNode\n  if (relativeNode instanceof HTMLElement) {\n    const now = Date.now()\n    cache.set(node, now)\n    Promise.all([\n      getBoundingClientRectAsync(node),\n      getBoundingClientRectAsync(relativeNode),\n    ]).then(([nodeDim, relativeNodeDim]) => {\n      if (relativeNodeDim && nodeDim && cache.get(node) === now) {\n        const { x, y, width, height, left, top } = getRelativeDimensions(\n          nodeDim,\n          relativeNodeDim\n        )\n        callback(x, y, width, height, left, top)\n      }\n    })\n  }\n}\n\nconst getRelativeDimensions = (a: DOMRectReadOnly, b: DOMRectReadOnly) => {\n  const { height, left, top, width } = a\n  const x = left - b.left\n  const y = top - b.top\n  return { x, y, width, height, left, top }\n}\n\nconst getBoundingClientRectAsync = (\n  element: HTMLElement\n): Promise<DOMRectReadOnly | undefined> => {\n  return new Promise((resolve) => {\n    function fallbackToSync() {\n      resolve(getBoundingClientRect(element))\n    }\n    const tm = setTimeout(fallbackToSync, 10)\n    const observer = new IntersectionObserver(\n      (entries, ob) => {\n        clearTimeout(tm)\n        ob.disconnect()\n        resolve(entries[0]?.boundingClientRect)\n      },\n      {\n        threshold: 0.0001,\n      }\n    )\n    observer.observe(element)\n  })\n}\n\nexport function useElementLayout(\n  ref: RefObject<TamaguiComponentStateRef>,\n  onLayout?: ((e: LayoutEvent) => void) | null\n) {\n  const node = ref.current?.host as Element\n\n  // ensure always up to date so we can avoid re-running effect\n  if (node && onLayout) {\n    LayoutHandlers.set(node, onLayout)\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (!resizeObserver || !onLayout) return\n    const node = ref.current?.host as Element\n    if (!node) return\n\n    // setup once\n    LayoutHandlers.set(node, onLayout)\n\n    const onResize = () => {\n      measureElement(node as HTMLElement).then(onLayout)\n    }\n\n    resizeListeners.add(onResize)\n    resizeObserver.observe(node)\n\n    return () => {\n      LayoutHandlers.delete(node)\n      resizeListeners.delete(onResize)\n      resizeObserver?.unobserve(node)\n    }\n  }, [ref, !!onLayout])\n}\n", "export function addNativeValidStyles() {\n  // only on native\n}\n"],
  "mappings": "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",
  "names": ["normalizeColor", "__export", "all", "time", "cache", "Map", "cacheSize", "simpleHash", "strIn", "hashMin", "has", "get", "str", "startsWith", "slice", "length", "hash", "valids", "added", "len", "i", "char", "charCodeAt", "isValidCSSCharCode", "hashChar", "res", "Math", "abs", "clear", "set", "c", "imul", "code", "clamp", "value", "min", "max", "Math", "composeEventHandlers", "og", "next", "checkDefaultPrevented", "event", "defaultPrevented", "concatClassName", "_cn", "args", "arguments", "usedPrefixes", "final", "len", "length", "propObjects", "x", "cns", "Array", "isArray", "push", "names", "split", "numNames", "i", "name", "splitIndex", "indexOf", "isMediaQuery", "styleKey", "slice", "lastIndexOf", "mediaKey", "uid", "propName", "some", "po", "propKey", "pseudoInvert", "hover", "focus", "press", "focusVisible", "focusWithin", "disabled", "StyleObjectProperty", "StyleObjectValue", "StyleObjectIdentifier", "StyleObjectPseudo", "StyleObjectRules", "isWeb", "isWindowDefined", "window", "isServer", "isClient", "useIsomorphicLayoutEffect", "useEffect", "useLayoutEffect", "isChrome", "navigator", "test", "userAgent", "isWebTouchable", "maxTouchPoints", "isTouchable", "isAndroid", "isIos", "process", "env", "TEST_NATIVE_PLATFORM", "currentPlatform", "ALL_PLATFORMS", "shouldRenderNativePlatform", "nativeProp", "userRequestedPlatforms", "resolvePlatformNames", "platform", "currentPlatform", "has", "platforms", "Array", "isArray", "set", "Set", "add", "delete", "textColors", "color", "textDecorationColor", "textShadowColor", "tokenCategories", "radius", "borderRadius", "borderTopLeftRadius", "borderTopRightRadius", "borderBottomLeftRadius", "borderBottomRightRadius", "borderStartStartRadius", "borderStartEndRadius", "borderEndStartRadius", "borderEndEndRadius", "size", "width", "height", "minWidth", "minHeight", "maxWidth", "maxHeight", "blockSize", "minBlockSize", "maxBlockSize", "inlineSize", "minInlineSize", "maxInlineSize", "zIndex", "backgroundColor", "borderColor", "borderBlockStartColor", "borderBlockEndColor", "borderBlockColor", "borderBottomColor", "borderInlineColor", "borderInlineStartColor", "borderInlineEndColor", "borderTopColor", "borderLeftColor", "borderRightColor", "borderEndColor", "borderStartColor", "shadowColor", "outlineColor", "caretColor", "stylePropsUnitless", "WebkitLineClamp", "animationIterationCount", "aspectRatio", "borderImageOutset", "borderImageSlice", "borderImageWidth", "columnCount", "flex", "flexGrow", "flexOrder", "flexPositive", "flexShrink", "flexNegative", "fontWeight", "gridRow", "gridRowEnd", "gridRowGap", "gridRowStart", "gridColumn", "gridColumnEnd", "gridColumnGap", "gridColumnStart", "gridTemplateColumns", "gridTemplateAreas", "lineClamp", "opacity", "order", "orphans", "tabSize", "widows", "zoom", "scale", "scaleX", "scaleY", "scaleZ", "shadowOpacity", "stylePropsTransform", "x", "y", "perspective", "skewX", "skewY", "matrix", "rotate", "rotateY", "rotateX", "rotateZ", "stylePropsView", "backfaceVisibility", "borderBottomEndRadius", "borderBottomStartRadius", "borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderBlockWidth", "borderBlockEndWidth", "borderBlockStartWidth", "borderInlineWidth", "borderInlineEndWidth", "borderInlineStartWidth", "borderStyle", "borderBlockStyle", "borderBlockEndStyle", "borderBlockStartStyle", "borderInlineStyle", "borderInlineEndStyle", "borderInlineStartStyle", "borderTopEndRadius", "borderTopStartRadius", "borderTopWidth", "borderWidth", "transform", "transformOrigin", "alignContent", "alignItems", "alignSelf", "borderEndWidth", "borderStartWidth", "bottom", "display", "end", "flexBasis", "flexDirection", "flexWrap", "gap", "columnGap", "rowGap", "justifyContent", "left", "margin", "marginBlock", "marginBlockEnd", "marginBlockStart", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBottom", "marginEnd", "marginHorizontal", "marginLeft", "marginRight", "marginStart", "marginTop", "marginVertical", "overflow", "padding", "paddingBottom", "paddingInline", "paddingBlock", "paddingBlockStart", "paddingInlineEnd", "paddingInlineStart", "paddingEnd", "paddingHorizontal", "paddingLeft", "paddingRight", "paddingStart", "paddingTop", "paddingVertical", "position", "right", "start", "top", "inset", "insetBlock", "insetBlockEnd", "insetBlockStart", "insetInline", "insetInlineEnd", "insetInlineStart", "direction", "shadowOffset", "shadowRadius", "boxShadow", "filter", "transition", "textWrap", "backdropFilter", "background", "backgroundAttachment", "backgroundBlendMode", "backgroundClip", "backgroundImage", "backgroundOrigin", "backgroundPosition", "backgroundRepeat", "backgroundSize", "borderBottomStyle", "borderImage", "borderLeftStyle", "borderRightStyle", "borderTopStyle", "boxSizing", "clipPath", "contain", "containerType", "content", "cursor", "float", "mask", "maskBorder", "maskBorderMode", "maskBorderOutset", "maskBorderRepeat", "maskBorderSlice", "maskBorderSource", "maskBorderWidth", "maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPosition", "maskRepeat", "maskSize", "maskType", "mixBlendMode", "objectFit", "objectPosition", "outlineOffset", "outlineStyle", "outlineWidth", "overflowBlock", "overflowInline", "overflowX", "overflowY", "pointerEvents", "scrollbarWidth", "textEmphasis", "touchAction", "transformStyle", "userSelect", "isAndroid", "elevationAndroid", "stylePropsFont", "fontFamily", "fontSize", "fontStyle", "fontVariant", "letterSpacing", "lineHeight", "textTransform", "stylePropsTextOnly", "textAlign", "textDecorationLine", "textDecorationStyle", "textShadowOffset", "textShadowRadius", "selectable", "verticalAlign", "whiteSpace", "wordWrap", "textOverflow", "textDecorationDistance", "WebkitBoxOrient", "stylePropsText", "stylePropsAll", "validPseudoKeys", "enterStyle", "exitStyle", "hoverStyle", "pressStyle", "focusStyle", "disabledStyle", "focusWithinStyle", "focusVisibleStyle", "validStyles", "import_react", "Decorated", "Symbol", "withStaticProperties", "component", "staticProps", "next", "_", "React", "forwardRef", "props", "ref", "createElement", "key", "v", "Object", "assign", "conf", "haventCalledErrorMessage", "process", "getSetting", "key", "Error", "settings", "setConfig", "next", "setConfigFont", "name", "font", "fontParsed", "fonts", "fontsParsed", "getConfig", "getConfigMaybe", "tokensMerged", "setTokens", "_", "getTokens", "prefixed", "tokens", "tokensParsed", "getTokenObject", "value", "group", "_a", "specificTokens", "Object", "keys", "find", "cat", "getToken", "useVariable", "isWeb", "token", "variable", "val", "getTokenValue", "getThemes", "conf", "themes", "configListeners", "Set", "onConfiguredOnce", "cb", "add", "updateConfig", "key", "value", "Object", "assign", "devConfig", "setupDev", "conf2", "process", "constructCSSVariableName", "name", "process", "env", "TAMAGUI_CSS_VARIABLE_PREFIX", "createVariable", "props", "skipHash", "isVariable", "key", "val", "isVar", "simpleHash", "variable", "isWeb", "createCSSVariable", "variableToString", "vrble", "getValue", "v", "getVariable", "nameOrVariable", "group", "_a", "dynamic", "setDidGetVariableValue", "tokens", "getConfig", "tokensParsed", "accessed", "didGetVariableValue", "getVariableValue", "token", "getVariableName", "createCSSVariable", "nameProp", "includeVar", "Error", "name", "simpleHash", "constructCSSVariableName", "matchMedia", "window", "matchMediaFallback", "_", "match", "a", "b", "addListener", "removeListener", "matches", "setupMatchMedia", "import_react", "pseudoDescriptorsBase", "hoverStyle", "name", "priority", "pressStyle", "stateKey", "focusVisibleStyle", "focusStyle", "focusWithinStyle", "disabledStyle", "pseudoPriorities", "hover", "press", "focus", "focusVisible", "focusWithin", "disabled", "pseudoDescriptors", "enterStyle", "selector", "exitStyle", "mediaState", "process", "Proxy", "get", "target", "key", "Error", "Reflect", "mediaQueryConfig", "getMedia", "mediaKeys", "Set", "mediaKeyRegex", "isMediaKey", "has", "match", "initState", "defaultMediaImportance", "Object", "keys", "pseudoDescriptors", "length", "mediaKeysOrdered", "getMediaKeyImportance", "getConfig", "settings", "mediaPropOrder", "indexOf", "dispose", "mediaVersion", "configureMedia", "config", "media", "mediaQueryDefaultActive", "getSetting", "add", "assign", "setupMediaListeners", "unlisten", "forEach", "cb", "clear", "setupVersion", "isWeb", "isServer", "env", "IS_STATIC", "update", "next", "getMatch", "matches", "updateMediaListeners", "str", "mediaObjectToString", "matchMedia", "addListener", "removeListener", "listeners", "States", "WeakMap", "setMediaShouldUpdate", "ref", "enabled", "cur", "set", "subscribe", "subscriber", "delete", "useMedia", "cc", "debug", "componentState", "internalRef", "useRef", "current", "lastState", "size", "state", "useSyncExternalStore", "curKeys", "console", "warn", "getServerSnapshot", "_", "disableMediaTouch", "_disableMediaTouch", "val", "getMediaState", "mediaGroups", "layout", "res", "fromEntries", "map", "mediaKey", "mediaKeyMatch", "getMediaImportanceIfMoreImportant", "importancesUsed", "isSizeMedia", "importance", "camelToHyphen", "replace", "m", "toLowerCase", "cache", "cachedMediaKeyToQuery", "query", "entries", "feature", "value", "test", "join", "mediaKeyMatch", "key", "dimensions", "mediaQueries", "mediaQueryConfig", "Object", "keys", "every", "query", "expectedVal", "isMax", "startsWith", "isWidth", "endsWith", "givenVal", "React", "setRef", "ref", "value", "current", "composeRefs", "refs", "node", "forEach", "useComposedRefs", "useCallback", "import_react", "objectIdentityKey", "obj", "k", "key", "arg", "type", "cache", "has", "get", "v", "Math", "random", "set", "WeakMap", "createReactContext", "React", "Math", "random", "createStyledContext", "defaultValues", "OGContext", "OGProvider", "Provider", "Context", "scopedContexts", "Map", "getOrCreateScopedContext", "scope", "ScopedContext", "get", "set", "children", "values", "next", "useMemo", "objectIdentityKey", "Provider2", "jsx", "value", "useStyledContext", "context", "useContext", "props", "ComponentContext", "createStyledContext", "disableSSR", "inText", "language", "animationDriver", "setParentFocusState", "groups", "emit", "subscribe", "state", "defaultOffset", "height", "width", "norm", "default", "normalizeColor", "normalizeCSSColor", "rgba", "colorInt", "r", "Math", "round", "g", "b", "a", "normalizeColor", "color", "opacity", "startsWith", "rgba3", "getRgba", "colors", "r", "g", "b", "a", "colorNum", "normalizeCSSColor", "rgba", "stylePropsAllPlusTransforms", "stylePropsAll", "translateX", "translateY", "normalizeValueWithProperty", "value", "property", "isWeb", "stylePropsUnitless", "res", "transformsToString", "transforms", "map", "transform", "type", "Object", "keys", "value", "join", "normalizeValueWithProperty", "getCSSStylesAtomic", "style", "styleToCSS", "out", "key", "val", "pseudoDescriptors", "push", "getStyleAtomic", "isMediaKey", "subKey", "so", "getStyleObject", "pseudo", "conf", "Array", "isArray", "transform", "transformsToString", "value", "normalizeValueWithProperty", "hash", "simpleHash", "pseudoPrefix", "name", "getConfigMaybe", "identifier", "inverseShorthands", "rules", "createAtomicRules", "shadowOffset", "shadowRadius", "shadowColor", "shadowOpacity", "offset", "defaultOffset", "width", "height", "radius", "color", "normalizeColor", "shadow", "boxShadow", "textShadowColor", "textShadowOffset", "textShadowRadius", "blurRadius", "offsetX", "offsetY", "textShadow", "createDeclarationBlock", "important", "next", "hyphenateStyleName", "hcache", "toHyphenLower", "match", "toLowerCase", "replace", "selectorPriority", "res", "priority", "map", "join", "property", "pseudoIdPostfix", "pseudoSelector", "selector", "enterStyle", "block", "webkitProperty", "toUpperCase", "slice", "finalValue", "boxOnly", "boxNone", "r", "import_react", "cache", "Map", "curKeys", "curProps", "curState", "emptyObject", "getThemeProxied", "_props", "_state", "_keys", "theme", "has", "get", "config", "getConfig", "track", "key", "current", "Set", "add", "debug", "console", "info", "proxied", "Object", "fromEntries", "entries", "flatMap", "value", "proxied2", "val", "globalThis", "tamaguiAvoidTracking", "platform", "outVal", "getVariable", "name", "scheme", "inverses", "set", "import_react", "ThemeStateContext", "createContext", "allListeners", "Map", "listenersByParent", "HasRenderedOnce", "WeakMap", "HadTheme", "PendingUpdate", "states", "localStates", "shouldForce", "forceUpdateThemes", "cacheVersion", "forEach", "cb", "getThemeState", "id", "get", "themes", "rootThemeState", "useThemeState", "props", "isRoot", "keys", "disable", "parentId", "useContext", "ThemeStateContext", "Error", "states", "get", "id", "name", "theme", "getConfig", "themes", "light", "inverses", "useId", "subscribe", "useCallback", "cb", "listenersByParent", "Set", "add", "allListeners", "set", "PendingUpdate", "shouldForce", "delete", "localStates", "propsKey", "getPropsKey", "getSnapshot", "_a", "local", "needsUpdate", "HasRenderedOnce", "current", "size", "rerender", "next", "getNextState", "debug", "console", "groupCollapsed", "info", "groupEnd", "Object", "assign", "process", "globalThis", "time", "state", "useSyncExternalStore", "useIsomorphicLayoutEffect", "HadTheme", "scheduleUpdate", "warn", "lastState", "pendingUpdate", "parentState", "isNew", "getNewThemeName", "isSameAsParent", "shouldRerender", "message", "trace", "scheme", "getScheme", "parentInverses", "isInverse", "nextState", "parentName", "rootThemeState", "shouldAvoidRerender", "queue", "visited", "length", "parent", "shift", "children", "childId", "has", "push", "forEach", "validSchemes", "dark", "split", "reset", "componentName", "inverse", "forceUpdate", "lastPartIndex", "lastIndexOf", "slice", "themes2", "parentParts", "lastName", "toLowerCase", "pop", "subNames", "filter", "Boolean", "found", "max", "i", "base", "join", "subName", "potential", "replace", "RegExp", "forceClassName", "hasThemeUpdatingProps", "useTheme", "props", "theme", "useThemeWithState", "isRoot", "keys", "useRef", "themeState", "useThemeState", "process", "env", "TAMAGUI_DISABLE_NO_THEME_WARNING", "console", "error", "JSON", "stringify", "getThemeProxied", "React", "useDidFinishSSR", "value", "useSyncExternalStore", "subscribe", "import_react", "import_react", "import_jsx_runtime", "node", "ThemeDebug", "themeState", "themeProps", "children", "process", "isHydrated", "useDidFinishSSR", "document", "createElement", "style", "height", "overflowY", "position", "zIndex", "bottom", "left", "right", "display", "border", "flexDirection", "background", "useEffect", "body", "appendChild", "parentState", "parentId", "getThemeState", "jsxs", "Fragment", "createPortal", "whiteSpace", "maxWidth", "overflow", "padding", "id", "JSON", "stringify", "name", "color1", "theme", "val", "inverses", "isNew", "componentName", "reset", "inverse", "jsx", "color", "displayName", "import_jsx_runtime", "empty", "className", "style", "Theme", "forwardRef", "props", "ref", "disable", "children", "isRoot", "_isRoot", "_", "themeState", "useThemeWithState", "finalChildren", "Children", "map", "child", "cloneElement", "React", "only", "stateRef", "useRef", "hasEverThemed", "getThemedChildren", "avoidForwardRef", "shallow", "forceClassName", "state", "current", "shouldRenderChildrenWithTheme", "isNew", "hasThemeUpdatingProps", "debug", "jsx", "ThemeDebug", "themeProps", "ThemeStateContext", "Provider", "value", "id", "isInverse", "name", "requiresExtraWrapper", "parentId", "parentState", "getThemeState", "Error", "toArray", "isValidElement", "console", "warn", "getThemeClassNameAndStyle", "isWeb", "className2", "startsWith", "themeColor", "theme", "variableToString", "color", "maxInverses", "getSetting", "themeClassName", "inverses", "replace", "schemePrefix", "import_react", "import_jsx_runtime", "themeable", "Component", "staticConfig", "optimize", "withTheme", "React", "forwardRef", "props", "ref", "themeInverse", "theme", "componentName", "themeReset", "rest", "overriddenContextProps", "context", "key", "val", "element", "jsx", "filteredProps", "compName", "debug", "name", "inverse", "reset", "contents", "Theme", "children", "Provider", "contextValue", "useContext", "displayName", "import_react", "THEME_CLASSNAME_PREFIX", "FONT_DATA_ATTRIBUTE_NAME", "stackDefaultStyles", "webViewFlexCompatStyles", "display", "alignItems", "flexDirection", "flexBasis", "boxSizing", "position", "process", "env", "TAMAGUI_POSITION_STATIC", "minHeight", "minWidth", "flexShrink", "Object", "assign", "isDevTools", "process", "Function", "defaultComponentState", "hover", "press", "pressIn", "focus", "focusVisible", "focusWithin", "unmounted", "disabled", "defaultComponentStateMounted", "defaultComponentStateShouldEnter", "groupEnd", "console", "bind", "gc", "groupCollapsed", "isWeb", "info", "inverseShorthands", "getShorthandValue", "props", "key", "getConfig", "import_react", "accessibilityDirectMap", "items", "Hidden", "ActiveDescendant", "Atomic", "AutoComplete", "Busy", "Checked", "ColumnCount", "ColumnIndex", "ColumnSpan", "Current", "Details", "ErrorMessage", "Expanded", "HasPopup", "Invalid", "Label", "Level", "Modal", "Multiline", "MultiSelectable", "Orientation", "Owns", "Placeholder", "PosInSet", "Pressed", "RoleDescription", "RowCount", "RowIndex", "RowSpan", "Selected", "SetSize", "Sort", "ValueMax", "ValueMin", "ValueNow", "ValueText", "key", "val", "toLowerCase", "getGroupPropParts", "groupProp", "mediaQueries", "getMedia", "_", "name", "part3", "part4", "split", "pseudo", "media", "MEDIA_SEP", "prefixes", "selectors", "groupPseudoToPseudoCSSMap", "press", "focusVisible", "focusWithin", "specificities", "Array", "fill", "map", "_", "i", "join", "getThemeOrGroupSelector", "name", "styleInner", "isGroup", "groupParts", "isTheme", "precedenceImportancePrefix", "selectorStart", "lastIndexOf", "selectorEnd", "selector", "slice", "precedenceSpace", "getSetting", "pseudoSelectorName", "pseudo", "pseudoSelector", "presedencePrefix", "mediaSelector", "replaceAll", "createMediaStyle", "styleObject", "mediaKeyIn", "mediaQueries", "type", "negate", "priority", "propertyIn", "identifier", "pseudoIn", "rules", "property", "enableMediaPropOrder", "isPlatform", "isNonWindowMedia", "negKey", "ogPrefix", "indexOf", "id", "replace", "styleRule", "groupPriority", "groupMediaKey", "containerName", "nextIdentifier", "rule", "isHover", "specificity", "getGroupPropParts", "media", "nextSelector", "mediaKeys", "Object", "keys", "fromEntries", "key", "mediaObjectToString", "k", "index", "mediaKey", "mediaQuery", "prefix", "includes", "normalizeShadow", "shadowColor", "shadowOffset", "shadowOpacity", "shadowRadius", "_a", "height", "width", "defaultOffset", "normalizeColor", "getRgba", "a", "fixStyles", "style", "_a", "shadowRadius", "shadowColor", "shadowOpacity", "shadowOffset", "Object", "assign", "normalizeShadow", "key", "borderDefaults", "nativeStyle", "isWeb", "borderWidth", "borderBottomWidth", "borderTopWidth", "borderLeftWidth", "borderRightWidth", "scannedCache", "WeakMap", "totalSelectorsInserted", "Map", "allSelectors", "allRules", "insertedTransforms", "getAllSelectors", "getAllRules", "Object", "values", "getAllTransforms", "addTransform", "identifier", "css", "rule", "s", "indexOf", "process", "console", "error", "startI", "endI", "value", "slice", "listenForSheetChanges", "isClient", "MutationObserver", "entries", "entry", "HTMLStyleElement", "sheet", "HTMLLinkElement", "href", "endsWith", "scanAllSheets", "observe", "document", "head", "childList", "lastScannedSheets", "collectThemes", "tokens", "themes", "sheets", "styleSheets", "prev", "current", "Set", "sheet2", "out", "updateSheetStyles", "has", "track", "id", "remove", "next", "get", "set", "bailAfterEnv", "env", "TAMAGUI_BAIL_AFTER_SCANNING_X_CSS_RULES", "bailAfter", "_a", "rules", "cssRules", "firstSelector", "getTamaguiSelector", "lastSelector", "length", "cacheKey", "lastScanned", "len", "fails", "dedupedThemes", "nameToTheme", "i", "CSSStyleRule", "response", "cssRule", "isTheme", "deduped", "addThemesFromCSS", "name", "names", "apply", "theme", "filter", "x", "push", "TAMAGUI_REACT_19", "total", "startsWith", "cssText", "colorVarToVal", "rootComputedStyle", "cssStyleRule", "selectors", "selectorText", "split", "color", "key", "token", "val", "sepI", "varIndex", "TAMAGUI_CSS_VARIABLE_PREFIX", "replace", "varName", "tokenVal", "getComputedStyle", "body", "getPropertyValue", "createVariable", "selector", "lastThemeSelectorIndex", "lastIndexOf", "schemeChar", "scheme", "themeName", "add", "tamaguiSelectorRegex", "text", "test", "getIdentifierFromTamaguiSelector", "CSSMediaRule", "dotIndex", "updateRules", "join", "nonce", "insertStyleRules", "rulesToInsert", "process", "env", "TAMAGUI_REACT_19", "sheet", "isClient", "document", "head", "styleTag", "createElement", "nonce", "appendChild", "key", "styleObject", "identifier", "StyleObjectIdentifier", "shouldInsertStyleRules", "rules", "StyleObjectRules", "allSelectors", "join", "track", "updateRules", "rule", "insertRule", "cssRules", "length", "err", "console", "error", "minInsertAmt", "TAMAGUI_INSERT_SELECTOR_TRIES", "IS_STATIC", "total", "totalSelectorsInserted", "get", "size", "TAMAGUI_STYLE_INSERTION_WARNING_LIMIT", "warn", "isActivePlatform", "key", "startsWith", "platform", "slice", "currentPlatform", "isActiveTheme", "key", "activeThemeName", "startsWith", "slice", "log", "args", "process", "_disableMediaTouch", "console", "info", "err", "error", "webToNativeDynamicExpansion", "webToNativeExpansion", "neg1Flex", "expandStyle", "key", "value", "getSetting", "EXPANSIONS", "map", "key2", "webToNativeExpansion", "webToNativeDynamicExpansion", "all", "horiz", "vert", "xy", "borderColor", "borderRadius", "borderWidth", "margin", "marginHorizontal", "marginVertical", "overscrollBehavior", "padding", "paddingHorizontal", "paddingVertical", "isWeb", "borderStyle", "overflow", "parent", "prefix", "slice", "exec", "index", "length", "k", "cache", "WeakMap", "getVariantExtras", "styleState", "has", "get", "props", "conf", "context", "theme", "fonts", "fontsParsed", "language", "getFontsForLanguage", "next", "tokens", "tokensParsed", "fontFamily", "getVariableValue", "defaultFont", "font", "set", "fontLanguageCache", "Object", "fromEntries", "entries", "map", "name", "lang", "langKey", "isObj", "x", "Array", "isArray", "normalizeStyle", "style", "disableNormalize", "res", "key", "prop", "pseudoDescriptors", "isObj", "value", "normalizeValueWithProperty", "out", "expandStyle", "Object", "assign", "fromEntries", "fixStyles", "skipProps", "untilMeasured", "animation", "space", "animateOnly", "disableClassName", "debug", "componentName", "disableOptimization", "tag", "style", "group", "themeInverse", "animatePresence", "Object", "assign", "ellipsizeMode", "accessibilityElementsHidden", "accessibilityIgnoresInvertColors", "accessibilityLanguage", "adjustsFontSizeToFit", "allowFontScaling", "dataDetectorType", "dynamicTypeRamp", "elevationAndroid", "hapticFeedback", "hapticStyle", "hitSlop", "onAccessibilityAction", "importantForAccessibility", "lineBreakStrategyIOS", "maxFontSizeMultiplier", "minimumFontScale", "needsOffscreenAlphaCompositing", "nextFocusDown", "nextFocusForward", "nextFocusLeft", "nextFocusRight", "nextFocusUp", "onMagicTap", "selectionColor", "shouldRasterizeIOS", "suppressHighlighting", "textBreakStrategy", "propMapper", "key", "value", "styleState", "disabled", "map", "_a", "lastFontFamilyToken", "conf", "styleProps", "staticConfig", "unsetVal", "unset", "variants", "noExpand", "variantValue", "resolveVariants", "forEach", "key2", "value2", "disableExpandShorthands", "shorthands", "getTokenForKey", "isVariable", "resolveVariableValue", "resolveValues", "fontFamily", "expanded", "expandStyle", "max", "length", "i", "nkey", "nvalue", "parentVariantKey", "debug", "getVariantDefinition", "console", "groupCollapsed", "info", "groupEnd", "process", "env", "TAMAGUI_WARN_ON_MISSING_VARIANT", "name", "componentName", "warn", "fn", "extras", "getVariantExtras", "fontFamilyResult", "isObj", "fontFamilyUpdate", "inverseShorthands", "getFontFamilyFromNameOrVariable", "resolveTokensAndVariants", "normalizeStyle", "noNormalize", "next", "Object", "entries", "getVariableValue", "input", "val", "variableToFontNameCache", "get", "fontsParsed", "familyVariable", "family", "set", "WeakMap", "theme", "res", "_key", "subKey", "noSkip", "skipProps", "variantOut", "val2", "pseudoDescriptors", "assign", "fVal", "subObject", "tokenCats", "spreadName", "variant", "exact", "tokensParsed", "fontSizeVariant", "fontSizeTokens", "has", "fontShorthand", "fontSize", "fontWeight", "resolveAs", "getConfig", "context", "themeValue", "slice", "valOrVar", "hasSet", "customTokenAccept", "accept", "globalThis", "tamaguiAvoidTracking", "specificTokens", "language", "getFontsForLanguage", "fam", "defaultFontToken", "cat", "tokenCategories", "spaceVar", "space", "out", "variable", "sortString", "a", "b", "conf", "PROP_SPLIT", "isValidStyleKey", "key", "validStyles", "accept", "getSplitStyles", "props", "staticConfig", "theme", "themeName", "componentState", "styleProps", "parentSplitStyles", "context", "elementType", "debug", "_a", "getConfig", "isWeb", "isAnimated", "animations", "isReactNative", "noNormalize", "shorthands", "isHOC", "isText", "isInput", "variants", "inlineProps", "inlineWhenUnflattened", "parentStaticConfig", "acceptsClassName", "viewProps", "mediaState", "globalMediaState", "usedKeys", "shouldDoClasses", "noClass", "rulesToInsert", "classNames", "pseudos", "space", "hasMedia", "dynamicThemeAccess", "pseudoGroups", "mediaGroups", "className", "mediaStylesSeen", "stylePropsText", "validStylesView", "process", "time", "styleState", "style", "env", "IS_STATIC", "fallbackProps", "Proxy", "get", "_", "val", "Reflect", "has", "isClient", "groupCollapsed", "log", "groupEnd", "asChild", "noSkip", "disableExpandShorthands", "noExpand", "webContainerType", "settings", "parentVariants", "keyOg", "keyInit", "valInit", "accepted", "getSubStyle", "webViewFlexCompatStyles", "skipProps", "identifier", "containerCSS", "addStyleToInsertRules", "valInitType", "isValidStyleKeyInit", "startsWith", "replace", "dataSet", "keyInit2", "hyphenate", "disabled", "id", "didUseKeyInit", "accessibilityDirectMap", "role", "accessibilityRoleToWebRole", "toLowerCase", "processIDRefList", "Array", "isArray", "join", "readOnly", "required", "isVariant", "isStyleLikeKey", "isPseudo", "validPseudoKeys", "isMedia", "isMediaKey", "isMediaOrPseudo", "parts", "split", "length", "pseudoPriorities", "name", "groups", "subscribe", "state", "isStyleProp", "shouldPassProp", "parentVariant", "isHOCShouldPassThrough", "shouldPassThrough", "variant", "passDownProp", "fontFamily", "fontsParsed", "disablePropMap", "propMapper", "_b", "_c", "isStyledContextProp", "styledContextProps", "mergeStyle", "after", "pseudoStyleObject", "Object", "assign", "descriptor", "pseudoDescriptors", "isEnter", "isExit", "pseudoStyles", "getStyleAtomic", "console", "info", "psuedoStyle", "fullKey", "StyleObjectProperty", "StyleObjectIdentifier", "descriptorKey", "stateKey", "isDisabled", "isExiting", "unmounted", "importance", "priority", "pkey", "val2", "applyDefaultStyle", "curImportance", "shouldMerge", "key2", "k", "Math", "max", "hasSpace", "mediaKeyShort", "slice", "willBeAnimated", "Set", "add", "isActivePlatform", "mediaStyle", "getMediaImportanceIfMoreImportant", "mediaStyles", "getCSSStylesAtomic", "property", "isSubStyle", "out", "createMediaStyle", "mediaQueryConfig", "subKey", "StyleObjectPseudo", "mergeMediaStyle", "mergeMediaByImportance", "importanceBump", "isThemeMedia", "isGroupMedia", "groupInfo", "getGroupPropParts", "groupName", "groupContext", "groupPseudoKey", "pseudo", "groupMediaKey", "media", "componentGroupState", "group", "mediaState2", "isActive", "layout", "mediaKeyMatch", "isActiveTheme", "subSubKey", "fixStyles", "noMergeStyle", "styleToCSS", "flatTransforms", "mergeFlatTransforms", "supportsCSSVars", "transform", "transformsToString", "retainedStyles", "shouldRetain", "$$css", "atomic", "atomicStyle", "value", "isAnimatedAndAnimateOnly", "animateOnly", "includes", "nonAnimatedAnimateOnly", "tabIndex", "accessible", "isFocusable", "focusable", "accessibilityDisabled", "styleProp", "normalizeStyle", "len", "i", "result", "asChildExceptStyleLike", "defaultProps", "fontFamilyClassName", "groupClassName", "componentNameFinal", "componentName", "componentClassName", "classList", "push", "values", "finalClassName", "cnStyles", "isDevTools", "logs", "target", "entries", "sort", "a", "b", "sortString", "forEach", "mergeTransform", "disableNormalize", "stylePropsTransform", "normalizeValueWithProperty", "styleIn", "avoidMergeTransform", "conf2", "styleOut", "skey", "sval", "parentTransform", "useInsertEffectCompat", "React", "useInsertionEffect", "useIsomorphicLayoutEffect", "useSplitStyles", "c", "d", "e", "f", "g", "h", "j", "res", "TAMAGUI_REACT_19", "insertStyleRules", "styleObject", "shouldInsertStyleRules", "updateRules", "StyleObjectRules", "idRefList", "defaultColor", "TAMAGUI_DEFAULT_COLOR", "animatableDefaults", "fromEntries", "tokenCategories", "color", "map", "v", "opacity", "scale", "rotate", "rotateY", "rotateX", "x", "y", "borderRadius", "lowercaseHyphenate", "match", "str", "obj", "backwards", "mapTransformKeys", "adjustable", "header", "image", "link", "none", "summary", "shouldMergeObject", "next", "mediaKey", "importancesUsed", "isSizeMedia", "debugProp", "defaultValues", "mergeProps", "a", "b", "inverseShorthands", "out", "key", "mergeProp", "longhand", "val", "pseudoDescriptors", "mediaKeys", "has", "hooks", "setupHooks", "next", "Object", "assign", "setElementProps", "node", "_a", "hooks", "import_react", "callImmediate", "cb", "createShallowSetState", "setter", "onlyAllow", "transition", "debugIn", "useCallback", "next", "startTransition", "prev", "mergeIfNotShallowEqual", "join", "debug", "allowed", "key", "includes", "isEqualShallow", "console", "info", "subscribeToContextGroup", "setStateShallow", "pseudoGroups", "mediaGroups", "componentContext", "state", "_a", "groups", "console", "debug", "subscribe", "name", "layout", "pseudo", "current", "group", "media", "has", "String", "Object", "assign", "persist", "mediaState", "getMediaState", "next", "mergeIfNotShallowEqual", "import_jsx_runtime", "wrapStyleTags", "styles", "content", "process", "env", "TAMAGUI_REACT_19", "length", "jsxs", "Fragment", "children", "map", "styleObject", "identifier", "StyleObjectIdentifier", "jsx", "href", "precedence", "StyleObjectRules", "join", "import_react", "useComponentState", "props", "animationDriver", "staticConfig", "config", "_a", "isHydrated", "useDidFinishSSR", "useAnimations", "stateRef", "useRef", "current", "hasAnimationProp", "style", "hasAnimatedStyleValue", "supportsCSSVars", "curStateRef", "willBeAnimatedClient", "isHOC", "hasAnimated", "willBeAnimated", "isServer", "disableClassName", "presence", "animatePresence", "usePresence", "presenceState", "isExiting", "isPresent", "isEntering", "initial", "hasEnterStyle", "enterStyle", "hasAnimationThatNeedsHydrate", "isReactNative", "hasEnterState", "initialState", "defaultComponentStateShouldEnter", "defaultComponentState", "defaultComponentStateMounted", "disabled", "isDisabled", "states", "useState", "state", "forceStyle", "setState", "isAnimated", "isWeb", "willHydrate", "Object", "assign", "groupName", "group", "setStateShallow", "createShallowSetState", "debug", "variants", "process", "console", "warn", "JSON", "stringify", "enterVariant", "exitVariant", "enterExitVariant", "custom", "isObj", "exv", "env", "unmounted", "noClass", "isAnimatedAndHydrated", "isClassNameDisabled", "acceptsClassName", "disableSSR", "isDisabledManually", "log", "listeners", "Set", "emit", "name", "state2", "forEach", "l", "subscribe", "cb", "add", "delete", "keys", "some", "k", "val", "accessibilityState", "accessibilityDisabled", "import_react", "import_jsx_runtime", "is19", "version", "startsWith", "Slot", "memo", "forwardRef", "props", "forwardedRef", "children", "slotProps", "isValidElement", "mergedProps", "mergeSlotProps", "cloneElement", "type", "avoidForwardRef", "ref", "composeRefs", "Children", "count", "only", "Slottable", "jsx", "Fragment", "displayName", "pressMap", "isWeb", "onPress", "onPressOut", "onPressIn", "child", "childProps", "overrideProps", "isHTMLChild", "key", "propName", "slotPropValue", "childPropValue", "handleRegex", "test", "composeEventHandlers", "filter", "Boolean", "join", "import_jsx_runtime", "time", "debugKeyListeners", "startVisualizer", "componentSetStates", "Set", "document", "cancelTouches", "forEach", "setState", "prev", "press", "pressIn", "clear", "addEventListener", "_a", "devVisualizerConfig", "devConfig", "visualizer", "tm", "isShowing", "options", "key", "delay", "clearTimeout", "defaultPrevented", "setTimeout", "l", "BaseText", "BaseView", "lastInteractionWasKeyboard", "value", "isWeb", "globalThis", "createComponent", "staticConfig", "componentName", "config", "defaultProps", "onConfiguredOnce", "conf", "defaultForComponent", "Component", "isText", "isZStack", "isHOC", "process", "debug", "env", "IS_STATIC", "log", "defaultPropsKeyOrder", "Object", "keys", "component", "React", "forwardRef", "propsIn", "forwardedRef", "internalID", "useId", "componentContext", "useContext", "ComponentContext", "styledContextProps", "overriddenContextProps", "contextValue", "context", "isReactNative", "props", "propVal", "getShorthandValue", "val", "finalVal", "debugProp", "TAMAGUI_IS_CORE_NODE", "require", "timer", "start", "curDefaultProps", "mergeProps", "componentName2", "isClient", "useEffect", "overlay", "debugVisualizerHandler", "show", "node", "curStateRef", "host", "createElement", "style", "inset", "zIndex", "position", "borderColor", "borderWidth", "borderStyle", "dataAt", "getAttribute", "dataIn", "tooltip", "top", "left", "padding", "background", "color", "fontSize", "lineHeight", "fontFamily", "webkitFontSmoothing", "innerText", "trim", "appendChild", "removeChild", "add", "delete", "animationDriver", "useAnimations", "disabled", "groupName", "hasAnimationProp", "hasEnterStyle", "isAnimated", "isExiting", "isHydrated", "presence", "presenceState", "setStateShallow", "noClass", "state", "stateRef", "supportsCSSVars", "willBeAnimated", "willBeAnimatedClient", "useComponentState", "hasTextAncestor", "inText", "isTaggable", "tagProp", "tag", "element", "elementType", "disableTheme", "themeShallow", "themeStateProps", "disable", "shallow", "inverse", "themeInverse", "name", "theme", "isListeningToTheme", "needsUpdate", "current", "displayName", "type", "hover", "focus", "focusWithin", "isPresent", "dataIs", "banner", "console", "info", "unmounted", "isServer", "groupEnd", "ch", "children", "childLog", "length", "slice", "groupCollapsed", "contextProps", "themeState", "useThemeWithState", "isStringElement", "mediaState", "useMedia", "setDidGetVariableValue", "resolveValues", "styleProps", "themeName", "splitStyles", "useSplitStyles", "group", "untilMeasured", "hasMeasured", "opacity", "dynamicThemeAccess", "hasRuntimeMediaKeys", "hasMedia", "shouldListenForMedia", "didGetVariableValue", "mediaListeningKeys", "setMediaShouldUpdate", "viewProps", "viewPropsIn", "pseudos", "splitStylesStyle", "classNames", "space", "propsWithAnimation", "asChild", "spaceDirection", "_spaceDirection", "onPress", "onLongPress", "onPressIn", "onPressOut", "onHoverIn", "onHoverOut", "onMouseUp", "onMouseDown", "onMouseEnter", "onMouseLeave", "onFocus", "onBlur", "separator", "forceStyle", "_forceStyle", "onClick", "_themeProp", "nonTamaguiProps", "acceptTagProp", "animationStyles", "animations", "componentState", "className", "warn", "onLayout", "composeEventHandlers", "e", "layout", "nativeEvent", "emit", "hooks", "usePropsTransform", "willHydrate", "composedRef", "composeRefs", "x", "setElementProps", "ref", "Children", "toArray", "item", "error", "pseudoGroups", "mediaGroups", "unPress", "useIsomorphicLayoutEffect", "computed", "styleObject", "i", "prop", "getPropertyValue", "getComputedStyle", "dispose", "subscribeToContextGroup", "join", "pseudo", "groupContextState", "groups", "next", "runtimePressStyle", "pressStyle", "runtimeFocusStyle", "focusStyle", "runtimeFocusVisibleStyle", "focusVisibleStyle", "attachFocus", "setParentFocusState", "attachPress", "runtimeHoverStyle", "hoverStyle", "needsHoverState", "attachHover", "shouldAttach", "needsPressState", "events", "focusVisible", "assign", "getWebEvents", "useEvents", "direction", "content", "spacedChildren", "Slot", "passEvents", "useChildrenResult", "useChildren", "ResetPresence", "jsx", "groupState", "subGroupContext", "useMemo", "_b", "listeners", "defaultComponentStateMounted", "width", "fromPx", "height", "subscribe", "focusWithinStyle", "Provider", "getThemedChildren", "rulesToInsert", "TAMAGUI_REACT_19", "wrapStyleTags", "values", "title", "window", "isDevTools", "willPrint", "print", "res", "TAMAGUI_FORCE_MEMO", "memo", "extendStyledConfig", "extended", "neverFlatten", "isStyledHOC", "extractable", "Component2", "styleable", "out", "render", "extendedConfig", "themeable", "TAMAGUI_MEMOIZE_STYLEABLE", "webStyle", "onTouchStart", "onTouchEnd", "Unspaced", "isUnspaced", "getSpacerSize", "size", "tokens", "sizePx", "minWidth", "minHeight", "Spacer", "acceptsClassName", "validStyles", "stackDefaultStyles", "pointerEvents", "variants", "flex", "true", "flexGrow", "horizontal", "vertical", "both", "spaceFlex", "ensureKeys", "hasSpace", "hasSeparator", "areChildrenArray", "Array", "isArray", "childrenList", "shouldForwardSpace", "final", "index", "child", "entries", "isEmpty", "isValidElement", "cloneElement", "push", "Fragment", "AbsoluteFill", "createSpacer", "t", "isVisuallyHidden", "flexDirection", "right", "bottom", "replace", "createShorthands", "shorthands", "Object", "freeze", "createTheme", "theme", "fontWeights", "processSection", "section", "keys", "defaultValue", "sectionKeys", "Object", "fillValue", "fromEntries", "Set", "map", "key", "value", "createFont", "font", "sizeKeys", "size", "processedFont", "entries", "normal", "family", "freeze", "cache", "WeakMap", "createVariables", "tokens", "parentPath", "isFont", "has", "res", "i", "keyIn", "val", "isPrefixed", "keyWithPrefix", "key", "slice", "isVariable", "niceKey", "simpleHash", "name", "finalValue", "createVariable", "set", "registerCSSVariable", "v", "tokensValueToVariable", "set", "getVariableValue", "variableToCSS", "unitless", "process", "env", "TAMAGUI_CSS_VARIABLE_PREFIX", "createCSSVariable", "name", "val", "Map", "insertFont", "name", "fontIn", "font", "createFont", "tokened", "createVariables", "parsed", "parseFont", "document", "fontVars", "registerFontVariables", "styleElement", "querySelector", "FONT_DATA_ATTRIBUTE_NAME", "createElement", "innerText", "join", "setAttribute", "head", "appendChild", "setConfigFont", "parseFont", "definition", "_a", "parsed", "attrKey", "attr", "key", "val", "registerFontVariables", "parsedFont", "response", "fkey", "registerCSSVariable", "push", "variableToCSS", "fskey", "createTokens", "tokens", "createVariables", "process", "env", "TAMAGUI_TOKEN_PREFIX", "ReactNativeStaticConfigs", "WeakMap", "getReactNativeConfig", "Component", "_a", "getSize", "prefetch", "RNConfigs", "Image", "displayName", "render", "Text", "default", "State", "blurTextInput", "TextInput", "get", "isReactNative", "inlineProps", "Set", "isText", "isInput", "setupReactNative", "rnExports", "mergeVariants", "parentVariants", "ourVariants", "level", "variants", "key", "parentVariant", "ourVariant", "styled", "ComponentIn", "options", "staticExtractionOptions", "Error", "parentStaticConfig", "staticConfig", "isPlainStyledComponent", "isReactNative", "isHOC", "Component", "isStyledHOC", "reactNativeConfig", "getReactNativeConfig", "staticConfigProps", "variants", "name", "defaultVariants", "acceptsClassName", "acceptsClassNameProp", "context", "defaultProps", "parentDefaultVariants", "parentDefaultProps", "pdp", "key", "val", "mergeVariants", "componentName", "isText", "conf", "children", "neverFlatten", "component", "createComponent", "isTamaguiComponent", "comp", "name", "config", "staticConfig", "componentName", "import_react", "isTamaguiElement", "child", "name", "React", "isValidElement", "isTamaguiComponent", "type", "forceUpdateState", "forceClassName", "deopt", "needsUpdate", "forceKeys", "current", "Set", "useThemeName", "_a", "useThemeState", "name", "import_react", "useConfiguration", "groups", "animationDriver", "restComponentConfig", "React", "useContext", "ComponentContext", "animations", "restConfig", "getConfig", "useIsTouchDevice", "isWeb", "useDidFinishSSR", "isTouchable", "import_react", "Stack", "createComponent", "acceptsClassName", "defaultProps", "stackDefaultStyles", "validStyles", "displayName", "useProps", "props", "opts", "propsOut", "styleOut", "usePropsAndStyle", "noExpand", "noNormalize", "resolveValues", "useStyle", "_a", "staticConfig", "forComponent", "Stack", "theme", "themeState", "useThemeWithState", "componentName", "name", "inverse", "themeInverse", "needsUpdate", "componentContext", "React", "useContext", "ComponentContext", "state", "disabled", "setStateShallow", "useComponentState", "getConfig", "mediaStateNow", "noMedia", "mediaState", "useMedia", "splitStyles", "useSplitStyles", "isAnimated", "noSkip", "noMergeStyle", "noClass", "mediaGroups", "pseudoGroups", "useIsomorphicLayoutEffect", "unmounted", "subscribeToContextGroup", "Object", "keys", "join", "viewProps", "style", "import_jsx_runtime", "FontLanguage", "children", "props", "jsx", "style", "display", "className", "Object", "entries", "map", "name", "language", "join", "displayName", "import_react", "import_jsx_runtime", "Configuration", "props", "current", "React", "useContext", "ComponentContext", "jsx", "Provider", "displayName", "React", "useGet", "currentValue", "initialValue", "forwardToFunction", "curRef", "useRef", "useIsomorphicLayoutEffect", "current", "useCallback", "args", "_a", "apply", "useEvent", "callback", "useGet", "defaultValue", "Error", "Tamagui", "process", "TamaguiManager", "Helpers", "mediaState", "config", "getConfig", "insertedRules", "getAllRules", "allSelectors", "getAllSelectors", "allTransforms", "getAllTransforms", "identifierToValue", "Map", "darkLight", "lightDark", "getThemeCSSRules", "props", "cssRuleSets", "process", "env", "TAMAGUI_DOES_SSR_CSS", "config", "themeName", "theme", "names", "hasDarkLight", "themes", "CNP", "THEME_CLASSNAME_PREFIX", "vars", "themeKey", "variable", "value", "tokensValueToVariable", "has", "val", "get", "TAMAGUI_CSS_VARIABLE_PREFIX", "simpleHash", "isDarkBase", "isLightBase", "baseSelectors", "map", "name", "selectorsSet", "Set", "maxDepth", "getSetting", "subName", "isDark", "startsWith", "isLight", "add", "childSelector", "replace", "order", "stronger", "weaker", "numSelectors", "Math", "round", "depth", "isOdd", "parents", "Array", "fill", "_", "idx", "parentSelectors", "length", "slice", "_first", "second", "rest", "lastParentSelector", "nextChildSelector", "parentSelectorString", "join", "selectors", "sort", "sortString", "css", "x", "isBaseTheme", "push", "bgString", "background", "variableToString", "fgString", "color", "bodyRules", "baseName", "themeRules", "darkSelector", "lightSelector", "trim", "filter", "Boolean", "prefersMediaSelectors", "selectionStyles", "rules", "selectionSelectors", "s", "styles", "Object", "entries", "flatMap", "k", "v", "css2", "themesRaw", "proxyThemesToParents", "dedupedThemes", "names", "theme", "name", "themes", "themeName", "proxiedTheme", "proxyThemeToParents", "out", "cur", "parents", "split", "slice", "map", "part", "push", "join", "parent", "Object", "assign", "ensureThemeVariable", "theme", "key", "val", "isVariable", "name", "createVariable", "createdConfigs", "WeakMap", "createTamagui", "configIn", "_a", "process", "console", "warn", "globalThis", "__tamaguiConfig", "has", "tokensParsed", "tokens", "createVariables", "tokensMerged", "cat", "tokenCat", "key", "val", "prefixedKey", "setTokens", "foundThemes", "themes", "noThemes", "Object", "keys", "length", "scanAllSheets", "env", "TAMAGUI_REACT_19", "TAMAGUI_SKIP_THEME_OPTIMIZATION", "listenForSheetChanges", "fontSizeTokens", "fontsParsed", "fonts", "fontTokens", "fromEntries", "entries", "map", "k", "v", "res", "familyName", "font", "fontParsed", "parseFont", "size", "Set", "specificTokens", "themeConfig", "cssRuleSets", "declarations", "fontDeclarations", "skey", "variable", "Error", "JSON", "stringify", "isWeb", "registerCSSVariable", "push", "variableToCSS", "declarationsToRuleSet", "decs", "selector", "sep", "join", "name", "language", "includes", "split", "fontVars", "registerFontVariables", "slice", "cssStyleSeparator", "declarations2", "fontSelector", "langSelector", "selectors", "specificRuleSet", "themesIn", "dedupedThemes", "getThemesDeduped", "proxyThemesToParents", "getThemeRulesSets", "themeRuleSets", "names", "theme", "nextRules", "getThemeCSSRules", "config", "themeName", "shorthands", "lastCSSInsertedRulesIndex", "getCSS", "opts", "separator", "sinceLastCall", "exclude", "rules", "getAllRules", "runtimeStyles", "getNewCSS", "defaultFontSetting", "settings", "defaultFont", "defaultFontToken", "unset", "fontFamily", "onlyAllowShorthands", "fontLanguages", "animations", "media", "disableSSR", "disableRootThemeClass", "mediaQueryDefaultActive", "themeClassNameOnRoot", "webContainerType", "inverseShorthands", "parsed", "setConfig", "configureMedia", "set", "configListeners", "forEach", "cb", "clear", "DEBUG", "startsWith", "info", "Tamagui", "existing", "Map", "darkOrLightSpecificPrefix", "rawTheme", "get", "key2", "ensureThemeVariable", "deduped", "import_react", "import_jsx_runtime", "View", "createComponent", "acceptsClassName", "defaultProps", "stackDefaultStyles", "validStyles", "ellipseStyle", "maxWidth", "overflow", "textOverflow", "whiteSpace", "defaultWebStyle", "display", "boxSizing", "wordWrap", "margin", "ellipsisStyle", "Text", "createComponent", "acceptsClassName", "isText", "defaultProps", "fontFamily", "inlineWhenUnflattened", "Set", "variants", "numberOfLines", "WebkitLineClamp", "WebkitBoxOrient", "selectable", "true", "userSelect", "cursor", "false", "ellipse", "ellipsis", "validStyles", "stylePropsTextOnly", "displayName", "import_react", "import_jsx_runtime", "ThemeProvider", "props", "disableRootThemeClass", "getSetting", "themeClassNameOnRoot", "isClient", "useIsomorphicLayoutEffect", "cn", "THEME_CLASSNAME_PREFIX", "defaultTheme", "target", "document", "documentElement", "body", "classList", "add", "remove", "jsx", "Theme", "className", "name", "forceClassName", "_isRoot", "useId", "children", "import_react", "import_jsx_runtime", "TamaguiProvider", "children", "disableInjectCSS", "config", "className", "defaultTheme", "disableRootThemeClass", "reset", "themeClassNameOnRoot", "process", "env", "TAMAGUI_REACT_19", "isClient", "useIsomorphicLayoutEffect", "style", "document", "createElement", "appendChild", "createTextNode", "getCSS", "head", "removeChild", "updateMediaListeners", "jsxs", "Fragment", "jsx", "UnmountedClassName", "ComponentContext", "Provider", "animationDriver", "animations", "ThemeProvider", "getSetting", "Object", "keys", "themes", "precedence", "href", "props", "mounted", "setMounted", "React", "useState", "useEffect", "isWeb", "display", "displayName", "matchMedia", "globalThis", "createMedia", "media", "setupMatchMedia", "matchMedia", "React", "keyName", "canUseDOM", "window", "document", "createElement", "getBoundingClientRect", "node", "nodeType", "getEventPath", "domEvent", "_a", "type", "target", "getSelection", "anchorNode", "composedPathFallback", "composedPath", "path", "body", "push", "parentNode", "getResponderId", "setResponderId", "id", "getResponderPaths", "idPath", "nodePath", "eventPath", "i", "length", "getLowestCommonAncestor", "pathA", "pathB", "pathALength", "pathBLength", "itemA", "indexA", "itemB", "indexB", "depth", "hasTargetTouches", "touches", "contains", "hasValidSelection", "isSelectionValid", "isPrimaryPointerDown", "altKey", "button", "buttons", "ctrlKey", "isTouch", "isPrimaryMouseDown", "isPrimaryMouseMove", "noModifiers", "selection", "string", "toString", "focusNode", "isTextNode", "Node", "TEXT_NODE", "emptyFunction", "emptyObject", "emptyArray", "normalizeIdentifier", "identifier", "createResponderEvent", "domEvent", "responderTouchHistoryStore", "rect", "propagationWasStopped", "changedTouches", "touches", "domEventChangedTouches", "domEventType", "type", "metaKey", "shiftKey", "force", "clientX", "clientY", "pageX", "pageY", "preventDefault", "bind", "timestamp", "timeStamp", "normalizeTouches", "touches2", "Array", "prototype", "slice", "call", "map", "touch", "locationX", "locationY", "target", "emulatedTouches", "responderEvent", "bubbles", "cancelable", "currentTarget", "defaultPrevented", "dispatchConfig", "eventPhase", "isDefaultPrevented", "isPropagationStopped", "isTrusted", "nativeEvent", "altKey", "ctrlKey", "persist", "stopPropagation", "touchHistory", "x", "getBoundingClientRect", "left", "y", "top", "MOUSE_DOWN", "MOUSE_MOVE", "MOUSE_UP", "MOUSE_CANCEL", "TOUCH_START", "TOUCH_MOVE", "TOUCH_END", "TOUCH_CANCEL", "SCROLL", "SELECT", "SELECTION_CHANGE", "isStartish", "eventType", "isMoveish", "isEndish", "isCancelish", "isScroll", "isSelectionChange", "ResponderTouchHistoryStore", "_touchHistory", "touchBank", "numberActiveTouches", "indexOfSingleActiveTouch", "mostRecentTimeStamp", "recordTouchTrack", "topLevelType", "nativeEvent", "_a", "touchHistory", "isMoveish", "changedTouches", "forEach", "touch", "recordTouchMove", "isStartish", "recordTouchStart", "touches", "length", "identifier", "isEndish", "recordTouchEnd", "i", "touchActive", "process", "console", "error", "MAX_TOUCH_BANK", "timestampForTouch", "timeStamp", "timestamp", "createTouchRecord", "startPageX", "pageX", "startPageY", "pageY", "startTimeStamp", "currentPageX", "currentPageY", "currentTimeStamp", "previousPageX", "previousPageY", "previousTimeStamp", "resetTouchRecord", "touchRecord", "getTouchIdentifier", "warn", "printTouch", "printTouchBank", "JSON", "stringify", "printed", "slice", "emptyObject", "startRegistration", "bubbles", "moveRegistration", "scrollRegistration", "shouldSetResponderEvents", "touchstart", "mousedown", "touchmove", "mousemove", "scroll", "emptyResponder", "id", "idPath", "node", "responderListenersMap", "Map", "isEmulatingMouseEvents", "trackedTouchCount", "currentResponder", "responderTouchHistoryStore", "ResponderTouchHistoryStore", "changeCurrentResponder", "responder", "getResponderConfig", "config", "get", "eventListener", "domEvent", "eventType", "type", "eventTarget", "target", "isStartEvent", "isStartish", "isPrimaryPointerDown", "isMoveEvent", "isMoveish", "isEndEvent", "isEndish", "isScrollEvent", "isScroll", "isSelectionChangeEvent", "isSelectionChange", "responderEvent", "createResponderEvent", "touches", "length", "recordTouchTrack", "nativeEvent", "eventPaths", "getResponderPaths", "wasNegotiated", "wantsResponder", "currentResponderIdPath", "eventIdPath", "lowestCommonAncestor", "getLowestCommonAncestor", "index", "indexOf", "slice", "nodePath", "findWantsResponder", "attemptTransfer", "onResponderStart", "onResponderMove", "onResponderEnd", "onResponderRelease", "onResponderTerminate", "onResponderTerminationRequest", "cancelable", "currentTarget", "dispatchConfig", "registrationName", "isTerminateEvent", "isCancelish", "window", "contains", "relatedTarget", "hasValidSelection", "isReleaseEvent", "hasTargetTouches", "shouldTerminate", "shouldSetCallbacks", "shouldSetCallbackCaptureName", "shouldSetCallbackBubbleName", "check", "callbackName", "shouldSetCallback", "prunedIdPath", "i", "result", "isPropagationStopped", "currentId", "currentNode", "onResponderGrant", "onResponderReject", "allowTransfer", "documentEventsCapturePhase", "documentEventsBubblePhase", "isTamaguiResponderActive", "Symbol", "attachListeners", "canUseDOM", "addEventListener", "forEach", "document", "addNode", "setResponderId", "set", "removeNode", "terminateResponder", "has", "delete", "event", "getResponderNode", "emptyObject", "Attached", "WeakMap", "Ids", "useResponderEvents", "hostRef", "configIn", "_a", "config", "getResponderConfigIfDefined", "node", "current", "host", "React", "useEffect", "ResponderSystem", "attachListeners", "has", "set", "Math", "random", "id", "get", "addNode", "removeNode", "useDebugValue", "isResponder", "getResponderNode", "onMoveShouldSetResponder", "onMoveShouldSetResponderCapture", "onResponderEnd", "onResponderGrant", "onResponderMove", "onResponderReject", "onResponderRelease", "onResponderStart", "onResponderTerminate", "onResponderTerminationRequest", "onScrollShouldSetResponder", "onScrollShouldSetResponderCapture", "onSelectionChangeShouldSetResponder", "onSelectionChangeShouldSetResponderCapture", "onStartShouldSetResponder", "onStartShouldSetResponderCapture", "import_react", "getBaseViews", "getBoundingClientRect", "node", "_a", "nodeType", "getRect", "node", "rect", "getBoundingClientRect", "x", "y", "top", "left", "width", "offsetWidth", "height", "offsetHeight", "LayoutHandlers", "WeakMap", "resizeListeners", "Set", "resizeObserver", "window", "ResizeObserver", "entries", "target", "onLayout", "get", "measureElement", "then", "event", "addEventListener", "tm", "clearTimeout", "setTimeout", "forEach", "cb", "Promise", "res", "measureLayout", "x", "y", "width", "height", "left", "top", "nativeEvent", "layout", "timeStamp", "Date", "now", "cache", "node", "relativeTo", "callback", "relativeNode", "parentNode", "HTMLElement", "set", "all", "getBoundingClientRectAsync", "nodeDim", "relativeNodeDim", "getRelativeDimensions", "a", "b", "element", "resolve", "fallbackToSync", "getBoundingClientRect", "IntersectionObserver", "ob", "_a", "disconnect", "boundingClientRect", "threshold", "observe", "useElementLayout", "ref", "current", "host", "useIsomorphicLayoutEffect", "node2", "onResize", "add", "delete", "unobserve", "addNativeValidStyles", "addNativeValidStyles", "createTamagui", "conf", "createTamaguiWeb", "baseViews", "getBaseViews", "setupHooks", "setElementProps", "node", "measure", "callback", "measureLayout", "relativeToNode", "success", "measureInWindow", "setTimeout", "height", "left", "top", "width", "getRect", "usePropsTransform", "elementType", "propsIn", "stateRef", "willHydrate", "isDOM", "onMoveShouldSetResponder", "onMoveShouldSetResponderCapture", "onResponderEnd", "onResponderGrant", "onResponderMove", "onResponderReject", "onResponderRelease", "onResponderStart", "onResponderTerminate", "onResponderTerminationRequest", "onScrollShouldSetResponder", "onScrollShouldSetResponderCapture", "onSelectionChangeShouldSetResponder", "onSelectionChangeShouldSetResponderCapture", "onStartShouldSetResponder", "onStartShouldSetResponderCapture", "collapsable", "focusable", "accessible", "accessibilityDisabled", "onLayout", "hrefAttrs", "plainDOMProps", "useElementLayout", "useResponderEvents", "href", "download", "rel", "target", "charAt", "useEvents", "viewProps", "events", "pseudos", "setStateShallow", "staticConfig", "View", "WebView", "Stack", "WebStack", "Text", "WebText"]
}
