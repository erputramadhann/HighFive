{
  "version": 3,
  "sources": ["../../@tamagui/use-presence/src/PresenceContext.tsx", "../../@tamagui/use-presence/src/usePresence.ts"],
  "sourcesContent": ["import type { PresenceContextProps } from '@tamagui/web'\nimport * as React from 'react'\n\nexport const PresenceContext: React.Context<PresenceContextProps | null> =\n  React.createContext<PresenceContextProps | null>(null)\n\nexport const ResetPresence = (props: { children?: any }): JSX.Element => (\n  <PresenceContext.Provider value={null}>{props.children}</PresenceContext.Provider>\n)\n", "import type { PresenceContextProps, UsePresenceResult } from '@tamagui/web'\nimport * as React from 'react'\n\nimport { PresenceContext } from './PresenceContext'\n\nexport function usePresence(): UsePresenceResult {\n  const context = React.useContext(PresenceContext)\n\n  if (!context) {\n    return [true, null, context]\n  }\n\n  const { id, isPresent, onExitComplete, register } = context\n\n  React.useEffect(() => register(id), [])\n\n  const safeToRemove = () => onExitComplete?.(id)\n\n  return !isPresent && onExitComplete\n    ? [false, safeToRemove, context]\n    : [true, undefined, context]\n}\n\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n */\nexport function useIsPresent(): boolean {\n  return isPresent(React.useContext(PresenceContext))\n}\n\nexport function isPresent(context: PresenceContextProps | null): boolean {\n  return context === null ? true : context.isPresent\n}\n"],
  "mappings": ";;;;;;;;;;;AACA,YAAuB;AAMrB,yBAAA;AAJK,IAAMA,kBACLC,oBAA2C,IAAI;AADhD,IAGMC,gBAAiBC,eAC5BC,wBAACJ,gBAAgBK,UAAhB;EAAyBC,OAAO;EAAOC,UAAAJ,MAAMI;AAAA,CAAS;;;ACNzD,IAAAC,SAAuB;AAIhB,SAASC,cAAiC;AAC/C,QAAMC,UAAgBC,kBAAWC,eAAe;AAEhD,MAAI,CAACF,QACH,QAAO,CAAC,MAAM,MAAMA,OAAO;AAG7B,QAAM;IAAEG;IAAIC,WAAAC;IAAWC;IAAgBC;EAAS,IAAIP;AAEpD,SAAMQ,iBAAU,MAAMD,SAASJ,EAAE,GAAG,CAAA,CAAE,GAI/B,CAACE,cAAaC,iBACjB,CAAC,OAHgB,MAAMA,iDAAiBH,KAGlBH,OAAO,IAC7B,CAAC,MAAM,QAAWA,OAAO;AAC/B;AAMO,SAASS,eAAwB;AACtC,SAAOL,UAAgBH,kBAAWC,eAAe,CAAC;AACpD;AAEO,SAASE,UAAUJ,SAA+C;AACvE,SAAOA,YAAY,OAAO,OAAOA,QAAQI;AAC3C;",
  "names": ["PresenceContext", "createContext", "ResetPresence", "props", "jsx", "Provider", "value", "children", "React", "usePresence", "context", "useContext", "PresenceContext", "id", "isPresent", "isPresent2", "onExitComplete", "register", "useEffect", "useIsPresent"]
}
