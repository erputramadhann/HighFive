{
  "version": 3,
  "sources": ["../../@tamagui/use-controllable-state/src/useControllableState.ts", "../../@tamagui/start-transition/src/index.ts", "../../@tamagui/collapsible/src/Collapsible.tsx", "../../@tamagui/collection/src/Collection.tsx", "../../@tamagui/stacks/src/getElevation.tsx", "../../@tamagui/stacks/src/Stacks.tsx", "../../@tamagui/get-token/src/index.ts", "../../@tamagui/get-button-sized/src/index.ts", "../../@tamagui/stacks/src/variants.tsx", "../../@tamagui/stacks/src/SizableStack.tsx", "../../@tamagui/stacks/src/ThemeableStack.tsx", "../../@tamagui/stacks/src/NestingContext.tsx", "../../@tamagui/get-font-sized/src/index.ts", "../../@tamagui/text/src/SizableText.tsx", "../../@tamagui/text/src/Paragraph.tsx", "../../@tamagui/text/src/Headings.tsx", "../../@tamagui/text/src/wrapChildrenInText.tsx", "../../@tamagui/use-direction/src/useDirection.tsx", "../../@tamagui/accordion/src/Accordion.tsx", "../../@tamagui/z-index-stack/src/useStackedZIndex.tsx", "../../@tamagui/z-index-stack/src/context.ts", "../../@tamagui/z-index-stack/src/StackZIndex.tsx", "../../@tamagui/polyfill-dev/index.js", "../../@tamagui/portal/src/Portal.tsx", "../../@tamagui/portal/src/helpers.ts", "../../@tamagui/portal/src/GorhomPortal.tsx", "../../@tamagui/portal/src/constants.ts", "../../@tamagui/portal/src/GorhomPortalItem.tsx", "../../@tamagui/adapt/src/Adapt.tsx", "../../@tamagui/create-context/src/create-context.tsx", "../../aria-hidden/dist/es2015/index.js", "../../@tamagui/aria-hidden/src/AriaHidden.tsx", "../../@tamagui/use-callback-ref/src/index.ts", "../../@tamagui/use-escape-keydown/src/index.ts", "../../@tamagui/dismissable/src/Dismissable.tsx", "../../@tamagui/focus-scope/src/FocusScope.tsx", "../../@tamagui/remove-scroll/src/RemoveScroll.tsx", "../../tslib/tslib.es6.mjs", "../../react-remove-scroll/dist/es2015/Combination.js", "../../react-remove-scroll/dist/es2015/UI.js", "../../react-remove-scroll-bar/dist/es2015/constants.js", "../../use-callback-ref/dist/es2015/assignRef.js", "../../use-callback-ref/dist/es2015/useRef.js", "../../use-callback-ref/dist/es2015/useMergeRef.js", "../../use-sidecar/dist/es2015/hoc.js", "../../use-sidecar/dist/es2015/hook.js", "../../use-sidecar/dist/es2015/medium.js", "../../use-sidecar/dist/es2015/renderProp.js", "../../use-sidecar/dist/es2015/exports.js", "../../react-remove-scroll/dist/es2015/medium.js", "../../react-remove-scroll/dist/es2015/SideEffect.js", "../../react-remove-scroll-bar/dist/es2015/component.js", "../../react-style-singleton/dist/es2015/hook.js", "../../get-nonce/dist/es2015/index.js", "../../react-style-singleton/dist/es2015/singleton.js", "../../react-style-singleton/dist/es2015/component.js", "../../react-remove-scroll-bar/dist/es2015/utils.js", "../../react-remove-scroll/dist/es2015/aggresiveCapture.js", "../../react-remove-scroll/dist/es2015/handleScroll.js", "../../react-remove-scroll/dist/es2015/sidecar.js", "../../@tamagui/sheet/src/constants.tsx", "../../@tamagui/sheet/src/createSheet.tsx", "../../@tamagui/sheet/src/SheetContext.tsx", "../../@tamagui/sheet/src/SheetImplementationCustom.tsx", "../../@tamagui/sheet/src/contexts.ts", "../../@tamagui/sheet/src/helpers.tsx", "../../@tamagui/sheet/src/useSheetController.tsx", "../../@tamagui/sheet/src/useSheetOpenState.tsx", "../../@tamagui/sheet/src/useSheetProviderProps.tsx", "../../@tamagui/sheet/src/SheetScrollView.tsx", "../../@tamagui/scroll-view/src/ScrollView.tsx", "../../@tamagui/sheet/src/useSheetOffscreenSize.tsx", "../../@tamagui/sheet/src/Sheet.tsx", "../../@tamagui/sheet/src/useSheet.tsx", "../../@tamagui/sheet/src/SheetController.tsx", "../../@tamagui/sheet/src/nativeSheet.tsx", "../../@tamagui/dialog/src/Dialog.tsx", "../../@tamagui/alert-dialog/src/AlertDialog.tsx", "../../@tamagui/image/src/Image.tsx", "../../@tamagui/shapes/src/getShapeSize.tsx", "../../@tamagui/shapes/src/Square.tsx", "../../@tamagui/shapes/src/Circle.tsx", "../../@tamagui/avatar/src/Avatar.tsx", "../../@tamagui/font-size/src/getFontSize.ts", "../../@tamagui/helpers-tamagui/src/prevent.tsx", "../../@tamagui/helpers-tamagui/src/useCurrentColor.tsx", "../../@tamagui/helpers-tamagui/src/useGetThemedIcon.tsx", "../../@tamagui/button/src/Button.tsx", "../../@tamagui/card/src/Card.tsx", "../../@tamagui/checkbox/src/CheckboxStyledContext.tsx", "../../@tamagui/checkbox/src/Checkbox.tsx", "../../@tamagui/checkbox/src/createCheckbox.tsx", "../../@tamagui/focusable/src/registerFocusable.ts", "../../@tamagui/focusable/src/focusableInputHOC.tsx", "../../@tamagui/label/src/Label.tsx", "../../@tamagui/checkbox-headless/src/useCheckbox.tsx", "../../@tamagui/use-previous/src/index.ts", "../../@tamagui/checkbox-headless/src/BubbleInput.tsx", "../../@tamagui/checkbox-headless/src/utils.tsx", "../../@tamagui/checkbox/src/index.ts", "../../@tamagui/form/src/Form.tsx", "../../@tamagui/group/src/Group.tsx", "../../@tamagui/group/src/useIndexedChildren.tsx", "../../@tamagui/elements/src/index.ts", "../../@tamagui/list-item/src/ListItem.tsx", "../../@tamagui/animate/src/Animate.tsx", "../../@floating-ui/utils/dist/floating-ui.utils.mjs", "../../@floating-ui/core/dist/floating-ui.core.mjs", "../../@floating-ui/utils/dist/floating-ui.utils.dom.mjs", "../../@floating-ui/dom/dist/floating-ui.dom.mjs", "../../@floating-ui/react-dom/dist/floating-ui.react-dom.mjs", "../../@tamagui/floating/src/useFloating.tsx", "../../@tamagui/popper/src/Popper.tsx", "../../@tamagui/popover/src/Popover.tsx", "../../@tamagui/popover/src/useFloatingContext.tsx", "../../@floating-ui/react/dist/floating-ui.react.mjs", "../../@floating-ui/react/dist/floating-ui.react.utils.mjs", "../../tabbable/src/index.js", "../../@tamagui/progress/src/Progress.tsx", "../../@tamagui/radio-group/src/RadioGroup.tsx", "../../@tamagui/radio-group/src/createRadioGroup.tsx", "../../@tamagui/radio-headless/src/useRadioGroup.tsx", "../../@tamagui/radio-headless/src/BubbleInput.tsx", "../../@tamagui/radio-headless/src/utils.tsx", "../../@tamagui/roving-focus/src/RovingFocusGroup.tsx", "../../@tamagui/radio-group/src/RadioGroupStyledContext.tsx", "../../@tamagui/radio-group/src/index.ts", "../../@tamagui/separator/src/Separator.tsx", "../../@tamagui/use-debounce/src/index.ts", "../../@tamagui/select/src/Select.tsx", "../../@tamagui/select/src/constants.tsx", "../../@tamagui/select/src/context.tsx", "../../@tamagui/select/src/SelectContent.tsx", "../../@tamagui/select/src/useSelectBreakpointActive.tsx", "../../@tamagui/select/src/SelectImpl.tsx", "../../@tamagui/select/src/SelectItem.tsx", "../../@tamagui/select/src/SelectItemText.tsx", "../../@tamagui/select/src/SelectScrollButton.tsx", "../../@tamagui/select/src/SelectTrigger.tsx", "../../@tamagui/select/src/SelectViewport.tsx", "../../@tamagui/slider/src/Slider.tsx", "../../@tamagui/slider/src/constants.tsx", "../../@tamagui/slider/src/helpers.tsx", "../../@tamagui/slider/src/SliderImpl.tsx", "../../@tamagui/switch-headless/src/useSwitch.tsx", "../../@tamagui/switch/src/createSwitch.tsx", "../../@tamagui/switch/src/StyledContext.tsx", "../../@tamagui/switch/src/Switch.tsx", "../../@tamagui/switch/src/index.ts", "../../@tamagui/tabs/src/Tabs.tsx", "../../@tamagui/theme/src/_mutateTheme.ts", "../../@tamagui/theme/src/addTheme.ts", "../../@tamagui/theme/src/updateTheme.ts", "../../@tamagui/theme/src/replaceTheme.ts", "../../@tamagui/toggle-group/src/ToggleGroup.tsx", "../../@tamagui/toggle-group/src/Toggle.tsx", "../../@tamagui/tooltip/src/Tooltip.tsx", "../../@tamagui/tooltip/src/TooltipSimple.tsx", "../../@tamagui/use-window-dimensions/src/index.ts", "../../@tamagui/visually-hidden/src/VisuallyHidden.tsx", "../../tamagui/src/createTamagui.ts", "../../tamagui/src/views/TamaguiProvider.tsx", "../../tamagui/src/views/Anchor.tsx", "../../tamagui/src/views/EnsureFlexed.tsx", "../../tamagui/src/views/Fieldset.tsx", "../../tamagui/src/views/Input.tsx", "../../tamagui/src/helpers/inputHelpers.tsx", "../../tamagui/src/views/Spinner.tsx", "../../tamagui/src/views/TextArea.tsx", "../../tamagui/src/views/Text.tsx"],
  "sourcesContent": ["import { useEvent } from '@tamagui/use-event'\nimport * as React from 'react'\nimport { startTransition } from '@tamagui/start-transition'\n\n// can configure to allow most-recent-wins or prop-wins\n// defaults to prop-wins\n\ntype ChangeCb<T> = ((next: T) => void) | React.Dispatch<React.SetStateAction<T>>\n\nconst emptyCallbackFn = (_) => _()\n\nexport function useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange,\n  strategy = 'prop-wins',\n  preventUpdate,\n  transition,\n}: {\n  prop?: T | undefined\n  defaultProp: T\n  onChange?: ChangeCb<T>\n  strategy?: 'prop-wins' | 'most-recent-wins'\n  preventUpdate?: boolean\n  transition?: boolean\n}): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [state, setState] = React.useState(prop ?? defaultProp)\n  const previous = React.useRef<any>(state)\n  const propWins = strategy === 'prop-wins' && prop !== undefined\n  const value = propWins ? prop : state\n  const onChangeCb = useEvent(onChange || idFn)\n\n  const transitionFn = transition ? startTransition : emptyCallbackFn\n\n  React.useEffect(() => {\n    if (prop === undefined) return\n    previous.current = prop\n    transitionFn(() => {\n      setState(prop)\n    })\n  }, [prop])\n\n  React.useEffect(() => {\n    if (propWins) return\n    if (state !== previous.current) {\n      previous.current = state\n      onChangeCb(state)\n    }\n  }, [onChangeCb, state, propWins])\n\n  const setter = useEvent((next) => {\n    if (preventUpdate) return\n    if (propWins) {\n      const nextValue = typeof next === 'function' ? next(previous.current) : next\n      onChangeCb(nextValue)\n    } else {\n      transitionFn(() => {\n        setState(next)\n      })\n    }\n  })\n\n  return [value as T, setter]\n}\n\nconst idFn = () => {}\n", "import { startTransition as reactStartTransition } from 'react'\n\nexport const startTransition = (callback: React.TransitionFunction): void => {\n  if (process.env.TAMAGUI_TARGET !== 'web') {\n    // Pass-through function\n    callback()\n  } else {\n    // Proxy to react.startTransition\n    reactStartTransition(callback)\n  }\n}\n", "import type { AnimatePresenceProps } from '@tamagui/animate-presence'\nimport { AnimatePresence, ResetPresence } from '@tamagui/animate-presence'\nimport { composeEventHandlers, withStaticProperties } from '@tamagui/helpers'\nimport type { ThemeableStackProps } from '@tamagui/stacks'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport type { GetProps, StackProps } from '@tamagui/web'\nimport { Stack, createStyledContext, styled } from '@tamagui/web'\nimport * as React from 'react'\n\n/* -------------------------------------------------------------------------------------------------\n * Collapsible\n * -----------------------------------------------------------------------------------------------*/\n\nconst COLLAPSIBLE_NAME = 'Collapsible'\n\ntype ScopedProps<P> = P & { __scopeCollapsible?: string }\n\ntype CollapsibleContextValue = {\n  contentId: string\n  disabled?: boolean\n  open: boolean\n  onOpenToggle(): void\n}\n\nconst { Provider: CollapsibleProvider, useStyledContext: useCollapsibleContext } =\n  createStyledContext<CollapsibleContextValue>()\n\ninterface CollapsibleProps extends StackProps {\n  defaultOpen?: boolean\n  open?: boolean\n  disabled?: boolean\n  onOpenChange?(open: boolean): void\n}\n\nconst _Collapsible = React.forwardRef<Stack, ScopedProps<CollapsibleProps>>(\n  (props, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props\n\n    const [open = false, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen!,\n      onChange: onOpenChange,\n    })\n\n    return (\n      <CollapsibleProvider\n        scope={__scopeCollapsible}\n        disabled={disabled}\n        contentId={React.useId()}\n        open={open}\n        onOpenToggle={React.useCallback(\n          () => setOpen((prevOpen) => !prevOpen),\n          [setOpen]\n        )}\n      >\n        <Stack\n          data-state={getState(open)}\n          data-disabled={disabled ? '' : undefined}\n          {...collapsibleProps}\n          ref={forwardedRef}\n        />\n      </CollapsibleProvider>\n    )\n  }\n)\n\n_Collapsible.displayName = COLLAPSIBLE_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'CollapsibleTrigger'\n\ntype CollapsibleTriggerProps = GetProps<typeof Stack>\n\nconst CollapsibleTriggerFrame = styled(Stack, {\n  name: TRIGGER_NAME,\n  tag: 'button',\n})\n\nconst CollapsibleTrigger = CollapsibleTriggerFrame.styleable(\n  (props: ScopedProps<CollapsibleTriggerProps>, forwardedRef) => {\n    const { __scopeCollapsible, children, ...triggerProps } = props\n    const context = useCollapsibleContext(__scopeCollapsible)\n\n    return (\n      <CollapsibleTriggerFrame\n        aria-controls={context.contentId}\n        aria-expanded={context.open || false}\n        data-state={getState(context.open)}\n        data-disabled={context.disabled ? '' : undefined}\n        disabled={context.disabled}\n        {...(triggerProps as any)}\n        ref={forwardedRef}\n        onPress={composeEventHandlers(props.onPress as any, context.onOpenToggle)}\n      >\n        {typeof children === 'function' ? children({ open: context.open }) : children}\n      </CollapsibleTriggerFrame>\n    )\n  }\n)\n\nCollapsibleTrigger.displayName = TRIGGER_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleContent\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface CollapsibleContentExtraProps extends AnimatePresenceProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true\n}\n\ninterface CollapsibleContentProps\n  extends CollapsibleContentExtraProps,\n    ThemeableStackProps {}\n\nconst CONTENT_NAME = 'CollapsibleContent'\n\nconst CollapsibleContentFrame = styled(Stack, {\n  name: CONTENT_NAME,\n})\n\nconst CollapsibleContent =\n  CollapsibleContentFrame.styleable<CollapsibleContentExtraProps>(\n    (props, forwardedRef) => {\n      const {\n        forceMount,\n        children,\n        // @ts-expect-error\n        __scopeCollapsible,\n        ...contentProps\n      } = props\n      const context = useCollapsibleContext(__scopeCollapsible)\n\n      return (\n        <AnimatePresence {...contentProps}>\n          {forceMount || context.open ? (\n            <CollapsibleContentFrame ref={forwardedRef} {...contentProps}>\n              <ResetPresence>{children}</ResetPresence>\n            </CollapsibleContentFrame>\n          ) : null}\n        </AnimatePresence>\n      )\n    }\n  )\n\nCollapsibleContent.displayName = CONTENT_NAME\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed'\n}\n\nconst Collapsible = withStaticProperties(_Collapsible, {\n  Trigger: CollapsibleTrigger,\n  Content: CollapsibleContent,\n})\n\nexport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleContentFrame,\n  CollapsibleTrigger,\n  CollapsibleTriggerFrame,\n}\n\nexport type { CollapsibleContentProps, CollapsibleProps, CollapsibleTriggerProps }\n", "import { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport type { ScopedProps, TamaguiElement } from '@tamagui/core'\nimport { Slot, createStyledContext } from '@tamagui/core'\nimport React from 'react'\n\ntype SlotProps = React.ComponentPropsWithoutRef<typeof Slot>\ntype CollectionElement = TamaguiElement\ninterface CollectionProps extends SlotProps {}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends TamaguiElement, ItemData = {}>(\n  name: string\n) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  // const PROVIDER_NAME = name + 'CollectionProvider'\n  // const [createCollectionContext, createCollectionScope] =\n  //   createContextScope(PROVIDER_NAME)\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement>\n    itemMap: Map<\n      React.RefObject<ItemElement>,\n      { ref: React.RefObject<ItemElement> } & ItemData\n    >\n  }\n\n  type ScopedCollectionProps<P> = ScopedProps<P, 'Collection'>\n\n  const { Provider: CollectionProviderImpl, useStyledContext: useCollectionContext } =\n    createStyledContext<ContextValue>({\n      collectionRef: { current: null },\n      itemMap: new Map(),\n    })\n\n  const CollectionProvider: React.FC<{\n    children?: React.ReactNode\n    __scopeCollection: string\n  }> = (props) => {\n    const { __scopeCollection, children } = props\n    const ref = React.useRef<CollectionElement>(null)\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current\n    return (\n      <CollectionProviderImpl\n        scope={__scopeCollection}\n        itemMap={itemMap}\n        collectionRef={ref}\n      >\n        {children}\n      </CollectionProviderImpl>\n    )\n  }\n\n  CollectionProvider.displayName = 'CollectionProvider'\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot'\n\n  const CollectionSlot = React.forwardRef<\n    CollectionElement,\n    ScopedCollectionProps<CollectionProps>\n  >((props, forwardedRef) => {\n    const { __scopeCollection, children } = props\n    const context = useCollectionContext(__scopeCollection)\n    const composedRefs = useComposedRefs(forwardedRef, context.collectionRef)\n    return <Slot ref={composedRefs}>{children}</Slot>\n  })\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot'\n  const ITEM_DATA_ATTR = 'data-collection-item'\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode\n  }\n\n  const CollectionItemSlot = React.forwardRef<\n    ItemElement,\n    ScopedCollectionProps<CollectionItemSlotProps>\n  >((props, forwardedRef) => {\n    const { __scopeCollection, children, ...itemData } = props\n    const ref = React.useRef<ItemElement>(null)\n    const composedRefs = useComposedRefs(forwardedRef, ref)\n    const context = useCollectionContext(__scopeCollection)\n\n    React.useEffect(() => {\n      context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) })\n      return () => void context.itemMap.delete(ref)\n    })\n\n    return (\n      <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n        {children}\n      </Slot>\n    )\n  })\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(__scopeCollection: any) {\n    const context = useCollectionContext(__scopeCollection)\n\n    const getItems = React.useCallback(() => {\n      if (!isWeb) {\n        return []\n      }\n\n      const collectionNode = context.collectionRef.current as HTMLElement\n      if (!collectionNode) return []\n      const orderedNodes = Array.from(\n        collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`)\n      )\n      const items = Array.from(context.itemMap.values())\n      const orderedItems = items.sort(\n        (a, b) =>\n          orderedNodes.indexOf(a.ref.current! as HTMLElement) -\n          orderedNodes.indexOf(b.ref.current! as HTMLElement)\n      )\n      return orderedItems\n    }, [context.collectionRef, context.itemMap])\n\n    return getItems\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n  ] as const\n}\n\nexport { createCollection }\nexport type { CollectionProps }\n", "import type {\n  SizeTokens,\n  SizeVariantSpreadFunction,\n  StackProps,\n  VariantSpreadExtras,\n} from '@tamagui/core'\nimport { getVariableValue, isAndroid, isVariable } from '@tamagui/core'\n\nexport const getElevation: SizeVariantSpreadFunction<StackProps> = (size, extras) => {\n  if (!size) return\n  const { tokens } = extras\n  const token = tokens.size[size]\n  const sizeNum = (isVariable(token) ? +token.val : size) as number\n  return getSizedElevation(sizeNum, extras)\n}\n\nexport const getSizedElevation = (\n  val: SizeTokens | number | boolean,\n  { theme, tokens }: VariantSpreadExtras<any>\n) => {\n  let num = 0\n  if (val === true) {\n    const val = getVariableValue(tokens.size['true'])\n    if (typeof val === 'number') {\n      num = val\n    } else {\n      num = 10\n    }\n  } else {\n    num = +val\n  }\n  if (num === 0) {\n    return\n  }\n  const [height, shadowRadius] = [Math.round(num / 4 + 1), Math.round(num / 2 + 2)]\n  const shadow = {\n    shadowColor: theme.shadowColor,\n    shadowRadius,\n    shadowOffset: { height, width: 0 },\n    ...(isAndroid\n      ? {\n          elevationAndroid: 2 * height,\n        }\n      : {}),\n  }\n  return shadow\n}\n", "import type { GetProps, SizeTokens } from '@tamagui/core'\nimport { View, styled } from '@tamagui/core'\n\nimport { getElevation } from './getElevation'\n\nexport type YStackProps = GetProps<typeof YStack>\n\nexport type XStackProps = YStackProps\nexport type ZStackProps = YStackProps\n\nexport const fullscreenStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n} as const\n\ntype Insets = {\n  top?: number\n  bottom?: number\n  left?: number\n  right?: number\n}\n\nconst getInset = (val: number | SizeTokens | Insets | null) =>\n  val && typeof val === 'object'\n    ? val\n    : {\n        top: val,\n        left: val,\n        bottom: val,\n        right: val,\n      }\n\nconst variants = {\n  fullscreen: {\n    true: fullscreenStyle,\n  },\n\n  elevation: {\n    '...size': getElevation,\n    ':number': getElevation,\n  },\n\n  inset: getInset,\n} as const\n\n/**\n * @summary A view that arranges its children in a vertical line.\n * @see — Docs https://tamagui.dev/ui/stacks#xstack-ystack-zstack\n */\nexport const YStack = styled(View, {\n  flexDirection: 'column',\n  variants,\n})\n\nYStack['displayName'] = 'YStack'\n\n/**\n * @summary A view that arranges its children in a horizontal line.\n * @see — Docs https://tamagui.dev/ui/stacks#xstack-ystack-zstack\n */\nexport const XStack = styled(View, {\n  flexDirection: 'row',\n  variants,\n})\n\nXStack['displayName'] = 'XStack'\n\n/**\n * @summary A view that stacks its children on top of each other.\n * @see — Docs https://tamagui.dev/ui/stacks#xstack-ystack-zstack\n */\nexport const ZStack = styled(\n  YStack,\n  {\n    position: 'relative',\n  },\n  {\n    neverFlatten: true,\n    isZStack: true,\n  }\n)\n\nZStack['displayName'] = 'ZStack'\n", "import type { Variable, VariableValGeneric } from '@tamagui/web'\nimport { getTokens, isVariable } from '@tamagui/web'\n\n// technically number | undefined just for compat with the generic VariableVal\ntype GetTokenBase = Variable | string | number | undefined | VariableValGeneric\n\ntype GetTokenOptions = {\n  shift?: number\n  bounds?: [number] | [number, number]\n  excludeHalfSteps?: boolean\n}\n\nconst defaultOptions: GetTokenOptions = {\n  shift: 0,\n  bounds: [0],\n}\n\nexport const getSize = (size: GetTokenBase, options?: GetTokenOptions) => {\n  return getTokenRelative('size', size, options)\n}\n\nexport const getSpace = (space: GetTokenBase, options?: GetTokenOptions) => {\n  return getTokenRelative('space', space, options)\n}\n\nexport const getRadius = (radius: GetTokenBase, options?: GetTokenOptions) => {\n  return getTokenRelative('radius', radius, options)\n}\n\nconst cacheVariables: Record<string, Variable[]> = {}\nconst cacheWholeVariables: Record<string, Variable[]> = {}\nconst cacheKeys: Record<string, string[]> = {}\nconst cacheWholeKeys: Record<string, string[]> = {}\n\n/** @deprecated use getSize, getSpace, or getTokenRelative instead */\nexport const stepTokenUpOrDown = (\n  type: 'size' | 'space' | 'zIndex' | 'radius',\n  current: GetTokenBase,\n  options: GetTokenOptions = defaultOptions\n): Variable<number> => {\n  const tokens = getTokens({ prefixed: true })[type] as Record<string, Variable>\n\n  if (!(type in cacheVariables)) {\n    cacheKeys[type] = []\n    cacheVariables[type] = []\n    cacheWholeKeys[type] = []\n    cacheWholeVariables[type] = []\n\n    const sorted = Object.keys(tokens)\n      .map((k) => tokens[k])\n      .sort((a, b) => a.val - b.val)\n\n    for (const token of sorted) {\n      cacheKeys[type].push(token.key)\n      cacheVariables[type].push(token)\n    }\n\n    const sortedExcludingHalfSteps = sorted.filter((x) => !x.key.endsWith('.5'))\n    for (const token of sortedExcludingHalfSteps) {\n      cacheWholeKeys[type].push(token.key)\n      cacheWholeVariables[type].push(token)\n    }\n  }\n\n  const isString = typeof current === 'string'\n  const cache = options.excludeHalfSteps\n    ? isString\n      ? cacheWholeKeys\n      : cacheWholeVariables\n    : isString\n      ? cacheKeys\n      : cacheVariables\n\n  const tokensOrdered = cache[type]\n\n  const min = options.bounds?.[0] ?? 0\n  const max = options.bounds?.[1] ?? tokensOrdered.length - 1\n  const currentIndex = tokensOrdered.indexOf(current as any)\n\n  let shift = options.shift || 0\n  if (shift) {\n    if (current === '$true' || (isVariable(current) && current.name === 'true')) {\n      shift += shift > 0 ? 1 : -1\n    }\n  }\n\n  const index = Math.min(max, Math.max(min, currentIndex + shift))\n  const found = tokensOrdered[index]\n\n  const result = (typeof found === 'string' ? tokens[found] : found) || tokens['$true']\n\n  // console.log('found', { current, shift, index, found, result })\n\n  // @ts-ignore\n  return result\n}\n\nexport const getTokenRelative = stepTokenUpOrDown\n", "import { getSpace } from '@tamagui/get-token'\nimport type { SizeTokens, VariantSpreadExtras } from '@tamagui/web'\n\nexport const getButtonSized = (\n  val: SizeTokens | number,\n  { tokens, props }: VariantSpreadExtras<any>\n) => {\n  if (!val || props.circular) {\n    return\n  }\n  if (typeof val === 'number') {\n    return {\n      paddingHorizontal: val * 0.25,\n      height: val,\n      borderRadius: props.circular ? 100_000 : val * 0.2,\n    }\n  }\n  const xSize = getSpace(val)\n  const radiusToken = tokens.radius[val] ?? tokens.radius['$true']\n  return {\n    paddingHorizontal: xSize,\n    height: val,\n    borderRadius: props.circular ? 100_000 : radiusToken,\n  }\n}\n", "import { getElevation } from './getElevation'\n\nexport const elevate = {\n  true: (_: boolean, extras: any) => {\n    return getElevation(extras.props['size'], extras) as any\n  },\n}\n\nexport const bordered = (val: boolean | number, { props }) => {\n  return {\n    // TODO size it with size in '...size'\n    borderWidth: typeof val === 'number' ? val : 1,\n    borderColor: '$borderColor',\n\n    ...(props.hoverTheme && {\n      hoverStyle: {\n        borderColor: '$borderColorHover',\n      },\n    }),\n\n    ...(props.pressTheme && {\n      pressStyle: {\n        borderColor: '$borderColorPress',\n      },\n    }),\n\n    ...(props.focusTheme && {\n      focusStyle: {\n        borderColor: '$borderColorFocus',\n      },\n    }),\n  }\n}\n\nexport const padded = {\n  true: (_, extras) => {\n    const { tokens, props } = extras\n    return {\n      padding: tokens.space[props.size] || tokens.space['$true'],\n    }\n  },\n}\n\nexport const radiused = {\n  true: (_, extras) => {\n    const { tokens, props } = extras\n    return {\n      borderRadius: tokens.radius[props.size] || tokens.radius['$true'],\n    }\n  },\n}\n\nconst circularStyle = {\n  borderRadius: 100_000,\n  padding: 0,\n}\n\nexport const circular = {\n  true: (_, { props, tokens }) => {\n    if (!('size' in props)) {\n      return circularStyle\n    }\n    const size = typeof props.size === 'number' ? props.size : tokens.size[props.size]\n    return {\n      ...circularStyle,\n      width: size,\n      height: size,\n      maxWidth: size,\n      maxHeight: size,\n      minWidth: size,\n      minHeight: size,\n    }\n  },\n}\n\nexport const hoverTheme = {\n  true: {\n    hoverStyle: {\n      backgroundColor: '$backgroundHover',\n      borderColor: '$borderColorHover',\n    },\n  },\n  false: {},\n}\n\nexport const pressTheme = {\n  true: {\n    cursor: 'pointer',\n    pressStyle: {\n      backgroundColor: '$backgroundPress',\n      borderColor: '$borderColorPress',\n    },\n  },\n  false: {},\n}\n\nexport const focusTheme = {\n  true: {\n    focusStyle: {\n      backgroundColor: '$backgroundFocus',\n      borderColor: '$borderColorFocus',\n    },\n  },\n  false: {},\n}\n", "import type { GetProps } from '@tamagui/core'\nimport { styled } from '@tamagui/core'\nimport { getButtonSized } from '@tamagui/get-button-sized'\n\nimport { XStack } from './Stacks'\nimport {\n  bordered,\n  circular,\n  elevate,\n  focusTheme,\n  hoverTheme,\n  pressTheme,\n} from './variants'\n\nexport const SizableStack = styled(XStack, {\n  name: 'SizableStack',\n\n  variants: {\n    unstyled: {\n      true: {\n        hoverTheme: false,\n        pressTheme: false,\n        focusTheme: false,\n        elevate: false,\n        bordered: false,\n      },\n    },\n\n    hoverTheme,\n    pressTheme,\n    focusTheme,\n    circular,\n    elevate,\n    bordered,\n\n    size: {\n      '...size': (val, extras) => {\n        return getButtonSized(val, extras)\n      },\n    },\n  } as const,\n})\n\nexport type SizableStackProps = GetProps<typeof SizableStack>\n", "import type { GetProps } from '@tamagui/core'\nimport { styled } from '@tamagui/core'\n\nimport { YStack } from './Stacks'\n\nimport {\n  bordered,\n  circular,\n  elevate,\n  focusTheme,\n  hoverTheme,\n  padded,\n  pressTheme,\n  radiused,\n} from './variants'\n\nconst chromelessStyle = {\n  backgroundColor: 'transparent',\n  borderColor: 'transparent',\n  shadowColor: 'transparent',\n\n  hoverStyle: {\n    borderColor: 'transparent',\n  },\n}\n\nexport const themeableVariants = {\n  backgrounded: {\n    true: {\n      backgroundColor: '$background',\n    },\n  },\n\n  radiused,\n  hoverTheme,\n  pressTheme,\n  focusTheme,\n  circular,\n  padded,\n  elevate,\n  bordered,\n\n  transparent: {\n    true: {\n      backgroundColor: 'transparent',\n    },\n  },\n\n  chromeless: {\n    true: chromelessStyle,\n    all: {\n      ...chromelessStyle,\n      hoverStyle: chromelessStyle,\n      pressStyle: chromelessStyle,\n      focusStyle: chromelessStyle,\n    },\n  },\n} as const\n\nexport const ThemeableStack = styled(YStack, {\n  variants: themeableVariants,\n})\n\nexport type ThemeableStackProps = GetProps<typeof ThemeableStack>\n", "import React from 'react'\n\nexport const ButtonNestingContext = React.createContext(false)\n", "import { isClient } from '@tamagui/constants'\nimport type {\n  FontSizeTokens,\n  GenericFont,\n  TextProps,\n  TextStyle,\n  VariantSpreadFunction,\n} from '@tamagui/core'\nimport { getTokens } from '@tamagui/core'\n\nexport const getFontSized: VariantSpreadFunction<TextProps, FontSizeTokens> = (\n  sizeTokenIn = '$true',\n  { font, fontFamily, props }\n) => {\n  if (!font) {\n    return {\n      fontSize: sizeTokenIn,\n    }\n  }\n\n  const sizeToken = sizeTokenIn === '$true' ? getDefaultSizeToken(font) : sizeTokenIn\n\n  const style: TextStyle = {}\n\n  // size related, treat them as overrides\n  const fontSize = font.size[sizeToken]\n  const lineHeight = font.lineHeight?.[sizeToken]\n  const fontWeight = font.weight?.[sizeToken]\n  const letterSpacing = font.letterSpacing?.[sizeToken]\n  const textTransform = font.transform?.[sizeToken]\n  const fontStyle = props.fontStyle ?? font.style?.[sizeToken]\n  const color = props.color ?? font.color?.[sizeToken]\n\n  if (fontStyle) style.fontStyle = fontStyle\n  if (textTransform) style.textTransform = textTransform\n  if (fontFamily) style.fontFamily = fontFamily\n  if (fontWeight) style.fontWeight = fontWeight\n  if (letterSpacing) style.letterSpacing = letterSpacing\n  if (fontSize) style.fontSize = fontSize\n  if (lineHeight) style.lineHeight = lineHeight\n  if (color) style.color = color\n\n  if (process.env.NODE_ENV === 'development') {\n    if (props['debug'] && props['debug'] === 'verbose') {\n      console.groupCollapsed('  🔹 getFontSized', sizeTokenIn, sizeToken)\n      if (isClient) {\n        console.info({ style, props, font })\n      }\n      console.groupEnd()\n    }\n  }\n\n  return style\n}\n\nconst cache = new WeakMap<any, FontSizeTokens>()\n\nfunction getDefaultSizeToken(font: GenericFont) {\n  if (typeof font === 'object' && cache.has(font)) {\n    return cache.get(font)!\n  }\n\n  // use either font.size if it has true set, or fallback to tokens.size mapping to the same\n  const sizeTokens = '$true' in font.size ? font.size : getTokens().size\n  const sizeDefault = sizeTokens['$true']\n  const sizeDefaultSpecific = sizeDefault\n    ? Object.keys(sizeTokens).find(\n        (x) => x !== '$true' && sizeTokens[x]['val'] === sizeDefault['val']\n      )\n    : null\n\n  if (!sizeDefault || !sizeDefaultSpecific) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(`No default size is set in your tokens for the \"true\" key, fonts will be inconsistent.\n\n      Fix this by having consistent tokens across fonts and sizes and setting a true key for your size tokens, or\n      set true keys for all your font tokens: \"size\", \"lineHeight\", \"fontStyle\", etc.`)\n    }\n    return Object.keys(font.size)[3]\n  }\n\n  cache.set(font, sizeDefaultSpecific as FontSizeTokens)\n  return sizeDefaultSpecific\n}\n", "import { getFontSized } from '@tamagui/get-font-sized'\nimport type { GetProps } from '@tamagui/web'\nimport { Text, styled } from '@tamagui/web'\n\nexport const SizableText = styled(Text, {\n  name: 'SizableText',\n  fontFamily: '$body',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$true',\n        color: '$color',\n      },\n    },\n\n    size: getFontSized,\n  },\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\n// we are doing weird stuff to avoid bad types\n// TODO make this just work\nSizableText.staticConfig.variants!.fontFamily = {\n  '...': (_val, extras) => {\n    const sizeProp = extras.props['size']\n    const fontSizeProp = extras.props['fontSize']\n    const size =\n      sizeProp === '$true' && fontSizeProp\n        ? fontSizeProp\n        : extras.props['size'] || '$true'\n    return getFontSized(size, extras)\n  },\n}\n\nexport type SizableTextProps = GetProps<typeof SizableText>\n", "import type { GetProps } from '@tamagui/web'\nimport { styled } from '@tamagui/web'\n\nimport { SizableText } from './SizableText'\n\nexport const Paragraph = styled(SizableText, {\n  name: 'Paragraph',\n  tag: 'p',\n  userSelect: 'auto',\n  color: '$color',\n  size: '$true',\n  whiteSpace: 'normal',\n})\n\nexport type ParagraphProps = GetProps<typeof Paragraph>\n", "import type { GetProps } from '@tamagui/web'\nimport { styled } from '@tamagui/web'\n\nimport { Paragraph } from './Paragraph'\n\nexport const Heading = styled(Paragraph, {\n  tag: 'span',\n  name: 'Heading',\n  accessibilityRole: 'header',\n  fontFamily: '$heading',\n  size: '$8',\n  margin: 0,\n})\n\nexport type HeadingProps = GetProps<typeof Heading>\n\nexport const H1 = styled(Heading, {\n  name: 'H1',\n  tag: 'h1',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$10',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1' ? true : false,\n  },\n})\n\nexport const H2 = styled(Heading, {\n  name: 'H2',\n  tag: 'h2',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$9',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1' ? true : false,\n  },\n})\n\nexport const H3 = styled(Heading, {\n  name: 'H3',\n  tag: 'h3',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$8',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1' ? true : false,\n  },\n})\n\nexport const H4 = styled(Heading, {\n  name: 'H4',\n  tag: 'h4',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$7',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1' ? true : false,\n  },\n})\n\nexport const H5 = styled(Heading, {\n  name: 'H5',\n  tag: 'h5',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$6',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1' ? true : false,\n  },\n})\n\nexport const H6 = styled(Heading, {\n  name: 'H6',\n  tag: 'h6',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$5',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1' ? true : false,\n  },\n})\n", "import type { SizeTokens } from '@tamagui/web'\nimport React from 'react'\n\nimport type { TextParentStyles } from './types'\n\ntype Props = TextParentStyles & {\n  children?: React.ReactNode\n  size?: SizeTokens\n}\n\nexport function wrapChildrenInText(\n  TextComponent: any,\n  propsIn: Props & {\n    unstyled?: boolean\n  },\n  extraProps?: Record<string, any>\n) {\n  const {\n    children,\n    textProps,\n    size,\n    noTextWrap,\n    color,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    letterSpacing,\n    textAlign,\n    fontStyle,\n    maxFontSizeMultiplier,\n  } = propsIn\n\n  if (noTextWrap || !children) {\n    return [children]\n  }\n\n  const props = {\n    ...extraProps,\n  }\n\n  // to avoid setting undefined\n  if (color) props.color = color\n  if (fontFamily) props.fontFamily = fontFamily\n  if (fontSize) props.fontSize = fontSize\n  if (fontWeight) props.fontWeight = fontWeight\n  if (letterSpacing) props.letterSpacing = letterSpacing\n  if (textAlign) props.textAlign = textAlign\n  if (size) props.size = size\n  if (fontStyle) props.fontStyle = fontStyle\n  if (maxFontSizeMultiplier) props.maxFontSizeMultiplier = maxFontSizeMultiplier\n\n  return React.Children.toArray(children).map((child, index) => {\n    return typeof child === 'string' ? (\n      // so \"data-disable-theme\" is a hack to fix themeInverse, don't ask me why\n      <TextComponent key={index} {...props} {...textProps}>\n        {child}\n      </TextComponent>\n    ) : (\n      child\n    )\n  })\n}\n", "// forked from https://github.com/radix-ui/primitives/blob/main/packages/react/direction/src/Direction.tsx\n\nimport * as React from 'react'\n\ntype Direction = 'ltr' | 'rtl'\nconst DirectionContext = React.createContext<Direction | undefined>(undefined)\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode\n  dir: Direction\n}\n\nexport const DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>\n}\n\nexport function useDirection(localDir?: Direction): Direction {\n  const globalDir = React.useContext(DirectionContext)\n  return localDir || globalDir || 'ltr'\n}\n\nexport const Provider: React.FC<DirectionProviderProps> = DirectionProvider\n", "import { Collapsible } from '@tamagui/collapsible'\nimport { createCollection } from '@tamagui/collection'\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport { composeEventHandlers, withStaticProperties } from '@tamagui/helpers'\nimport { YStack } from '@tamagui/stacks'\nimport { H1 } from '@tamagui/text'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport { useDirection } from '@tamagui/use-direction'\nimport type { GetProps, GetRef, Stack, TamaguiElement } from '@tamagui/web'\nimport { View, createStyledContext, styled, useEvent } from '@tamagui/web'\nimport * as React from 'react'\n\ntype Direction = 'ltr' | 'rtl'\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACCORDION_NAME = 'Accordion'\nconst ACCORDION_KEYS = ['Home', 'End', 'ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight']\n\nconst [Collection, useCollection] = createCollection<AccordionTrigger>(ACCORDION_NAME)\n\ntype ScopedProps<P> = P & { __scopeAccordion?: string }\n\ntype AccordionElement = AccordionImplMultipleElement | AccordionImplSingleElement\ninterface AccordionSingleProps extends AccordionImplSingleProps {\n  type: 'single'\n}\ninterface AccordionMultipleProps extends AccordionImplMultipleProps {\n  type: 'multiple'\n}\n\nconst ACCORDION_CONTEXT = 'Accordion'\n\nconst AccordionComponent = React.forwardRef<\n  AccordionElement,\n  ScopedProps<AccordionSingleProps | AccordionMultipleProps>\n>((props: ScopedProps<AccordionSingleProps | AccordionMultipleProps>, forwardedRef) => {\n  const { type, ...accordionProps } = props\n  const singleProps = accordionProps as AccordionImplSingleProps\n  const multipleProps = accordionProps as AccordionImplMultipleProps\n\n  return (\n    <Collection.Provider __scopeCollection={props.__scopeAccordion || ACCORDION_CONTEXT}>\n      {type === 'multiple' ? (\n        <AccordionImplMultiple {...multipleProps} ref={forwardedRef} />\n      ) : (\n        <AccordionImplSingle {...singleProps} ref={forwardedRef} />\n      )}\n    </Collection.Provider>\n  )\n})\n\nAccordionComponent.displayName = ACCORDION_NAME\n\nAccordionComponent.propTypes = {\n  type(props) {\n    const value = props.value || props.defaultValue\n    if (props.type && !['single', 'multiple'].includes(props.type)) {\n      return new Error(\n        'Invalid prop `type` supplied to `Accordion`. Expected one of `single | multiple`.'\n      )\n    }\n    if (props.type === 'multiple' && typeof value === 'string') {\n      return new Error(\n        'Invalid prop `type` supplied to `Accordion`. Expected `single` when `defaultValue` or `value` is type `string`.'\n      )\n    }\n    if (props.type === 'single' && Array.isArray(value)) {\n      return new Error(\n        'Invalid prop `type` supplied to `Accordion`. Expected `multiple` when `defaultValue` or `value` is type `string[]`.'\n      )\n    }\n    return null\n  },\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionValueContextValue = {\n  value: string[]\n  onItemOpen(value: string): void\n  onItemClose(value: string): void\n}\n\nconst { Provider: AccordionValueProvider, useStyledContext: useAccordionValueContext } =\n  createStyledContext<AccordionValueContextValue>()\n\nconst {\n  Provider: AccordionCollapsibleProvider,\n  useStyledContext: useAccordionCollapsibleContext,\n} = createStyledContext()\n\ntype AccordionImplSingleElement = AccordionImplElement\n\ninterface AccordionImplSingleProps extends AccordionImplProps {\n  /**\n   * The controlled stateful value of the accordion item whose content is expanded.\n   */\n  value?: string\n  /**\n   * The value of the item whose content is expanded when the accordion is initially rendered. Use\n   * `defaultValue` if you do not need to control the state of an accordion.\n   */\n  defaultValue?: string\n  /**\n   * The callback that fires when the state of the accordion changes.\n   */\n  onValueChange?(value: string): void\n  /**\n   * Whether an accordion item can be collapsed after it has been opened.\n   * @default false\n   */\n  collapsible?: boolean\n}\n\nconst AccordionImplSingle = React.forwardRef<\n  AccordionImplSingleElement,\n  ScopedProps<AccordionImplSingleProps>\n>((props: ScopedProps<AccordionImplSingleProps>, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    control,\n    onValueChange = () => {},\n    collapsible = false,\n    ...accordionSingleProps\n  } = props\n\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue || '',\n    onChange: onValueChange,\n  })\n\n  return (\n    <AccordionValueProvider\n      scope={props.__scopeAccordion}\n      value={value ? [value] : []}\n      onItemOpen={setValue}\n      onItemClose={React.useCallback(\n        () => collapsible && setValue(''),\n        [setValue, collapsible]\n      )}\n    >\n      <AccordionCollapsibleProvider\n        scope={props.__scopeAccordion}\n        collapsible={collapsible}\n      >\n        <AccordionImpl {...accordionSingleProps} ref={forwardedRef} />\n      </AccordionCollapsibleProvider>\n    </AccordionValueProvider>\n  )\n})\n\n/* -----------------------------------------------------------------------------------------------*/\ntype AccordionImplMultipleElement = AccordionImplElement\ninterface AccordionImplMultipleProps extends AccordionImplProps {\n  /**\n   * The controlled stateful value of the accordion items whose contents are expanded.\n   */\n  value?: string[]\n  /**\n   * The value of the items whose contents are expanded when the accordion is initially rendered. Use\n   * `defaultValue` if you do not need to control the state of an accordion.\n   */\n  defaultValue?: string[]\n  /**\n   * The callback that fires when the state of the accordion changes.\n   */\n  onValueChange?(value: string[]): void\n}\n\nconst AccordionImplMultiple = React.forwardRef<\n  AccordionImplMultipleElement,\n  ScopedProps<AccordionImplMultipleProps>\n>((props: ScopedProps<AccordionImplMultipleProps>, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {},\n    ...accordionMultipleProps\n  } = props\n\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue || [],\n    onChange: onValueChange,\n  })\n\n  const handleItemOpen = React.useCallback(\n    (itemValue: string) => setValue((prevValue = []) => [...prevValue, itemValue]),\n    [setValue]\n  )\n\n  const handleItemClose = React.useCallback(\n    (itemValue: string) =>\n      setValue((prevValue = []) => prevValue.filter((value) => value !== itemValue)),\n    [setValue]\n  )\n\n  return (\n    <AccordionValueProvider\n      scope={props.__scopeAccordion}\n      value={value || []}\n      onItemOpen={handleItemOpen}\n      onItemClose={handleItemClose}\n    >\n      <AccordionCollapsibleProvider scope={props.__scopeAccordion} collapsible={true}>\n        <AccordionImpl {...accordionMultipleProps} ref={forwardedRef} />\n      </AccordionCollapsibleProvider>\n    </AccordionValueProvider>\n  )\n})\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionImplContextValue = {\n  disabled?: boolean\n  direction: AccordionImplProps['dir']\n  orientation: AccordionImplProps['orientation']\n}\n\nconst { Provider: AccordionImplProvider, useStyledContext: useAccordionContext } =\n  createStyledContext<AccordionImplContextValue>()\n\ntype AccordionImplElement = TamaguiElement\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Stack>\ninterface AccordionImplProps extends PrimitiveDivProps {\n  /**\n   * Whether or not an accordion is disabled from user interaction.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean\n  /**\n   * The layout in which the Accordion operates.\n   * @default vertical\n   */\n  orientation?: React.AriaAttributes['aria-orientation']\n  /**\n   * The language read direction.\n   */\n  dir?: Direction\n  /**\n   *  The callback that fires when the state of the accordion changes. for use with `useAccordion`\n   * @param selected - The values of the accordion items whose contents are expanded.\n   */\n  control?(selected: string[]): void\n}\n\nconst AccordionImpl = React.forwardRef<AccordionImplElement, AccordionImplProps>(\n  (props: ScopedProps<AccordionImplProps>, forwardedRef) => {\n    const {\n      __scopeAccordion,\n      disabled,\n      dir,\n      orientation = 'vertical',\n      ...accordionProps\n    } = props\n\n    const accordionRef = React.useRef<AccordionImplElement>(null)\n    const composedRef = useComposedRefs(accordionRef, forwardedRef)\n    const getItems = useCollection(__scopeAccordion || ACCORDION_CONTEXT)\n    const direction = useDirection(dir)\n    const isDirectionLTR = direction === 'ltr'\n    const handleKeyDown = composeEventHandlers(\n      (props as any).onKeyDown,\n      (event: KeyboardEvent) => {\n        if (!ACCORDION_KEYS.includes(event.key)) return\n        const target = event.target as HTMLElement\n        const triggerCollection = getItems().filter((item) => {\n          const el = item.ref.current as { disabled?: boolean } | null\n          return !el?.disabled\n        })\n        const triggerIndex = triggerCollection.findIndex(\n          (item) => item.ref.current === target\n        )\n        const triggerCount = triggerCollection.length\n\n        if (triggerIndex === -1) return\n\n        // Prevents page scroll while user is navigating\n        event.preventDefault()\n\n        let nextIndex = triggerIndex\n        const homeIndex = 0\n        const endIndex = triggerCount - 1\n\n        const moveNext = () => {\n          nextIndex = triggerIndex + 1\n          if (nextIndex > endIndex) {\n            nextIndex = homeIndex\n          }\n        }\n\n        const movePrev = () => {\n          nextIndex = triggerIndex - 1\n          if (nextIndex < homeIndex) {\n            nextIndex = endIndex\n          }\n        }\n\n        switch (event.key) {\n          case 'Home':\n            nextIndex = homeIndex\n            break\n          case 'End':\n            nextIndex = endIndex\n            break\n          case 'ArrowRight':\n            if (orientation === 'horizontal') {\n              if (isDirectionLTR) {\n                moveNext()\n              } else {\n                movePrev()\n              }\n            }\n            break\n          case 'ArrowDown':\n            if (orientation === 'vertical') {\n              moveNext()\n            }\n            break\n          case 'ArrowLeft':\n            if (orientation === 'horizontal') {\n              if (isDirectionLTR) {\n                movePrev()\n              } else {\n                moveNext()\n              }\n            }\n            break\n          case 'ArrowUp':\n            if (orientation === 'vertical') {\n              movePrev()\n            }\n            break\n        }\n\n        const clampedIndex = nextIndex % triggerCount\n        triggerCollection[clampedIndex].ref.current?.focus()\n      }\n    )\n\n    return (\n      <AccordionImplProvider\n        scope={__scopeAccordion}\n        disabled={disabled}\n        direction={dir}\n        orientation={orientation}\n      >\n        <Collection.Slot __scopeCollection={__scopeAccordion || ACCORDION_CONTEXT}>\n          <YStack\n            data-orientation={orientation}\n            ref={composedRef}\n            {...accordionProps}\n            {...(isWeb && {\n              onKeyDown: handleKeyDown,\n            })}\n          />\n        </Collection.Slot>\n      </AccordionImplProvider>\n    )\n  }\n)\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'AccordionItem'\n\ntype AccordionItemContextValue = { open?: boolean; disabled?: boolean; triggerId: string }\nconst { Provider: AccordionItemProvider, useStyledContext: useAccordionItemContext } =\n  createStyledContext<AccordionItemContextValue>()\ntype AccordionItemElement = React.ElementRef<typeof Collapsible>\ntype CollapsibleProps = React.ComponentPropsWithoutRef<typeof Collapsible>\ninterface AccordionItemProps\n  extends Omit<CollapsibleProps, 'open' | 'defaultOpen' | 'onOpenChange'> {\n  /**\n   * Whether or not an accordion item is disabled from user interaction.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean\n  /**\n   * A string value for the accordion item. All items within an accordion should use a unique value.\n   */\n  value: string\n}\n\n/**\n * `AccordionItem` contains all of the parts of a collapsible section inside of an `Accordion`.\n */\n\nconst AccordionItem = React.forwardRef<AccordionItemElement, AccordionItemProps>(\n  (props: ScopedProps<AccordionItemProps>, forwardedRef) => {\n    const { __scopeAccordion, value, ...accordionItemProps } = props\n    const accordionContext = useAccordionContext(__scopeAccordion)\n    const valueContext = useAccordionValueContext(__scopeAccordion)\n    const triggerId = React.useId()\n    const open = (value && valueContext.value.includes(value)) || false\n    const disabled = accordionContext.disabled || props.disabled\n\n    return (\n      <AccordionItemProvider\n        scope={__scopeAccordion}\n        open={open}\n        disabled={disabled}\n        triggerId={triggerId}\n      >\n        <Collapsible\n          data-orientation={accordionContext.orientation}\n          data-state={open ? 'open' : 'closed'}\n          __scopeCollapsible={__scopeAccordion || ACCORDION_CONTEXT}\n          {...accordionItemProps}\n          ref={forwardedRef}\n          disabled={disabled}\n          open={open}\n          onOpenChange={(open) => {\n            if (open) {\n              valueContext.onItemOpen(value)\n            } else {\n              valueContext.onItemClose(value)\n            }\n          }}\n        />\n      </AccordionItemProvider>\n    )\n  }\n)\n\nAccordionItem.displayName = ITEM_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionHeader\n * -----------------------------------------------------------------------------------------------*/\n\nconst HEADER_NAME = 'AccordionHeader'\n\ntype AccordionHeaderElement = React.ElementRef<typeof H1>\ntype PrimitiveHeading3Props = React.ComponentPropsWithoutRef<typeof H1>\ntype AccordionHeaderProps = PrimitiveHeading3Props\n\n/**\n * `AccordionHeader` contains the content for the parts of an `AccordionItem` that will be visible\n * whether or not its content is collapsed.\n */\nconst AccordionHeader = React.forwardRef<AccordionHeaderElement, AccordionHeaderProps>(\n  (props: ScopedProps<AccordionHeaderProps>, forwardedRef) => {\n    const { __scopeAccordion, ...headerProps } = props\n    const accordionContext = useAccordionContext(__scopeAccordion)\n    const itemContext = useAccordionItemContext(__scopeAccordion)\n    return (\n      <H1\n        data-orientation={accordionContext.orientation}\n        data-state={getState(itemContext.open)}\n        data-disabled={itemContext.disabled ? '' : undefined}\n        {...headerProps}\n        ref={forwardedRef}\n      />\n    )\n  }\n)\n\nAccordionHeader.displayName = HEADER_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst AccordionTriggerFrame = styled(Collapsible.Trigger, {\n  variants: {\n    unstyled: {\n      false: {\n        cursor: 'pointer',\n        backgroundColor: '$background',\n        borderColor: '$borderColor',\n        borderWidth: 1,\n        padding: '$true',\n\n        hoverStyle: {\n          backgroundColor: '$backgroundHover',\n        },\n\n        focusStyle: {\n          backgroundColor: '$backgroundFocus',\n        },\n\n        pressStyle: {\n          backgroundColor: '$backgroundPress',\n        },\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\ntype AccordionTrigger = GetRef<typeof AccordionTriggerFrame>\ntype AccordionTriggerProps = GetProps<typeof AccordionTriggerFrame>\n\n/**\n * `AccordionTrigger` is the trigger that toggles the collapsed state of an `AccordionItem`. It\n * should always be nested inside of an `AccordionHeader`.\n */\nconst AccordionTrigger = AccordionTriggerFrame.styleable(function AccordionTrigger(\n  props: ScopedProps<AccordionTriggerProps>,\n  forwardedRef\n) {\n  const { __scopeAccordion, ...triggerProps } = props\n  const accordionContext = useAccordionContext(__scopeAccordion)\n  const itemContext = useAccordionItemContext(__scopeAccordion)\n  const collapsibleContext = useAccordionCollapsibleContext(__scopeAccordion)\n\n  return (\n    <Collection.ItemSlot __scopeCollection={__scopeAccordion || ACCORDION_CONTEXT}>\n      <AccordionTriggerFrame\n        //   @ts-ignore\n        __scopeCollapsible={__scopeAccordion || ACCORDION_CONTEXT}\n        aria-disabled={(itemContext.open && !collapsibleContext.collapsible) || undefined}\n        data-orientation={accordionContext.orientation}\n        id={itemContext.triggerId}\n        {...triggerProps}\n        ref={forwardedRef}\n      />\n    </Collection.ItemSlot>\n  )\n})\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst AccordionContentFrame = styled(Collapsible.Content, {\n  variants: {\n    unstyled: {\n      false: {\n        padding: '$true',\n        backgroundColor: '$background',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\ntype AccordionContentProps = GetProps<typeof AccordionContentFrame>\n\n/**\n * `AccordionContent` contains the collapsible content for an `AccordionItem`.\n */\nconst AccordionContent = AccordionContentFrame.styleable(function AccordionContent(\n  props: ScopedProps<AccordionContentProps>,\n  forwardedRef\n) {\n  const { __scopeAccordion, ...contentProps } = props\n  const accordionContext = useAccordionContext(__scopeAccordion)\n  const itemContext = useAccordionItemContext(__scopeAccordion)\n  return (\n    <AccordionContentFrame\n      role=\"region\"\n      aria-labelledby={itemContext.triggerId}\n      data-orientation={accordionContext.orientation}\n      // @ts-ignore\n      __scopeCollapsible={__scopeAccordion || ACCORDION_CONTEXT}\n      {...contentProps}\n      ref={forwardedRef}\n    />\n  )\n})\n\nconst HeightAnimator = View.styleable((props, ref) => {\n  const itemContext = useAccordionItemContext()\n  const { children, ...rest } = props\n  const [height, setHeight] = React.useState(0)\n\n  const onLayout = useEvent(({ nativeEvent }) => {\n    if (nativeEvent.layout.height) {\n      setHeight(nativeEvent.layout.height)\n    }\n  })\n\n  return (\n    <View ref={ref} height={itemContext.open ? height : 0} {...rest}>\n      <View\n        position=\"absolute\"\n        width=\"100%\"\n        //@ts-ignore\n        onLayout={onLayout}\n      >\n        {children}\n      </View>\n    </View>\n  )\n})\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed'\n}\nconst Accordion = withStaticProperties(AccordionComponent, {\n  Trigger: AccordionTrigger,\n  Header: AccordionHeader,\n  Content: AccordionContent,\n  Item: AccordionItem,\n  HeightAnimator: HeightAnimator,\n})\n\nexport { Accordion }\n\nexport type {\n  AccordionContentProps,\n  AccordionHeaderProps,\n  AccordionItemProps,\n  AccordionMultipleProps,\n  AccordionSingleProps,\n  AccordionTriggerProps,\n}\n", "import { useContext, useEffect, useId, useMemo } from 'react'\nimport { ZIndexHardcodedContext, ZIndexStackContext } from './context'\n\n// this stacks horizontally - just based on which mounted last within a stacking context\nconst ZIndicesByContext: Record<number, Record<string, number>> = {}\n\nexport const useStackedZIndex = (props: {\n  zIndex?: number\n  stackZIndex?: boolean | number\n}) => {\n  const { stackZIndex, zIndex: zIndexProp } = props\n  const id = useId()\n  const stackingContextLevel = useContext(ZIndexStackContext)\n  const hardcoded = useContext(ZIndexHardcodedContext)\n\n  ZIndicesByContext[stackingContextLevel] ||= {}\n  const stackContext = ZIndicesByContext[stackingContextLevel]\n\n  const zIndex = useMemo(() => {\n    if (typeof zIndexProp === 'number') {\n      return zIndexProp\n    }\n    if (stackZIndex) {\n      if (hardcoded) {\n        return hardcoded + 1\n      }\n\n      const highest = Object.values(stackContext).reduce(\n        (acc, cur) => Math.max(acc, cur),\n        0\n      )\n\n      // each context level elevates 5k\n      const found = stackingContextLevel * 5000 + highest + 1\n\n      // setting stackZIndex to a number lets you increase it further\n      return typeof stackZIndex === 'number' ? stackZIndex + found : found\n    }\n\n    return 1\n  }, [stackingContextLevel, zIndexProp, stackZIndex])\n\n  useEffect(() => {\n    if (stackZIndex) {\n      stackContext[id] = zIndex\n      return () => {\n        delete stackContext[id]\n      }\n    }\n  }, [zIndex])\n\n  return zIndex\n}\n", "import { createContext } from 'react'\n\n// stacks vertically through tree, based on nesting\nexport const ZIndexStackContext = createContext(1)\n\n// if setting to overriden z index\nexport const ZIndexHardcodedContext = createContext<number | undefined>(undefined)\n", "import { useContext } from 'react'\nimport { ZIndexHardcodedContext, ZIndexStackContext } from './context'\n\nexport const StackZIndexContext = ({\n  children,\n  zIndex,\n}: { children: React.ReactNode; zIndex?: number }) => {\n  const existing = useContext(ZIndexStackContext)\n\n  let content = (\n    <ZIndexStackContext.Provider value={existing + 1}>\n      {children}\n    </ZIndexStackContext.Provider>\n  )\n\n  if (typeof zIndex !== 'undefined') {\n    content = (\n      <ZIndexHardcodedContext.Provider value={zIndex}>\n        {content}\n      </ZIndexHardcodedContext.Provider>\n    )\n  }\n\n  return content\n}\n", "if (typeof globalThis['__DEV__'] === 'undefined') {\n  globalThis['__DEV__'] = process.env.NODE_ENV === 'development'\n}\n", "import '@tamagui/polyfill-dev'\n\nimport { isServer } from '@tamagui/constants'\nimport { YStack } from '@tamagui/stacks'\nimport * as React from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { useStackedZIndex } from '@tamagui/z-index-stack'\nimport { getStackedZIndexProps } from './helpers'\nimport type { PortalProps } from './PortalProps'\n\n// web only version\n\nexport const Portal = React.memo((propsIn: PortalProps) => {\n  if (isServer) {\n    return null\n  }\n\n  const { host = globalThis.document?.body, stackZIndex, children, ...props } = propsIn\n  const zIndex = useStackedZIndex(getStackedZIndexProps(propsIn))\n\n  return createPortal(\n    <YStack\n      contain=\"strict\"\n      fullscreen\n      // @ts-expect-error ok on web\n      position=\"fixed\"\n      maxWidth=\"100vw\"\n      maxHeight=\"100vh\"\n      pointerEvents=\"none\"\n      {...props}\n      zIndex={zIndex}\n    >\n      {children}\n    </YStack>,\n    host\n  ) as any\n})\n", "import { getTokenValue, type ViewProps } from '@tamagui/web'\nimport type { PortalProps } from './PortalProps'\n\nexport const getStackedZIndexProps = (propsIn: PortalProps) => {\n  return {\n    stackZIndex: propsIn.stackZIndex,\n    zIndex: resolveViewZIndex(propsIn.zIndex),\n  }\n}\n\nexport const resolveViewZIndex = (zIndex: ViewProps['zIndex']) => {\n  return typeof zIndex === 'undefined' || zIndex === 'unset'\n    ? undefined\n    : typeof zIndex === 'number'\n      ? zIndex\n      : getTokenValue(zIndex as any, 'zIndex')\n}\n", "// from https://github.com/gorhom/react-native-portal\n// MIT License Copyright (c) 2020 Mo Gorhom\n// fixing SSR issue\n\nimport { isWeb } from '@tamagui/constants'\nimport { startTransition } from '@tamagui/start-transition'\nimport type { ReactNode } from 'react'\nimport React, {\n  createContext,\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState,\n} from 'react'\nimport { allPortalHosts, portalListeners } from './constants'\n\ninterface PortalType {\n  name: string\n  node: ReactNode\n}\n\nenum ACTIONS {\n  REGISTER_HOST,\n  DEREGISTER_HOST,\n  ADD_UPDATE_PORTAL,\n  REMOVE_PORTAL,\n}\n\nconst INITIAL_STATE = {}\n\nexport { ACTIONS, INITIAL_STATE }\n\nexport interface AddUpdatePortalAction {\n  type: ACTIONS\n  hostName: string\n  portalName: string\n  node: ReactNode\n}\n\nexport interface RemovePortalAction {\n  type: ACTIONS\n  hostName: string\n  portalName: string\n}\n\nexport interface RegisterHostAction {\n  type: ACTIONS\n  hostName: string\n}\n\nexport interface UnregisterHostAction {\n  type: ACTIONS\n  hostName: string\n}\n\nexport type ActionTypes =\n  | AddUpdatePortalAction\n  | RemovePortalAction\n  | RegisterHostAction\n  | UnregisterHostAction\n\nconst registerHost = (state: Record<string, Array<PortalType>>, hostName: string) => {\n  if (!(hostName in state)) {\n    state[hostName] = []\n  }\n  return state\n}\n\nconst deregisterHost = (state: Record<string, Array<PortalType>>, hostName: string) => {\n  delete state[hostName]\n  return state\n}\n\nconst addUpdatePortal = (\n  state: Record<string, Array<PortalType>>,\n  hostName: string,\n  portalName: string,\n  node: any\n) => {\n  if (!(hostName in state)) {\n    state = registerHost(state, hostName)\n  }\n\n  /**\n   * updated portal, if it was already added.\n   */\n  const index = state[hostName].findIndex((item) => item.name === portalName)\n  if (index !== -1) {\n    state[hostName][index].node = node\n  } else {\n    state[hostName].push({\n      name: portalName,\n      node,\n    })\n  }\n  return state\n}\n\nconst removePortal = (\n  state: Record<string, Array<PortalType>>,\n  hostName: string,\n  portalName: string\n) => {\n  if (!(hostName in state)) {\n    console.info(\n      `Failed to remove portal '${portalName}', '${hostName}' was not registered!`\n    )\n    return state\n  }\n\n  const index = state[hostName].findIndex((item) => item.name === portalName)\n  if (index !== -1) state[hostName].splice(index, 1)\n  return state\n}\n\nconst reducer = (state: Record<string, Array<PortalType>>, action: ActionTypes) => {\n  const { type } = action\n  switch (type) {\n    case ACTIONS.REGISTER_HOST:\n      return registerHost({ ...state }, action.hostName)\n    case ACTIONS.DEREGISTER_HOST:\n      return deregisterHost({ ...state }, action.hostName)\n    case ACTIONS.ADD_UPDATE_PORTAL:\n      return addUpdatePortal(\n        { ...state },\n        action.hostName,\n        (action as AddUpdatePortalAction).portalName,\n        (action as AddUpdatePortalAction).node\n      )\n    case ACTIONS.REMOVE_PORTAL:\n      return removePortal(\n        { ...state },\n        action.hostName,\n        (action as RemovePortalAction).portalName\n      )\n    default:\n      return state\n  }\n}\n\nconst PortalStateContext = createContext<Record<string, Array<PortalType>> | null>(null)\nconst PortalDispatchContext = createContext<React.Dispatch<ActionTypes> | null>(null)\n\nconst usePortalState = (hostName: string) => {\n  const state = useContext(PortalStateContext)\n\n  if (state === null) {\n    throw new Error(\n      \"'PortalStateContext' cannot be null, please add 'PortalProvider' to the root component.\"\n    )\n  }\n\n  return state[hostName] || []\n}\n\nexport const usePortal = (hostName = 'root') => {\n  const dispatch = useContext(PortalDispatchContext)\n\n  if (dispatch === null) {\n    throw new Error(\n      \"'PortalDispatchContext' cannot be null, please add 'PortalProvider' to the root component.\"\n    )\n  }\n\n  //#region methods\n  const registerHost = useCallback(() => {\n    dispatch({\n      type: ACTIONS.REGISTER_HOST,\n      hostName: hostName,\n    })\n  }, [])\n\n  const deregisterHost = useCallback(() => {\n    dispatch({\n      type: ACTIONS.DEREGISTER_HOST,\n      hostName: hostName,\n    })\n  }, [])\n\n  const addUpdatePortal = useCallback((name: string, node: ReactNode) => {\n    dispatch({\n      type: ACTIONS.ADD_UPDATE_PORTAL,\n      hostName,\n      portalName: name,\n      node,\n    })\n  }, [])\n\n  const removePortal = useCallback((name: string) => {\n    dispatch({\n      type: ACTIONS.REMOVE_PORTAL,\n      hostName,\n      portalName: name,\n    })\n  }, [])\n  //#endregion\n\n  return {\n    registerHost,\n    deregisterHost,\n    addPortal: addUpdatePortal,\n    updatePortal: addUpdatePortal,\n    removePortal,\n  }\n}\n\nexport interface PortalProviderProps {\n  /**\n   * Defines whether to add a default root host or not.\n   *\n   * @default true\n   * @type boolean\n   */\n  shouldAddRootHost?: boolean\n\n  /**\n   * Defines the root portal host name.\n   *\n   * @default \"root\"\n   * @type string\n   */\n  rootHostName?: string\n\n  children: ReactNode | ReactNode[]\n}\n\nconst PortalProviderComponent = ({\n  rootHostName = 'root',\n  shouldAddRootHost = true,\n  children,\n}: PortalProviderProps) => {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n  const transitionDispatch = useMemo(() => {\n    const next = (value: any) => {\n      startTransition(() => {\n        dispatch(value)\n      })\n    }\n    return next as typeof dispatch\n  }, [dispatch])\n\n  return (\n    <PortalDispatchContext.Provider value={transitionDispatch}>\n      <PortalStateContext.Provider value={state}>\n        {children}\n        {shouldAddRootHost && <PortalHost name={rootHostName} />}\n      </PortalStateContext.Provider>\n    </PortalDispatchContext.Provider>\n  )\n}\n\nexport const PortalProvider = memo(PortalProviderComponent)\nPortalProvider.displayName = 'PortalProvider'\n\nexport interface PortalHostProps {\n  /**\n   * Host's key or name to be used as an identifier.\n   * @type string\n   */\n  name: string\n\n  forwardProps?: Record<string, any>\n\n  /**\n   * Useful when trying to animate children with AnimatePresence.\n   *\n   * Not a part of gorhom/react-native-portal\n   */\n  render?: (children: React.ReactNode) => React.ReactElement\n}\nconst defaultRenderer = (children) => <>{children}</>\n\nexport const PortalHost = memo(function PortalHost(props: PortalHostProps) {\n  if (isWeb) {\n    return <PortalHostWeb {...props} />\n  }\n\n  return <PortalHostNonNative {...props} />\n})\n\nfunction PortalHostWeb(props: PortalHostProps) {\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    setMounted(true)\n\n    return () => {\n      setMounted(false)\n      allPortalHosts.delete(props.name)\n    }\n  }, [props.name])\n\n  return (\n    <div\n      style={{ display: 'contents' }}\n      ref={(node) => {\n        if (node && mounted) {\n          allPortalHosts.set(props.name, node)\n          portalListeners[props.name]?.forEach((x) => x(node))\n        }\n      }}\n    />\n  )\n}\n\nfunction PortalHostNonNative(props: PortalHostProps) {\n  const { name, forwardProps, render = defaultRenderer } = props\n  const state = usePortalState(name)\n  const { registerHost, deregisterHost } = usePortal(props.name)\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return\n    registerHost()\n    return () => {\n      deregisterHost()\n    }\n  }, [])\n\n  if (forwardProps) {\n    return render(\n      state.map((item) => {\n        let next = item.node\n\n        // REMOVE children, can cause gnarly bugs (ask me how i know)\n        const { children, ...restForwardProps } = forwardProps\n\n        if (forwardProps) {\n          return React.Children.map(next, (child) => {\n            return React.isValidElement(child)\n              ? React.cloneElement(child, { key: child.key, ...restForwardProps })\n              : child\n          })\n        }\n\n        return next\n      })\n    )\n  }\n\n  return render(state.map((item) => item.node))\n}\n", "import { isAndroid } from '@tamagui/constants'\n\nexport const IS_FABRIC =\n  typeof global !== 'undefined' &&\n  Boolean(global._IS_FABRIC ?? global.nativeFabricUIManager)\n\nexport const USE_NATIVE_PORTAL =\n  process.env.TAMAGUI_USE_NATIVE_PORTAL &&\n  process.env.TAMAGUI_USE_NATIVE_PORTAL !== 'false'\n    ? true\n    : !isAndroid && !IS_FABRIC\n\nexport const allPortalHosts = new Map<string, HTMLElement>()\nexport const portalListeners: Record<string, Set<Function>> = {}\n", "import { useEffect, useState } from 'react'\nimport { allPortalHosts, portalListeners } from './constants'\nimport type { PortalItemProps } from './types'\nimport { createPortal } from 'react-dom'\n\nexport const GorhomPortalItem = (props: PortalItemProps) => {\n  if (!props.hostName) {\n    throw new Error(`No name`)\n  }\n\n  const cur = allPortalHosts.get(props.hostName)\n  const [node, setNode] = useState(cur)\n\n  if (cur && node !== cur) {\n    setNode(cur)\n  }\n\n  useEffect(() => {\n    if (!props.hostName) return\n    if (node) return\n\n    const listener = (node) => {\n      setNode(node)\n    }\n\n    portalListeners[props.hostName] ||= new Set()\n    portalListeners[props.hostName].add(listener)\n    return () => {\n      portalListeners[props.hostName!]?.delete(listener)\n    }\n  }, [node])\n\n  if (!node) {\n    return null\n  }\n\n  return createPortal(props.children, node)\n}\n", "import { StackZIndexContext } from '@tamagui/z-index-stack'\nimport {\n  isAndroid,\n  isIos,\n  isTouchable,\n  isWeb,\n  useIsomorphicLayoutEffect,\n} from '@tamagui/constants'\nimport type { AllPlatforms, MediaQueryKey } from '@tamagui/core'\nimport { createStyledContext, useMedia } from '@tamagui/core'\nimport { withStaticProperties } from '@tamagui/helpers'\nimport { PortalHost, PortalItem } from '@tamagui/portal'\nimport React, { createContext, useContext, useEffect, useId } from 'react'\n\n/**\n * Interfaces\n */\n\nexport type AdaptWhen = MediaQueryKeyString | boolean | null\nexport type AdaptPlatform = AllPlatforms | 'touch' | null\n\nexport type AdaptParentContextI = {\n  Contents: Component\n  scopeName: string\n  platform: AdaptPlatform\n  setPlatform: (when: AdaptPlatform) => any\n  when: AdaptWhen\n  setWhen: (when: AdaptWhen) => any\n  setChildren: (children: any) => any\n  portalName?: string\n}\n\ntype MediaQueryKeyString = MediaQueryKey extends string ? MediaQueryKey : never\n\nexport type AdaptProps = {\n  scope?: string\n  when?: AdaptWhen\n  platform?: AdaptPlatform\n  children: JSX.Element | ((children: React.ReactNode) => React.ReactNode)\n}\n\ntype Component = (props: any) => any\n\n/**\n * Contexts\n */\n\nconst CurrentAdaptContextScope = createContext('')\n\nexport const AdaptContext = createStyledContext<AdaptParentContextI>({\n  Contents: null as any,\n  scopeName: '',\n  portalName: '',\n  platform: null as any,\n  setPlatform: (x: AdaptPlatform) => {},\n  when: null as any,\n  setChildren: null as any,\n  setWhen: () => {},\n})\n\nexport const ProvideAdaptContext = ({\n  children,\n  ...context\n}: AdaptParentContextI & { children: any }) => {\n  const scope = context.scopeName || ''\n\n  return (\n    <CurrentAdaptContextScope.Provider value={scope}>\n      <AdaptContext.Provider scope={scope} {...context}>\n        {children}\n      </AdaptContext.Provider>\n    </CurrentAdaptContextScope.Provider>\n  )\n}\n\nexport const useAdaptContext = (scope = '') => {\n  const contextScope = useContext(CurrentAdaptContextScope)\n  const context = AdaptContext.useStyledContext(\n    scope === '' ? contextScope || scope : scope\n  )\n  return context\n}\n\n/**\n * Hooks\n */\n\ntype AdaptParentProps = {\n  children?: React.ReactNode\n  scope: string\n  Contents?: AdaptParentContextI['Contents']\n  portal?:\n    | boolean\n    | {\n        forwardProps?: any\n      }\n}\n\nconst AdaptPortals = new Map()\n\nexport const AdaptParent = ({ children, Contents, scope, portal }: AdaptParentProps) => {\n  const portalName = `AdaptPortal${scope}`\n  const id = useId()\n\n  let FinalContents = Contents || AdaptPortals.get(id)\n\n  if (!FinalContents) {\n    FinalContents = () => {\n      return (\n        <PortalHost\n          name={portalName}\n          forwardProps={typeof portal === 'boolean' ? undefined : portal?.forwardProps}\n        />\n      )\n    }\n    AdaptPortals.set(id, FinalContents)\n  }\n\n  useEffect(() => {\n    return () => {\n      AdaptPortals.delete(id)\n    }\n  }, [])\n\n  const [when, setWhen] = React.useState<AdaptWhen>(null)\n  const [platform, setPlatform] = React.useState<AdaptPlatform>(null)\n\n  // TODO for inline adapt\n  const [children2, setChildren] = React.useState(null)\n\n  return (\n    <ProvideAdaptContext\n      Contents={FinalContents}\n      when={when}\n      platform={platform}\n      setPlatform={setPlatform}\n      setWhen={setWhen}\n      setChildren={setChildren}\n      portalName={portalName}\n      scopeName={scope}\n    >\n      {children}\n    </ProvideAdaptContext>\n  )\n}\n\n/**\n * Components\n */\n\nexport const AdaptContents = ({ scope, ...rest }: { scope?: string }) => {\n  const context = useAdaptContext(scope)\n\n  if (!context?.Contents) {\n    throw new Error(\n      process.env.NODE_ENV === 'production'\n        ? `tamagui.dev/docs/intro/errors#warning-002`\n        : `You're rendering a Tamagui <Adapt /> component without nesting it inside a parent that is able to adapt.`\n    )\n  }\n\n  // forwards props - see shouldForwardSpace\n  return React.createElement(context.Contents, { ...rest, key: `stable` })\n}\n\nAdaptContents.shouldForwardSpace = true\n\nexport const Adapt = withStaticProperties(\n  function Adapt(props: AdaptProps) {\n    const { platform, when, children, scope } = props\n    const context = useAdaptContext(scope)\n    const scopeName = scope ?? context.scopeName\n    const enabled = useAdaptIsActiveGiven(props)\n\n    useIsomorphicLayoutEffect(() => {\n      context?.setWhen?.((when || enabled) as AdaptWhen)\n      context?.setPlatform?.(platform || null)\n    }, [when, platform, context, enabled])\n\n    useIsomorphicLayoutEffect(() => {\n      return () => {\n        context?.setWhen?.(null)\n        context?.setPlatform?.(null)\n      }\n    }, [])\n\n    let output: React.ReactNode\n\n    if (typeof children === 'function') {\n      const Component = context?.Contents\n      output = children(Component ? <Component /> : null)\n    } else {\n      output = children\n    }\n\n    // TODO this isn't ideal using an effect to set children, will cause double-renders\n    // on every change\n    useIsomorphicLayoutEffect(() => {\n      if (typeof children === 'function' && output !== undefined) {\n        context?.setChildren(output)\n      }\n    }, [output])\n\n    return (\n      <StackZIndexContext>\n        <CurrentAdaptContextScope.Provider value={scopeName}>\n          {!enabled ? null : output}\n        </CurrentAdaptContextScope.Provider>\n      </StackZIndexContext>\n    )\n  },\n  {\n    Contents: AdaptContents,\n  }\n)\n\nexport const AdaptPortalContents = (props: {\n  children: React.ReactNode\n  scope?: string\n}) => {\n  // const isActive = useAdaptIsActive(props.scope)\n  const { portalName } = useAdaptContext(props.scope)\n\n  // if (!isActive) {\n  //   return null\n  // }\n\n  return (\n    <PortalItem\n      // passthrough={!isWeb && !isActive}\n      hostName={portalName}\n    >\n      {props.children}\n    </PortalItem>\n  )\n}\n\nconst useAdaptIsActiveGiven = ({\n  when,\n  platform,\n}: Pick<AdaptProps, 'when' | 'platform'>) => {\n  const media = useMedia()\n\n  if (when == null && platform == null) {\n    return false\n  }\n\n  let enabled = false\n\n  if (platform === 'touch') enabled = isTouchable\n  else if (platform === 'native') enabled = !isWeb\n  else if (platform === 'web') enabled = isWeb\n  else if (platform === 'ios') enabled = isIos\n  else if (platform === 'android') enabled = isAndroid\n\n  if (platform && enabled == false) {\n    return false\n  }\n\n  if (when && typeof when === 'string') {\n    enabled = media[when]\n  }\n\n  return enabled\n}\n\nexport const useAdaptIsActive = (scope?: string) => {\n  const props = useAdaptContext(scope)\n  return useAdaptIsActiveGiven(props)\n}\n", "// from radix\n// https://github.com/radix-ui/primitives/blob/main/packages/react/context/src/createContext.tsx\n\nimport * as React from 'react'\n\nexport type ScopedProps<P, K extends string> = P & { [Key in `__scope${K}`]?: Scope }\n\nexport function createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n): readonly [\n  (props: ContextValueType & { children: React.ReactNode }) => JSX.Element,\n  (consumerName: string) => Exclude<ContextValueType | undefined, undefined>,\n] {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext)\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props\n    // Only re-memoize when prop values change\n\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType\n    return <Context.Provider value={value}>{children}</Context.Provider>\n  }\n\n  function useContext(consumerName: string): Exclude<typeof context, undefined> {\n    const context = React.useContext(Context)\n    if (context) return context as any\n    if (defaultContext !== undefined) return defaultContext as any\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``)\n  }\n\n  return [Provider, useContext] as const\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope }\n\nexport type Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined\n\nexport interface CreateScope {\n  scopeName: string\n  (): ScopeHook\n}\n\nexport function createContextScope(\n  scopeName: string,\n  createContextScopeDeps: CreateScope[] = []\n): readonly [\n  <ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) => readonly [\n    (\n      props: ContextValueType & {\n        scope: Scope<ContextValueType>\n        children: React.ReactNode\n      }\n    ) => import('react/jsx-runtime').JSX.Element,\n    (\n      consumerName: string,\n      scope: Scope<ContextValueType | undefined>,\n      options?: {\n        warn?: boolean\n        fallback?: Partial<ContextValueType>\n      }\n    ) => ContextValueType,\n  ],\n  CreateScope,\n] {\n  let defaultContexts: any[] = []\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext)\n    const index = defaultContexts.length\n    defaultContexts = [...defaultContexts, defaultContext]\n\n    function Provider(\n      props: ContextValueType & {\n        scope: Scope<ContextValueType>\n        children: React.ReactNode\n      }\n    ) {\n      const { scope, children, ...context } = props\n      const Context = scope?.[scopeName]?.[index] || BaseContext\n      // Only re-memoize when prop values change\n\n      const value = React.useMemo(\n        () => context,\n        Object.values(context)\n      ) as ContextValueType\n      return <Context.Provider value={value}>{children}</Context.Provider>\n    }\n\n    function useContext(\n      consumerName: string,\n      scope: Scope<ContextValueType | undefined>,\n      options?: {\n        warn?: boolean\n        fallback?: Partial<ContextValueType>\n      }\n    ) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext\n      const context = React.useContext(Context)\n      if (context) return context\n      // if a defaultContext wasn't specified, it's a required context.\n      if (defaultContext !== undefined) return defaultContext\n      const missingContextMessage = `\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``\n      // fallback can be given per-hook as well\n      if (options?.fallback) {\n        if (options?.warn !== false) {\n          console.warn(missingContextMessage)\n        }\n        return options.fallback as ContextValueType\n      }\n      throw new Error(missingContextMessage)\n    }\n\n    return [Provider, useContext] as const\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext)\n    })\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      )\n    }\n  }\n\n  createScope.scopeName = scopeName\n\n  return [\n    createContext,\n    composeContextScopes(createScope, ...createContextScopeDeps),\n  ] as const\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0]\n  if (scopes.length === 1) return baseScope\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }))\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n\n        const scopeProps = useScope(overrideScopes)\n        const currentScope = scopeProps[`__scope${scopeName}`]\n        return { ...nextScopes, ...currentScope }\n      }, {})\n\n      return React.useMemo(\n        () => ({ [`__scope${baseScope.scopeName}`]: nextScopes }),\n        [nextScopes]\n      )\n    }\n  }\n\n  createScope.scopeName = baseScope.scopeName\n  return createScope\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n", "var getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nvar unwrapHost = function (node) {\n    return node && (node.host || unwrapHost(node.parentNode));\n};\nvar correctTargets = function (parent, targets) {\n    return targets\n        .map(function (target) {\n        if (parent.contains(target)) {\n            return target;\n        }\n        var correctedTarget = unwrapHost(target);\n        if (correctedTarget && parent.contains(correctedTarget)) {\n            return correctedTarget;\n        }\n        console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');\n        return null;\n    })\n        .filter(function (x) { return Boolean(x); });\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Undo} undo command\n */\nvar applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {\n    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var elementsToStop = new Set(targets);\n    var keep = function (el) {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    };\n    targets.forEach(keep);\n    var deep = function (parent) {\n        if (!parent || elementsToStop.has(parent)) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, function (node) {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                try {\n                    var attr = node.getAttribute(controlAttribute);\n                    var alreadyHidden = attr !== null && attr !== 'false';\n                    var counterValue = (counterMap.get(node) || 0) + 1;\n                    var markerValue = (markerCounter.get(node) || 0) + 1;\n                    counterMap.set(node, counterValue);\n                    markerCounter.set(node, markerValue);\n                    hiddenNodes.push(node);\n                    if (counterValue === 1 && alreadyHidden) {\n                        uncontrolledNodes.set(node, true);\n                    }\n                    if (markerValue === 1) {\n                        node.setAttribute(markerName, 'true');\n                    }\n                    if (!alreadyHidden) {\n                        node.setAttribute(controlAttribute, 'true');\n                    }\n                }\n                catch (e) {\n                    console.error('aria-hidden: cannot operate on ', node, e);\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n        hiddenNodes.forEach(function (node) {\n            var counterValue = counterMap.get(node) - 1;\n            var markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute(controlAttribute);\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            // clear\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var hideOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-aria-hidden'; }\n    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    // we should not hide ariaLive elements - https://github.com/theKashey/aria-hidden/issues/10\n    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live]')));\n    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n};\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var inertOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-inert-ed'; }\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n};\n/**\n * @returns if current browser supports inert\n */\nexport var supportsInert = function () {\n    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n};\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var suppressOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-suppressed'; }\n    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n};\n", "import { hideOthers as ah } from 'aria-hidden'\n\ntype Undo = () => void\n\nexport const hideOthers: (\n  originalTarget: Element | Element[],\n  parentNode?: HTMLElement,\n  markerName?: string\n) => Undo = ah\n", "// via radix-ui\n\nimport * as React from 'react'\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nexport function useCallbackRef<T extends (...args: any[]) => any>(\n  callback: T | undefined\n): T {\n  const callbackRef = React.useRef(callback)\n\n  React.useEffect(() => {\n    callbackRef.current = callback\n  })\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, [])\n}\n", "// via radix-ui\nimport { useCallbackRef } from '@tamagui/use-callback-ref'\nimport React from 'react'\n\n/**\n * Listens for when the escape key is down\n */\nexport function useEscapeKeydown(\n  onEscapeKeyDownProp?: (event: KeyboardEvent) => void,\n  ownerDocument: Document = globalThis?.document\n): void {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp)\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event)\n      }\n    }\n\n    ownerDocument.addEventListener('keydown', handleKeyDown)\n\n    return () => {\n      ownerDocument.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [onEscapeKeyDown, ownerDocument])\n}\n", "// forked from radix-ui\n// https://github.com/radix-ui/primitives/blob/cfd8dcba5fa6a0e751486af418d05a7b88a7f541/packages/react/dismissable-layer/src/DismissableLayer.tsx#L324\n\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport { composeEventHandlers } from '@tamagui/helpers'\nimport { useEscapeKeydown } from '@tamagui/use-escape-keydown'\nimport { useEvent } from '@tamagui/use-event'\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport type { DismissableBranchProps, DismissableProps } from './DismissableProps'\n\nexport function dispatchDiscreteCustomEvent<E extends CustomEvent>(\n  target: E['target'],\n  event: E\n) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event))\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Dismissable\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'Dismissable'\nconst CONTEXT_UPDATE = 'dismissable.update'\nconst POINTER_DOWN_OUTSIDE = 'dismissable.pointerDownOutside'\nconst FOCUS_OUTSIDE = 'dismissable.focusOutside'\n\nlet originalBodyPointerEvents: string\n\nconst DismissableContext = React.createContext({\n  layers: new Set<HTMLDivElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<HTMLDivElement>(),\n  branches: new Set<HTMLDivElement>(),\n})\n\nconst Dismissable = React.forwardRef<HTMLDivElement, DismissableProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      forceUnmount,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props\n    const context = React.useContext(DismissableContext)\n    const [node, setNode] = React.useState<HTMLDivElement | null>(null)\n    const [, force] = React.useState({})\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node))\n    const layers = Array.from(context.layers)\n\n    const [highestLayerWithOutsidePointerEventsDisabled] = [\n      ...context.layersWithOutsidePointerEventsDisabled,\n    ].slice(-1)\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(\n      highestLayerWithOutsidePointerEventsDisabled\n    )\n\n    const index = node ? layers.indexOf(node) : -1\n    const isBodyPointerEventsDisabled =\n      context.layersWithOutsidePointerEventsDisabled.size > 0\n    const isPointerEventsEnabled =\n      index >= highestLayerWithOutsidePointerEventsDisabledIndex\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLDivElement\n      const isPointerDownOnBranch = [...context.branches].some((branch) =>\n        branch.contains(target)\n      )\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return\n      onPointerDownOutside?.(event)\n      onInteractOutside?.(event)\n      if (!event.defaultPrevented) onDismiss?.()\n    })\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLDivElement\n      const isFocusInBranch = [...context.branches].some((branch) =>\n        branch.contains(target)\n      )\n      if (isFocusInBranch) return\n      onFocusOutside?.(event)\n      onInteractOutside?.(event)\n      if (!event.defaultPrevented) onDismiss?.()\n    })\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1\n      if (!isHighestLayer) return\n      onEscapeKeyDown?.(event)\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault()\n        onDismiss()\n      }\n    })\n\n    React.useEffect(() => {\n      if (!node) return\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = document.body.style.pointerEvents\n          document.body.style.pointerEvents = 'none'\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node)\n      }\n      context.layers.add(node)\n      dispatchUpdate()\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          document.body.style.pointerEvents = originalBodyPointerEvents\n        }\n      }\n    }, [node, disableOutsidePointerEvents, context])\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      if (forceUnmount) return\n      return () => {\n        if (!node) return\n        context.layers.delete(node)\n        context.layersWithOutsidePointerEventsDisabled.delete(node)\n        dispatchUpdate()\n      }\n    }, [node, context, forceUnmount])\n\n    React.useEffect(() => {\n      const handleUpdate = () => {\n        force({})\n      }\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate)\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate)\n    }, [])\n\n    return (\n      <div\n        {...layerProps}\n        // @ts-ignore\n        ref={composedRefs}\n        style={{\n          display: 'contents',\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          // @ts-ignore\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(\n          props.onFocusCapture,\n          focusOutside.onFocusCapture\n        )}\n        onBlurCapture={composeEventHandlers(\n          props.onBlurCapture,\n          focusOutside.onBlurCapture\n        )}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    )\n  }\n)\n\nDismissable.displayName = DISMISSABLE_LAYER_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableBranch'\n\nconst DismissableBranch = React.forwardRef<HTMLDivElement, DismissableBranchProps>(\n  (props, forwardedRef) => {\n    const context = React.useContext(DismissableContext)\n    const ref = React.useRef<HTMLDivElement>(null)\n    const composedRefs = useComposedRefs(forwardedRef, ref)\n\n    React.useEffect(() => {\n      const node = ref.current\n      if (node) {\n        context.branches.add(node)\n        return () => {\n          context.branches.delete(node)\n        }\n      }\n    }, [context.branches])\n\n    return <div style={{ display: 'contents' }} {...props} ref={composedRefs} />\n  }\n)\n\nDismissableBranch.displayName = BRANCH_NAME\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport type PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>\nexport type FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void\n) {\n  const handlePointerDownOutside = useEvent(onPointerDownOutside) as EventListener\n  const isPointerInsideReactTreeRef = React.useRef(false)\n  const handleClickRef = React.useRef(() => {})\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event }\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          )\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          document.removeEventListener('click', handleClickRef.current)\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent\n          document.addEventListener('click', handleClickRef.current, { once: true })\n        } else {\n          handleAndDispatchPointerDownOutsideEvent()\n        }\n      }\n      isPointerInsideReactTreeRef.current = false\n    }\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = setTimeout(() => {\n      document.addEventListener('pointerdown', handlePointerDown)\n    }, 0)\n    return () => {\n      window.clearTimeout(timerId)\n      document.removeEventListener('pointerdown', handlePointerDown)\n      document.removeEventListener('click', handleClickRef.current)\n    }\n  }, [handlePointerDownOutside])\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => {\n      isPointerInsideReactTreeRef.current = true\n    },\n  }\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(onFocusOutside?: (event: FocusOutsideEvent) => void) {\n  const handleFocusOutside = useEvent(onFocusOutside) as EventListener\n  const isFocusInsideReactTreeRef = React.useRef(false)\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event }\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        })\n      }\n    }\n    document.addEventListener('focusin', handleFocus)\n    return () => document.removeEventListener('focusin', handleFocus)\n  }, [handleFocusOutside])\n\n  return {\n    onFocusCapture: () => {\n      isFocusInsideReactTreeRef.current = true\n    },\n    onBlurCapture: () => {\n      isFocusInsideReactTreeRef.current = false\n    },\n  }\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE)\n  document.dispatchEvent(event)\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail })\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true })\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event)\n  } else {\n    target.dispatchEvent(event)\n  }\n}\n\nexport { Dismissable, DismissableBranch }\n\nexport type { DismissableProps }\n", "import { useComposedRefs } from '@tamagui/compose-refs'\nimport { useEvent } from '@tamagui/use-event'\nimport { startTransition } from '@tamagui/start-transition'\nimport * as React from 'react'\n\nimport type { FocusScopeProps } from './FocusScopeProps'\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount'\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount'\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true }\n\ntype FocusableTarget = HTMLElement | { focus(): void }\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeElement = HTMLDivElement\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>(\n  function FocusScope(props, forwardedRef) {\n    const childProps = useFocusScope(props, forwardedRef)\n\n    if (typeof props.children === 'function') {\n      return <>{props.children(childProps)}</>\n    }\n\n    return React.cloneElement(React.Children.only(props.children) as any, childProps)\n  }\n)\n\n/* -------------------------------------------------------------------------------------------------\n * useFocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useFocusScope(\n  props: FocusScopeProps,\n  forwardedRef: React.ForwardedRef<FocusScopeElement>\n) {\n  const {\n    loop = false,\n    enabled = true,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    forceUnmount,\n    children,\n    ...scopeProps\n  } = props\n  const [container, setContainer] = React.useState<HTMLElement | null>(null)\n  const onMountAutoFocus = useEvent(onMountAutoFocusProp)\n  const onUnmountAutoFocus = useEvent(onUnmountAutoFocusProp)\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null)\n  const setContainerTransition = React.useCallback(\n    (node) => {\n      startTransition(() => {\n        setContainer(node)\n      })\n    },\n    [setContainer]\n  )\n  const composedRefs = useComposedRefs(forwardedRef, setContainerTransition)\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true\n    },\n    resume() {\n      this.paused = false\n    },\n  }).current\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (!enabled) return\n    if (!trapped) return\n    const controller = new AbortController()\n\n    function handleFocusIn(event: FocusEvent) {\n      if (focusScope.paused || !container) return\n      const target = event.target as HTMLElement | null\n      if (container.contains(target)) {\n        // Set container as lastFocusedElement to prevent inputs\n        // to be refocused on blur events\n        target?.addEventListener('blur', handleBlur, { signal: controller.signal })\n        lastFocusedElementRef.current = target\n      } else {\n        focus(lastFocusedElementRef.current, { select: true })\n      }\n    }\n\n    function handleFocusOut(event: FocusEvent) {\n      controller.abort()\n      if (focusScope.paused || !container) return\n      if (!container.contains(event.relatedTarget as HTMLElement | null)) {\n        focus(lastFocusedElementRef.current, { select: true })\n      }\n    }\n\n    function handleBlur() {\n      lastFocusedElementRef.current = container\n    }\n\n    document.addEventListener('focusin', handleFocusIn)\n    document.addEventListener('focusout', handleFocusOut)\n    return () => {\n      controller.abort()\n      document.removeEventListener('focusin', handleFocusIn)\n      document.removeEventListener('focusout', handleFocusOut)\n    }\n  }, [trapped, forceUnmount, container, focusScope.paused])\n\n  React.useEffect(() => {\n    if (!enabled) return\n    if (!container) return\n    if (forceUnmount) return\n\n    focusScopesStack.add(focusScope)\n    const previouslyFocusedElement = document.activeElement as HTMLElement | null\n    const hasFocusedCandidate = container.contains(previouslyFocusedElement)\n\n    if (!hasFocusedCandidate) {\n      const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS)\n      container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus)\n      container.dispatchEvent(mountEvent)\n      if (!mountEvent.defaultPrevented) {\n        const candidates = removeLinks(getTabbableCandidates(container))\n\n        focusFirst(candidates, { select: true })\n\n        if (document.activeElement === previouslyFocusedElement) {\n          focus(container)\n        }\n      }\n    }\n\n    return () => {\n      container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus)\n\n      const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS)\n      container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus)\n      container.dispatchEvent(unmountEvent)\n      if (!unmountEvent.defaultPrevented) {\n        focus(previouslyFocusedElement ?? document.body, { select: true })\n      }\n      // we need to remove the listener after we `dispatchEvent`\n      container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus)\n\n      focusScopesStack.remove(focusScope)\n    }\n  }, [enabled, container, forceUnmount, onMountAutoFocus, onUnmountAutoFocus, focusScope])\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!trapped) return\n      if (!loop) return\n      if (focusScope.paused) return\n\n      const isTabKey =\n        event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey\n      const focusedElement = document.activeElement as HTMLElement | null\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement\n        const [first, last] = getTabbableEdges(container)\n        const hasTabbableElementsInside = first && last\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault()\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault()\n            if (loop) focus(first, { select: true })\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault()\n            if (loop) focus(last, { select: true })\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  )\n\n  return {\n    tabIndex: -1,\n    ...scopeProps,\n    ref: composedRefs,\n    onKeyDown: handleKeyDown,\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement\n  for (const candidate of candidates) {\n    focus(candidate, { select })\n    if (document.activeElement !== previouslyFocusedElement) return\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container)\n  const first = findVisible(candidates, container)\n  const last = findVisible(candidates.reverse(), container)\n  return [first, last] as const\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = []\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden'\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP\n    },\n  })\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement)\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false\n    if (getComputedStyle(node).display === 'none') return true\n    node = node.parentElement as HTMLElement\n  }\n  return false\n}\n\nfunction isSelectableInput(\n  element: any\n): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element?.focus) {\n    const previouslyFocusedElement = document.activeElement\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true })\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select()\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void }\nconst focusScopesStack = createFocusScopesStack()\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = []\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0]\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause()\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope)\n      stack.unshift(focusScope)\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope)\n      stack[0]?.resume()\n    },\n  }\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array]\n  const index = updatedArray.indexOf(item)\n  if (index !== -1) {\n    updatedArray.splice(index, 1)\n  }\n  return updatedArray\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A')\n}\n\nexport { FocusScope }\n\nexport type { FocusScopeProps }\n", "import React from 'react'\nimport type { ComponentProps } from 'react'\nimport { RemoveScroll as RS } from 'react-remove-scroll'\n\nexport type RemoveScrollProps = ComponentProps<typeof RS>\n\nexport const RemoveScroll = React.memo((props: RemoveScrollProps) => {\n  if (!props.children) return null\n  return <RS {...props} />\n})\n\nexport const classNames = RS.classNames\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScroll } from './UI';\nimport SideCar from './sidecar';\nvar ReactRemoveScroll = React.forwardRef(function (props, ref) { return (React.createElement(RemoveScroll, __assign({}, props, { ref: ref, sideCar: SideCar }))); });\nReactRemoveScroll.classNames = RemoveScroll.classNames;\nexport default ReactRemoveScroll;\n", "import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { useMergeRefs } from 'use-callback-ref';\nimport { effectCar } from './medium';\nvar nothing = function () {\n    return;\n};\n/**\n * Removes scrollbar from the page and contain the scroll within the Lock\n */\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n    var ref = React.useRef(null);\n    var _a = React.useState({\n        onScrollCapture: nothing,\n        onWheelCapture: nothing,\n        onTouchMoveCapture: nothing,\n    }), callbacks = _a[0], setCallbacks = _a[1];\n    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, gapMode = props.gapMode, rest = __rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noIsolation\", \"inert\", \"allowPinchZoom\", \"as\", \"gapMode\"]);\n    var SideCar = sideCar;\n    var containerRef = useMergeRefs([ref, parentRef]);\n    var containerProps = __assign(__assign({}, rest), callbacks);\n    return (React.createElement(React.Fragment, null,\n        enabled && (React.createElement(SideCar, { sideCar: effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode: gapMode })),\n        forwardProps ? (React.cloneElement(React.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef }))) : (React.createElement(Container, __assign({}, containerProps, { className: className, ref: containerRef }), children))));\n});\nRemoveScroll.defaultProps = {\n    enabled: true,\n    removeScrollBar: true,\n    inert: false,\n};\nRemoveScroll.classNames = {\n    fullWidth: fullWidthClassName,\n    zeroRight: zeroRightClassName,\n};\nexport { RemoveScroll };\n", "export var zeroRightClassName = 'right-scroll-bar-position';\nexport var fullWidthClassName = 'width-before-scroll-bar';\nexport var noScrollbarsClassName = 'with-scroll-bars-hidden';\n/**\n * Name of a CSS variable containing the amount of \"hidden\" scrollbar\n * ! might be undefined ! use will fallback!\n */\nexport var removedBarSizeVariable = '--removed-body-scroll-bar-size';\n", "/**\n * Assigns a value for a given ref, no matter of the ref format\n * @param {RefObject} ref - a callback function or ref object\n * @param value - a new value\n *\n * @see https://github.com/theKashey/use-callback-ref#assignref\n * @example\n * const refObject = useRef();\n * const refFn = (ref) => {....}\n *\n * assignRef(refObject, \"refValue\");\n * assignRef(refFn, \"refValue\");\n */\nexport function assignRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    }\n    else if (ref) {\n        ref.current = value;\n    }\n    return ref;\n}\n", "import { useState } from 'react';\n/**\n * creates a MutableRef with ref change callback\n * @param initialValue - initial ref value\n * @param {Function} callback - a callback to run when value changes\n *\n * @example\n * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n * ref.current = 1;\n * // prints 0 -> 1\n *\n * @see https://reactjs.org/docs/hooks-reference.html#useref\n * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n * @returns {MutableRefObject}\n */\nexport function useCallbackRef(initialValue, callback) {\n    var ref = useState(function () { return ({\n        // value\n        value: initialValue,\n        // last callback\n        callback: callback,\n        // \"memoized\" public interface\n        facade: {\n            get current() {\n                return ref.value;\n            },\n            set current(value) {\n                var last = ref.value;\n                if (last !== value) {\n                    ref.value = value;\n                    ref.callback(value, last);\n                }\n            },\n        },\n    }); })[0];\n    // update callback\n    ref.callback = callback;\n    return ref.facade;\n}\n", "import * as React from 'react';\nimport { assignRef } from './assignRef';\nimport { useCallbackRef } from './useRef';\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar currentValues = new WeakMap();\n/**\n * Merges two or more refs together providing a single interface to set their value\n * @param {RefObject|Ref} refs\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n *\n * @see {@link mergeRefs} a version without buit-in memoization\n * @see https://github.com/theKashey/use-callback-ref#usemergerefs\n * @example\n * const Component = React.forwardRef((props, ref) => {\n *   const ownRef = useRef();\n *   const domRef = useMergeRefs([ref, ownRef]); // 👈 merge together\n *   return <div ref={domRef}>...</div>\n * }\n */\nexport function useMergeRefs(refs, defaultValue) {\n    var callbackRef = useCallbackRef(defaultValue || null, function (newValue) {\n        return refs.forEach(function (ref) { return assignRef(ref, newValue); });\n    });\n    // handle refs changes - added or removed\n    useIsomorphicLayoutEffect(function () {\n        var oldValue = currentValues.get(callbackRef);\n        if (oldValue) {\n            var prevRefs_1 = new Set(oldValue);\n            var nextRefs_1 = new Set(refs);\n            var current_1 = callbackRef.current;\n            prevRefs_1.forEach(function (ref) {\n                if (!nextRefs_1.has(ref)) {\n                    assignRef(ref, null);\n                }\n            });\n            nextRefs_1.forEach(function (ref) {\n                if (!prevRefs_1.has(ref)) {\n                    assignRef(ref, current_1);\n                }\n            });\n        }\n        currentValues.set(callbackRef, refs);\n    }, [refs]);\n    return callbackRef;\n}\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useSidecar } from './hook';\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function sidecar(importer, errorComponent) {\n    var ErrorCase = function () { return errorComponent; };\n    return function Sidecar(props) {\n        var _a = useSidecar(importer, props.sideCar), Car = _a[0], error = _a[1];\n        if (error && errorComponent) {\n            return ErrorCase;\n        }\n        // @ts-expect-error type shenanigans\n        return Car ? React.createElement(Car, __assign({}, props)) : null;\n    };\n}\n", "import { useState, useEffect } from 'react';\nimport { env } from './env';\nvar cache = new WeakMap();\nvar NO_OPTIONS = {};\nexport function useSidecar(importer, effect) {\n    var options = (effect && effect.options) || NO_OPTIONS;\n    if (env.isNode && !options.ssr) {\n        return [null, null];\n    }\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useRealSidecar(importer, effect);\n}\nfunction useRealSidecar(importer, effect) {\n    var options = (effect && effect.options) || NO_OPTIONS;\n    var couldUseCache = env.forceCache || (env.isNode && !!options.ssr) || !options.async;\n    var _a = useState(couldUseCache ? function () { return cache.get(importer); } : undefined), Car = _a[0], setCar = _a[1];\n    var _b = useState(null), error = _b[0], setError = _b[1];\n    useEffect(function () {\n        if (!Car) {\n            importer().then(function (car) {\n                var resolved = effect ? effect.read() : car.default || car;\n                if (!resolved) {\n                    console.error('Sidecar error: with importer', importer);\n                    var error_1;\n                    if (effect) {\n                        console.error('Sidecar error: with medium', effect);\n                        error_1 = new Error('Sidecar medium was not found');\n                    }\n                    else {\n                        error_1 = new Error('Sidecar was not found in exports');\n                    }\n                    setError(function () { return error_1; });\n                    throw error_1;\n                }\n                cache.set(importer, resolved);\n                setCar(function () { return resolved; });\n            }, function (e) { return setError(function () { return e; }); });\n        }\n    }, []);\n    return [Car, error];\n}\n", "import { __assign } from \"tslib\";\nfunction ItoI(a) {\n    return a;\n}\nfunction innerCreateMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    var buffer = [];\n    var assigned = false;\n    var medium = {\n        read: function () {\n            if (assigned) {\n                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');\n            }\n            if (buffer.length) {\n                return buffer[buffer.length - 1];\n            }\n            return defaults;\n        },\n        useMedium: function (data) {\n            var item = middleware(data, assigned);\n            buffer.push(item);\n            return function () {\n                buffer = buffer.filter(function (x) { return x !== item; });\n            };\n        },\n        assignSyncMedium: function (cb) {\n            assigned = true;\n            while (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n            }\n            buffer = {\n                push: function (x) { return cb(x); },\n                filter: function () { return buffer; },\n            };\n        },\n        assignMedium: function (cb) {\n            assigned = true;\n            var pendingQueue = [];\n            if (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n                pendingQueue = buffer;\n            }\n            var executeQueue = function () {\n                var cbs = pendingQueue;\n                pendingQueue = [];\n                cbs.forEach(cb);\n            };\n            var cycle = function () { return Promise.resolve().then(executeQueue); };\n            cycle();\n            buffer = {\n                push: function (x) {\n                    pendingQueue.push(x);\n                    cycle();\n                },\n                filter: function (filter) {\n                    pendingQueue = pendingQueue.filter(filter);\n                    return buffer;\n                },\n            };\n        },\n    };\n    return medium;\n}\nexport function createMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    return innerCreateMedium(defaults, middleware);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function createSidecarMedium(options) {\n    if (options === void 0) { options = {}; }\n    var medium = innerCreateMedium(null);\n    medium.options = __assign({ async: true, ssr: false }, options);\n    return medium;\n}\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useState, useCallback, useEffect, useLayoutEffect } from 'react';\nexport function renderCar(WrappedComponent, defaults) {\n    function State(_a) {\n        var stateRef = _a.stateRef, props = _a.props;\n        var renderTarget = useCallback(function SideTarget() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            useLayoutEffect(function () {\n                stateRef.current(args);\n            });\n            return null;\n        }, []);\n        // @ts-ignore\n        return React.createElement(WrappedComponent, __assign({}, props, { children: renderTarget }));\n    }\n    var Children = React.memo(function (_a) {\n        var stateRef = _a.stateRef, defaultState = _a.defaultState, children = _a.children;\n        var _b = useState(defaultState.current), state = _b[0], setState = _b[1];\n        useEffect(function () {\n            stateRef.current = setState;\n        }, []);\n        return children.apply(void 0, state);\n    }, function () { return true; });\n    return function Combiner(props) {\n        var defaultState = React.useRef(defaults(props));\n        var ref = React.useRef(function (state) { return (defaultState.current = state); });\n        return (React.createElement(React.Fragment, null,\n            React.createElement(State, { stateRef: ref, props: props }),\n            React.createElement(Children, { stateRef: ref, defaultState: defaultState, children: props.children })));\n    };\n}\n", "import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nvar SideCar = function (_a) {\n    var sideCar = _a.sideCar, rest = __rest(_a, [\"sideCar\"]);\n    if (!sideCar) {\n        throw new Error('Sidecar: please provide `sideCar` property to import the right car');\n    }\n    var Target = sideCar.read();\n    if (!Target) {\n        throw new Error('Sidecar medium not found');\n    }\n    return React.createElement(Target, __assign({}, rest));\n};\nSideCar.isSideCarExport = true;\nexport function exportSidecar(medium, exported) {\n    medium.useMedium(exported);\n    return SideCar;\n}\n", "import { createSidecarMedium } from 'use-sidecar';\nexport var effectCar = createSidecarMedium();\n", "import { __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { nonPassive } from './aggresiveCapture';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nexport var getTouchXY = function (event) {\n    return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n};\nexport var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\nvar extractRef = function (ref) {\n    return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) { return x[0] === y[0] && x[1] === y[1]; };\nvar generateStyle = function (id) { return \"\\n  .block-interactivity-\".concat(id, \" {pointer-events: none;}\\n  .allow-interactivity-\").concat(id, \" {pointer-events: all;}\\n\"); };\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n    var shouldPreventQueue = React.useRef([]);\n    var touchStartRef = React.useRef([0, 0]);\n    var activeAxis = React.useRef();\n    var id = React.useState(idCounter++)[0];\n    var Style = React.useState(styleSingleton)[0];\n    var lastProps = React.useRef(props);\n    React.useEffect(function () {\n        lastProps.current = props;\n    }, [props]);\n    React.useEffect(function () {\n        if (props.inert) {\n            document.body.classList.add(\"block-interactivity-\".concat(id));\n            var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);\n            allow_1.forEach(function (el) { return el.classList.add(\"allow-interactivity-\".concat(id)); });\n            return function () {\n                document.body.classList.remove(\"block-interactivity-\".concat(id));\n                allow_1.forEach(function (el) { return el.classList.remove(\"allow-interactivity-\".concat(id)); });\n            };\n        }\n        return;\n    }, [props.inert, props.lockRef.current, props.shards]);\n    var shouldCancelEvent = React.useCallback(function (event, parent) {\n        if (('touches' in event && event.touches.length === 2) || (event.type === 'wheel' && event.ctrlKey)) {\n            return !lastProps.current.allowPinchZoom;\n        }\n        var touch = getTouchXY(event);\n        var touchStart = touchStartRef.current;\n        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n        var currentAxis;\n        var target = event.target;\n        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n        // allow horizontal touch move on Range inputs. They will not cause any scroll\n        if ('touches' in event && moveDirection === 'h' && target.type === 'range') {\n            return false;\n        }\n        var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n        if (!canBeScrolledInMainDirection) {\n            return true;\n        }\n        if (canBeScrolledInMainDirection) {\n            currentAxis = moveDirection;\n        }\n        else {\n            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n            canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n            // other axis might be not scrollable\n        }\n        if (!canBeScrolledInMainDirection) {\n            return false;\n        }\n        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n            activeAxis.current = currentAxis;\n        }\n        if (!currentAxis) {\n            return true;\n        }\n        var cancelingAxis = activeAxis.current || currentAxis;\n        return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n    }, []);\n    var shouldPrevent = React.useCallback(function (_event) {\n        var event = _event;\n        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n            // not the last active\n            return;\n        }\n        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n        var sourceEvent = shouldPreventQueue.current.filter(function (e) { return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta); })[0];\n        // self event, and should be canceled\n        if (sourceEvent && sourceEvent.should) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            return;\n        }\n        // outside or shard event\n        if (!sourceEvent) {\n            var shardNodes = (lastProps.current.shards || [])\n                .map(extractRef)\n                .filter(Boolean)\n                .filter(function (node) { return node.contains(event.target); });\n            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n            if (shouldStop) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n            }\n        }\n    }, []);\n    var shouldCancel = React.useCallback(function (name, delta, target, should) {\n        var event = { name: name, delta: delta, target: target, should: should, shadowParent: getOutermostShadowParent(target) };\n        shouldPreventQueue.current.push(event);\n        setTimeout(function () {\n            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n        }, 1);\n    }, []);\n    var scrollTouchStart = React.useCallback(function (event) {\n        touchStartRef.current = getTouchXY(event);\n        activeAxis.current = undefined;\n    }, []);\n    var scrollWheel = React.useCallback(function (event) {\n        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    var scrollTouchMove = React.useCallback(function (event) {\n        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    React.useEffect(function () {\n        lockStack.push(Style);\n        props.setCallbacks({\n            onScrollCapture: scrollWheel,\n            onWheelCapture: scrollWheel,\n            onTouchMoveCapture: scrollTouchMove,\n        });\n        document.addEventListener('wheel', shouldPrevent, nonPassive);\n        document.addEventListener('touchmove', shouldPrevent, nonPassive);\n        document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n        return function () {\n            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n            document.removeEventListener('wheel', shouldPrevent, nonPassive);\n            document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n            document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n        };\n    }, []);\n    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n    return (React.createElement(React.Fragment, null,\n        inert ? React.createElement(Style, { styles: generateStyle(id) }) : null,\n        removeScrollBar ? React.createElement(RemoveScrollBar, { gapMode: props.gapMode }) : null));\n}\nfunction getOutermostShadowParent(node) {\n    var shadowParent = null;\n    while (node !== null) {\n        if (node instanceof ShadowRoot) {\n            shadowParent = node.host;\n            node = node.host;\n        }\n        node = node.parentNode;\n    }\n    return shadowParent;\n}\n", "import * as React from 'react';\nimport { styleSingleton } from 'react-style-singleton';\nimport { fullWidthClassName, zeroRightClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\nimport { getGapWidth } from './utils';\nvar Style = styleSingleton();\nexport var lockAttribute = 'data-scroll-locked';\n// important tip - once we measure scrollBar width and remove them\n// we could not repeat this operation\n// thus we are using style-singleton - only the first \"yet correct\" style will be applied.\nvar getStyles = function (_a, allowRelative, gapMode, important) {\n    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    return \"\\n  .\".concat(noScrollbarsClassName, \" {\\n   overflow: hidden \").concat(important, \";\\n   padding-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  body[\").concat(lockAttribute, \"] {\\n    overflow: hidden \").concat(important, \";\\n    overscroll-behavior: contain;\\n    \").concat([\n        allowRelative && \"position: relative \".concat(important, \";\"),\n        gapMode === 'margin' &&\n            \"\\n    padding-left: \".concat(left, \"px;\\n    padding-top: \").concat(top, \"px;\\n    padding-right: \").concat(right, \"px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n    \"),\n        gapMode === 'padding' && \"padding-right: \".concat(gap, \"px \").concat(important, \";\"),\n    ]\n        .filter(Boolean)\n        .join(''), \"\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" {\\n    right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" {\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" .\").concat(zeroRightClassName, \" {\\n    right: 0 \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" .\").concat(fullWidthClassName, \" {\\n    margin-right: 0 \").concat(important, \";\\n  }\\n  \\n  body[\").concat(lockAttribute, \"] {\\n    \").concat(removedBarSizeVariable, \": \").concat(gap, \"px;\\n  }\\n\");\n};\nvar getCurrentUseCounter = function () {\n    var counter = parseInt(document.body.getAttribute(lockAttribute) || '0', 10);\n    return isFinite(counter) ? counter : 0;\n};\nexport var useLockAttribute = function () {\n    React.useEffect(function () {\n        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());\n        return function () {\n            var newCounter = getCurrentUseCounter() - 1;\n            if (newCounter <= 0) {\n                document.body.removeAttribute(lockAttribute);\n            }\n            else {\n                document.body.setAttribute(lockAttribute, newCounter.toString());\n            }\n        };\n    }, []);\n};\n/**\n * Removes page scrollbar and blocks page scroll when mounted\n */\nexport var RemoveScrollBar = function (_a) {\n    var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? 'margin' : _b;\n    useLockAttribute();\n    /*\n     gap will be measured on every component mount\n     however it will be used only by the \"first\" invocation\n     due to singleton nature of <Style\n     */\n    var gap = React.useMemo(function () { return getGapWidth(gapMode); }, [gapMode]);\n    return React.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n};\n", "import * as React from 'react';\nimport { stylesheetSingleton } from './singleton';\n/**\n * creates a hook to control style singleton\n * @see {@link styleSingleton} for a safer component version\n * @example\n * ```tsx\n * const useStyle = styleHookSingleton();\n * ///\n * useStyle('body { overflow: hidden}');\n */\nexport var styleHookSingleton = function () {\n    var sheet = stylesheetSingleton();\n    return function (styles, isDynamic) {\n        React.useEffect(function () {\n            sheet.add(styles);\n            return function () {\n                sheet.remove();\n            };\n        }, [styles && isDynamic]);\n    };\n};\n", "var currentNonce;\nexport var setNonce = function (nonce) {\n    currentNonce = nonce;\n};\nexport var getNonce = function () {\n    if (currentNonce) {\n        return currentNonce;\n    }\n    if (typeof __webpack_nonce__ !== 'undefined') {\n        return __webpack_nonce__;\n    }\n    return undefined;\n};\n", "import { getNonce } from 'get-nonce';\nfunction makeStyleTag() {\n    if (!document)\n        return null;\n    var tag = document.createElement('style');\n    tag.type = 'text/css';\n    var nonce = getNonce();\n    if (nonce) {\n        tag.setAttribute('nonce', nonce);\n    }\n    return tag;\n}\nfunction injectStyles(tag, css) {\n    // @ts-ignore\n    if (tag.styleSheet) {\n        // @ts-ignore\n        tag.styleSheet.cssText = css;\n    }\n    else {\n        tag.appendChild(document.createTextNode(css));\n    }\n}\nfunction insertStyleTag(tag) {\n    var head = document.head || document.getElementsByTagName('head')[0];\n    head.appendChild(tag);\n}\nexport var stylesheetSingleton = function () {\n    var counter = 0;\n    var stylesheet = null;\n    return {\n        add: function (style) {\n            if (counter == 0) {\n                if ((stylesheet = makeStyleTag())) {\n                    injectStyles(stylesheet, style);\n                    insertStyleTag(stylesheet);\n                }\n            }\n            counter++;\n        },\n        remove: function () {\n            counter--;\n            if (!counter && stylesheet) {\n                stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);\n                stylesheet = null;\n            }\n        },\n    };\n};\n", "import { styleHookSingleton } from './hook';\n/**\n * create a Component to add styles on demand\n * - styles are added when first instance is mounted\n * - styles are removed when the last instance is unmounted\n * - changing styles in runtime does nothing unless dynamic is set. But with multiple components that can lead to the undefined behavior\n */\nexport var styleSingleton = function () {\n    var useStyle = styleHookSingleton();\n    var Sheet = function (_a) {\n        var styles = _a.styles, dynamic = _a.dynamic;\n        useStyle(styles, dynamic);\n        return null;\n    };\n    return Sheet;\n};\n", "export var zeroGap = {\n    left: 0,\n    top: 0,\n    right: 0,\n    gap: 0,\n};\nvar parse = function (x) { return parseInt(x || '', 10) || 0; };\nvar getOffset = function (gapMode) {\n    var cs = window.getComputedStyle(document.body);\n    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];\n    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];\n    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];\n    return [parse(left), parse(top), parse(right)];\n};\nexport var getGapWidth = function (gapMode) {\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    if (typeof window === 'undefined') {\n        return zeroGap;\n    }\n    var offsets = getOffset(gapMode);\n    var documentWidth = document.documentElement.clientWidth;\n    var windowWidth = window.innerWidth;\n    return {\n        left: offsets[0],\n        top: offsets[1],\n        right: offsets[2],\n        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0]),\n    };\n};\n", "var passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n                return true;\n            },\n        });\n        // @ts-ignore\n        window.addEventListener('test', options, options);\n        // @ts-ignore\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\nexport var nonPassive = passiveSupported ? { passive: false } : false;\n", "var alwaysContainsScroll = function (node) {\n    // textarea will always _contain_ scroll inside self. It only can be hidden\n    return node.tagName === 'TEXTAREA';\n};\nvar elementCanBeScrolled = function (node, overflow) {\n    if (!(node instanceof Element)) {\n        return false;\n    }\n    var styles = window.getComputedStyle(node);\n    return (\n    // not-not-scrollable\n    styles[overflow] !== 'hidden' &&\n        // contains scroll inside self\n        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === 'visible'));\n};\nvar elementCouldBeVScrolled = function (node) { return elementCanBeScrolled(node, 'overflowY'); };\nvar elementCouldBeHScrolled = function (node) { return elementCanBeScrolled(node, 'overflowX'); };\nexport var locationCouldBeScrolled = function (axis, node) {\n    var ownerDocument = node.ownerDocument;\n    var current = node;\n    do {\n        // Skip over shadow root\n        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {\n            current = current.host;\n        }\n        var isScrollable = elementCouldBeScrolled(axis, current);\n        if (isScrollable) {\n            var _a = getScrollVariables(axis, current), scrollHeight = _a[1], clientHeight = _a[2];\n            if (scrollHeight > clientHeight) {\n                return true;\n            }\n        }\n        current = current.parentNode;\n    } while (current && current !== ownerDocument.body);\n    return false;\n};\nvar getVScrollVariables = function (_a) {\n    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n    return [\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n    ];\n};\nvar getHScrollVariables = function (_a) {\n    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n    return [\n        scrollLeft,\n        scrollWidth,\n        clientWidth,\n    ];\n};\nvar elementCouldBeScrolled = function (axis, node) {\n    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n};\nvar getScrollVariables = function (axis, node) {\n    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n};\nvar getDirectionFactor = function (axis, direction) {\n    /**\n     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,\n     * and then increasingly negative as you scroll towards the end of the content.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n     */\n    return axis === 'h' && direction === 'rtl' ? -1 : 1;\n};\nexport var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {\n    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);\n    var delta = directionFactor * sourceDelta;\n    // find scrollable target\n    var target = event.target;\n    var targetInLock = endTarget.contains(target);\n    var shouldCancelScroll = false;\n    var isDeltaPositive = delta > 0;\n    var availableScroll = 0;\n    var availableScrollTop = 0;\n    do {\n        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];\n        var elementScroll = scroll_1 - capacity - directionFactor * position;\n        if (position || elementScroll) {\n            if (elementCouldBeScrolled(axis, target)) {\n                availableScroll += elementScroll;\n                availableScrollTop += position;\n            }\n        }\n        if (target instanceof ShadowRoot) {\n            target = target.host;\n        }\n        else {\n            target = target.parentNode;\n        }\n    } while (\n    // portaled content\n    (!targetInLock && target !== document.body) ||\n        // self content\n        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n    // handle epsilon around 0 (non standard zoom levels)\n    if (isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScroll) < 1) || (!noOverscroll && delta > availableScroll))) {\n        shouldCancelScroll = true;\n    }\n    else if (!isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScrollTop) < 1) || (!noOverscroll && -delta > availableScrollTop))) {\n        shouldCancelScroll = true;\n    }\n    return shouldCancelScroll;\n};\n", "import { exportSidecar } from 'use-sidecar';\nimport { RemoveScrollSideCar } from './SideEffect';\nimport { effectCar } from './medium';\nexport default exportSidecar(effectCar, RemoveScrollSideCar);\n", "export const constants = {}\n\nexport const SHEET_NAME = 'Sheet'\nexport const SHEET_HANDLE_NAME = 'SheetHandle'\nexport const SHEET_OVERLAY_NAME = 'SheetOverlay'\n", "import { useComposedRefs } from '@tamagui/compose-refs'\nimport { useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport type {\n  GetProps,\n  StackProps,\n  TamaguiComponent,\n  TamaguiComponentExpectingVariants,\n  TamaguiElement,\n} from '@tamagui/core'\nimport { Stack } from '@tamagui/core'\nimport { composeEventHandlers, withStaticProperties } from '@tamagui/helpers'\nimport { resolveViewZIndex } from '@tamagui/portal'\nimport { RemoveScroll } from '@tamagui/remove-scroll'\nimport { useDidFinishSSR } from '@tamagui/use-did-finish-ssr'\nimport { StackZIndexContext } from '@tamagui/z-index-stack'\nimport type { ForwardRefExoticComponent, FunctionComponent, RefAttributes } from 'react'\nimport { forwardRef, memo, useMemo } from 'react'\nimport type { View } from 'react-native'\nimport { Platform } from 'react-native'\nimport { SHEET_HANDLE_NAME, SHEET_NAME, SHEET_OVERLAY_NAME } from './constants'\nimport { getNativeSheet } from './nativeSheet'\nimport { useSheetContext } from './SheetContext'\nimport { SheetImplementationCustom } from './SheetImplementationCustom'\nimport { SheetScrollView } from './SheetScrollView'\nimport type { SheetProps, SheetScopedProps } from './types'\nimport { useSheetController } from './useSheetController'\nimport { useSheetOffscreenSize } from './useSheetOffscreenSize'\n\ntype SharedSheetProps = {\n  open?: boolean\n}\n\ntype BaseProps = StackProps & SharedSheetProps\n\ntype SheetStyledComponent = TamaguiComponentExpectingVariants<BaseProps, SharedSheetProps>\n\nexport function createSheet<\n  H extends TamaguiComponent | SheetStyledComponent,\n  F extends TamaguiComponent | SheetStyledComponent,\n  O extends TamaguiComponent | SheetStyledComponent,\n>({ Handle, Frame, Overlay }: { Handle: H; Frame: F; Overlay: O }) {\n  const SheetHandle = Handle.styleable<any>(\n    (\n      { __scopeSheet, ...props }: SheetScopedProps<SheetStyledComponent>,\n      forwardedRef\n    ) => {\n      const context = useSheetContext(SHEET_HANDLE_NAME, __scopeSheet)\n      const composedRef = useComposedRefs<TamaguiElement>(context.handleRef, forwardedRef)\n\n      if (context.onlyShowFrame) {\n        return null\n      }\n\n      return (\n        // @ts-ignore\n        <Handle\n          ref={composedRef}\n          onPress={() => {\n            // don't toggle to the bottom snap position when dismissOnSnapToBottom set\n            const max =\n              context.snapPoints.length + (context.dismissOnSnapToBottom ? -1 : 0)\n            const nextPos = (context.position + 1) % max\n            context.setPosition(nextPos)\n          }}\n          open={context.open}\n          {...props}\n        />\n      )\n    }\n  )\n\n  /* -------------------------------------------------------------------------------------------------\n   * SheetOverlay\n   * -----------------------------------------------------------------------------------------------*/\n\n  const SheetOverlay = Overlay.extractable(\n    memo((propsIn: SheetScopedProps<GetProps<typeof Overlay>>) => {\n      const { __scopeSheet, ...props } = propsIn\n      const context = useSheetContext(SHEET_OVERLAY_NAME, __scopeSheet)\n\n      // this ones a bit weird for legacy reasons, we need to hoist it above <Sheet /> AnimatedView\n      // so we just pass it up to context\n\n      const element = useMemo(() => {\n        return (\n          // @ts-ignore\n          <Overlay\n            {...props}\n            onPress={composeEventHandlers(\n              props.onPress,\n              context.dismissOnOverlayPress\n                ? () => {\n                    context.setOpen(false)\n                  }\n                : undefined\n            )}\n          />\n        )\n      }, [props.onPress, props.opacity, context.dismissOnOverlayPress])\n\n      useIsomorphicLayoutEffect(() => {\n        context.onOverlayComponent?.(element)\n      }, [element])\n\n      if (context.onlyShowFrame) {\n        return null\n      }\n\n      return null\n    })\n  )\n\n  /* -------------------------------------------------------------------------------------------------\n   * Sheet\n   * -----------------------------------------------------------------------------------------------*/\n\n  type ExtraFrameProps = {\n    /**\n     * By default the sheet adds a view below its bottom that extends down another 50%,\n     * this is useful if your Sheet has a spring animation that bounces \"past\" the top when\n     * opening, preventing it from showing the content underneath.\n     */\n    disableHideBottomOverflow?: boolean\n\n    /**\n     * Adds padding accounting for the currently offscreen content, so if you put a flex element inside\n     * the sheet, it will always flex to the height of the visible amount of the sheet. If this is not\n     * turned on, the inner content is always set to the max height of the sheet.\n     */\n    adjustPaddingForOffscreenContent?: boolean\n  }\n\n  const SheetFrame = Frame.extractable(\n    forwardRef(\n      (\n        {\n          __scopeSheet,\n          adjustPaddingForOffscreenContent,\n          disableHideBottomOverflow,\n          children,\n          ...props\n        }: SheetProps & ExtraFrameProps,\n        forwardedRef\n      ) => {\n        const context = useSheetContext(SHEET_NAME, __scopeSheet)\n        const { hasFit, removeScrollEnabled, frameSize, contentRef, open } = context\n        const composedContentRef = useComposedRefs(forwardedRef, contentRef)\n        const offscreenSize = useSheetOffscreenSize(context)\n\n        const sheetContents = useMemo(() => {\n          return (\n            // @ts-expect-error\n            <Frame\n              ref={composedContentRef}\n              flex={hasFit ? 0 : 1}\n              height={hasFit ? undefined : frameSize}\n              pointerEvents={open ? 'auto' : 'none'}\n              {...props}\n            >\n              <StackZIndexContext zIndex={resolveViewZIndex(props.zIndex)}>\n                {children}\n              </StackZIndexContext>\n\n              {adjustPaddingForOffscreenContent && (\n                <Stack data-sheet-offscreen-pad height={offscreenSize} width=\"100%\" />\n              )}\n            </Frame>\n          )\n        }, [\n          open,\n          props,\n          frameSize,\n          offscreenSize,\n          adjustPaddingForOffscreenContent,\n          hasFit,\n        ])\n\n        return (\n          <>\n            <RemoveScroll\n              forwardProps\n              enabled={removeScrollEnabled}\n              allowPinchZoom\n              shards={[contentRef]}\n              // causes lots of bugs on touch web on site\n              removeScrollBar={false}\n            >\n              {sheetContents}\n            </RemoveScroll>\n\n            {/* below frame hide when bouncing past 100% */}\n            {!disableHideBottomOverflow && (\n              // @ts-ignore\n              <Frame\n                {...props}\n                componentName=\"SheetCover\"\n                // biome-ignore lint/correctness/noChildrenProp: <explanation>\n                children={null}\n                position=\"absolute\"\n                bottom=\"-100%\"\n                zIndex={-1}\n                height={context.frameSize}\n                left={0}\n                right={0}\n                borderWidth={0}\n                borderRadius={0}\n                shadowOpacity={0}\n              />\n            )}\n          </>\n        )\n      }\n    )\n  ) as any as ForwardRefExoticComponent<\n    SheetScopedProps<\n      Omit<GetProps<typeof Frame>, keyof ExtraFrameProps> & ExtraFrameProps\n    >\n  >\n\n  const Sheet = forwardRef<View, SheetProps>(function Sheet(props, ref) {\n    const hydrated = useDidFinishSSR()\n    const { isShowingNonSheet } = useSheetController()\n\n    let SheetImplementation = SheetImplementationCustom as any\n\n    if (props.native && Platform.OS === 'ios') {\n      if (process.env.TAMAGUI_TARGET === 'native') {\n        const impl = getNativeSheet('ios')\n        if (impl) {\n          SheetImplementation = impl\n        }\n      }\n    }\n\n    /**\n     * Performance is sensitive here so avoid all the hooks below with this\n     */\n    if (isShowingNonSheet || !hydrated) {\n      return null\n    }\n\n    return <SheetImplementation ref={ref} {...props} />\n  })\n\n  const components = {\n    Frame: SheetFrame,\n    Overlay: SheetOverlay,\n    Handle: SheetHandle,\n    ScrollView: SheetScrollView,\n  }\n\n  const Controlled = withStaticProperties(Sheet, components) as any as FunctionComponent<\n    Omit<SheetProps, 'open' | 'onOpenChange'> & RefAttributes<View>\n  > &\n    typeof components\n\n  return withStaticProperties(Sheet, {\n    ...components,\n    Controlled,\n  })\n}\n\n/* -------------------------------------------------------------------------------------------------*/\n", "import { createContextScope } from '@tamagui/create-context'\n\nimport { SHEET_NAME } from './constants'\nimport type { SheetContextValue } from './useSheetProviderProps'\n\nexport const [createSheetContext, createSheetScope] = createContextScope(SHEET_NAME)\n\nexport const [SheetProvider, useSheetContext] = createSheetContext<SheetContextValue>(\n  SHEET_NAME,\n  {} as any\n)\n", "import { ProvideAdaptContext, useAdaptContext } from '@tamagui/adapt'\nimport { AnimatePresence } from '@tamagui/animate-presence'\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport {\n  currentPlatform,\n  isClient,\n  isWeb,\n  useIsomorphicLayoutEffect,\n} from '@tamagui/constants'\nimport {\n  Stack,\n  Theme,\n  useConfiguration,\n  useDidFinishSSR,\n  useEvent,\n  useThemeName,\n} from '@tamagui/core'\nimport { Portal, USE_NATIVE_PORTAL } from '@tamagui/portal'\nimport React, { useState } from 'react'\nimport type {\n  Animated,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  PanResponderGestureState,\n} from 'react-native'\nimport { Dimensions, Keyboard, PanResponder, View } from 'react-native'\nimport { ParentSheetContext, SheetInsideSheetContext } from './contexts'\nimport { resisted } from './helpers'\nimport { SheetProvider } from './SheetContext'\nimport type { SheetProps, SnapPointsMode } from './types'\nimport { useSheetOpenState } from './useSheetOpenState'\nimport { useSheetProviderProps } from './useSheetProviderProps'\n\nconst hiddenSize = 10_000.1\n\nlet sheetHiddenStyleSheet: HTMLStyleElement | null = null\n\n// on web we are always relative to window, on to screen\nconst relativeDimensionTo = isWeb ? 'window' : 'screen'\n\nexport const SheetImplementationCustom = React.forwardRef<View, SheetProps>(\n  function SheetImplementationCustom(props, forwardedRef) {\n    const parentSheet = React.useContext(ParentSheetContext)\n\n    const {\n      animation,\n      animationConfig: animationConfigProp,\n      modal = false,\n      zIndex = parentSheet.zIndex + 1,\n      moveOnKeyboardChange = false,\n      unmountChildrenWhenHidden = false,\n      portalProps,\n      containerComponent: ContainerComponent = React.Fragment,\n    } = props\n\n    const state = useSheetOpenState(props)\n    const [overlayComponent, setOverlayComponent] = React.useState<any>(null)\n\n    const providerProps = useSheetProviderProps(props, state, {\n      onOverlayComponent: setOverlayComponent,\n    })\n    const {\n      frameSize,\n      setFrameSize,\n      snapPoints,\n      snapPointsMode,\n      hasFit,\n      position,\n      setPosition,\n      scrollBridge,\n      screenSize,\n      setMaxContentSize,\n      maxSnapPoint,\n    } = providerProps\n    const { open, controller, isHidden } = state\n\n    const sheetRef = React.useRef<View>(null)\n    const ref = useComposedRefs(forwardedRef, sheetRef, providerProps.contentRef as any)\n\n    // TODO this can be extracted into a helper getAnimationConfig(animationProp as array | string)\n    const { animationDriver } = useConfiguration()\n    const animationConfig = (() => {\n      if (animationDriver.supportsCSSVars) {\n        // for now this detects css driver only, which has no \"config\"\n        return {}\n      }\n\n      const [animationProp, animationPropConfig] = !animation\n        ? []\n        : Array.isArray(animation)\n          ? animation\n          : ([animation] as const)\n      return (\n        animationConfigProp ??\n        (animationProp\n          ? {\n              ...(animationDriver.animations[animationProp as string] as Object),\n              ...animationPropConfig,\n            }\n          : null)\n      )\n    })()\n\n    /**\n     * This is a hacky workaround for native:\n     */\n    const [isShowingInnerSheet, setIsShowingInnerSheet] = React.useState(false)\n    const shouldHideParentSheet =\n      !isWeb &&\n      modal &&\n      isShowingInnerSheet &&\n      // if not using weird portal limitation we dont need to hide parent sheet\n      USE_NATIVE_PORTAL\n\n    const sheetInsideSheet = React.useContext(SheetInsideSheetContext)\n    const onInnerSheet = React.useCallback((hasChild: boolean) => {\n      setIsShowingInnerSheet(hasChild)\n    }, [])\n\n    const positions = React.useMemo(\n      () =>\n        snapPoints.map((point) =>\n          getYPositions(snapPointsMode, point, screenSize, frameSize)\n        ),\n      [screenSize, frameSize, snapPoints, snapPointsMode]\n    )\n\n    const { useAnimatedNumber, useAnimatedNumberStyle, useAnimatedNumberReaction } =\n      animationDriver\n    const AnimatedView = (animationDriver.View ?? Stack) as typeof Animated.View\n\n    useIsomorphicLayoutEffect(() => {\n      if (!(sheetInsideSheet && open)) return\n      sheetInsideSheet(true)\n      return () => {\n        sheetInsideSheet(false)\n      }\n    }, [sheetInsideSheet, open])\n\n    const nextParentContext = React.useMemo(\n      () => ({\n        zIndex,\n      }),\n      [zIndex]\n    )\n\n    const isMounted = useDidFinishSSR()\n    const startPosition = isMounted && screenSize ? screenSize : hiddenSize\n    const animatedNumber = useAnimatedNumber(startPosition)\n    const at = React.useRef(startPosition)\n    const hasntMeasured = at.current === hiddenSize\n    const [disableAnimation, setDisableAnimation] = useState(hasntMeasured)\n\n    useAnimatedNumberReaction(\n      {\n        value: animatedNumber,\n        hostRef: sheetRef,\n      },\n      React.useCallback(\n        (value) => {\n          at.current = value\n          scrollBridge.paneY = value\n        },\n        [animationDriver]\n      )\n    )\n\n    function stopSpring() {\n      animatedNumber.stop()\n      if (scrollBridge.onFinishAnimate) {\n        scrollBridge.onFinishAnimate()\n        scrollBridge.onFinishAnimate = undefined\n      }\n    }\n\n    const animateTo = useEvent((position: number) => {\n      if (frameSize === 0) return\n\n      let toValue = isHidden || position === -1 ? screenSize : positions[position]\n\n      if (at.current === toValue) return\n\n      at.current = toValue\n      stopSpring()\n      animatedNumber.setValue(toValue, {\n        type: 'spring',\n        ...animationConfig,\n      })\n    })\n\n    useIsomorphicLayoutEffect(() => {\n      // we need to do a *three* step process for the css driver\n      // first render off screen for ssr safety (hiddenSize)\n      // then render to bottom of screen without animation (screenSize)\n      // then add the animation as it animates from screenSize to position\n\n      if (hasntMeasured && screenSize) {\n        at.current = screenSize\n        animatedNumber.setValue(\n          screenSize,\n          {\n            type: 'timing',\n            duration: 0,\n          },\n          () => {\n            // imperfect but struggling to render properly here\n            setTimeout(() => {\n              setDisableAnimation(false)\n            }, 10)\n          }\n        )\n        return\n      }\n\n      if (disableAnimation) {\n        return\n      }\n\n      if (!frameSize || !screenSize || isHidden || (hasntMeasured && !open)) {\n        return\n      }\n\n      // finally, animate\n      animateTo(position)\n    }, [hasntMeasured, disableAnimation, isHidden, frameSize, screenSize, open, position])\n\n    const disableDrag = props.disableDrag ?? controller?.disableDrag\n    const themeName = useThemeName()\n    const [isDragging, setIsDragging] = React.useState(false)\n\n    const panResponder = React.useMemo(() => {\n      if (disableDrag) return\n      if (!frameSize) return\n      if (isShowingInnerSheet) return\n\n      const minY = positions[0]\n      scrollBridge.paneMinY = minY\n      let startY = at.current\n\n      function setPanning(val: boolean) {\n        setIsDragging(val)\n\n        // make unselectable:\n        if (isClient) {\n          if (!sheetHiddenStyleSheet) {\n            sheetHiddenStyleSheet = document.createElement('style')\n            if (typeof document.head !== 'undefined') {\n              document.head.appendChild(sheetHiddenStyleSheet)\n            }\n          }\n          if (!val) {\n            sheetHiddenStyleSheet.innerText = ''\n          } else {\n            sheetHiddenStyleSheet.innerText =\n              ':root * { user-select: none !important; -webkit-user-select: none !important; }'\n          }\n        }\n      }\n\n      const release = ({ vy, dragAt }: { dragAt: number; vy: number }) => {\n        isExternalDrag = false\n        previouslyScrolling = false\n        setPanning(false)\n        const at = dragAt + startY\n        // seems liky vy goes up to about 4 at the very most (+ is down, - is up)\n        // lets base our multiplier on the total layout height\n        const end = at + frameSize * vy * 0.2\n        let closestPoint = 0\n        let dist = Number.POSITIVE_INFINITY\n        for (let i = 0; i < positions.length; i++) {\n          const position = positions[i]\n          const curDist = end > position ? end - position : position - end\n          if (curDist < dist) {\n            dist = curDist\n            closestPoint = i\n          }\n        }\n        // have to call both because state may not change but need to snap back\n        setPosition(closestPoint)\n        animateTo(closestPoint)\n      }\n\n      const finish = (_e: GestureResponderEvent, state: PanResponderGestureState) => {\n        release({\n          vy: state.vy,\n          dragAt: state.dy,\n        })\n      }\n\n      let previouslyScrolling = false\n\n      const onMoveShouldSet = (\n        e: GestureResponderEvent,\n        { dy }: PanResponderGestureState\n      ) => {\n        // if dragging handle always allow:\n        if (e.target === providerProps.handleRef.current) {\n          return true\n        }\n\n        const isScrolled = scrollBridge.y !== 0\n        const isDraggingUp = dy < 0\n        // we can treat near top instead of exactly to avoid trouble with springs\n        const isNearTop = scrollBridge.paneY - 5 <= scrollBridge.paneMinY\n        if (isScrolled) {\n          previouslyScrolling = true\n          return false\n        }\n        // prevent drag once at top and pulling up\n        if (isNearTop) {\n          if (!isScrolled && isDraggingUp) {\n            // TODO: pulling past the limit breaks scroll on native, need to better make ScrollView\n            if (!isWeb) {\n              return false\n            }\n          }\n        }\n        // we could do some detection of other touchables and cancel here..\n        return Math.abs(dy) > 5\n      }\n\n      const grant = () => {\n        setPanning(true)\n        stopSpring()\n        startY = at.current\n      }\n\n      let isExternalDrag = false\n\n      scrollBridge.drag = (dy) => {\n        if (!isExternalDrag) {\n          isExternalDrag = true\n          grant()\n        }\n        const to = dy + startY\n        animatedNumber.setValue(resisted(to, minY), { type: 'direct' })\n      }\n\n      scrollBridge.release = release\n\n      return PanResponder.create({\n        onMoveShouldSetPanResponder: onMoveShouldSet,\n        onPanResponderGrant: grant,\n        onPanResponderMove: (_e, { dy }) => {\n          const toFull = dy + startY\n          const to = resisted(toFull, minY)\n          animatedNumber.setValue(to, { type: 'direct' })\n        },\n        onPanResponderEnd: finish,\n        onPanResponderTerminate: finish,\n        onPanResponderRelease: finish,\n      })\n    }, [disableDrag, isShowingInnerSheet, animateTo, frameSize, positions, setPosition])\n\n    const handleAnimationViewLayout = React.useCallback((e: LayoutChangeEvent) => {\n      // avoid bugs where it grows forever for whatever reason\n      const next = Math.min(\n        e.nativeEvent?.layout.height,\n        Dimensions.get(relativeDimensionTo).height\n      )\n      if (!next) return\n      setFrameSize(next)\n    }, [])\n\n    const handleMaxContentViewLayout = React.useCallback((e: LayoutChangeEvent) => {\n      // avoid bugs where it grows forever for whatever reason\n      const next = Math.min(\n        e.nativeEvent?.layout.height,\n        Dimensions.get(relativeDimensionTo).height\n      )\n      if (!next) return\n      setMaxContentSize(next)\n    }, [])\n\n    const animatedStyle = useAnimatedNumberStyle(animatedNumber, (val) => {\n      'worklet'\n      const translateY = frameSize === 0 ? hiddenSize : val\n\n      return {\n        transform: [{ translateY }],\n      }\n    })\n\n    const sizeBeforeKeyboard = React.useRef<number | null>(null)\n    React.useEffect(() => {\n      if (isWeb || !moveOnKeyboardChange) return\n      const keyboardShowListener = Keyboard.addListener(\n        currentPlatform === 'ios' ? 'keyboardWillShow' : 'keyboardDidShow',\n        (e) => {\n          if (sizeBeforeKeyboard.current !== null) return\n          sizeBeforeKeyboard.current =\n            isHidden || position === -1 ? screenSize : positions[position]\n          animatedNumber.setValue(\n            Math.max(sizeBeforeKeyboard.current - e.endCoordinates.height, 0),\n            {\n              type: 'timing',\n              duration: 250,\n            }\n          )\n        }\n      )\n      const keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', () => {\n        if (sizeBeforeKeyboard.current === null) return\n        animatedNumber.setValue(sizeBeforeKeyboard.current, {\n          type: 'timing',\n          duration: 250,\n        })\n        sizeBeforeKeyboard.current = null\n      })\n\n      return () => {\n        keyboardDidHideListener.remove()\n        keyboardShowListener.remove()\n      }\n    }, [moveOnKeyboardChange, positions, position, isHidden])\n\n    // we need to set this *after* fully closed to 0, to avoid it overlapping\n    // the page when resizing quickly on web for example\n    const [opacity, setOpacity] = React.useState(open ? 1 : 0)\n    if (open && opacity === 0) {\n      setOpacity(1)\n    }\n    React.useEffect(() => {\n      if (!open) {\n        // need to wait for animation complete, for now lets just do it naively\n        const tm = setTimeout(() => {\n          setOpacity(0)\n        }, 400)\n        return () => {\n          clearTimeout(tm)\n        }\n      }\n    }, [open])\n\n    const forcedContentHeight = hasFit\n      ? undefined\n      : snapPointsMode === 'percent'\n        ? `${maxSnapPoint}${isWeb ? 'dvh' : '%'}`\n        : maxSnapPoint\n\n    // const id = useId()\n    // const { AdaptProvider, when, children } = useAdaptParent({\n    //   scope: `${id}Sheet`,\n    //   portal: true,\n    // })\n\n    let contents = (\n      <ParentSheetContext.Provider value={nextParentContext}>\n        <SheetProvider {...providerProps}>\n          <AnimatePresence custom={{ open }}>\n            {shouldHideParentSheet || !open ? null : overlayComponent}\n          </AnimatePresence>\n\n          {snapPointsMode !== 'percent' && (\n            <View\n              style={{\n                opacity: 0,\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                pointerEvents: 'none',\n              }}\n              onLayout={handleMaxContentViewLayout}\n            />\n          )}\n\n          <AnimatedView\n            ref={ref}\n            {...panResponder?.panHandlers}\n            onLayout={handleAnimationViewLayout}\n            {...(!isDragging && {\n              // @ts-ignore for CSS driver this is necessary to attach the transition\n              animation: disableAnimation ? null : animation,\n            })}\n            // @ts-ignore\n            disableClassName\n            style={[\n              {\n                position: 'absolute',\n                zIndex,\n                width: '100%',\n                height: forcedContentHeight,\n                minHeight: forcedContentHeight,\n                opacity: !shouldHideParentSheet ? opacity : 0,\n                ...((shouldHideParentSheet || !open) && {\n                  pointerEvents: 'none',\n                }),\n              },\n              animatedStyle,\n            ]}\n          >\n            {/* <AdaptProvider>{props.children}</AdaptProvider> */}\n            {props.children}\n          </AnimatedView>\n        </SheetProvider>\n      </ParentSheetContext.Provider>\n    )\n\n    if (process.env.TAMAGUI_TARGET === 'native' && !USE_NATIVE_PORTAL) {\n      const adaptContext = useAdaptContext()\n      contents = (\n        <ProvideAdaptContext {...adaptContext}>\n          {/* @ts-ignore */}\n          {contents}\n        </ProvideAdaptContext>\n      )\n    }\n\n    // start mounted so we get an accurate measurement the first time\n    const shouldMountChildren = unmountChildrenWhenHidden ? !!opacity : true\n\n    if (modal) {\n      const modalContents = (\n        <Portal stackZIndex={zIndex} {...portalProps}>\n          {shouldMountChildren && (\n            <ContainerComponent>\n              <Theme forceClassName name={themeName}>\n                {contents}\n              </Theme>\n            </ContainerComponent>\n          )}\n        </Portal>\n      )\n\n      if (isWeb) {\n        return modalContents\n      }\n\n      // on native we don't support multiple modals yet... fix for now is to hide outer one\n      return (\n        <SheetInsideSheetContext.Provider value={onInnerSheet}>\n          {modalContents}\n        </SheetInsideSheetContext.Provider>\n      )\n    }\n\n    return contents\n  }\n)\n\nfunction getYPositions(\n  mode: SnapPointsMode,\n  point: string | number,\n  screenSize?: number,\n  frameSize?: number\n) {\n  if (!screenSize || !frameSize) return 0\n\n  if (mode === 'mixed') {\n    if (typeof point === 'number') {\n      return screenSize - Math.min(screenSize, Math.max(0, point))\n    }\n    if (point === 'fit') {\n      return screenSize - Math.min(screenSize, frameSize)\n    }\n    if (point.endsWith('%')) {\n      const pct = Math.min(100, Math.max(0, Number(point.slice(0, -1)))) / 100\n      if (Number.isNaN(pct)) {\n        console.warn('Invalid snapPoint percentage string')\n        return 0\n      }\n      const next = Math.round(screenSize - pct * screenSize)\n      return next\n    }\n    console.warn('Invalid snapPoint unknown value')\n    return 0\n  }\n\n  if (mode === 'fit') {\n    if (point === 0) return screenSize\n    return screenSize - Math.min(screenSize, frameSize)\n  }\n\n  if (mode === 'constant' && typeof point === 'number') {\n    return screenSize - Math.min(screenSize, Math.max(0, point))\n  }\n\n  const pct = Math.min(100, Math.max(0, Number(point))) / 100\n  if (Number.isNaN(pct)) {\n    console.warn('Invalid snapPoint percentage')\n    return 0\n  }\n\n  return Math.round(screenSize - pct * screenSize)\n}\n", "import React from 'react'\n\nexport const ParentSheetContext = React.createContext({\n  zIndex: 100_000,\n})\n\nexport const SheetInsideSheetContext = React.createContext<\n  ((hasChild: boolean) => void) | null\n>(null)\n", "export function resisted(y: number, minY: number, maxOverflow = 25) {\n  if (y < minY) {\n    const past = minY - y\n    const pctPast = Math.min(maxOverflow, past) / maxOverflow\n    const diminishBy = 1.1 - 0.15 ** pctPast\n    const extra = -diminishBy * maxOverflow\n    return minY + extra\n  }\n  return y\n}\n\n// // set all the way off screen\n// // + 0.1 ensures this is unique - see hasntMeasured ref\n\n// let hiddenSize: number\n\n// export function getHiddenSize() {\n//   if (hiddenSize == undefined) {\n//     // this trigger reflow on web avoid doing on startup\n//     const screen = Dimensions.get('screen')\n//     hiddenSize = Math.max(screen.height, screen.width) + 0.1\n//   }\n//   return hiddenSize\n// }\n", "import React from 'react'\n\nexport const useSheetController = () => {\n  const controller = React.useContext(SheetControllerContext)\n  const isHidden = controller?.hidden\n  const isShowingNonSheet = isHidden && controller?.open\n  return {\n    controller,\n    isHidden,\n    isShowingNonSheet,\n    disableDrag: controller?.disableDrag,\n  }\n}\n\nexport const SheetControllerContext =\n  React.createContext<SheetControllerContextValue | null>(null)\n\nexport type SheetControllerContextValue = {\n  disableDrag?: boolean\n  open?: boolean\n  // hide without \"closing\" to prevent re-animation when shown again\n  hidden?: boolean\n  onOpenChange?: React.Dispatch<React.SetStateAction<boolean>> | ((val: boolean) => void)\n}\n", "import { useControllableState } from '@tamagui/use-controllable-state'\n\nimport type { SheetProps } from './types'\nimport { useSheetController } from './useSheetController'\n\nexport const useSheetOpenState = (props: SheetProps) => {\n  const { isHidden, controller } = useSheetController()\n\n  const onOpenChangeInternal = (val: boolean) => {\n    controller?.onOpenChange?.(val)\n    props.onOpenChange?.(val)\n  }\n\n  const [open, setOpen] = useControllableState({\n    prop: controller?.open ?? props.open,\n    defaultProp: props.defaultOpen ?? false,\n    onChange: onOpenChangeInternal,\n    strategy: 'most-recent-wins',\n    transition: true,\n  })\n\n  return {\n    open,\n    setOpen,\n    isHidden,\n    controller,\n  }\n}\n\nexport type SheetOpenState = ReturnType<typeof useSheetOpenState>\n", "import React from 'react'\nimport type { TamaguiElement } from '@tamagui/core'\nimport { useConfiguration } from '@tamagui/core'\nimport { useConstant } from '@tamagui/use-constant'\nimport { useControllableState } from '@tamagui/use-controllable-state'\n\nimport type { ScrollBridge, SheetProps } from './types'\nimport type { SheetOpenState } from './useSheetOpenState'\n\nexport type SheetContextValue = ReturnType<typeof useSheetProviderProps>\n\nexport function useSheetProviderProps(\n  props: SheetProps,\n  state: SheetOpenState,\n  options: {\n    onOverlayComponent?: (comp: any) => void\n  } = {}\n) {\n  const handleRef = React.useRef<TamaguiElement>(null)\n  const contentRef = React.useRef<TamaguiElement>(null)\n  const [frameSize, setFrameSize] = React.useState<number>(0)\n  const [maxContentSize, setMaxContentSize] = React.useState<number>(0)\n  const snapPointsMode = props.snapPointsMode ?? 'percent'\n  const snapPointsProp: (string | number)[] =\n    props.snapPoints ??\n    (snapPointsMode === 'percent'\n      ? [80]\n      : snapPointsMode === 'constant'\n        ? [256]\n        : ['fit'])\n  const hasFit = snapPointsProp[0] === 'fit'\n\n  const snapPoints = React.useMemo(\n    () => (props.dismissOnSnapToBottom ? [...snapPointsProp, 0] : snapPointsProp),\n\n    [JSON.stringify(snapPointsProp), props.dismissOnSnapToBottom]\n  )\n\n  // lets set -1 to be always the \"open = false\" position\n  const [position_, setPositionImmediate] = useControllableState({\n    prop: props.position,\n    defaultProp: props.defaultPosition || (state.open ? 0 : -1),\n    onChange: props.onPositionChange,\n    strategy: 'most-recent-wins',\n    transition: true,\n  })\n\n  const position = state.open === false ? -1 : position_\n\n  const { open } = state\n\n  const setPosition = React.useCallback(\n    (next: number) => {\n      // close on dismissOnSnapToBottom (and set position so it animates)\n      if (props.dismissOnSnapToBottom && next === snapPoints.length - 1) {\n        state.setOpen(false)\n      } else {\n        setPositionImmediate(next)\n      }\n    },\n    [props.dismissOnSnapToBottom, snapPoints.length, setPositionImmediate, state.setOpen]\n  )\n\n  if (process.env.NODE_ENV === 'development') {\n    if (\n      snapPointsMode === 'mixed' &&\n      snapPoints.some((p) => {\n        if (typeof p === 'string') {\n          if (p === 'fit') {\n            return false\n          }\n          if (p.endsWith('%')) {\n            const n = Number(p.slice(0, -1))\n            return n < 0 || n > 100\n          }\n          return true\n        }\n        return typeof p !== 'number' || p < 0\n      })\n    ) {\n      console.warn(\n        '⚠️ Invalid snapPoint given, snapPoints must be positive numeric values, string percentages between 0-100%, or \"fit\" when snapPointsMode is mixed'\n      )\n    }\n    if (snapPointsMode === 'mixed' && snapPoints.indexOf('fit') > 0) {\n      console.warn(\n        '⚠️ Invalid snapPoint given, \"fit\" must be the first/largest snap point when snapPointsMode is mixed'\n      )\n    }\n    if (\n      snapPointsMode === 'fit' &&\n      (snapPoints.length !== (props.dismissOnSnapToBottom ? 2 : 1) ||\n        snapPoints[0] !== 'fit')\n    ) {\n      console.warn(\n        '⚠️ Invalid snapPoint given, there are no snap points when snapPointsMode is fit'\n      )\n    }\n    if (\n      snapPointsMode === 'constant' &&\n      snapPoints.some((p) => typeof p !== 'number' || p < 0)\n    ) {\n      console.warn(\n        '⚠️ Invalid snapPoint given, snapPoints must be positive numeric values when snapPointsMode is constant'\n      )\n    }\n    if (\n      snapPointsMode === 'percent' &&\n      snapPoints.some((p) => typeof p !== 'number' || p < 0 || p > 100)\n    ) {\n      console.warn(\n        '⚠️ Invalid snapPoint given, snapPoints must be numeric values between 0 and 100 when snapPointsMode is percent'\n      )\n    }\n  }\n\n  // reset position to fully open on re-open after dismissOnSnapToBottom\n  if (open && props.dismissOnSnapToBottom && position === snapPoints.length - 1) {\n    setPositionImmediate(0)\n  }\n\n  // open must set position\n  const shouldSetPositionOpen = open && position < 0\n  React.useEffect(() => {\n    if (shouldSetPositionOpen) {\n      setPosition(0)\n    }\n  }, [setPosition, shouldSetPositionOpen])\n\n  const { animationDriver } = useConfiguration()\n  if (!animationDriver) {\n    throw new Error(\n      process.env.NODE_ENV === 'production'\n        ? `❌ 008`\n        : 'Must set animations in tamagui.config.ts'\n    )\n  }\n\n  const scrollBridge = useConstant<ScrollBridge>(() => ({\n    enabled: false,\n    y: 0,\n    paneY: 0,\n    paneMinY: 0,\n    scrollStartY: -1,\n    drag: () => {},\n    release: () => {},\n    scrollLock: false,\n  }))\n\n  const removeScrollEnabled = props.forceRemoveScrollEnabled ?? (open && props.modal)\n\n  const maxSnapPoint = snapPoints[0]\n  const screenSize =\n    snapPointsMode === 'percent'\n      ? frameSize / ((typeof maxSnapPoint === 'number' ? maxSnapPoint : 100) / 100)\n      : maxContentSize\n\n  const providerProps = {\n    screenSize,\n    maxSnapPoint,\n    removeScrollEnabled,\n    scrollBridge,\n    modal: !!props.modal,\n    open: state.open,\n    setOpen: state.setOpen,\n    hidden: !!state.isHidden,\n    contentRef,\n    handleRef,\n    frameSize,\n    setFrameSize,\n    dismissOnOverlayPress: props.dismissOnOverlayPress ?? true,\n    dismissOnSnapToBottom: props.dismissOnSnapToBottom ?? false,\n    onOverlayComponent: options.onOverlayComponent,\n    scope: props.__scopeSheet,\n    hasFit,\n    position,\n    snapPoints,\n    snapPointsMode,\n    setMaxContentSize,\n    setPosition,\n    setPositionImmediate,\n    onlyShowFrame: false,\n  }\n\n  return providerProps\n}\n", "import React from 'react'\nimport { composeRefs } from '@tamagui/compose-refs'\nimport type { GetRef } from '@tamagui/core'\nimport type { ScrollViewProps } from '@tamagui/scroll-view'\nimport { ScrollView } from '@tamagui/scroll-view'\n\nimport type { ScrollView as RNScrollView } from 'react-native'\n\nimport { useSheetContext } from './SheetContext'\nimport type { SheetScopedProps } from './types'\n\n// TODO ideally would replicate https://github.com/ammarahm-ed/react-native-actions-sheet/blob/master/src/index.tsx\n\n/* -------------------------------------------------------------------------------------------------\n * SheetScrollView\n * -----------------------------------------------------------------------------------------------*/\n\nconst SHEET_SCROLL_VIEW_NAME = 'SheetScrollView'\n\nexport const SheetScrollView = React.forwardRef<\n  GetRef<typeof ScrollView>,\n  ScrollViewProps\n>(\n  (\n    { __scopeSheet, children, onScroll, ...props }: SheetScopedProps<ScrollViewProps>,\n    ref\n  ) => {\n    const context = useSheetContext(SHEET_SCROLL_VIEW_NAME, __scopeSheet)\n    const { scrollBridge } = context\n    // const [scrollEnabled, setScrollEnabled_] = useState(true)\n    const scrollRef = React.useRef<RNScrollView | null>(null)\n\n    // could make it so it has negative bottom margin and then pads the bottom content\n    // to avoid clipping effect when resizing smaller\n    // or more ideally could use context to register if it has a scrollview and change behavior\n    // const offscreenSize = useSheetOffscreenSize(context)\n\n    // const setScrollEnabled = (next: boolean) => {\n    //   scrollRef.current?.setNativeProps?.({\n    //     scrollEnabled: next,\n    //   })\n    //   setScrollEnabled_(next)\n    // }\n\n    const state = React.useRef({\n      lastPageY: 0,\n      dragAt: 0,\n      dys: [] as number[], // store a few recent dys to get velocity on release\n      isScrolling: false,\n      isDragging: false,\n    })\n\n    const release = () => {\n      if (!state.current.isDragging) {\n        return\n      }\n      state.current.isDragging = false\n      scrollBridge.scrollStartY = -1\n      state.current.isScrolling = false\n      // setScrollEnabled(true)\n      let vy = 0\n      if (state.current.dys.length) {\n        const recentDys = state.current.dys.slice(-10)\n        const dist = recentDys.length ? recentDys.reduce((a, b) => a + b, 0) : 0\n        const avgDy = dist / recentDys.length\n        vy = avgDy * 0.04\n      }\n      state.current.dys = []\n      scrollBridge.release({\n        dragAt: state.current.dragAt,\n        vy,\n      })\n    }\n\n    return (\n      <ScrollView\n        ref={composeRefs(scrollRef as any, ref)}\n        flex={1}\n        scrollEventThrottle={8}\n        onResponderRelease={release}\n        className=\"_ovs-contain\"\n        // scrollEnabled={scrollEnabled}\n        onScroll={(e) => {\n          const { y } = e.nativeEvent.contentOffset\n          scrollBridge.y = y\n          if (y > 0) {\n            scrollBridge.scrollStartY = -1\n          }\n\n          // Process the \"onScroll\" prop here if any\n          onScroll?.(e)\n\n          // This assures that we do not skip the \"scrollBridge\" values processing\n          // when passing this prop into a <Sheet.ScrollView /> overriding it here\n\n          // Useful when using this ScrollView with lists such as \"FlashList\", i.e.\n          // ```\n          // renderScrollComponent={Sheet.ScrollView}\n          // ```\n        }}\n        onStartShouldSetResponder={() => {\n          scrollBridge.scrollStartY = -1\n          state.current.isDragging = true\n          return true\n        }}\n        // setting to false while onResponderMove is disabled\n        onMoveShouldSetResponder={() => false}\n        // somehow disabling works better, regression, no more nice drag continue scroll\n        // onResponderMove={(e) => {\n        //   const { pageY } = e.nativeEvent\n\n        //   if (state.current.isScrolling) {\n        //     return\n        //   }\n\n        //   if (scrollBridge.scrollStartY === -1) {\n        //     scrollBridge.scrollStartY = pageY\n        //     state.current.lastPageY = pageY\n        //   }\n\n        //   const dragAt = pageY - scrollBridge.scrollStartY\n        //   const dy = pageY - state.current.lastPageY\n        //   state.current.lastPageY = pageY // after dy\n        //   const isDraggingUp = dy < 0\n        //   const isPaneAtTop = scrollBridge.paneY <= scrollBridge.paneMinY\n\n        //   if ((dy === 0 || isDraggingUp) && isPaneAtTop) {\n        //     state.current.isScrolling = true\n        //     setScrollEnabled(true)\n        //     return\n        //   }\n\n        //   setScrollEnabled(false)\n        //   scrollBridge.drag(dragAt)\n        //   state.current.dragAt = dragAt\n        //   state.current.dys.push(dy)\n        //   // only do every so often, cut down to 10 again\n        //   if (state.current.dys.length > 100) {\n        //     state.current.dys = state.current.dys.slice(-10)\n        //   }\n        // }}\n        {...props}\n      >\n        {children}\n      </ScrollView>\n    )\n  }\n)\n", "import { fullscreenStyle } from '@tamagui/stacks'\nimport type { GetProps } from '@tamagui/web'\nimport { styled } from '@tamagui/web'\nimport { ScrollView as ScrollViewNative } from 'react-native'\n\nexport const ScrollView = styled(\n  ScrollViewNative,\n  {\n    name: 'ScrollView',\n    scrollEnabled: true,\n\n    variants: {\n      fullscreen: {\n        true: fullscreenStyle,\n      },\n    } as const,\n  },\n  {\n    accept: {\n      contentContainerStyle: 'style',\n    } as const,\n  }\n)\n\nexport type ScrollView = ScrollViewNative\n\nexport type ScrollViewProps = GetProps<typeof ScrollView>\n", "import type { SheetContextValue } from './useSheetProviderProps'\n\nexport const useSheetOffscreenSize = ({\n  snapPoints,\n  position,\n  screenSize,\n  frameSize,\n  snapPointsMode,\n}: SheetContextValue) => {\n  if (snapPointsMode === 'fit') {\n    return 0\n  }\n\n  if (snapPointsMode === 'constant') {\n    const maxSize = Number(snapPoints[0])\n    const currentSize = Number(snapPoints[position] ?? 0)\n    const offscreenSize = maxSize - currentSize\n    return offscreenSize\n  }\n\n  if (snapPointsMode === 'percent') {\n    const maxPercentOpened = Number(snapPoints[0]) / 100\n    const percentOpened = Number(snapPoints[position] ?? 0) / 100\n    const percentHidden = maxPercentOpened - percentOpened\n    const offscreenSize = percentHidden * screenSize\n    return offscreenSize\n  }\n\n  // mixed:\n  const maxSnapPoint = snapPoints[0]\n  if (maxSnapPoint === 'fit') {\n    return 0\n  }\n\n  const maxSize =\n    typeof maxSnapPoint === 'string'\n      ? (Number(maxSnapPoint.slice(0, -1)) / 100) * screenSize\n      : maxSnapPoint\n  const currentSnapPoint = snapPoints[position] ?? 0\n  const currentSize =\n    typeof currentSnapPoint === 'string'\n      ? (Number(currentSnapPoint.slice(0, -1)) / 100) * screenSize\n      : currentSnapPoint\n  const offscreenSize = maxSize - currentSize\n  if (Number.isNaN(offscreenSize)) {\n    return 0\n  }\n  return offscreenSize\n}\n", "import { styled } from '@tamagui/core'\nimport { ThemeableStack, XStack, YStack } from '@tamagui/stacks'\n\nimport { SHEET_HANDLE_NAME, SHEET_NAME, SHEET_OVERLAY_NAME } from './constants'\nimport { createSheet } from './createSheet'\n\nexport { createSheetScope } from './SheetContext'\nexport * from './types'\n\n/* -------------------------------------------------------------------------------------------------\n * SheetHandle\n * -----------------------------------------------------------------------------------------------*/\n\nexport const Handle = styled(XStack, {\n  name: SHEET_HANDLE_NAME,\n\n  variants: {\n    open: {\n      true: {\n        opacity: 1,\n        pointerEvents: 'auto',\n      },\n      false: {\n        opacity: 0,\n        pointerEvents: 'none',\n      },\n    },\n\n    unstyled: {\n      false: {\n        height: 10,\n        borderRadius: 100,\n        backgroundColor: '$background',\n        zIndex: 10,\n        marginHorizontal: '35%',\n        marginBottom: '$2',\n        opacity: 0.5,\n\n        hoverStyle: {\n          opacity: 0.7,\n        },\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\n/* -------------------------------------------------------------------------------------------------\n * SheetOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nexport const Overlay = styled(ThemeableStack, {\n  name: SHEET_OVERLAY_NAME,\n\n  variants: {\n    open: {\n      true: {\n        pointerEvents: 'auto',\n      },\n      false: {\n        pointerEvents: 'none',\n      },\n    },\n\n    unstyled: {\n      false: {\n        fullscreen: true,\n        position: 'absolute',\n        backgrounded: true,\n        zIndex: 100_000 - 1,\n        pointerEvents: 'auto',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\n/* -------------------------------------------------------------------------------------------------\n * Sheet\n * -----------------------------------------------------------------------------------------------*/\n\nexport const Frame = styled(YStack, {\n  name: SHEET_NAME,\n\n  variants: {\n    unstyled: {\n      false: {\n        flex: 1,\n        backgroundColor: '$background',\n        borderTopLeftRadius: '$true',\n        borderTopRightRadius: '$true',\n        width: '100%',\n        maxHeight: '100%',\n        overflow: 'hidden',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport const Sheet = createSheet({\n  Frame,\n  Handle,\n  Overlay,\n})\n\n/** @deprecated use Overlay instead  */\nexport const SheetOverlayFrame = Overlay\n\n/** @deprecated use Overlay instead  */\nexport const SheetHandleFrame = Handle\n", "import { useSheetContext } from './SheetContext'\n\nexport const useSheet = () => useSheetContext('', undefined)\n", "import React from 'react'\nimport { useEvent } from '@tamagui/core'\nimport type { ReactNode } from 'react'\n\nimport type { SheetControllerContextValue } from './useSheetController'\nimport { SheetControllerContext } from './useSheetController'\n\nexport const SheetController = ({\n  children,\n  onOpenChange: onOpenChangeProp,\n  ...value\n}: Partial<SheetControllerContextValue> & { children?: ReactNode }) => {\n  const onOpenChange = useEvent(onOpenChangeProp)\n\n  const memoValue = React.useMemo(\n    () => ({\n      open: value.open,\n      hidden: value.hidden,\n      disableDrag: value.disableDrag,\n      onOpenChange,\n    }),\n    [onOpenChange, value.open, value.hidden, value.disableDrag]\n  )\n\n  return (\n    <SheetControllerContext.Provider value={memoValue}>\n      {children}\n    </SheetControllerContext.Provider>\n  )\n}\n", "import { YStack } from '@tamagui/stacks'\nimport type { FunctionComponent } from 'react'\nimport { useEffect, useRef } from 'react'\nimport { View } from 'react-native'\nimport { SheetProvider } from './SheetContext'\nimport type { SheetProps } from './types'\nimport { useSheetOpenState } from './useSheetOpenState'\nimport { useSheetProviderProps } from './useSheetProviderProps'\n\n// import { useSheetSnapPoints } from './useSheetSnapPoints'\n\ntype SheetNativePlatforms = 'ios'\n\nconst nativeSheets: Record<SheetNativePlatforms, FunctionComponent<SheetProps> | null> = {\n  ios: null,\n}\n\nexport function getNativeSheet(platform: SheetNativePlatforms) {\n  return nativeSheets[platform]\n}\n\nexport function setupNativeSheet(\n  platform: SheetNativePlatforms,\n  RNIOSModal: { ModalSheetView: any; ModalSheetViewMainContent: any }\n) {\n  const { ModalSheetView, ModalSheetViewMainContent } = RNIOSModal\n\n  if (platform === 'ios') {\n    nativeSheets[platform] = (props: SheetProps) => {\n      const state = useSheetOpenState(props)\n      const providerProps = useSheetProviderProps(props, state)\n      // const { position } = providerProps\n      // const { positions } = useSheetSnapPoints(providerProps)\n\n      const { open, setOpen } = state\n      const ref = useRef<{\n        presentModal: Function\n        dismissModal: Function\n      }>()\n\n      useEffect(() => {\n        if (open) {\n          ref.current?.presentModal()\n        } else {\n          ref.current?.dismissModal()\n        }\n      }, [open])\n\n      function setOpenInternal(next: boolean) {\n        props.onOpenChange?.(open)\n        setOpen(next)\n      }\n\n      // modalContentPreferredContentSize={{\n      //   mode: 'percent',\n      //   percentWidth: '100%',\n      //   percentHeight:\n      // }}\n\n      return (\n        <>\n          <SheetProvider {...providerProps} onlyShowFrame>\n            <ModalSheetView ref={ref} onModalDidDismiss={() => setOpenInternal(false)}>\n              <ModalSheetViewMainContent>\n                <View style={{ flex: 1 }}>{props.children}</View>\n              </ModalSheetViewMainContent>\n            </ModalSheetView>\n\n            {/* for some reason select triggers wont show on native if this isn't inside the actual tree not inside implementation... */}\n            {/* so just hiding it here for now... not great... */}\n            <YStack\n              position=\"absolute\"\n              opacity={0}\n              pointerEvents=\"none\"\n              width={0}\n              height={0}\n            >\n              {props.children}\n            </YStack>\n          </SheetProvider>\n        </>\n      )\n    }\n  }\n}\n", "import { Adapt, AdaptParent, AdaptPortalContents, useAdaptIsActive } from '@tamagui/adapt'\nimport { AnimatePresence } from '@tamagui/animate-presence'\nimport { hideOthers } from '@tamagui/aria-hidden'\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport type { GetProps, StackProps, TamaguiElement } from '@tamagui/core'\nimport { Theme, View, spacedChildren, styled, useThemeName } from '@tamagui/core'\nimport type { Scope } from '@tamagui/create-context'\nimport { createContext, createContextScope } from '@tamagui/create-context'\nimport type { DismissableProps } from '@tamagui/dismissable'\nimport { Dismissable } from '@tamagui/dismissable'\nimport type { FocusScopeProps } from '@tamagui/focus-scope'\nimport { FocusScope } from '@tamagui/focus-scope'\nimport { composeEventHandlers, withStaticProperties } from '@tamagui/helpers'\nimport { Portal, PortalItem, resolveViewZIndex } from '@tamagui/portal'\nimport { RemoveScroll } from '@tamagui/remove-scroll'\nimport { Overlay, Sheet, SheetController } from '@tamagui/sheet'\nimport type { YStackProps } from '@tamagui/stacks'\nimport { ButtonNestingContext, ThemeableStack, YStack } from '@tamagui/stacks'\nimport { H2, Paragraph } from '@tamagui/text'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport { StackZIndexContext } from '@tamagui/z-index-stack'\nimport * as React from 'react'\n\nconst DIALOG_NAME = 'Dialog'\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope }\n\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME)\n\ntype RemoveScrollProps = React.ComponentProps<typeof RemoveScroll>\n\ninterface DialogProps {\n  children?: React.ReactNode\n  open?: boolean\n  defaultOpen?: boolean\n  onOpenChange?(open: boolean): void\n  modal?: boolean\n\n  /**\n   * Used to disable the remove scroll functionality when open\n   */\n  disableRemoveScroll?: boolean\n\n  /**\n   * @see https://github.com/theKashey/react-remove-scroll#usage\n   */\n  allowPinchZoom?: RemoveScrollProps['allowPinchZoom']\n}\n\ntype NonNull<A> = Exclude<A, void | null>\n\ntype DialogContextValue = {\n  disableRemoveScroll?: boolean\n  triggerRef: React.RefObject<TamaguiElement>\n  contentRef: React.RefObject<TamaguiElement>\n  contentId: string\n  titleId: string\n  descriptionId: string\n  onOpenToggle(): void\n  open: NonNull<DialogProps['open']>\n  onOpenChange: NonNull<DialogProps['onOpenChange']>\n  modal: NonNull<DialogProps['modal']>\n  allowPinchZoom: NonNull<DialogProps['allowPinchZoom']>\n  scopeKey: string\n}\n\nconst [DialogProvider, useDialogContext] =\n  createDialogContext<DialogContextValue>(DIALOG_NAME)\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger'\n\nconst DialogTriggerFrame = styled(View, {\n  name: TRIGGER_NAME,\n})\n\ninterface DialogTriggerProps extends StackProps {}\n\nconst DialogTrigger = DialogTriggerFrame.styleable(function DialogTrigger(\n  props: ScopedProps<DialogTriggerProps>,\n  forwardedRef\n) {\n  const { __scopeDialog, ...triggerProps } = props\n  const isInsideButton = React.useContext(ButtonNestingContext)\n  const context = useDialogContext(TRIGGER_NAME, __scopeDialog)\n  const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef)\n  return (\n    <ButtonNestingContext.Provider value={true}>\n      <DialogTriggerFrame\n        tag={isInsideButton ? 'span' : 'button'}\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onPress={composeEventHandlers(props.onPress as any, context.onOpenToggle)}\n      />\n    </ButtonNestingContext.Provider>\n  )\n})\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal'\n\ntype PortalContextValue = { forceMount?: true }\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(\n  PORTAL_NAME,\n  {\n    forceMount: undefined,\n  }\n)\n\ntype DialogPortalProps = YStackProps & {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true\n}\n\nexport const DialogPortalFrame = styled(YStack, {\n  pointerEvents: 'none',\n\n  variants: {\n    unstyled: {\n      false: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        fullscreen: true,\n        ...(isWeb && {\n          maxHeight: '100vh',\n          position: 'fixed' as any,\n        }),\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nconst DialogPortalItem = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, children, space, spaceDirection, separator } = props\n\n  const themeName = useThemeName()\n  const context = useDialogContext(PORTAL_NAME, props.__scopeDialog)\n  const isAdapted = useAdaptIsActive()\n\n  let childrenSpaced = children\n\n  if (space || separator) {\n    childrenSpaced = spacedChildren({\n      children,\n      separator,\n      space,\n      direction: spaceDirection,\n    })\n  }\n\n  const content = (\n    <DialogProvider scope={__scopeDialog} {...context}>\n      <Theme name={themeName}>{childrenSpaced}</Theme>\n    </DialogProvider>\n  )\n\n  // until we can use react-native portals natively\n  // have to re-propogate context, sketch\n\n  // when adapted we portal to the adapt, when not we portal to root modal if needed\n  return isAdapted ? (\n    <AdaptPortalContents>{content}</AdaptPortalContents>\n  ) : (\n    <PortalItem>{content}</PortalItem>\n  )\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (\n  props: ScopedProps<DialogPortalProps>\n) => {\n  const { __scopeDialog, forceMount, children, ...frameProps } = props\n\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog)\n  const isShowing = forceMount || context.open\n  const [isFullyHidden, setIsFullyHidden] = React.useState(!isShowing)\n  const isAdapted = useAdaptIsActive()\n\n  if (isShowing && isFullyHidden) {\n    setIsFullyHidden(false)\n  }\n\n  const handleExitComplete = React.useCallback(() => {\n    setIsFullyHidden(true)\n  }, [])\n\n  if (context.modal) {\n    const contents = (\n      <StackZIndexContext zIndex={resolveViewZIndex(props.zIndex)}>\n        <AnimatePresence onExitComplete={handleExitComplete}>\n          {isShowing || isAdapted ? children : null}\n        </AnimatePresence>\n      </StackZIndexContext>\n    )\n\n    if (isFullyHidden && !isAdapted) {\n      return null\n    }\n\n    const framedContents = (\n      <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n        <DialogPortalFrame pointerEvents={isShowing ? 'auto' : 'none'} {...frameProps}>\n          {contents}\n        </DialogPortalFrame>\n      </PortalProvider>\n    )\n\n    if (isWeb) {\n      return (\n        <Portal\n          zIndex={props.zIndex}\n          // set to 1000 which \"boosts\" it 1000 above baseline for current context\n          // this makes sure its above (this first 1k) popovers on the same layer\n          stackZIndex={1000}\n        >\n          <PassthroughTheme>{framedContents}</PassthroughTheme>\n        </Portal>\n      )\n    }\n\n    return isAdapted ? (\n      framedContents\n    ) : (\n      <DialogPortalItem __scopeDialog={__scopeDialog}>{framedContents}</DialogPortalItem>\n    )\n  }\n\n  return children\n}\n\nconst PassthroughTheme = ({ children }) => {\n  const themeName = useThemeName()\n\n  return (\n    <Theme name={themeName} forceClassName>\n      {children}\n    </Theme>\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay'\n\n/**\n * exported for internal use with extractable()\n */\nexport const DialogOverlayFrame = styled(Overlay, {\n  name: OVERLAY_NAME,\n})\n\ninterface DialogOverlayProps extends YStackProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true\n}\n\nconst DialogOverlay = DialogOverlayFrame.extractable(\n  React.forwardRef<TamaguiElement, DialogOverlayProps>(function DialogOverlay(\n    { __scopeDialog, ...props }: ScopedProps<DialogOverlayProps>,\n    forwardedRef\n  ) {\n    const portalContext = usePortalContext(OVERLAY_NAME, __scopeDialog)\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog)\n    const isAdapted = useAdaptIsActive()\n\n    if (!forceMount) {\n      if (!context.modal || isAdapted) {\n        return null\n      }\n    }\n\n    // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n    // ie. when `Overlay` and `Content` are siblings\n    return (\n      <DialogOverlayFrame\n        data-state={getState(context.open)}\n        // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n        pointerEvents={context.open ? 'auto' : 'none'}\n        {...overlayProps}\n        ref={forwardedRef}\n      />\n    )\n  })\n)\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent'\n\nconst DialogContentFrame = styled(ThemeableStack, {\n  name: CONTENT_NAME,\n  tag: 'dialog',\n\n  variants: {\n    size: {\n      '...size': (val, extras) => {\n        return {}\n      },\n    },\n\n    unstyled: {\n      false: {\n        position: 'relative',\n        backgrounded: true,\n        padded: true,\n        radiused: true,\n        elevate: true,\n        zIndex: 100_000,\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    size: '$true',\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\ntype DialogContentFrameProps = GetProps<typeof DialogContentFrame>\n\ninterface DialogContentProps\n  extends DialogContentFrameProps,\n    Omit<DialogContentTypeProps, 'context' | 'onPointerDownCapture'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true\n}\n\nconst DialogContent = DialogContentFrame.extractable(\n  React.forwardRef<TamaguiElement, DialogContentProps>(function DialogContent(\n    { __scopeDialog, ...props }: ScopedProps<DialogContentProps>,\n    forwardedRef\n  ) {\n    const portalContext = usePortalContext(CONTENT_NAME, __scopeDialog)\n    const { forceMount = portalContext.forceMount, ...contentProps } = props\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog)\n\n    const contents = (\n      <>\n        {context.modal ? (\n          <DialogContentModal context={context} {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal context={context} {...contentProps} ref={forwardedRef} />\n        )}\n      </>\n    )\n\n    if (!isWeb || context.disableRemoveScroll) {\n      return contents\n    }\n\n    return (\n      <RemoveScroll\n        forwardProps\n        enabled={context.open}\n        allowPinchZoom={context.allowPinchZoom}\n        shards={[context.contentRef]}\n        // causes lots of bugs on touch web on site\n        removeScrollBar={false}\n      >\n        <div data-remove-scroll-container className=\"_dsp_contents\">\n          {contents}\n        </div>\n      </RemoveScroll>\n    )\n  })\n)\n\n/* -----------------------------------------------------------------------------------------------*/\n\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {\n  context: DialogContextValue\n}\n\nconst DialogContentModal = React.forwardRef<TamaguiElement, DialogContentTypeProps>(\n  (\n    { children, context, ...props }: ScopedProps<DialogContentTypeProps>,\n    forwardedRef\n  ) => {\n    const contentRef = React.useRef<HTMLDivElement>(null)\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef)\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    if (isWeb) {\n      React.useEffect(() => {\n        if (!context.open) return\n        const content = contentRef.current\n        if (content) return hideOthers(content)\n      }, [context.open])\n    }\n\n    return (\n      <DialogContentImpl\n        {...props}\n        context={context}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault()\n          context.triggerRef.current?.focus()\n        })}\n        onPointerDownOutside={composeEventHandlers(\n          props.onPointerDownOutside,\n          (event) => {\n            const originalEvent = event['detail'].originalEvent\n            const ctrlLeftClick =\n              originalEvent.button === 0 && originalEvent.ctrlKey === true\n            const isRightClick = originalEvent.button === 2 || ctrlLeftClick\n            // If the event is a right-click, we shouldn't close because\n            // it is effectively as if we right-clicked the `Overlay`.\n            if (isRightClick) event.preventDefault()\n          }\n        )}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n        {...(!props.unstyled && {\n          outlineStyle: 'none',\n        })}\n      >\n        {children}\n      </DialogContentImpl>\n    )\n  }\n)\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<TamaguiElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const hasInteractedOutsideRef = React.useRef(false)\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event)\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) {\n              props.context.triggerRef.current?.focus()\n            }\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault()\n          }\n\n          hasInteractedOutsideRef.current = false\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event)\n\n          if (!event.defaultPrevented) hasInteractedOutsideRef.current = true\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          //\n          // We use `onInteractOutside` as some browsers also\n          // focus on pointer down, creating the same issue.\n          const target = event.target as HTMLElement\n          const trigger = props.context.triggerRef.current\n          if (!(trigger instanceof HTMLElement)) return\n          const targetIsTrigger = trigger.contains(target)\n          if (targetIsTrigger) event.preventDefault()\n        }}\n      />\n    )\n  }\n)\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplProps = DialogContentFrameProps &\n  Omit<DismissableProps, 'onDismiss'> & {\n    /**\n     * When `true`, focus cannot escape the `Content` via keyboard,\n     * pointer, or a programmatic focus.\n     * @defaultValue false\n     */\n    trapFocus?: FocusScopeProps['trapped']\n\n    /**\n     * Event handler called when auto-focusing on open.\n     * Can be prevented.\n     */\n    onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus']\n\n    /**\n     * Event handler called when auto-focusing on close.\n     * Can be prevented.\n     */\n    onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus']\n\n    context: DialogContextValue\n  }\n\nconst DialogContentImpl = React.forwardRef<TamaguiElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const {\n      __scopeDialog,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      context,\n      ...contentProps\n    } = props\n\n    const contentRef = React.useRef<HTMLDivElement>(null)\n    const composedRefs = useComposedRefs(forwardedRef, contentRef)\n    const isAdapted = useAdaptIsActive()\n\n    // TODO this will re-parent, ideally we would not change tree structure\n\n    if (isAdapted) {\n      if (!isWeb && !context.open) {\n        return null\n      }\n\n      return <DialogPortalItem>{contentProps.children}</DialogPortalItem>\n    }\n\n    const contents = (\n      <DialogContentFrame\n        id={context.contentId}\n        aria-describedby={context.descriptionId}\n        aria-labelledby={context.titleId}\n        data-state={getState(context.open)}\n        {...contentProps}\n      />\n    )\n\n    if (!isWeb) {\n      return contents\n    }\n\n    return (\n      <>\n        <Dismissable\n          disableOutsidePointerEvents={context.open && disableOutsidePointerEvents}\n          forceUnmount={!context.open}\n          onEscapeKeyDown={onEscapeKeyDown}\n          onPointerDownOutside={onPointerDownOutside}\n          onFocusOutside={onFocusOutside}\n          onInteractOutside={onInteractOutside}\n          // @ts-ignore\n          ref={composedRefs}\n          onDismiss={() => context.onOpenChange(false)}\n        >\n          <FocusScope\n            loop\n            enabled={context.open}\n            trapped={trapFocus}\n            onMountAutoFocus={onOpenAutoFocus}\n            forceUnmount={!context.open}\n            onUnmountAutoFocus={onCloseAutoFocus}\n          >\n            {contents}\n          </FocusScope>\n        </Dismissable>\n        {process.env.NODE_ENV === 'development' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning\n              contentRef={contentRef}\n              descriptionId={context.descriptionId}\n            />\n          </>\n        )}\n      </>\n    )\n  }\n)\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst DialogTitleFrame = styled(H2, {\n  name: 'DialogTitle',\n})\n\ntype DialogTitleProps = GetProps<typeof DialogTitleFrame>\n\nconst DialogTitle = DialogTitleFrame.styleable(function DialogTitle(\n  props: ScopedProps<DialogTitleProps>,\n  forwardedRef\n) {\n  const { __scopeDialog, ...titleProps } = props\n  const context = useDialogContext('DialogTitle', __scopeDialog)\n  return <DialogTitleFrame id={context.titleId} {...titleProps} ref={forwardedRef} />\n})\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DialogDescriptionFrame = styled(Paragraph, {\n  name: 'DialogDescription',\n})\n\ntype DialogDescriptionProps = GetProps<typeof DialogDescriptionFrame>\n\nconst DESCRIPTION_NAME = 'DialogDescription'\n\nconst DialogDescription = DialogDescriptionFrame.styleable(function DialogDescription(\n  props: ScopedProps<DialogDescriptionProps>,\n  forwardedRef\n) {\n  const { __scopeDialog, ...descriptionProps } = props\n  const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog)\n  return (\n    <DialogDescriptionFrame\n      id={context.descriptionId}\n      {...descriptionProps}\n      ref={forwardedRef}\n    />\n  )\n})\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose'\n\nconst DialogCloseFrame = styled(View, {\n  name: CLOSE_NAME,\n  tag: 'button',\n})\n\nexport interface DialogCloseExtraProps {\n  displayWhenAdapted?: boolean\n}\n\ntype DialogCloseProps = GetProps<typeof DialogCloseFrame> & DialogCloseExtraProps\n\nconst DialogClose = DialogCloseFrame.styleable<DialogCloseExtraProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, displayWhenAdapted, ...closeProps } = props\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog, {\n      warn: false,\n      fallback: {},\n    })\n    const isAdapted = useAdaptIsActive()\n    const isInsideButton = React.useContext(ButtonNestingContext)\n\n    if (isAdapted && !displayWhenAdapted) {\n      return null\n    }\n\n    return (\n      <DialogCloseFrame\n        accessibilityLabel=\"Dialog Close\"\n        tag={isInsideButton ? 'span' : 'button'}\n        {...closeProps}\n        ref={forwardedRef}\n        onPress={composeEventHandlers(props.onPress as any, () => {\n          context.onOpenChange(false)\n        })}\n      />\n    )\n  }\n)\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed'\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning'\n\nconst [DialogWarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: 'DialogTitle',\n  docsSlug: 'dialog',\n})\n\ntype TitleWarningProps = { titleId?: string }\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  if (process.env.NODE_ENV === 'development') {\n    const titleWarningContext = useWarningContext(TITLE_WARNING_NAME)\n\n    const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.`\n\n    React.useEffect(() => {\n      if (!isWeb) return\n      if (titleId) {\n        const hasTitle = document.getElementById(titleId)\n        if (!hasTitle) {\n          console.warn(MESSAGE)\n        }\n      }\n    }, [MESSAGE, titleId])\n  }\n\n  return null\n}\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning'\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<TamaguiElement>\n  descriptionId?: string\n}\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({\n  contentRef,\n  descriptionId,\n}) => {\n  if (process.env.NODE_ENV === 'development') {\n    const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME)\n    const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`\n\n    React.useEffect(() => {\n      if (!isWeb) return\n      const contentNode = contentRef.current\n      if (!(contentNode instanceof HTMLElement)) {\n        return\n      }\n      const describedById = contentNode.getAttribute('aria-describedby')\n      // if we have an id and the user hasn't set aria-describedby={undefined}\n      if (descriptionId && describedById) {\n        const hasDescription = document.getElementById(descriptionId)\n        if (!hasDescription) {\n          console.warn(MESSAGE)\n        }\n      }\n    }, [MESSAGE, contentRef, descriptionId])\n  }\n\n  return null\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nexport type DialogHandle = {\n  open: (val: boolean) => void\n}\n\nconst Dialog = withStaticProperties(\n  React.forwardRef<{ open: (val: boolean) => void }, DialogProps>(function Dialog(\n    props: ScopedProps<DialogProps>,\n    ref\n  ) {\n    const {\n      __scopeDialog,\n      children,\n      open: openProp,\n      defaultOpen = false,\n      onOpenChange,\n      modal = true,\n      allowPinchZoom = false,\n      disableRemoveScroll = false,\n    } = props\n\n    const baseId = React.useId()\n    const scopeId = `scope-${baseId}`\n    const contentId = `content-${baseId}`\n    const titleId = `title-${baseId}`\n    const descriptionId = `description-${baseId}`\n    const scopeKey = __scopeDialog ? Object.keys(__scopeDialog)[0] : scopeId\n    const adaptName = getAdaptName({ scopeKey, contentId })\n    const triggerRef = React.useRef<HTMLButtonElement>(null)\n    const contentRef = React.useRef<TamaguiElement>(null)\n\n    const [open, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange,\n    })\n\n    const onOpenToggle = React.useCallback(() => {\n      setOpen((prevOpen) => !prevOpen)\n    }, [setOpen])\n\n    const context = {\n      scope: __scopeDialog,\n      scopeKey,\n      triggerRef,\n      contentRef,\n      contentId,\n      titleId,\n      descriptionId,\n      open,\n      onOpenChange: setOpen,\n      onOpenToggle,\n      modal,\n      allowPinchZoom,\n      disableRemoveScroll,\n    }\n\n    React.useImperativeHandle(\n      ref,\n      () => ({\n        open: setOpen,\n      }),\n      [setOpen]\n    )\n\n    return (\n      <AdaptParent\n        scope={adaptName}\n        portal={{\n          forwardProps: props,\n        }}\n      >\n        <DialogProvider {...context}>\n          <DialogSheetController onOpenChange={setOpen} __scopeDialog={__scopeDialog}>\n            {children}\n          </DialogSheetController>\n        </DialogProvider>\n      </AdaptParent>\n    )\n  }),\n  {\n    Trigger: DialogTrigger,\n    Portal: DialogPortal,\n    Overlay: DialogOverlay,\n    Content: DialogContent,\n    Title: DialogTitle,\n    Description: DialogDescription,\n    Close: DialogClose,\n    Sheet: Sheet.Controlled,\n    Adapt,\n  }\n)\n\nconst getAdaptName = ({\n  scopeKey,\n  contentId,\n}: Pick<DialogContextValue, 'scopeKey' | 'contentId'>) =>\n  `${scopeKey || contentId}DialogAdapt`\n\nconst DialogSheetController = (\n  props: ScopedProps<{\n    children: React.ReactNode\n    onOpenChange: React.Dispatch<React.SetStateAction<boolean>>\n  }>\n) => {\n  const context = useDialogContext('DialogSheetController', props.__scopeDialog)\n  const isAdapted = useAdaptIsActive()\n\n  return (\n    <SheetController\n      onOpenChange={(val) => {\n        if (isAdapted) {\n          props.onOpenChange?.(val)\n        }\n      }}\n      open={context.open}\n      hidden={!isAdapted}\n    >\n      {props.children}\n    </SheetController>\n  )\n}\n\nexport {\n  //\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n  //\n  DialogWarningProvider,\n  createDialogScope,\n}\nexport type {\n  DialogCloseProps,\n  DialogContentProps,\n  DialogDescriptionProps,\n  DialogOverlayProps,\n  DialogPortalProps,\n  DialogProps,\n  DialogTitleProps,\n  DialogTriggerProps,\n}\n", "// forked from radix-ui\n// https://github.com/radix-ui/primitives/blob/main/packages/react/alert-dialog/src/AlertDialog.tsx\n\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb, useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport type { TamaguiElement } from '@tamagui/core'\nimport { Slottable, View, isTamaguiElement, styled } from '@tamagui/core'\nimport type { Scope } from '@tamagui/create-context'\nimport { createContextScope } from '@tamagui/create-context'\nimport type {\n  DialogCloseProps,\n  DialogContentProps,\n  DialogDescriptionProps,\n  DialogOverlayProps,\n  DialogPortalProps,\n  DialogProps,\n  DialogTitleProps,\n  DialogTriggerProps,\n} from '@tamagui/dialog'\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogOverlay,\n  DialogOverlayFrame,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n  DialogWarningProvider,\n  createDialogScope,\n} from '@tamagui/dialog'\nimport { composeEventHandlers, withStaticProperties } from '@tamagui/helpers'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport * as React from 'react'\nimport { Alert } from 'react-native'\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst ROOT_NAME = 'AlertDialog'\n\ntype ScopedProps<P> = P & { __scopeAlertDialog?: Scope }\nconst [createAlertDialogContext, createAlertDialogScope] = createContextScope(ROOT_NAME, [\n  createDialogScope,\n])\n\nconst useDialogScope = createDialogScope()\n\ntype AlertDialogProps = DialogProps & {\n  native?: boolean\n}\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'AlertDialogTrigger'\n\ninterface AlertDialogTriggerProps extends DialogTriggerProps {}\n\nconst NativeAlertDialogTriggerFrame = styled(View, {\n  name: TRIGGER_NAME,\n})\n\nconst AlertDialogTrigger = React.forwardRef<TamaguiElement, AlertDialogTriggerProps>(\n  (props: ScopedProps<AlertDialogTriggerProps>, forwardedRef) => {\n    if (props['__native']) {\n      const { __native, onPress, __onPress, ...rest } = props as any\n      return (\n        <NativeAlertDialogTriggerFrame\n          {...rest}\n          onPress={composeEventHandlers(onPress, __onPress)}\n        />\n      )\n    }\n\n    const { __scopeAlertDialog, ...triggerProps } = props\n    const dialogScope = useDialogScope(__scopeAlertDialog)\n    return <DialogTrigger {...dialogScope} {...triggerProps} ref={forwardedRef} />\n  }\n)\n\nAlertDialogTrigger.displayName = TRIGGER_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'AlertDialogPortal'\n\ninterface AlertDialogPortalProps extends DialogPortalProps {}\n\nconst AlertDialogPortal: React.FC<AlertDialogPortalProps> = (\n  props: ScopedProps<AlertDialogPortalProps>\n) => {\n  const { __scopeAlertDialog, ...portalProps } = props\n  const dialogScope = useDialogScope(__scopeAlertDialog)\n  return <DialogPortal {...dialogScope} {...portalProps} />\n}\n\nAlertDialogPortal.displayName = PORTAL_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'AlertDialogOverlay'\n\nconst AlertDialogOverlayFrame = styled(DialogOverlayFrame, {\n  name: OVERLAY_NAME,\n})\n\ninterface AlertDialogOverlayProps extends DialogOverlayProps {}\n\nconst AlertDialogOverlay = AlertDialogOverlayFrame.extractable(\n  React.forwardRef<TamaguiElement, AlertDialogOverlayProps>(\n    (props: ScopedProps<AlertDialogOverlayProps>, forwardedRef) => {\n      const { __scopeAlertDialog, ...overlayProps } = props\n      const dialogScope = useDialogScope(__scopeAlertDialog)\n      return <DialogOverlay {...dialogScope} {...overlayProps} ref={forwardedRef} />\n    }\n  )\n)\n\nAlertDialogOverlay.displayName = OVERLAY_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'AlertDialogContent'\n\ntype AlertDialogContentContextValue = {\n  cancelRef: React.MutableRefObject<TamaguiElement | null>\n}\n\nconst [AlertDialogContentProvider, useAlertDialogContentContext] =\n  createAlertDialogContext<AlertDialogContentContextValue>(CONTENT_NAME)\n\ninterface AlertDialogContentProps\n  extends Omit<DialogContentProps, 'onPointerDownOutside' | 'onInteractOutside'> {}\n\nconst AlertDialogContent = React.forwardRef<TamaguiElement, AlertDialogContentProps>(\n  (props: ScopedProps<AlertDialogContentProps>, forwardedRef) => {\n    const { __scopeAlertDialog, children, ...contentProps } = props\n    const dialogScope = useDialogScope(__scopeAlertDialog)\n    const contentRef = React.useRef<TamaguiElement>(null)\n    const composedRefs = useComposedRefs(forwardedRef, contentRef)\n    const cancelRef = React.useRef<TamaguiElement | null>(null)\n\n    return (\n      <DialogWarningProvider\n        contentName={CONTENT_NAME}\n        titleName={TITLE_NAME}\n        docsSlug=\"alert-dialog\"\n      >\n        <AlertDialogContentProvider scope={__scopeAlertDialog} cancelRef={cancelRef}>\n          <DialogContent\n            // @ts-ignore\n            role=\"alertdialog\"\n            {...dialogScope}\n            {...contentProps}\n            ref={composedRefs}\n            onOpenAutoFocus={composeEventHandlers(\n              contentProps.onOpenAutoFocus,\n              (event) => {\n                event.preventDefault()\n                if (isWeb) {\n                  // @ts-ignore\n                  cancelRef.current?.focus({ preventScroll: true })\n                }\n              }\n            )}\n            onPointerDownOutside={(event) => event.preventDefault()}\n            onInteractOutside={(event) => event.preventDefault()}\n          >\n            {/**\n             * We have to use `Slottable` here as we cannot wrap the `AlertDialogContentProvider`\n             * around everything, otherwise the `DescriptionWarning` would be rendered straight away.\n             * This is because we want the accessibility checks to run only once the content is actually\n             * open and that behaviour is already encapsulated in `DialogContent`.\n             */}\n            <Slottable>{children}</Slottable>\n            {process.env.NODE_ENV === 'development' && (\n              <DescriptionWarning contentRef={contentRef} />\n            )}\n          </DialogContent>\n        </AlertDialogContentProvider>\n      </DialogWarningProvider>\n    )\n  }\n)\n\nAlertDialogContent.displayName = CONTENT_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'AlertDialogTitle'\n\ntype AlertDialogTitleProps = DialogTitleProps\n\nconst AlertDialogTitle = React.forwardRef<TamaguiElement, AlertDialogTitleProps>(\n  (props: ScopedProps<AlertDialogTitleProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...titleProps } = props\n    const dialogScope = useDialogScope(__scopeAlertDialog)\n    return <DialogTitle {...dialogScope} {...titleProps} ref={forwardedRef} />\n  }\n)\n\nAlertDialogTitle.displayName = TITLE_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'AlertDialogDescription'\n\ntype AlertDialogDescriptionProps = DialogDescriptionProps\n\nconst AlertDialogDescription = React.forwardRef<\n  TamaguiElement,\n  AlertDialogDescriptionProps\n>((props: ScopedProps<AlertDialogDescriptionProps>, forwardedRef) => {\n  const { __scopeAlertDialog, ...descriptionProps } = props\n  const dialogScope = useDialogScope(__scopeAlertDialog)\n  return <DialogDescription {...dialogScope} {...descriptionProps} ref={forwardedRef} />\n})\n\nAlertDialogDescription.displayName = DESCRIPTION_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogAction\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACTION_NAME = 'AlertDialogAction'\n\ntype AlertDialogActionProps = DialogCloseProps\n\nconst AlertDialogAction = React.forwardRef<TamaguiElement, AlertDialogActionProps>(\n  (props: ScopedProps<AlertDialogActionProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...actionProps } = props\n    const dialogScope = useDialogScope(__scopeAlertDialog)\n    return <DialogClose {...dialogScope} {...actionProps} ref={forwardedRef} />\n  }\n)\n\nAlertDialogAction.displayName = ACTION_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogCancel\n * -----------------------------------------------------------------------------------------------*/\n\nconst CANCEL_NAME = 'AlertDialogCancel'\n\ninterface AlertDialogCancelProps extends DialogCloseProps {}\n\nconst AlertDialogCancel = React.forwardRef<TamaguiElement, AlertDialogCancelProps>(\n  (props: ScopedProps<AlertDialogCancelProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...cancelProps } = props\n    const { cancelRef } = useAlertDialogContentContext(CANCEL_NAME, __scopeAlertDialog)\n    const dialogScope = useDialogScope(__scopeAlertDialog)\n    const ref = useComposedRefs(forwardedRef, cancelRef)\n    return <DialogClose {...dialogScope} {...cancelProps} ref={ref} />\n  }\n)\n\nAlertDialogCancel.displayName = CANCEL_NAME\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<TamaguiElement>\n}\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef }) => {\n  if (process.env.NODE_ENV === 'development') {\n    React.useEffect(() => {\n      if (!isWeb) return\n      const hasDescription = document.getElementById(\n        // @ts-ignore\n        contentRef.current?.getAttribute('aria-describedby')!\n      )\n      if (!hasDescription) {\n        console.warn(`\\`${CONTENT_NAME}\\` requires a description for the component to be accessible for screen reader users.\n  \n        You can add a description to the \\`${CONTENT_NAME}\\` by passing a \\`${DESCRIPTION_NAME}\\` component as a child, which also benefits sighted users by adding visible context to the dialog.\n        \n        Alternatively, you can use your own component as a description by assigning it an \\`id\\` and passing the same value to the \\`aria-describedby\\` prop in \\`${CONTENT_NAME}\\`. If the description is confusing or duplicative for sighted users, you can use the \\`@radix-ui/react-visually-hidden\\` primitive as a wrapper around your description component.\n        \n        For more information, see https://tamagui.dev/docs/components/alert-dialog`)\n      }\n    }, [contentRef])\n  }\n\n  return null\n}\n\nconst AlertDialogInner: React.FC<AlertDialogProps> = (\n  props: ScopedProps<AlertDialogProps>\n) => {\n  const { __scopeAlertDialog, native, ...alertDialogProps } = props\n  const dialogScope = useDialogScope(__scopeAlertDialog)\n\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    const [open, setOpen] = useControllableState({\n      prop: props.open,\n      defaultProp: props.defaultOpen || false,\n      onChange: props.onOpenChange,\n      transition: true,\n    })\n\n    let triggerElement: any = null\n    let title = ''\n    let description = ''\n    const buttons: {\n      text: string\n      onPress: (value?: string | undefined) => void\n      style?: 'default' | 'cancel' | 'destructive'\n    }[] = []\n\n    forEachChildDeep(React.Children.toArray(props.children), (child) => {\n      if (!React.isValidElement(child)) return false\n      const name = isTamaguiElement(child)\n        ? child.type.staticConfig.componentName\n        : (child.type['displayName'] as string | undefined)\n      switch (name) {\n        case TRIGGER_NAME: {\n          triggerElement = React.cloneElement(child as any, {\n            __native: true,\n          })\n          return false\n        }\n        case TITLE_NAME: {\n          title = getStringChildren(child)\n          return false\n        }\n        case DESCRIPTION_NAME: {\n          description = getStringChildren(child)\n          return false\n        }\n        case ACTION_NAME:\n        case CANCEL_NAME: {\n          const style = name === ACTION_NAME ? 'default' : 'cancel'\n          const text = getStringChildren(child)\n          const onPress = () => {\n            const childProps = child.props as any\n            childProps?.onPress?.({ native: true })\n            setOpen(false)\n          }\n          buttons.push({\n            style,\n            text,\n            // @ts-ignore\n            onPress,\n          })\n          return false\n        }\n        default: {\n          return true\n        }\n      }\n    })\n\n    useIsomorphicLayoutEffect(() => {\n      if (!open || !native) return\n      if (title || description) {\n        Alert.alert(title, description, buttons)\n      }\n    }, [native, open])\n\n    if (native) {\n      return React.cloneElement(triggerElement, {\n        __onPress: () => {\n          setOpen(true)\n        },\n      })\n    }\n  }\n\n  return <Dialog {...dialogScope} {...alertDialogProps} modal />\n}\n\nfunction forEachChildDeep(\n  children: React.ReactNode[],\n  onChild: (el: React.ReactElement) => boolean\n) {\n  for (const child of children) {\n    if (!React.isValidElement(child)) continue\n    if (!onChild(child)) continue\n    if (child.props.children) {\n      forEachChildDeep(React.Children.toArray(child.props.children), onChild)\n    }\n  }\n}\n\nfunction getStringChildren(child: React.ReactElement) {\n  let string = ''\n  forEachChildDeep(React.Children.toArray(child), (child) => {\n    if (typeof child.props.children === 'string') {\n      string = child.props.children\n      return false\n    }\n    return true\n  })\n  return string\n}\n\nconst AlertDialog = withStaticProperties(AlertDialogInner, {\n  Trigger: AlertDialogTrigger,\n  Portal: AlertDialogPortal,\n  Overlay: AlertDialogOverlay,\n  Content: AlertDialogContent,\n  Action: AlertDialogAction,\n  Cancel: AlertDialogCancel,\n  Title: AlertDialogTitle,\n  Description: AlertDialogDescription,\n})\n\nAlertDialog.displayName = ROOT_NAME\n\nexport {\n  //\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogOverlay,\n  AlertDialogPortal,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n  createAlertDialogScope,\n}\nexport type {\n  AlertDialogActionProps,\n  AlertDialogCancelProps,\n  AlertDialogContentProps,\n  AlertDialogDescriptionProps,\n  AlertDialogOverlayProps,\n  AlertDialogPortalProps,\n  AlertDialogProps,\n  AlertDialogTitleProps,\n  AlertDialogTriggerProps,\n}\n", "import React from 'react'\nimport { isWeb } from '@tamagui/constants'\nimport type {\n  GetProps,\n  RadiusTokens,\n  SizeTokens,\n  StackProps,\n  ThemeValueFallback,\n} from '@tamagui/core'\nimport { styled, usePropsAndStyle } from '@tamagui/core'\nimport type { FC } from 'react'\nimport { Image as RNImage } from 'react-native'\n\nconst StyledImage = styled(RNImage, {\n  name: 'Image',\n})\n\ntype StyledImageProps = Omit<GetProps<typeof StyledImage>, 'borderRadius'> & {\n  borderRadius?: RadiusTokens\n}\n\ntype BaseProps = Omit<\n  StyledImageProps,\n  'width' | 'height' | 'style' | 'onLayout' | 'resizeMode'\n> & {\n  width?: string | number | SizeTokens | ThemeValueFallback\n  height?: string | number | SizeTokens | ThemeValueFallback\n\n  /**\n   * @deprecated use `source` instead to disambiguate width/height style from width/height of the actual image\n   */\n  src?: string | StyledImageProps['source']\n  /** @deprecated use objectFit instead */\n  resizeMode?: StyledImageProps['resizeMode']\n  objectFit?: React.CSSProperties['objectFit']\n}\n\nexport type ImageProps = BaseProps & Omit<StackProps, keyof BaseProps>\n\ntype RNImageType = typeof RNImage\n\ntype ImageType = FC<ImageProps> & {\n  getSize: RNImageType['getSize']\n  getSizeWithHeaders: RNImageType['getSizeWithHeaders']\n  prefetch: RNImageType['prefetch']\n  prefetchWithMetadata: RNImageType['prefetchWithMetadata']\n  abortPrefetch: RNImageType['abortPrefetch']\n  queryCache: RNImageType['queryCache']\n}\n\nlet hasWarned = false\n\n/**\n * @summary An image is a component that displays an image.\n * @see — Docs https://tamagui.dev/ui/image\n */\nexport const Image = StyledImage.styleable<ImageProps>((inProps, ref) => {\n  const [props, style] = usePropsAndStyle(inProps)\n  const { src, source, objectFit, ...rest } = props\n\n  if (process.env.NODE_ENV === 'development') {\n    if (typeof src === 'string') {\n      if (\n        (typeof props.width === 'string' && props.width[0] !== '$') ||\n        (typeof props.height === 'string' && props.height[0] !== '$')\n      ) {\n        if (!hasWarned) {\n          hasWarned = true\n          console.warn(\n            `React Native expects a numerical width/height. If you want to use a percent you must define the \"source\" prop with width, height, and uri.`\n          )\n        }\n      }\n    }\n  }\n\n  let finalSource =\n    typeof src === 'string'\n      ? {\n          uri: src,\n          ...(isWeb && {\n            width: props.width || style?.width,\n            height: props.height || style?.height,\n          }),\n        }\n      : (source ?? src)\n\n  if (finalSource && typeof finalSource === 'object') {\n    if (process.env.TAMAGUI_TARGET === 'native') {\n      // fix: normalize import style images\n      if (!Array.isArray(finalSource)) {\n        if (typeof finalSource.uri === 'number') {\n          finalSource = finalSource.uri\n          if (source && typeof source === 'object' && !Array.isArray(source)) {\n            // @ts-ignore\n            style.width ??= source.width\n            // @ts-ignore\n            style.height ??= source.height\n          }\n        }\n      }\n    }\n\n    if (process.env.NODE_ENV === 'development' && process.env.TAMAGUI_IMAGE_CHECK_ERROR) {\n      // lets add an onload timeout and warning if it fails to load in console\n      React.useEffect(() => {\n        async function run() {\n          if (typeof src === 'string') {\n            try {\n              await fetch(src).then((res) => res.text())\n            } catch (err) {\n              console.error(`Error loading image: ${src}`, { props })\n            }\n          }\n        }\n\n        run()\n      }, [src])\n    }\n\n    // require compat across native/web\n    if (finalSource['default']) {\n      finalSource = finalSource['default']\n    }\n  }\n\n  // must set defaultSource to allow SSR, default it to the same as src\n  return (\n    <RNImage\n      resizeMode={objectFit}\n      ref={ref}\n      source={finalSource}\n      style={style}\n      {...(rest as any)}\n    />\n  )\n}) as any as ImageType\n\nImage.getSize = RNImage.getSize\nImage.getSizeWithHeaders = RNImage.getSizeWithHeaders\nImage.prefetch = RNImage.prefetch\nImage.prefetchWithMetadata = RNImage.prefetchWithMetadata\nImage.abortPrefetch = RNImage.abortPrefetch\nImage.queryCache = RNImage.queryCache\n", "import type { SizableStackProps } from '@tamagui/stacks'\nimport type { SizeVariantSpreadFunction } from '@tamagui/web'\n\nexport const getShapeSize: SizeVariantSpreadFunction<SizableStackProps> = (\n  size,\n  { tokens }\n) => {\n  const width = tokens.size[size] ?? size\n  const height = tokens.size[size] ?? size\n  return {\n    width,\n    height,\n    minWidth: width,\n    maxWidth: width,\n    maxHeight: height,\n    minHeight: height,\n  }\n}\n", "import { ThemeableStack } from '@tamagui/stacks'\nimport type { GetProps } from '@tamagui/web'\nimport { styled } from '@tamagui/web'\n\nimport { getShapeSize } from './getShapeSize'\n\nexport const Square = styled(ThemeableStack, {\n  name: 'Square',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  variants: {\n    size: {\n      '...size': getShapeSize,\n      ':number': getShapeSize,\n    },\n  } as const,\n})\n\nexport type SquareProps = GetProps<typeof Square>\n", "import type { GetProps } from '@tamagui/web'\nimport { styled } from '@tamagui/web'\n\nimport { Square } from './Square'\n\nexport const Circle = styled(Square, {\n  name: 'Circle',\n  circular: true,\n})\n\nexport type CircleProps = GetProps<typeof Circle>\n", "// forked from radix https://github.com/radix-ui/primitives/blob/main/packages/react/avatar/src/Avatar.tsx\n\nimport type { GetProps, SizeTokens, TamaguiElement } from '@tamagui/core'\nimport { getTokens, getVariableValue, styled } from '@tamagui/core'\nimport type { Scope } from '@tamagui/create-context'\nimport { createContextScope } from '@tamagui/create-context'\nimport { withStaticProperties } from '@tamagui/helpers'\nimport type { ImageProps } from '@tamagui/image'\nimport { Image } from '@tamagui/image'\nimport { Square, getShapeSize } from '@tamagui/shapes'\nimport { YStack } from '@tamagui/stacks'\nimport * as React from 'react'\n\nconst AVATAR_NAME = 'Avatar'\n\ntype ScopedProps<P> = P & { __scopeAvatar?: Scope }\nconst [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME)\n\ntype ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error'\n\ntype AvatarContextValue = {\n  size: SizeTokens\n  imageLoadingStatus: ImageLoadingStatus\n  onImageLoadingStatusChange(status: ImageLoadingStatus): void\n}\n\nconst [AvatarProvider, useAvatarContext] =\n  createAvatarContext<AvatarContextValue>(AVATAR_NAME)\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarImage\n * -----------------------------------------------------------------------------------------------*/\n\nconst IMAGE_NAME = 'AvatarImage'\n\ntype AvatarImageProps = Partial<ImageProps> & {\n  onLoadingStatusChange?: (status: ImageLoadingStatus) => void\n}\n\nconst AvatarImage = React.forwardRef<TamaguiElement, AvatarImageProps>(\n  (props: ScopedProps<AvatarImageProps>, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {}, ...imageProps } = props\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar)\n    const [status, setStatus] = React.useState<ImageLoadingStatus>('idle')\n    const shapeSize = getVariableValue(\n      getShapeSize(\n        context.size,\n        // @ts-expect-error\n        { tokens: getTokens() }\n      )?.width\n    ) as number\n\n    React.useEffect(() => {\n      setStatus('idle')\n    }, [JSON.stringify(src)])\n\n    React.useEffect(() => {\n      onLoadingStatusChange(status)\n      context.onImageLoadingStatusChange(status)\n    }, [status])\n\n    return (\n      <YStack fullscreen zIndex={1}>\n        <Image\n          fullscreen\n          {...(typeof shapeSize === 'number' &&\n            !Number.isNaN(shapeSize) && {\n              width: shapeSize,\n              height: shapeSize,\n            })}\n          {...imageProps}\n          // @ts-ignore\n          ref={forwardedRef}\n          // @ts-ignore\n          src={src}\n          // onLoadStart={() => {\n          //   // setStatus('loading')\n          // }}\n          onError={() => {\n            setStatus('error')\n          }}\n          onLoad={() => {\n            setStatus('loaded')\n          }}\n        />\n      </YStack>\n    )\n  }\n)\n\nAvatarImage.displayName = IMAGE_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarFallback\n * -----------------------------------------------------------------------------------------------*/\n\nconst FALLBACK_NAME = 'AvatarFallback'\n\nexport const AvatarFallbackFrame = styled(YStack, {\n  name: FALLBACK_NAME,\n  position: 'absolute',\n  fullscreen: true,\n  zIndex: 0,\n})\n\ntype AvatarFallbackProps = GetProps<typeof AvatarFallbackFrame> & {\n  delayMs?: number\n}\n\nconst AvatarFallback = AvatarFallbackFrame.extractable(\n  React.forwardRef<TamaguiElement, AvatarFallbackProps>(\n    (props: ScopedProps<AvatarFallbackProps>, forwardedRef) => {\n      const { __scopeAvatar, delayMs, ...fallbackProps } = props\n      const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar)\n      const [canRender, setCanRender] = React.useState(delayMs === undefined)\n\n      React.useEffect(() => {\n        if (delayMs !== undefined) {\n          const timerId = setTimeout(() => setCanRender(true), delayMs)\n          return () => clearTimeout(timerId)\n        }\n      }, [delayMs])\n\n      return canRender && context.imageLoadingStatus !== 'loaded' ? (\n        <AvatarFallbackFrame {...fallbackProps} ref={forwardedRef} />\n      ) : null\n    }\n  )\n)\n\nAvatarFallback.displayName = FALLBACK_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * Avatar\n * -----------------------------------------------------------------------------------------------*/\n\nexport const AvatarFrame = styled(Square, {\n  name: AVATAR_NAME,\n  position: 'relative',\n  overflow: 'hidden',\n})\n\ntype AvatarProps = GetProps<typeof AvatarFrame>\n\n/**\n * @summary A component that displays an image or a fallback icon.\n * @see — Docs https://tamagui.dev/ui/avatar\n *\n * @example\n * ```tsx\n * <Avatar circular size=\"$10\">\n *  <Avatar.Image\n *    accessibilityLabel=\"Cam\"\n *    src=\"https://images.unsplash.com/photo-1548142813-c348350df52b?&w=150&h=150&dpr=2&q=80\"\n *  />\n *  <Avatar.Fallback backgroundColor=\"$blue10\" />\n * </Avatar>\n * ```\n */\nconst Avatar = withStaticProperties(\n  React.forwardRef<TamaguiElement, AvatarProps>(\n    (props: ScopedProps<AvatarProps>, forwardedRef) => {\n      const { __scopeAvatar, size = '$true', ...avatarProps } = props\n      const [imageLoadingStatus, setImageLoadingStatus] =\n        React.useState<ImageLoadingStatus>('idle')\n      return (\n        <AvatarProvider\n          size={size}\n          scope={__scopeAvatar}\n          imageLoadingStatus={imageLoadingStatus}\n          onImageLoadingStatusChange={setImageLoadingStatus}\n        >\n          <AvatarFrame size={size} {...avatarProps} ref={forwardedRef} />\n        </AvatarProvider>\n      )\n    }\n  ),\n  {\n    Image: AvatarImage,\n    Fallback: AvatarFallback,\n  }\n)\n\nAvatar.displayName = AVATAR_NAME\n\nexport { createAvatarScope, Avatar, AvatarImage, AvatarFallback }\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps }\n", "import type { FontSizeTokens, FontTokens, Variable } from '@tamagui/core'\nimport { getConfig, isVariable } from '@tamagui/core'\n\ntype GetFontSizeOpts = {\n  relativeSize?: number\n  font?: FontTokens\n}\n\nexport const getFontSize = (\n  inSize: FontSizeTokens | null | undefined,\n  opts?: GetFontSizeOpts\n): number => {\n  const res = getFontSizeVariable(inSize, opts)\n  if (isVariable(res)) {\n    return +res.val\n  }\n  return res ? +res : 16\n}\n\nexport const getFontSizeVariable = (\n  inSize: FontSizeTokens | null | undefined,\n  opts?: GetFontSizeOpts\n): FontSizeTokens | Variable<string> | null | undefined => {\n  const token = getFontSizeToken(inSize, opts)\n  if (!token) {\n    return inSize\n  }\n  const conf = getConfig()\n  const font = conf.fontsParsed[opts?.font || conf.defaultFontToken]\n  return font?.size[token] as Variable<string>\n}\n\nexport const getFontSizeToken = (\n  inSize: FontSizeTokens | null | undefined,\n  opts?: GetFontSizeOpts\n): FontSizeTokens | null => {\n  if (typeof inSize === 'number') {\n    return null\n  }\n  // backwards compat\n  const relativeSize = opts?.relativeSize || 0\n  const conf = getConfig()\n  const font = conf.fontsParsed[opts?.font || conf.defaultFontToken]\n  const fontSize =\n    font?.size ||\n    // fallback to size tokens\n    conf.tokensParsed.size\n  const size =\n    (inSize === '$true' && !('$true' in fontSize) ? '$4' : inSize) ??\n    ('$true' in fontSize ? '$true' : '$4')\n\n  const sizeTokens = Object.keys(fontSize)\n\n  let foundIndex = sizeTokens.indexOf(size)\n  if (foundIndex === -1) {\n    if (size.endsWith('.5')) {\n      foundIndex = sizeTokens.indexOf(size.replace('.5', ''))\n    }\n  }\n  if (process.env.NODE_ENV === 'development') {\n    if (foundIndex === -1) {\n      console.warn('No font size found', size, opts, 'in size tokens', sizeTokens)\n    }\n  }\n  const tokenIndex = Math.min(\n    Math.max(0, foundIndex + relativeSize),\n    sizeTokens.length - 1\n  )\n  return (sizeTokens[tokenIndex] ?? size) as FontSizeTokens\n}\n", "export const prevent = (e) => [e.preventDefault(), e.stopPropagation()]\n", "import type { ColorTokens, UnionableString, Variable } from '@tamagui/web'\nimport { getVariable, useTheme } from '@tamagui/web'\nimport type { TextStyle } from 'react-native'\n\nexport const useCurrentColor = (colorProp: ColorProp) => {\n  const theme = useTheme()\n  const out = colorProp\n    ? getVariable(colorProp)\n    : theme[colorProp as any]?.get() || theme.color?.get()\n  return out\n}\n\nexport type ColorProp =\n  | UnionableString\n  | Variable\n  | ColorTokens\n  | TextStyle['color']\n  | undefined\n", "import React from 'react'\nimport type { ColorProp } from './useCurrentColor'\nimport { useCurrentColor } from './useCurrentColor'\n\nexport const useGetThemedIcon = (props: { color: ColorProp; size: number }) => {\n  const color = useCurrentColor(props.color)\n  return (el: any) => {\n    if (!el) return el\n    if (React.isValidElement(el)) {\n      return React.cloneElement(el, {\n        ...props,\n        color,\n        // @ts-expect-error\n        ...el.props,\n      })\n    }\n    return React.createElement(el, props)\n  }\n}\n", "import { getFontSize } from '@tamagui/font-size'\nimport { getButtonSized } from '@tamagui/get-button-sized'\nimport { withStaticProperties } from '@tamagui/helpers'\nimport { useGetThemedIcon } from '@tamagui/helpers-tamagui'\nimport { ButtonNestingContext, ThemeableStack } from '@tamagui/stacks'\nimport type { TextContextStyles, TextParentStyles } from '@tamagui/text'\nimport { SizableText, wrapChildrenInText } from '@tamagui/text'\nimport type { FontSizeTokens, GetProps, SizeTokens, ThemeableProps } from '@tamagui/web'\nimport {\n  createStyledContext,\n  getVariableValue,\n  spacedChildren,\n  styled,\n  useProps,\n} from '@tamagui/web'\nimport type { FunctionComponent } from 'react'\nimport { useContext } from 'react'\n\ntype ButtonVariant = 'outlined'\n\nexport const ButtonContext = createStyledContext<\n  Partial<\n    TextContextStyles & {\n      size: SizeTokens\n      variant?: ButtonVariant\n    }\n  >\n>({\n  // keeping these here means they work with styled() passing down color to text\n  color: undefined,\n  ellipse: undefined,\n  fontFamily: undefined,\n  fontSize: undefined,\n  fontStyle: undefined,\n  fontWeight: undefined,\n  letterSpacing: undefined,\n  maxFontSizeMultiplier: undefined,\n  size: undefined,\n  textAlign: undefined,\n  variant: undefined,\n})\n\ntype ButtonIconProps = { color?: any; size?: any }\ntype IconProp =\n  | JSX.Element\n  | FunctionComponent<ButtonIconProps>\n  | ((props: ButtonIconProps) => any)\n  | null\n\ntype ButtonExtraProps = TextParentStyles &\n  ThemeableProps & {\n    /**\n     * add icon before, passes color and size automatically if Component\n     */\n    icon?: IconProp\n    /**\n     * add icon after, passes color and size automatically if Component\n     */\n    iconAfter?: IconProp\n    /**\n     * adjust icon relative to size\n     *\n     * @default 1\n     */\n    scaleIcon?: number\n    /**\n     * make the spacing elements flex\n     */\n    spaceFlex?: number | boolean\n    /**\n     * adjust internal space relative to icon size\n     */\n    scaleSpace?: number\n    /**\n     * remove default styles\n     */\n    unstyled?: boolean\n  }\n\ntype ButtonProps = ButtonExtraProps & GetProps<typeof ButtonFrame>\n\nconst BUTTON_NAME = 'Button'\n\nconst ButtonFrame = styled(ThemeableStack, {\n  name: BUTTON_NAME,\n  tag: 'button',\n  context: ButtonContext,\n  role: 'button',\n  focusable: true,\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$true',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'nowrap',\n        flexDirection: 'row',\n        cursor: 'pointer',\n        hoverTheme: true,\n        pressTheme: true,\n        backgrounded: true,\n        borderWidth: 1,\n        borderColor: 'transparent',\n\n        focusVisibleStyle: {\n          outlineColor: '$outlineColor',\n          outlineStyle: 'solid',\n          outlineWidth: 2,\n        },\n      },\n    },\n\n    variant: {\n      outlined: {\n        backgroundColor: 'transparent',\n        borderWidth: 2,\n        borderColor: '$borderColor',\n\n        hoverStyle: {\n          backgroundColor: 'transparent',\n          borderColor: '$borderColorHover',\n        },\n\n        pressStyle: {\n          backgroundColor: 'transparent',\n          borderColor: '$borderColorPress',\n        },\n\n        focusVisibleStyle: {\n          backgroundColor: 'transparent',\n          borderColor: '$borderColorFocus',\n        },\n      },\n    },\n\n    size: {\n      '...size': getButtonSized,\n      ':number': getButtonSized,\n    },\n\n    disabled: {\n      true: {\n        pointerEvents: 'none',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nconst ButtonText = styled(SizableText, {\n  name: 'Button',\n  context: ButtonContext,\n\n  variants: {\n    unstyled: {\n      false: {\n        userSelect: 'none',\n        cursor: 'pointer',\n        // flexGrow 1 leads to inconsistent native style where text pushes to start of view\n        flexGrow: 0,\n        flexShrink: 1,\n        ellipse: true,\n        color: '$color',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nconst ButtonIcon = (props: { children: React.ReactNode; scaleIcon?: number }) => {\n  const { children, scaleIcon = 1 } = props\n  const { size, color } = useContext(ButtonContext)\n\n  const iconSize =\n    (typeof size === 'number' ? size * 0.5 : getFontSize(size as FontSizeTokens)) *\n    scaleIcon\n\n  const getThemedIcon = useGetThemedIcon({ size: iconSize, color: color as any })\n  return getThemedIcon(children)\n}\n\nconst ButtonComponent = ButtonFrame.styleable<ButtonExtraProps>(\n  function Button(props, ref) {\n    // @ts-ignore\n    const { props: buttonProps } = useButton(props)\n\n    return <ButtonFrame data-disable-theme {...buttonProps} ref={ref} />\n  }\n)\n/**\n * @summary A Button is a clickable element that can be used to trigger actions such as submitting forms, navigating to other pages, or performing other actions.\n * @see — Docs https://tamagui.dev/ui/button\n */\nconst Button = withStaticProperties(ButtonComponent, {\n  Text: ButtonText,\n  Icon: ButtonIcon,\n})\n\n/**\n * @deprecated Instead of useButton, see the Button docs for the newer and much improved Advanced customization pattern: https://tamagui.dev/docs/components/button\n */\nfunction useButton<Props extends ButtonProps>(\n  { textProps, ...propsIn }: Props,\n  { Text = Button.Text }: { Text: any } = { Text: Button.Text }\n) {\n  const isNested = useContext(ButtonNestingContext)\n  const propsActive = useProps(propsIn, {\n    noNormalize: true,\n    noExpand: true,\n  }) as any as ButtonProps\n\n  // careful not to destructure and re-order props, order is important\n  const {\n    icon,\n    iconAfter,\n    space,\n    spaceFlex,\n    scaleIcon = 1,\n    scaleSpace = 0.66,\n    separator,\n    noTextWrap,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    letterSpacing,\n    tag,\n    ellipse,\n    maxFontSizeMultiplier,\n\n    ...restProps\n  } = propsActive\n\n  const size = propsActive.size || (propsActive.unstyled ? undefined : '$true')\n\n  const color = propsActive.color as any\n\n  const iconSize =\n    (typeof size === 'number'\n      ? size * 0.5\n      : getFontSize(size as FontSizeTokens, {\n          font: fontFamily?.[0] === '$' ? (fontFamily as any) : undefined,\n        })) * scaleIcon\n\n  const getThemedIcon = useGetThemedIcon({\n    size: iconSize,\n    color,\n  })\n\n  const [themedIcon, themedIconAfter] = [icon, iconAfter].map(getThemedIcon)\n  const spaceSize = space ?? getVariableValue(iconSize) * scaleSpace\n  const contents = noTextWrap\n    ? [propsIn.children]\n    : wrapChildrenInText(\n        Text,\n        {\n          children: propsIn.children,\n          fontFamily,\n          fontSize,\n          textProps,\n          fontWeight,\n          fontStyle,\n          letterSpacing,\n          ellipse,\n          maxFontSizeMultiplier,\n        },\n        Text === ButtonText && propsActive.unstyled !== true\n          ? {\n              unstyled: process.env.TAMAGUI_HEADLESS === '1',\n              size,\n            }\n          : undefined\n      )\n\n  const inner = spacedChildren({\n    // a bit arbitrary but scaling to font size is necessary so long as button does\n    space: spaceSize === false ? 0 : spaceSize == true ? '$true' : spaceSize,\n    spaceFlex,\n    ensureKeys: true,\n    separator,\n    direction:\n      propsActive.flexDirection === 'column' ||\n      propsActive.flexDirection === 'column-reverse'\n        ? 'vertical'\n        : 'horizontal',\n    // for keys to stay the same we keep indices as similar a possible\n    // so even if icons are undefined we still pass them\n    children: [themedIcon, ...contents, themedIconAfter],\n  })\n\n  const props = {\n    size,\n    ...(propsIn.disabled && {\n      // in rnw - false still has keyboard tabIndex, undefined = not actually focusable\n      focusable: undefined,\n      // even with tabIndex unset, it will keep focusVisibleStyle on web so disable it here\n      focusVisibleStyle: {\n        borderColor: '$background',\n      },\n    }),\n    // fixes SSR issue + DOM nesting issue of not allowing button in button\n    tag:\n      tag ??\n      (isNested\n        ? 'span'\n        : // defaults to <a /> when accessibilityRole = link\n          // see https://github.com/tamagui/tamagui/issues/505\n          propsActive.accessibilityRole === 'link' || propsActive.role === 'link'\n          ? 'a'\n          : 'button'),\n\n    ...restProps,\n\n    children: (\n      <ButtonNestingContext.Provider value={true}>{inner}</ButtonNestingContext.Provider>\n    ),\n    // forces it to be a runtime pressStyle so it passes through context text colors\n    disableClassName: true,\n  } as Props\n\n  return {\n    spaceSize,\n    isNested,\n    props,\n  }\n}\n\nexport {\n  Button,\n  ButtonFrame,\n  ButtonIcon,\n  ButtonText,\n  // legacy\n  useButton,\n}\nexport type { ButtonProps }\n", "import { ThemeableStack } from '@tamagui/stacks'\nimport type { GetProps, SizeTokens } from '@tamagui/web'\nimport { createStyledContext, styled, withStaticProperties } from '@tamagui/web'\n\nconst CardContext = createStyledContext({\n  size: '$true' as SizeTokens,\n})\n\nexport const CardFrame = styled(ThemeableStack, {\n  name: 'Card',\n  context: CardContext,\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$true',\n        backgroundColor: '$background',\n        position: 'relative',\n      },\n    },\n\n    size: {\n      '...size': (val, { tokens }) => {\n        return {\n          borderRadius: tokens.radius[val] ?? val,\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport const CardHeader = styled(ThemeableStack, {\n  name: 'CardHeader',\n  context: CardContext,\n\n  variants: {\n    unstyled: {\n      false: {\n        zIndex: 10,\n        backgroundColor: 'transparent',\n        marginBottom: 'auto',\n      },\n    },\n\n    size: {\n      '...size': (val, { tokens }) => {\n        return {\n          padding: tokens.space[val] ?? val,\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport const CardFooter = styled(CardHeader, {\n  name: 'CardFooter',\n\n  variants: {\n    unstyled: {\n      false: {\n        zIndex: 5,\n        flexDirection: 'row',\n        marginTop: 'auto',\n        marginBottom: 0,\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport const CardBackground = styled(ThemeableStack, {\n  name: 'CardBackground',\n\n  variants: {\n    unstyled: {\n      false: {\n        zIndex: 0,\n        fullscreen: true,\n        overflow: 'hidden',\n        pointerEvents: 'none',\n        padding: 0,\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport type CardHeaderProps = GetProps<typeof CardHeader>\nexport type CardFooterProps = GetProps<typeof CardFooter>\nexport type CardProps = GetProps<typeof CardFrame>\n\nexport const Card = withStaticProperties(CardFrame, {\n  Header: CardHeader,\n  Footer: CardFooter,\n  Background: CardBackground,\n})\n", "import type { SizeTokens } from '@tamagui/core'\nimport { createStyledContext } from '@tamagui/core'\n\nexport const CheckboxStyledContext = createStyledContext({\n  size: '$true' as SizeTokens,\n  scaleIcon: 1,\n})\n", "// fork of radix\n// https://github.com/radix-ui/primitives/tree/main/packages/react/checkbox/src/Checkbox.tsx\n\nimport { getVariableValue, styled } from '@tamagui/core'\nimport { getSize } from '@tamagui/get-token'\nimport { ThemeableStack } from '@tamagui/stacks'\n\nimport { CheckboxStyledContext } from './CheckboxStyledContext'\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxIndicator\n * -----------------------------------------------------------------------------------------------*/\nconst INDICATOR_NAME = 'CheckboxIndicator'\n\nexport const CheckboxIndicatorFrame = styled(ThemeableStack, {\n  // use Checkbox for easier themes\n  name: INDICATOR_NAME,\n  context: CheckboxStyledContext,\n  variants: {\n    unstyled: {\n      false: {},\n    },\n  } as const,\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\n/* -------------------------------------------------------------------------------------------------\n * Checkbox\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_NAME = 'Checkbox'\n\nexport const CheckboxFrame = styled(ThemeableStack, {\n  name: CHECKBOX_NAME,\n  tag: 'button',\n\n  context: CheckboxStyledContext,\n  variants: {\n    unstyled: {\n      false: {\n        size: '$true',\n        backgroundColor: '$background',\n        alignItems: 'center',\n        justifyContent: 'center',\n        pressTheme: true,\n        focusable: true,\n        borderWidth: 1,\n        borderColor: '$borderColor',\n\n        hoverStyle: {\n          borderColor: '$borderColorHover',\n        },\n\n        focusStyle: {\n          borderColor: '$borderColorFocus',\n        },\n\n        focusVisibleStyle: {\n          outlineStyle: 'solid',\n          outlineWidth: 2,\n          outlineColor: '$outlineColor',\n        },\n      },\n    },\n\n    disabled: {\n      true: {\n        pointerEvents: 'none',\n        userSelect: 'none',\n        cursor: 'not-allowed',\n\n        hoverStyle: {\n          borderColor: '$borderColor',\n          backgroundColor: '$background',\n        },\n\n        pressStyle: {\n          borderColor: '$borderColor',\n          backgroundColor: '$background',\n        },\n\n        focusStyle: {\n          outlineWidth: 0,\n        },\n      },\n    },\n\n    size: {\n      '...size': (val) => {\n        const radiusToken = getVariableValue(getSize(val)) / 8\n        return {\n          borderRadius: radiusToken,\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n", "import React, { useMemo } from 'react'\nimport type {\n  CheckedState,\n  CheckboxExtraProps as HeadlessCheckboxExtraProps,\n} from '@tamagui/checkbox-headless'\nimport { registerFocusable } from '@tamagui/focusable'\nimport { isIndeterminate, useCheckbox } from '@tamagui/checkbox-headless'\nimport type { NativeValue, SizeTokens, StackProps } from '@tamagui/core'\nimport {\n  getVariableValue,\n  shouldRenderNativePlatform,\n  useProps,\n  useTheme,\n  withStaticProperties,\n} from '@tamagui/core'\nimport { getFontSize } from '@tamagui/font-size'\nimport { getSize } from '@tamagui/get-token'\nimport { useGetThemedIcon } from '@tamagui/helpers-tamagui'\nimport { useControllableState } from '@tamagui/use-controllable-state'\n\nimport { CheckboxFrame, CheckboxIndicatorFrame } from './Checkbox'\nimport { CheckboxStyledContext } from './CheckboxStyledContext'\n\ntype CheckboxExpectingVariantProps = {\n  size?: SizeTokens\n  unstyled?: boolean\n}\n\ntype CheckboxExtraProps = HeadlessCheckboxExtraProps & {\n  scaleIcon?: number\n  scaleSize?: number\n  sizeAdjust?: number\n  native?: NativeValue<'web'>\n}\ntype CheckboxBaseProps = StackProps\n\nexport type CheckboxProps = CheckboxBaseProps &\n  CheckboxExtraProps &\n  CheckboxExpectingVariantProps\n\ntype CheckboxComponent = (\n  props: CheckboxExtraProps & CheckboxExpectingVariantProps\n) => any\n\ntype CheckboxIndicatorExpectingVariantProps = {}\ntype CheckboxIndicatorComponent = (props: CheckboxIndicatorExpectingVariantProps) => any\n\ntype CheckboxIndicatorBaseProps = StackProps\ntype CheckboxIndicatorExtraProps = {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: boolean\n  /**\n   * Used to disable passing styles down to children.\n   */\n  disablePassStyles?: boolean\n}\n\nexport type CheckboxIndicatorProps = CheckboxIndicatorBaseProps &\n  CheckboxIndicatorExtraProps\n\nexport const CheckboxContext = React.createContext<{\n  checked: CheckedState\n  disabled?: boolean\n}>({\n  checked: false,\n  disabled: false,\n})\n\nconst ensureContext = (x: any) => {\n  if (!x.context) {\n    x.context = CheckboxContext\n  }\n}\n\nexport function createCheckbox<\n  F extends CheckboxComponent,\n  T extends CheckboxIndicatorComponent,\n>(createProps: { disableActiveTheme?: boolean; Frame?: F; Indicator?: T }) {\n  const {\n    disableActiveTheme,\n    Frame = CheckboxFrame,\n    Indicator = CheckboxIndicatorFrame,\n  } = createProps as any as {\n    disableActiveTheme?: boolean\n    Frame: typeof CheckboxFrame\n    Indicator: typeof CheckboxIndicatorFrame\n  }\n\n  ensureContext(Frame)\n  ensureContext(Indicator)\n\n  const FrameComponent = Frame.styleable<CheckboxProps>(\n    function Checkbox(_props, forwardedRef) {\n      const {\n        scaleSize = 0.45,\n        sizeAdjust = 0,\n        scaleIcon,\n        checked: checkedProp,\n        defaultChecked,\n        onCheckedChange,\n        native,\n        unstyled = false,\n        ...props\n      } = _props\n      const propsActive = useProps(props)\n\n      // TODO: this could be null - fix the type\n      const styledContext = React.useContext(CheckboxStyledContext)\n      let adjustedSize = 0\n      let size = 0\n      if (!unstyled) {\n        adjustedSize = getVariableValue(\n          getSize(propsActive.size ?? styledContext?.size ?? '$true', {\n            shift: sizeAdjust,\n          })\n        ) as number\n        size = scaleSize ? Math.round(adjustedSize * scaleSize) : adjustedSize\n      }\n\n      const [checked = false, setChecked] = useControllableState({\n        prop: checkedProp,\n        defaultProp: defaultChecked!,\n        onChange: onCheckedChange,\n      })\n\n      const { checkboxProps, checkboxRef, bubbleInput } = useCheckbox(\n        // @ts-ignore\n        propsActive,\n        [checked, setChecked],\n        forwardedRef\n      )\n\n      if (process.env.TAMAGUI_TARGET === 'native') {\n        React.useEffect(() => {\n          if (!props.id) return\n          if (props.disabled) return\n\n          return registerFocusable(props.id, {\n            focusAndSelect: () => {\n              setChecked?.((value) => !value)\n            },\n            focus: () => {},\n          })\n        }, [props.id, props.disabled])\n      }\n\n      const renderNative = shouldRenderNativePlatform(native)\n      if (renderNative === 'web') {\n        return (\n          <input\n            type=\"checkbox\"\n            defaultChecked={isIndeterminate(checked) ? false : checked}\n            tabIndex={-1}\n            ref={checkboxRef as any}\n            disabled={checkboxProps.disabled}\n            style={{\n              appearance: 'auto',\n              accentColor: 'var(--color6)',\n              ...(checkboxProps.style as any), // TODO: any\n            }}\n          />\n        )\n      }\n\n      const memoizedContext = useMemo(\n        () => ({\n          checked,\n          disabled: checkboxProps.disabled,\n        }),\n        [checked, checkboxProps.disabled]\n      )\n\n      return (\n        <CheckboxContext.Provider value={memoizedContext}>\n          <CheckboxStyledContext.Provider\n            size={propsActive.size ?? styledContext?.size ?? '$true'}\n            scaleIcon={scaleIcon ?? styledContext?.scaleIcon ?? 1}\n          >\n            <Frame\n              {...(!unstyled && {\n                width: size,\n                height: size,\n              })}\n              tag=\"button\"\n              ref={checkboxRef}\n              unstyled={unstyled}\n              {...(unstyled === false && {\n                size,\n                theme: checked ? 'active' : null,\n              })}\n              // potential variant\n              checked={checked}\n              disabled={checkboxProps.disabled}\n              {...checkboxProps}\n              // react 76 style prop mis-match, but should be fine\n              style={checkboxProps.style}\n            >\n              {propsActive.children}\n            </Frame>\n            {bubbleInput}\n          </CheckboxStyledContext.Provider>\n        </CheckboxContext.Provider>\n      )\n    }\n  )\n\n  const IndicatorComponent = Indicator.styleable<CheckboxIndicatorProps>(\n    (props, forwardedRef) => {\n      const {\n        // __scopeCheckbox,\n        children: childrenProp,\n        forceMount,\n        disablePassStyles,\n        unstyled = false,\n        ...indicatorProps\n      } = props\n      const styledContext = React.useContext(CheckboxStyledContext)\n      let children = childrenProp\n\n      if (!unstyled) {\n        const iconSize =\n          (typeof styledContext.size === 'number'\n            ? styledContext.size * 0.65\n            : getFontSize(styledContext.size as any)) * styledContext.scaleIcon\n        const theme = useTheme()\n        const getThemedIcon = useGetThemedIcon({ size: iconSize, color: theme.color })\n\n        const childrens = React.Children.toArray(childrenProp)\n        children = childrens.map((child) => {\n          if (disablePassStyles || !React.isValidElement(child)) {\n            return child\n          }\n          return getThemedIcon(child)\n        })\n      }\n\n      const context = React.useContext(CheckboxContext)\n      if (forceMount || isIndeterminate(context.checked) || context.checked === true)\n        return (\n          <Indicator pointerEvents=\"none\" {...indicatorProps} ref={forwardedRef}>\n            {children}\n          </Indicator>\n        )\n\n      return null\n    }\n  )\n\n  return withStaticProperties(FrameComponent, {\n    Indicator: IndicatorComponent,\n  })\n}\n", "import type { Focusable } from './focusable'\n\nexport const registerFocusable = (id: string, input: Focusable) => () => {\n  // noop focus is handed natively\n}\n\nexport const unregisterFocusable = (id: string) => {\n  // noop focus is handed natively\n}\n\nexport const focusFocusable = (id: string) => {\n  // noop focus is handed natively\n}\n", "import { composeRefs } from '@tamagui/compose-refs'\nimport { useEvent } from '@tamagui/web'\nimport type { MutableRefObject } from 'react'\nimport React from 'react'\n\nimport { registerFocusable } from './registerFocusable'\n\ntype FocusableProps = {\n  id?: string\n  onChangeText?: (val: string) => void\n  value?: string\n  defaultValue?: string\n}\n\nexport function useFocusable({\n  isInput,\n  props,\n  ref,\n}: {\n  isInput?: boolean\n  props: FocusableProps\n  ref?: MutableRefObject<any>\n}) {\n  const { id, onChangeText, value, defaultValue } = props\n  const inputValue = React.useRef(value || defaultValue || '')\n  const unregisterFocusable = React.useRef<() => void | undefined>()\n\n  const focusAndSelect = React.useCallback((input: any) => {\n    input.focus()\n    if (input.setSelection && typeof inputValue.current === 'string') {\n      input.setSelection(0, inputValue.current.length)\n    }\n  }, [])\n\n  const registerFocusableHandler = React.useCallback(\n    (input: any) => {\n      if (!id || !input) return\n\n      unregisterFocusable.current?.()\n      unregisterFocusable.current = registerFocusable(id, {\n        focus: input.focus,\n        ...(isInput && {\n          focusAndSelect: () => focusAndSelect(input),\n        }),\n      })\n    },\n    [id, isInput, focusAndSelect]\n  )\n\n  const inputRef = React.useCallback(\n    (input: any) => {\n      if (input) {\n        registerFocusableHandler(input)\n      }\n    },\n    [registerFocusableHandler]\n  )\n\n  const handleChangeText = useEvent((value: string) => {\n    inputValue.current = value\n    onChangeText?.(value)\n  })\n\n  React.useEffect(() => {\n    return () => {\n      unregisterFocusable.current?.()\n    }\n  }, [])\n\n  return {\n    ref: React.useMemo(() => composeRefs(ref, inputRef), [ref, inputRef]),\n    onChangeText: handleChangeText,\n  }\n}\n", "import { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport { createContext } from '@tamagui/create-context'\nimport { focusFocusable } from '@tamagui/focusable'\nimport { getButtonSized } from '@tamagui/get-button-sized'\nimport { getFontSized } from '@tamagui/get-font-sized'\nimport { SizableText } from '@tamagui/text'\nimport type { FontSizeTokens, GetProps, ReactComponentWithRef } from '@tamagui/web'\nimport { styled, themeable } from '@tamagui/web'\nimport * as React from 'react'\nimport type { View } from 'react-native'\n\nconst NAME = 'Label'\n\ntype LabelContextValue = {\n  id?: string\n  controlRef: React.MutableRefObject<HTMLElement | null>\n}\n\nconst [LabelProvider, useLabelContextImpl] = createContext<LabelContextValue>(NAME, {\n  id: undefined,\n  controlRef: { current: null },\n})\n\nexport const LabelFrame = styled(SizableText, {\n  name: 'Label',\n  tag: 'label',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$true',\n        color: '$color',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        alignItems: 'center',\n        userSelect: 'none',\n        cursor: 'default',\n        pressStyle: {\n          color: '$colorPress',\n        },\n      },\n    },\n\n    size: {\n      '...size': (val, extras) => {\n        const buttonStyle = getButtonSized(val, extras)\n        const buttonHeight = buttonStyle?.height\n        const fontStyle = getFontSized(val as FontSizeTokens, extras)\n        return {\n          ...fontStyle,\n          lineHeight: buttonHeight ? extras.tokens.size[buttonHeight] : undefined,\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport type LabelProps = GetProps<typeof LabelFrame> & {\n  htmlFor?: string\n}\n\nconst LabelComponent = React.forwardRef<typeof LabelFrame, LabelProps>(\n  (props, forwardedRef) => {\n    const { htmlFor, id: idProp, ...labelProps } = props\n    const controlRef = React.useRef<HTMLElement | null>(null)\n    const ref = React.useRef<any>(null)\n    const composedRefs = useComposedRefs(forwardedRef, ref)\n    const backupId = React.useId()\n    const id = idProp ?? backupId\n\n    if (isWeb) {\n      React.useEffect(() => {\n        if (htmlFor) {\n          const element = document.getElementById(htmlFor)\n          const label = ref.current\n          if (label && element) {\n            const getAriaLabel = () => element.getAttribute('aria-labelledby')\n            const ariaLabelledBy = [id, getAriaLabel()].filter(Boolean).join(' ')\n            element.setAttribute('aria-labelledby', ariaLabelledBy)\n            controlRef.current = element\n            return () => {\n              /**\n               * We get the latest attribute value because at the time that this cleanup fires,\n               * the values from the closure may have changed.\n               */\n              if (!id) return\n              const ariaLabelledBy = getAriaLabel()?.replace(id, '')\n              if (ariaLabelledBy === '') {\n                element.removeAttribute('aria-labelledby')\n              } else if (ariaLabelledBy) {\n                element.setAttribute('aria-labelledby', ariaLabelledBy)\n              }\n            }\n          }\n        }\n      }, [id, htmlFor])\n    }\n\n    return (\n      <LabelProvider id={id} controlRef={controlRef}>\n        <LabelFrame\n          id={id}\n          // @ts-ignore\n          htmlFor={htmlFor}\n          {...labelProps}\n          ref={composedRefs as any}\n          onMouseDown={(event) => {\n            props.onMouseDown?.(event)\n            // prevent text selection when double clicking label\n            if (!event.defaultPrevented && event.detail > 1) {\n              event.preventDefault()\n            }\n          }}\n          onPress={(event) => {\n            props.onPress?.(event)\n\n            if (isWeb) {\n              if (htmlFor || !controlRef.current || event.defaultPrevented) return\n              const isClickingControl = controlRef.current.contains(\n                event.target as any as Node\n              )\n              // Ensure event was generated by a user action\n              // https://developer.mozilla.org/en-US/docs/Web/API/Event/isTrusted\n              const isUserClick = event.isTrusted === true\n              /**\n               * When a label is wrapped around the control it labels, we trigger the appropriate events\n               * on the control when the label is clicked. We do nothing if the user is already clicking the\n               * control inside the label.\n               */\n              if (!isClickingControl && isUserClick) {\n                controlRef.current.click()\n                controlRef.current.focus()\n              }\n            } else {\n              if (props.htmlFor) {\n                focusFocusable(props.htmlFor)\n              }\n            }\n          }}\n        />\n      </LabelProvider>\n    )\n  }\n)\n\nLabelComponent.displayName = NAME\n\nexport const Label: ReactComponentWithRef<LabelProps, HTMLButtonElement | View> =\n  LabelFrame.extractable(themeable(LabelComponent as any) as any, {\n    neverFlatten: true,\n  })\n\nexport const useLabelContext = (element?: HTMLElement | null) => {\n  const context = useLabelContextImpl('LabelConsumer')\n  const { controlRef } = context\n\n  React.useEffect(() => {\n    if (element) controlRef.current = element\n  }, [element, controlRef])\n\n  return context.id\n}\n", "import { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport type { GestureReponderEvent } from '@tamagui/core'\nimport { composeEventHandlers } from '@tamagui/helpers'\nimport { useLabelContext } from '@tamagui/label'\nimport React, { useMemo } from 'react'\nimport type { PressableProps, View, ViewProps } from 'react-native'\n\nimport { BubbleInput } from './BubbleInput'\nimport { getState, isIndeterminate } from './utils'\n\nexport type CheckedState = boolean | 'indeterminate'\n\ntype CheckboxBaseProps = ViewProps & Pick<PressableProps, 'onPress'>\n\nexport type CheckboxExtraProps = {\n  children?: React.ReactNode\n  id?: string\n  disabled?: boolean\n  checked?: CheckedState\n  defaultChecked?: CheckedState\n  required?: boolean\n  /**\n   *\n   * @param checked Either boolean or \"indeterminate\" which is meant to allow for a third state that means \"neither\", usually indicated by a minus sign.\n   */\n  onCheckedChange?(checked: CheckedState): void\n  labelledBy?: string\n  name?: string\n  value?: string\n}\n\nexport type CheckboxProps = CheckboxBaseProps & CheckboxExtraProps\n\nexport function useCheckbox<R extends View, P extends CheckboxProps>(\n  props: P,\n  [checked, setChecked]: [\n    CheckedState,\n    React.Dispatch<React.SetStateAction<CheckedState>>,\n  ],\n  ref: React.Ref<R>\n) {\n  const {\n    labelledBy: ariaLabelledby,\n    name,\n    required,\n    disabled,\n    value = 'on',\n    onCheckedChange,\n    ...checkboxProps\n  } = props\n  const [button, setButton] = React.useState<HTMLButtonElement | null>(null)\n  const composedRefs = useComposedRefs(ref, setButton as any)\n  const hasConsumerStoppedPropagationRef = React.useRef(false)\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = isWeb ? (button ? Boolean(button.closest('form')) : true) : false\n\n  const labelId = useLabelContext(button)\n  const labelledBy = ariaLabelledby || labelId\n\n  const parentKeyDown = (props as React.HTMLProps<HTMLButtonElement>).onKeyDown\n\n  const handleKeyDown = useMemo(\n    () =>\n      composeEventHandlers(parentKeyDown, (event) => {\n        // According to WAI ARIA, Checkboxes don't activate on enter keypress\n        if (event.key === 'Enter') event.preventDefault()\n      }),\n    [parentKeyDown]\n  )\n\n  const handlePress = useMemo(\n    () =>\n      composeEventHandlers(props.onPress as any, (event: GestureReponderEvent) => {\n        setChecked((prevChecked) => (isIndeterminate(prevChecked) ? true : !prevChecked))\n        if (isFormControl && 'isPropagationStopped' in event) {\n          hasConsumerStoppedPropagationRef.current = event.isPropagationStopped()\n          // if checkbox is in a form, stop propagation from the button so that we only propagate\n          // one click event (from the input). We propagate changes from an input so that native\n          // form validation works and form events reflect checkbox updates.\n          if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation()\n        }\n      }),\n    [isFormControl]\n  )\n\n  return {\n    bubbleInput:\n      isWeb && isFormControl ? (\n        <BubbleInput\n          isHidden\n          control={button}\n          bubbles={!hasConsumerStoppedPropagationRef.current}\n          name={name}\n          value={value}\n          checked={checked}\n          required={required}\n          disabled={disabled}\n        />\n      ) : null,\n    checkboxRef: composedRefs,\n    checkboxProps: {\n      role: 'checkbox',\n      'aria-labelledby': labelledBy,\n      'aria-checked': isIndeterminate(checked) ? 'mixed' : checked,\n      ...checkboxProps,\n      ...(isWeb && {\n        type: 'button',\n        value,\n        'data-state': getState(checked),\n        'data-disabled': disabled ? '' : undefined,\n        disabled: disabled,\n        onKeyDown: disabled ? undefined : handleKeyDown,\n      }),\n      onPress: disabled ? undefined : handlePress,\n    } satisfies CheckboxBaseProps,\n  }\n}\n", "// via radix-ui\n\nimport * as React from 'react'\n\nexport function usePrevious<T>(value: T): T {\n  const ref = React.useRef({ value, previous: value })\n\n  // We compare values before making an update to ensure that\n  // a change has been made. This ensures the previous value is\n  // persisted correctly between renders.\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value\n      ref.current.value = value\n    }\n    return ref.current.previous\n  }, [value])\n}\n", "import { usePrevious } from '@tamagui/use-previous'\nimport * as React from 'react'\n\nimport type { CheckedState } from './useCheckbox'\nimport { isIndeterminate } from './utils'\n\nexport interface BubbleInputProps extends Omit<React.ComponentProps<'input'>, 'checked'> {\n  checked: CheckedState\n  control: HTMLElement | null\n  bubbles: boolean\n\n  isHidden?: boolean\n}\n\nexport const BubbleInput = (props: BubbleInputProps) => {\n  const { checked, bubbles = true, control, isHidden, ...inputProps } = props\n  const ref = React.useRef<HTMLInputElement>(null)\n  const prevChecked = usePrevious(checked)\n  //   const controlSize = useSize(control)\n  // Bubble checked change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!\n    const inputProto = window.HTMLInputElement.prototype\n    const descriptor = Object.getOwnPropertyDescriptor(\n      inputProto,\n      'checked'\n    ) as PropertyDescriptor\n    const setChecked = descriptor.set\n\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', { bubbles })\n      input.indeterminate = isIndeterminate(checked)\n      setChecked.call(input, isIndeterminate(checked) ? false : checked)\n      input.dispatchEvent(event)\n    }\n  }, [prevChecked, checked, bubbles])\n\n  return (\n    <input\n      type=\"checkbox\"\n      defaultChecked={isIndeterminate(checked) ? false : checked}\n      {...inputProps}\n      tabIndex={-1}\n      ref={ref}\n      aria-hidden={isHidden}\n      style={{\n        ...(isHidden\n          ? {\n              // ...controlSize,\n              position: 'absolute',\n              pointerEvents: 'none',\n              opacity: 0,\n              margin: 0,\n            }\n          : {\n              appearance: 'auto',\n              accentColor: 'var(--color6)',\n            }),\n\n        ...props.style,\n      }}\n    />\n  )\n}\n", "import type { CheckedState } from './useCheckbox'\n\nexport function isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate'\n}\n\nexport function getState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked'\n}\n", "import { CheckboxFrame, CheckboxIndicatorFrame } from './Checkbox'\nimport { createCheckbox } from './createCheckbox'\n\nexport * from './createCheckbox'\nexport * from './Checkbox'\nexport * from './CheckboxStyledContext'\nexport type { CheckedState } from '@tamagui/checkbox-headless'\n\nexport const Checkbox = createCheckbox({\n  Frame: CheckboxFrame,\n  Indicator: CheckboxIndicatorFrame,\n})\n", "import type { StackProps } from '@tamagui/core'\nimport { Stack, View, styled } from '@tamagui/core'\nimport type { Scope } from '@tamagui/create-context'\nimport { createContextScope } from '@tamagui/create-context'\nimport { composeEventHandlers, withStaticProperties } from '@tamagui/helpers'\n\nconst FORM_NAME = 'Form'\n\nexport const FormFrame = styled(Stack, {\n  name: FORM_NAME,\n  tag: 'form',\n})\n\n/* -------------------------------------------------------------------------------------------------\n * Context\n * -----------------------------------------------------------------------------------------------*/\n\ntype ScopedProps<P> = P & { __scopeForm?: Scope }\nconst [createFormContext] = createContextScope(FORM_NAME)\n\ntype FormContextValue = {\n  onSubmit?: () => unknown\n}\n\nexport const [FormProvider, useFormContext] =\n  createFormContext<FormContextValue>(FORM_NAME)\n\nexport type FormProps = StackProps & {\n  onSubmit?: () => void\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FormTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'FormTrigger'\n\nconst FormTriggerFrame = styled(View, {\n  name: TRIGGER_NAME,\n})\n\nexport interface FormTriggerProps extends StackProps {}\n\nexport const FormTrigger = FormTriggerFrame.styleable(\n  (props: ScopedProps<FormTriggerProps>, forwardedRef) => {\n    const { __scopeForm, children, onPress, ...triggerProps } = props\n    const context = useFormContext(TRIGGER_NAME, __scopeForm)\n\n    return (\n      <FormTriggerFrame\n        tag=\"button\"\n        {...(triggerProps as any)}\n        ref={forwardedRef}\n        onPress={composeEventHandlers(onPress as any, context.onSubmit)}\n      >\n        {children}\n      </FormTriggerFrame>\n    )\n  }\n)\n\n/* -------------------------------------------------------------------------------------------------\n * Form\n * -----------------------------------------------------------------------------------------------*/\n\nconst FormComponent = FormFrame.extractable(function Form({\n  onSubmit,\n  ...props\n}: ScopedProps<FormProps>) {\n  return (\n    <FormProvider scope={props.__scopeForm} onSubmit={onSubmit}>\n      <FormFrame {...(props as any)} onSubmit={(e: any) => e.preventDefault()} />\n    </FormProvider>\n  )\n})\n\nexport const Form = withStaticProperties(FormComponent, {\n  Trigger: FormTrigger,\n})\n", "import type { GetProps, UnionableString, Variable } from '@tamagui/core'\nimport {\n  getConfig,\n  getTokens,\n  getVariableValue,\n  isTamaguiElement,\n  mergeProps,\n  spacedChildren,\n  styled,\n  useProps,\n} from '@tamagui/core'\nimport type { Scope } from '@tamagui/create-context'\nimport { createContextScope } from '@tamagui/create-context'\nimport { withStaticProperties } from '@tamagui/helpers'\nimport { ThemeableStack } from '@tamagui/stacks'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport React from 'react'\nimport { ScrollView } from 'react-native'\nimport { useIndex, useIndexedChildren } from './useIndexedChildren'\n\ntype DisablePassBorderRadius = boolean | 'bottom' | 'top' | 'start' | 'end'\n\ninterface GroupContextValue {\n  vertical: boolean\n  disablePassBorderRadius: DisablePassBorderRadius\n  onItemMount: () => void\n  onItemUnmount: () => void\n  radius?: number | UnionableString | Variable<any>\n  disabled?: boolean\n}\n\nconst GROUP_NAME = 'Group'\n\ntype ScopedProps<P> = P & { __scopeGroup?: Scope }\nconst [createGroupContext, createGroupScope] = createContextScope(GROUP_NAME)\nconst [GroupProvider, useGroupContext] = createGroupContext<GroupContextValue>(GROUP_NAME)\n\nexport const GroupFrame = styled(ThemeableStack, {\n  name: 'GroupFrame',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$true',\n      },\n    },\n\n    size: (val, { tokens }) => {\n      const borderRadius = tokens.radius[val] ?? val ?? tokens.radius['$true']\n      return {\n        borderRadius,\n      }\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport type GroupExtraProps = {\n  /**\n   * @deprecated use `orientation` instead\n   */\n  axis?: 'horizontal' | 'vertical'\n  orientation?: 'horizontal' | 'vertical'\n  scrollable?: boolean\n  /**\n   * @default false\n   */\n  showScrollIndicator?: boolean\n  disabled?: boolean\n  disablePassBorderRadius?: DisablePassBorderRadius\n  /**\n   * forces the group to use the Group.Item API\n   */\n  forceUseItem?: boolean\n}\n\nexport type GroupProps = GetProps<typeof GroupFrame> & GroupExtraProps\n\nfunction createGroup(verticalDefault: boolean) {\n  return withStaticProperties(\n    GroupFrame.styleable<ScopedProps<GroupExtraProps>>((props, ref) => {\n      const activeProps = useProps(props)\n\n      const {\n        __scopeGroup,\n        children: childrenProp,\n        space,\n        size = '$true',\n        spaceDirection,\n        separator,\n        scrollable,\n        axis = verticalDefault ? 'vertical' : 'horizontal',\n        orientation = axis,\n        disabled: disabledProp,\n        disablePassBorderRadius: disablePassBorderRadiusProp,\n        borderRadius,\n        forceUseItem,\n        ...restProps\n      } = activeProps\n\n      const vertical = orientation === 'vertical'\n      const [itemChildrenCount, setItemChildrenCount] = useControllableState({\n        defaultProp: forceUseItem ? 1 : 0,\n      })\n\n      const isUsingItems = itemChildrenCount > 0\n\n      // 1 off given border to adjust for border radius? This should be user controllable\n      const radius =\n        borderRadius ??\n        (size ? getVariableValue(getTokens().radius[size]) - 1 : undefined)\n\n      const hasRadius = radius !== undefined\n      const disablePassBorderRadius = disablePassBorderRadiusProp ?? !hasRadius\n\n      const childrenArray = React.Children.toArray(childrenProp)\n      const children = isUsingItems\n        ? React.Children.toArray(childrenProp).filter(React.isValidElement)\n        : childrenArray.map((child, i) => {\n            if (!React.isValidElement(child) || child.type === React.Fragment) {\n              return child\n            }\n            const disabled = child.props.disabled ?? disabledProp\n\n            const isFirst = i === 0\n            const isLast = i === childrenArray.length - 1\n\n            const radiusStyles =\n              disablePassBorderRadius === true\n                ? null\n                : getBorderRadius({\n                    isFirst,\n                    isLast,\n                    radius,\n                    vertical,\n                    disable: disablePassBorderRadius,\n                  })\n            const props = {\n              disabled,\n              ...(isTamaguiElement(child) ? radiusStyles : { style: radiusStyles }),\n            }\n\n            return cloneElementWithPropOrder(child, props)\n          })\n\n      const indexedChildren = useIndexedChildren(\n        spacedChildren({\n          direction: spaceDirection,\n          separator,\n          space,\n          children,\n        })\n      )\n\n      const onItemMount = React.useCallback(\n        () => setItemChildrenCount((prev) => prev + 1),\n        []\n      )\n      const onItemUnmount = React.useCallback(\n        () => setItemChildrenCount((prev) => prev - 1),\n        []\n      )\n\n      return (\n        <GroupProvider\n          disablePassBorderRadius={disablePassBorderRadius}\n          vertical={orientation === 'vertical'}\n          // @ts-ignore this just popped up since new version expo 49\n          radius={radius}\n          disabled={disabledProp}\n          onItemMount={onItemMount}\n          onItemUnmount={onItemUnmount}\n          scope={__scopeGroup}\n        >\n          <GroupFrame\n            ref={ref}\n            size={size}\n            flexDirection={orientation === 'horizontal' ? 'row' : 'column'}\n            borderRadius={borderRadius}\n            {...restProps}\n          >\n            {wrapScroll({ ...activeProps, orientation }, indexedChildren)}\n          </GroupFrame>\n        </GroupProvider>\n      )\n    }),\n    {\n      Item: GroupItem,\n    }\n  )\n}\n\nexport type GroupItemProps = {\n  children: React.ReactNode\n  /**\n   * forces the item to be a starting, center or ending item and gets the respective styles\n   */\n  forcePlacement?: 'first' | 'center' | 'last'\n}\n\nconst GroupItem = React.forwardRef(\n  (\n    props: ScopedProps<GroupItemProps>,\n    // Note unused, breaks popper targets even if i try and compose it\n    _ref\n  ) => {\n    const { __scopeGroup, children, forcePlacement } = props\n    const groupItemProps = useGroupItem(\n      { disabled: React.isValidElement(children) ? children.props.disabled : undefined },\n      forcePlacement,\n      __scopeGroup\n    )\n\n    if (!React.isValidElement(children) || children.type === React.Fragment) {\n      return children as any\n    }\n\n    if (isTamaguiElement(children)) {\n      return React.cloneElement(children, groupItemProps)\n    }\n\n    return React.cloneElement(children, {\n      style: {\n        // @ts-ignore\n        ...children.props?.['style'],\n        ...groupItemProps,\n      },\n    } as any)\n  }\n)\n\nexport const useGroupItem = (\n  childrenProps: { disabled: boolean; ref?: any },\n  forcePlacement?: GroupItemProps['forcePlacement'],\n  __scopeGroup?: Scope\n) => {\n  const treeIndex = useIndex()\n  const context = useGroupContext('GroupItem', __scopeGroup)\n\n  React.useEffect(() => {\n    context.onItemMount()\n    return () => {\n      context.onItemUnmount()\n    }\n  }, [])\n\n  if (!treeIndex) {\n    throw Error('<Group.Item/> should only be used within a <Group/>')\n  }\n\n  const isFirst =\n    forcePlacement === 'first' || (forcePlacement !== 'last' && treeIndex.index === 0)\n  const isLast =\n    forcePlacement === 'last' ||\n    (forcePlacement !== 'first' && treeIndex.index === treeIndex.maxIndex)\n\n  const disabled = childrenProps.disabled ?? context.disabled\n\n  let propsToPass: Record<string, any> = {\n    disabled,\n  }\n\n  if (context.disablePassBorderRadius !== true) {\n    const borderRadius = getBorderRadius({\n      radius: context.radius,\n      isFirst,\n      isLast,\n      vertical: context.vertical,\n      disable: context.disablePassBorderRadius,\n    })\n    return { ...propsToPass, ...borderRadius }\n  }\n  return propsToPass\n}\n\nexport const Group = createGroup(true)\nexport const YGroup = Group\nexport const XGroup = createGroup(false)\n\nconst wrapScroll = (\n  { scrollable, orientation, showScrollIndicator = false }: GroupProps,\n  children: any\n) => {\n  if (scrollable)\n    return (\n      <ScrollView\n        {...(orientation === 'vertical' && {\n          showsVerticalScrollIndicator: showScrollIndicator,\n        })}\n        {...(orientation === 'horizontal' && {\n          horizontal: true,\n          showsHorizontalScrollIndicator: showScrollIndicator,\n        })}\n      >\n        {children}\n      </ScrollView>\n    )\n\n  return children\n}\n\nconst getBorderRadius = ({\n  isFirst,\n  isLast,\n  radius,\n  vertical,\n  disable,\n}: {\n  radius: any\n  vertical: boolean\n  isFirst: boolean\n  isLast: boolean\n  disable: DisablePassBorderRadius\n}) => {\n  // TODO: RTL support would be nice here\n  return {\n    borderTopLeftRadius: isFirst && disable !== 'top' && disable !== 'start' ? radius : 0,\n    borderTopRightRadius:\n      disable !== 'top' &&\n      disable !== 'end' &&\n      ((vertical && isFirst) || (!vertical && isLast))\n        ? radius\n        : 0,\n    borderBottomLeftRadius:\n      disable !== 'bottom' &&\n      disable !== 'start' &&\n      ((vertical && isLast) || (!vertical && isFirst))\n        ? radius\n        : 0,\n    borderBottomRightRadius:\n      isLast && disable !== 'bottom' && disable !== 'end' ? radius : 0,\n  }\n}\n\nconst cloneElementWithPropOrder = (child: any, props: Object) => {\n  const next = mergeProps(child.props, props, getConfig().shorthands)\n  return React.cloneElement({ ...child, props: null }, next)\n}\n", "/**\n * The MIT License (MIT)\n\nCopyright (c) 2022 Reforest authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n */\n\nimport * as React from 'react'\n\nconst MaxIndexContext = React.createContext<number[]>([])\nconst IndexContext = React.createContext<string | null>(null)\n\n/** Returns the index path data based on the closest useIndexedChildren. */\nexport function useIndex() {\n  const maxIndexPath = React.useContext(MaxIndexContext)\n  const indexPathString = React.useContext(IndexContext)\n\n  return React.useMemo(() => {\n    if (indexPathString === null) {\n      return null\n    }\n\n    const indexPath = parseIndexPath(indexPathString)\n    const maxIndex = maxIndexPath[maxIndexPath.length - 1]\n    const index = indexPath[indexPath.length - 1]\n\n    return {\n      maxIndex,\n      maxIndexPath,\n      index,\n      indexPath,\n      indexPathString,\n      isFirst: index === 0,\n      isLast: index === maxIndex,\n      isEven: index % 2 === 0,\n      isOdd: Math.abs(index % 2) === 1,\n    }\n  }, [maxIndexPath, indexPathString])\n}\n\n/** Provides the current index path for each child. */\nexport function useIndexedChildren(children: React.ReactNode) {\n  const parentMaxIndexPath = React.useContext(MaxIndexContext)\n  const indexPathString = React.useContext(IndexContext)\n  const childrenCount = React.Children.count(children)\n  const maxIndexPath = React.useMemo(\n    () => parentMaxIndexPath.concat(childrenCount - 1),\n    [childrenCount]\n  )\n\n  return (\n    <MaxIndexContext.Provider value={maxIndexPath}>\n      {React.Children.map(children, (child, index) =>\n        React.isValidElement(child) ? (\n          <IndexContext.Provider\n            key={child.key}\n            value={\n              indexPathString\n                ? `${indexPathString}.${index.toString()}`\n                : index.toString()\n            }\n          >\n            {child}\n          </IndexContext.Provider>\n        ) : (\n          child\n        )\n      )}\n    </MaxIndexContext.Provider>\n  )\n}\n\n/**\n * Parses a numerical dot-separated string as an index path.\n *\n * @example\n * parseIndexPath('0.10.2') -> [0, 10, 2]\n */\nfunction parseIndexPath(indexPathString: string) {\n  return indexPathString.split('.').map((index) => Number.parseInt(index, 10))\n}\n", "import { View, styled } from '@tamagui/core'\n\nexport const Section = styled(View, {\n  name: 'Section',\n  tag: 'section',\n  flexDirection: 'column',\n  accessibilityRole: 'summary',\n})\n\nexport const Article = styled(View, {\n  name: 'Article',\n  tag: 'article',\n  flexDirection: 'column',\n})\n\nexport const Main = styled(View, {\n  name: 'Main',\n  tag: 'main',\n  flexDirection: 'column',\n})\n\nexport const Header = styled(View, {\n  name: 'Header',\n  tag: 'header',\n  accessibilityRole: 'header',\n  flexDirection: 'column',\n})\n\nexport const Aside = styled(View, {\n  name: 'Aside',\n  tag: 'aside',\n  flexDirection: 'column',\n  // accessibilityRole: 'complementary',\n})\n\nexport const Footer = styled(View, {\n  name: 'Footer',\n  tag: 'footer',\n  flexDirection: 'column',\n  // accessibilityRole: 'contentinfo',\n})\n\nexport const Nav = styled(View, {\n  name: 'Nav',\n  tag: 'nav',\n  flexDirection: 'column',\n  // accessibilityRole: 'navigation',\n})\n", "import { getFontSize } from '@tamagui/font-size'\nimport { getFontSized } from '@tamagui/get-font-sized'\nimport { getSize, getSpace } from '@tamagui/get-token'\nimport { withStaticProperties } from '@tamagui/helpers'\nimport { useGetThemedIcon } from '@tamagui/helpers-tamagui'\nimport { ThemeableStack, YStack } from '@tamagui/stacks'\nimport type { TextParentStyles } from '@tamagui/text'\nimport { SizableText, wrapChildrenInText } from '@tamagui/text'\nimport type {\n  FontSizeTokens,\n  GetProps,\n  PropsWithoutMediaStyles,\n  SizeTokens,\n  ThemeableProps,\n} from '@tamagui/web'\nimport { Spacer, getTokens, getVariableValue, styled, useProps } from '@tamagui/web'\nimport type { FunctionComponent, ReactNode } from 'react'\n\ntype ListItemIconProps = { color?: any; size?: any }\ntype IconProp = JSX.Element | FunctionComponent<ListItemIconProps> | null\n\nexport type ListItemExtraProps = Omit<TextParentStyles, 'TextComponent' | 'noTextWrap'> &\n  ThemeableProps & {\n    /**\n     * add icon before, passes color and size automatically if Component\n     */\n    icon?: IconProp\n    /**\n     * add icon after, passes color and size automatically if Component\n     */\n    iconAfter?: IconProp\n    /**\n     * adjust icon relative to size\n     */\n    /**\n     * default: -1\n     */\n    scaleIcon?: number\n    /**\n     * make the spacing elements flex\n     */\n    spaceFlex?: number | boolean\n    /**\n     * adjust internal space relative to icon size\n     */\n    scaleSpace?: number\n    /**\n     * title\n     */\n    title?: ReactNode\n    /**\n     * subtitle\n     */\n    subTitle?: ReactNode\n    /**\n     * will not wrap text around `children` only, \"all\" will not wrap title or subTitle\n     */\n    noTextWrap?: boolean | 'all'\n  }\n\nexport type ListItemProps = GetProps<typeof ListItemFrame> & ListItemExtraProps\n\nconst NAME = 'ListItem'\n\nexport const ListItemFrame = styled(ThemeableStack, {\n  name: NAME,\n  tag: 'li',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$true',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'nowrap',\n        width: '100%',\n        borderColor: '$borderColor',\n        maxWidth: '100%',\n        overflow: 'hidden',\n        flexDirection: 'row',\n        backgroundColor: '$background',\n        cursor: 'default',\n      },\n    },\n\n    size: {\n      '...size': (val: SizeTokens, { tokens }) => {\n        return {\n          minHeight: tokens.size[val],\n          paddingHorizontal: tokens.space[val],\n          paddingVertical: getSpace(tokens.space[val], {\n            shift: -4,\n          }),\n        }\n      },\n    },\n\n    active: {\n      true: {\n        hoverStyle: {\n          backgroundColor: '$background',\n        },\n      },\n    },\n\n    disabled: {\n      true: {\n        opacity: 0.5,\n        // TODO breaking types\n        pointerEvents: 'none' as any,\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport const ListItemText = styled(SizableText, {\n  name: 'ListItemText',\n\n  variants: {\n    unstyled: {\n      false: {\n        color: '$color',\n        size: '$true',\n        flexGrow: 1,\n        flexShrink: 1,\n        ellipse: true,\n        cursor: 'inherit',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport const ListItemSubtitle = styled(ListItemText, {\n  name: 'ListItemSubtitle',\n\n  variants: {\n    unstyled: {\n      false: {\n        opacity: 0.6,\n        maxWidth: '100%',\n        color: '$color',\n      },\n    },\n\n    size: {\n      '...size': (val, extras) => {\n        const oneSmaller = getSize(val, {\n          shift: -1,\n          excludeHalfSteps: true,\n        })\n        const fontStyle = getFontSized(oneSmaller.key as FontSizeTokens, extras)\n        return fontStyle\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport const ListItemTitle = styled(ListItemText, {\n  name: 'ListItemTitle',\n})\n\nexport const useListItem = (\n  propsIn: ListItemProps,\n  {\n    Text = ListItemText,\n    Subtitle = ListItemSubtitle,\n    Title = ListItemTitle,\n  }: {\n    Title?: any\n    Subtitle?: any\n    Text?: any\n  } = { Text: ListItemText, Subtitle: ListItemSubtitle, Title: ListItemTitle }\n): { props: PropsWithoutMediaStyles<ListItemProps> } => {\n  // careful not to destructure and re-order props, order is important\n  const props = useProps(propsIn, {\n    resolveValues: 'none',\n  })\n\n  const {\n    children,\n    icon,\n    iconAfter,\n    noTextWrap,\n    theme: themeName,\n    space,\n    spaceFlex,\n    scaleIcon = 1,\n    scaleSpace = 1,\n    unstyled = false,\n    subTitle,\n    title,\n\n    // text props\n    color,\n    fontWeight,\n    fontSize,\n    fontFamily,\n    letterSpacing,\n    textAlign,\n    ellipse,\n\n    ...rest\n  } = props\n\n  const textProps = {\n    color,\n    fontWeight,\n    fontSize,\n    fontFamily,\n    letterSpacing,\n    textAlign,\n    ellipse,\n    children,\n  }\n\n  const size = props.size || '$true'\n  const iconSize = getFontSize(size as any) * scaleIcon\n  const getThemedIcon = useGetThemedIcon({ size: iconSize, color: color as any })\n  const [themedIcon, themedIconAfter] = [icon, iconAfter].map(getThemedIcon)\n  const sizeToken = getTokens().space[props.space as any] ?? iconSize\n  const spaceSize = getVariableValue(sizeToken) * scaleSpace\n\n  const contents = wrapChildrenInText(Text, textProps)\n\n  return {\n    props: {\n      ...rest,\n      children: (\n        <>\n          {themedIcon ? (\n            <>\n              {themedIcon}\n              <Spacer size={spaceSize} />\n            </>\n          ) : null}\n          {/* helper for common title/subtitle pttern */}\n          {/* biome-ignore lint/complexity/noExtraBooleanCast: <explanation> */}\n          {Boolean(title || subTitle) ? (\n            <YStack flex={1}>\n              {noTextWrap === 'all' ? title : <Title size={size}>{title}</Title>}\n              {subTitle ? (\n                <>\n                  {typeof subTitle === 'string' && noTextWrap !== 'all' ? (\n                    // TODO can use theme but we need to standardize to alt themes\n                    // or standardize on subtle colors in themes\n                    <Subtitle unstyled={unstyled} size={size}>\n                      {subTitle}\n                    </Subtitle>\n                  ) : (\n                    subTitle\n                  )}\n                </>\n              ) : null}\n              {contents}\n            </YStack>\n          ) : (\n            contents\n          )}\n          {themedIconAfter ? (\n            <>\n              <Spacer size={spaceSize} />\n              {themedIconAfter}\n            </>\n          ) : null}\n        </>\n      ),\n    },\n  }\n}\n\nconst ListItemComponent = ListItemFrame.styleable<ListItemExtraProps>(\n  function ListItem(props, ref) {\n    const { props: listItemProps } = useListItem(props)\n    return <ListItemFrame ref={ref} {...listItemProps} />\n  }\n)\n\nexport const ListItem = withStaticProperties(ListItemComponent, {\n  Text: ListItemText,\n  Subtitle: ListItemSubtitle,\n})\n", "import type { AnimatePresenceProps } from '@tamagui/animate-presence'\nimport { AnimatePresence, PresenceChild } from '@tamagui/animate-presence'\nimport type { JSX } from 'react/jsx-runtime'\n\ntype BaseProps = {\n  children: React.ReactNode\n}\n\ntype PresenceProps = AnimatePresenceProps & {\n  type: 'presence'\n  present: boolean\n  keepChildrenMounted?: boolean\n}\n\nexport type AnimateProps = BaseProps & PresenceProps\n\n/**\n * Because mounting and unmounting children can be expensive, this gives us the\n * option to avoid that.\n *\n * type: 'presence' will act just like AnimatePresence, except you use `present`\n * instead of conditional children.\n * Note that this does avoid reconciling the children even when present={false}\n * so no extra cost to perf over AnimatePresence.\n *\n * type: 'presence' with keepChildrenMounted true *always* render the children so you pay\n * the cost up-front to mount them, but then you avoid the mount cost at the start\n * of the animation.\n *\n * There's no \"right way\" it just depends on the use case, this component just makes\n * it easier to choose the strategy yourself.\n *\n *\n */\n\nexport function Animate({ children, type, ...props }: AnimateProps): JSX.Element {\n  if (type === 'presence') {\n    if (props.keepChildrenMounted) {\n      return (\n        <PresenceChild\n          initial={props.initial ? undefined : false}\n          onExitComplete={props.onExitComplete}\n          enterVariant={props.enterVariant}\n          exitVariant={props.exitVariant}\n          enterExitVariant={props.enterExitVariant}\n          // BUGFIX: this causes continous re-renders if keepChildrenMounted is true, see HeaderMenu\n          // but since we always re-render this component on open changes this should be fine to leave off?\n          presenceAffectsLayout={false}\n          isPresent={props.present}\n          custom={props.custom}\n        >\n          {children as any}\n        </PresenceChild>\n      )\n    }\n\n    return <AnimatePresence {...props}>{props.present ? children : null}</AnimatePresence>\n  }\n\n  return <>{children}</>\n}\n", "/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n", "import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n", "import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n", "import React from 'react'\n\nimport * as Floating from './Floating'\n\nexport type UseFloatingFn = typeof Floating.useFloating\n\ntype InferFloatingProps = UseFloatingFn extends (props: infer Props) => any\n  ? Props\n  : never\n\nexport type UseFloatingProps = InferFloatingProps & {\n  sameScrollView?: boolean\n}\n\nexport type UseFloatingReturn = Floating.UseFloatingReturn & {\n  context?: any\n  getFloatingProps?: (props: { ref: any; [key: string]: any }) => any\n  getReferenceProps?: (props: { ref: any; [key: string]: any }) => any\n}\n\nexport const FloatingOverrideContext = React.createContext<UseFloatingFn | null>(null)\n\nexport const useFloating = (props: UseFloatingProps): UseFloatingReturn => {\n  const context = React.useContext(FloatingOverrideContext)\n  return (context || Floating.useFloating)?.(props)\n}\n", "// adapted from radix-ui popper\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport { useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport type { ScopedProps, SizeTokens, StackProps } from '@tamagui/core'\nimport {\n  Stack,\n  View as TamaguiView,\n  createStyledContext,\n  getVariableValue,\n  styled,\n  useProps,\n} from '@tamagui/core'\nimport type {\n  Coords,\n  OffsetOptions,\n  Placement,\n  Strategy,\n  UseFloatingReturn,\n  SizeOptions,\n} from '@tamagui/floating'\nimport {\n  arrow,\n  autoUpdate,\n  flip,\n  offset as offsetFn,\n  platform,\n  shift,\n  useFloating,\n  size as sizeMiddleware,\n} from '@tamagui/floating'\nimport { getSpace } from '@tamagui/get-token'\nimport type { SizableStackProps, YStackProps } from '@tamagui/stacks'\nimport { ThemeableStack, YStack } from '@tamagui/stacks'\nimport { startTransition } from '@tamagui/start-transition'\nimport * as React from 'react'\nimport type { View } from 'react-native'\nimport { Keyboard, useWindowDimensions } from 'react-native'\n\ntype ShiftProps = typeof shift extends (options: infer Opts) => void ? Opts : never\ntype FlipProps = typeof flip extends (options: infer Opts) => void ? Opts : never\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nexport type PopperContextValue = UseFloatingReturn & {\n  size?: SizeTokens\n  placement?: Placement\n  arrowRef: any\n  onArrowSize?: (val: number) => void\n  hasFloating: boolean\n  arrowStyle?: Partial<Coords> & {\n    centerOffset: number\n  }\n}\n\nexport const PopperContext = createStyledContext<PopperContextValue>({} as any)\n\nexport const { useStyledContext: usePopperContext, Provider: PopperProvider } =\n  PopperContext\n\nexport type PopperProps = {\n  size?: SizeTokens\n  children?: React.ReactNode\n\n  /**\n   * Determine the preferred placement of the content in relation to the trigger\n   */\n  placement?: Placement\n\n  /**\n   * Attempts to shift the content to stay within the windiw\n   * @see https://floating-ui.com/docs/shift\n   */\n  stayInFrame?: ShiftProps | boolean\n\n  /**\n   * Allows content to switch sides when space is limited.\n   * @see https://floating-ui.com/docs/flip\n   */\n  allowFlip?: FlipProps | boolean\n\n  /**\n   * Resizes the content to fix inside the screen when space is limited\n   * @see https://floating-ui.com/docs/size\n   */\n  resize?: boolean | Omit<SizeOptions, 'apply'>\n\n  /**\n   * Choose between absolute or fixed positioning\n   */\n  strategy?: Strategy\n\n  /**\n   * Move the content away from the trigger\n   * @see https://floating-ui.com/docs/offset\n   */\n  offset?: OffsetOptions\n\n  disableRTL?: boolean\n}\n\ntype ScopedPopperProps<P> = ScopedProps<P, 'Popper'>\n\nconst checkFloating =\n  process.env.TAMAGUI_TARGET === 'native'\n    ? {\n        name: 'checkFloating',\n        fn(data: any) {\n          return {\n            data: {\n              hasFloating: !!data.rects.floating.width,\n            },\n          }\n        },\n      }\n    : undefined\n\nexport type PopperSetupOptions = {\n  disableRTL?: boolean\n}\n\nconst setupOptions: PopperSetupOptions = {}\n\nexport function setupPopper(options?: PopperSetupOptions) {\n  Object.assign(setupOptions, options)\n}\n\nexport function Popper(props: ScopedPopperProps<PopperProps>) {\n  const {\n    children,\n    size,\n    strategy = 'absolute',\n    placement = 'bottom',\n    stayInFrame,\n    allowFlip,\n    offset,\n    disableRTL,\n    resize,\n    __scopePopper,\n  } = props\n\n  const [arrowEl, setArrow] = React.useState<any>(null)\n  const [arrowSize, setArrowSize] = React.useState(0)\n  const offsetOptions = offset ?? arrowSize\n  const floatingStyle = React.useRef({})\n\n  let floating = useFloating({\n    strategy,\n    placement,\n    sameScrollView: false, // this only takes effect on native\n    whileElementsMounted: autoUpdate,\n    platform:\n      (disableRTL ?? setupOptions.disableRTL)\n        ? {\n            ...platform,\n            isRTL(element) {\n              return false\n            },\n          }\n        : platform,\n    middleware: [\n      stayInFrame\n        ? shift(typeof stayInFrame === 'boolean' ? {} : stayInFrame)\n        : (null as any),\n      allowFlip ? flip(typeof allowFlip === 'boolean' ? {} : allowFlip) : (null as any),\n      arrowEl ? arrow({ element: arrowEl }) : (null as any),\n      typeof offsetOptions !== 'undefined' ? offsetFn(offsetOptions) : (null as any),\n      checkFloating,\n      process.env.TAMAGUI_TARGET !== 'native' && resize\n        ? sizeMiddleware({\n            apply({ availableHeight, availableWidth }) {\n              Object.assign(floatingStyle.current, {\n                maxHeight: `${availableHeight}px`,\n                maxWidth: `${availableWidth}px`,\n              })\n              // we wrap PopperContent with one container stack so we need to account for it\n              const floatingChild = floating.refs.floating.current?.firstChild\n              if (floatingChild && floatingChild instanceof HTMLElement) {\n                Object.assign(floatingChild.style, floatingStyle.current)\n              }\n            },\n            ...(typeof resize === 'object' && resize),\n          })\n        : (null as any),\n    ].filter(Boolean),\n  })\n\n  if (process.env.TAMAGUI_TARGET !== 'native') {\n    // add our size middleware here\n    floating = React.useMemo(() => {\n      const og = floating.getFloatingProps\n      if (resize && og) {\n        floating.getFloatingProps = (props) => {\n          return og({\n            ...props,\n            style: {\n              ...props.style,\n              ...floatingStyle.current,\n            },\n          })\n        }\n      }\n      return floating\n    }, [floating, resize ? JSON.stringify(resize) : null])\n  }\n\n  const { middlewareData } = floating\n\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    // On Native there's no autoupdate so we call update() when necessary\n\n    // Subscribe to window dimensions (orientation, scale, etc...)\n    const dimensions = useWindowDimensions()\n\n    // Subscribe to keyboard state\n    const [keyboardOpen, setKeyboardOpen] = React.useState(false)\n    React.useEffect(() => {\n      const showSubscription = Keyboard.addListener('keyboardDidShow', () => {\n        startTransition(() => {\n          setKeyboardOpen(true)\n        })\n      })\n      const hideSubscription = Keyboard.addListener('keyboardDidHide', () => {\n        startTransition(() => {\n          setKeyboardOpen(false)\n        })\n      })\n\n      return () => {\n        showSubscription.remove()\n        hideSubscription.remove()\n      }\n    }, [])\n\n    useIsomorphicLayoutEffect(() => {\n      floating.update()\n    }, [dimensions, keyboardOpen])\n  }\n\n  const popperContext = {\n    size,\n    arrowRef: setArrow,\n    arrowStyle: middlewareData.arrow,\n    onArrowSize: setArrowSize,\n    scope: __scopePopper,\n    hasFloating: middlewareData.checkFloating?.hasFloating,\n    ...floating,\n  }\n\n  return <PopperProvider {...popperContext}>{children}</PopperProvider>\n}\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\ntype PopperAnchorRef = HTMLElement | View\n\nexport type PopperAnchorProps = YStackProps & {\n  virtualRef?: React.RefObject<any>\n}\n\nexport const PopperAnchor = YStack.extractable(\n  React.forwardRef<PopperAnchorRef, ScopedPopperProps<PopperAnchorProps>>(\n    function PopperAnchor(props: ScopedPopperProps<PopperAnchorProps>, forwardedRef) {\n      const { virtualRef, __scopePopper, ...anchorProps } = props\n      const { getReferenceProps, refs } = usePopperContext(__scopePopper)\n      const ref = React.useRef<PopperAnchorRef>(null)\n      const composedRefs = useComposedRefs(forwardedRef, ref, refs.setReference as any)\n\n      React.useEffect(() => {\n        if (virtualRef) {\n          refs.setReference(virtualRef.current)\n        }\n      }, [virtualRef])\n\n      // if (virtualRef) {\n      //   return null\n      // }\n\n      const stackProps = {\n        ref: composedRefs,\n        ...anchorProps,\n      }\n      return (\n        <TamaguiView\n          {...(getReferenceProps ? getReferenceProps(stackProps) : stackProps)}\n        />\n      )\n    }\n  )\n)\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\ntype PopperContentElement = HTMLElement | View\n\nexport type PopperContentProps = SizableStackProps & {\n  enableAnimationForPositionChange?: boolean\n}\n\nexport const PopperContentFrame = styled(ThemeableStack, {\n  name: 'PopperContent',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$true',\n        backgroundColor: '$background',\n        alignItems: 'center',\n        radiused: true,\n      },\n    },\n\n    size: {\n      '...size': (val, { tokens }) => {\n        return {\n          padding: tokens.space[val],\n          borderRadius: tokens.radius[val],\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport const PopperContent = React.forwardRef<\n  PopperContentElement,\n  ScopedPopperProps<PopperContentProps>\n>(function PopperContent(props: ScopedPopperProps<PopperContentProps>, forwardedRef) {\n  const { __scopePopper, enableAnimationForPositionChange, ...rest } = props\n  const { strategy, placement, refs, x, y, getFloatingProps, size } =\n    usePopperContext(__scopePopper)\n  const contentRefs = useComposedRefs<any>(refs.setFloating, forwardedRef)\n\n  const [needsMeasure, setNeedsMeasure] = React.useState(enableAnimationForPositionChange)\n\n  useIsomorphicLayoutEffect(() => {\n    if (x && y) {\n      setNeedsMeasure(false)\n    }\n  }, [enableAnimationForPositionChange, x, y])\n\n  // default to not showing if positioned at 0, 0\n  let show = true\n\n  const frameProps = {\n    ref: contentRefs,\n    x: x || 0,\n    y: y || 0,\n    top: 0,\n    left: 0,\n    position: strategy,\n    opacity: show ? 1 : 0,\n    ...(enableAnimationForPositionChange && {\n      // apply animation but disable it on initial render to avoid animating from 0 to the first position\n      animation: rest.animation,\n      animateOnly: needsMeasure ? [] : rest.animateOnly,\n      animatePresence: false,\n    }),\n    ...(x === 0 &&\n      y === 0 && {\n        opacity: 0,\n        animateOnly: [],\n      }),\n  }\n\n  // outer frame because we explicitly don't want animation to apply to this\n\n  const { style, ...floatingProps } = getFloatingProps\n    ? getFloatingProps(frameProps)\n    : frameProps\n\n  return (\n    <Stack {...floatingProps}>\n      <PopperContentFrame\n        key=\"popper-content-frame\"\n        data-placement={placement}\n        data-strategy={strategy}\n        contain=\"layout\"\n        size={size}\n        {...style}\n        {...rest}\n      />\n    </Stack>\n  )\n})\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nexport type PopperArrowExtraProps = {\n  offset?: number\n  size?: SizeTokens\n  __scopePopper?: string\n}\n\nexport type PopperArrowProps = YStackProps & PopperArrowExtraProps\n\nconst PopperArrowFrame = styled(YStack, {\n  name: 'PopperArrow',\n\n  variants: {\n    unstyled: {\n      false: {\n        borderColor: '$borderColor',\n        backgroundColor: '$background',\n        position: 'relative',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nconst PopperArrowOuterFrame = styled(YStack, {\n  name: 'PopperArrowOuter',\n\n  variants: {\n    unstyled: {\n      false: {\n        position: 'absolute',\n        zIndex: 1_000_000,\n        pointerEvents: 'none',\n        overflow: 'hidden',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nconst opposites = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n} as const\n\ntype Sides = keyof typeof opposites\n\nexport const PopperArrow = PopperArrowFrame.styleable<PopperArrowExtraProps>(\n  function PopperArrow(propsIn: ScopedPopperProps<PopperArrowProps>, forwardedRef) {\n    const { __scopePopper, ...rest } = propsIn\n    const props = useProps(rest)\n    const { offset, size: sizeProp, borderWidth = 0, ...arrowProps } = props\n\n    const context = usePopperContext(__scopePopper)\n    const sizeVal =\n      typeof sizeProp === 'number'\n        ? sizeProp\n        : getVariableValue(\n            getSpace(sizeProp ?? context.size, {\n              shift: -2,\n              bounds: [2],\n            })\n          )\n\n    const size = Math.max(0, +sizeVal)\n\n    const { placement } = context\n    const refs = useComposedRefs(context.arrowRef, forwardedRef)\n\n    // Sometimes floating-ui can return NaN during orientation or screen size changes on native\n    // so we explicitly force the x,y position types as a number\n    const x = (context.arrowStyle?.x as number) || 0\n    const y = (context.arrowStyle?.y as number) || 0\n\n    const primaryPlacement = (placement ? placement.split('-')[0] : 'top') as Sides\n\n    const arrowStyle: StackProps = { x, y, width: size, height: size }\n\n    const innerArrowStyle: StackProps = {}\n    const isVertical = primaryPlacement === 'bottom' || primaryPlacement === 'top'\n\n    if (primaryPlacement) {\n      // allows for extra diagonal size\n      arrowStyle[isVertical ? 'width' : 'height'] = size * 2\n      const oppSide = opposites[primaryPlacement]\n      if (oppSide) {\n        arrowStyle[oppSide] = -size\n        innerArrowStyle[oppSide] = size / 2\n      }\n      if (oppSide === 'top' || oppSide === 'bottom') {\n        arrowStyle.left = 0\n      }\n      if (oppSide === 'left' || oppSide === 'right') {\n        arrowStyle.top = 0\n      }\n\n      // send the Arrow's offset up to Popper\n      useIsomorphicLayoutEffect(() => {\n        context.onArrowSize?.(size)\n      }, [size, context.onArrowSize])\n    }\n\n    // outer frame to cut off for ability to have nicer shadows/borders\n    return (\n      <PopperArrowOuterFrame ref={refs} {...arrowStyle}>\n        <PopperArrowFrame\n          width={size}\n          height={size}\n          {...arrowProps}\n          {...innerArrowStyle}\n          rotate=\"45deg\"\n          {...(primaryPlacement === 'bottom' && {\n            borderLeftWidth: borderWidth,\n            borderTopWidth: borderWidth,\n          })}\n          {...(primaryPlacement === 'top' && {\n            borderBottomWidth: borderWidth,\n            borderRightWidth: borderWidth,\n          })}\n          {...(primaryPlacement === 'right' && {\n            borderLeftWidth: borderWidth,\n            borderBottomWidth: borderWidth,\n          })}\n          {...(primaryPlacement === 'left' && {\n            borderTopWidth: borderWidth,\n            borderRightWidth: borderWidth,\n          })}\n        />\n      </PopperArrowOuterFrame>\n    )\n  }\n)\n\n/* -----------------------------------------------------------------------------------------------*/\n", "import '@tamagui/polyfill-dev'\n\nimport type { UseHoverProps } from '@floating-ui/react'\nimport {\n  Adapt,\n  AdaptParent,\n  AdaptPortalContents,\n  ProvideAdaptContext,\n  useAdaptContext,\n  useAdaptIsActive,\n  type AdaptParentContextI,\n} from '@tamagui/adapt'\n\nimport { Animate } from '@tamagui/animate'\nimport { ResetPresence } from '@tamagui/animate-presence'\nimport { hideOthers } from '@tamagui/aria-hidden'\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport type { ScopedProps, SizeTokens, StackProps, TamaguiElement } from '@tamagui/core'\nimport {\n  Stack,\n  Theme,\n  View,\n  createShallowSetState,\n  createStyledContext,\n  useEvent,\n  useGet,\n  useThemeName,\n} from '@tamagui/core'\nimport type { DismissableProps } from '@tamagui/dismissable'\nimport { FloatingOverrideContext } from '@tamagui/floating'\nimport type { FocusScopeProps } from '@tamagui/focus-scope'\nimport { FocusScope } from '@tamagui/focus-scope'\nimport { composeEventHandlers, withStaticProperties } from '@tamagui/helpers'\nimport type {\n  PopperArrowExtraProps,\n  PopperArrowProps,\n  PopperContentProps,\n  PopperProps,\n} from '@tamagui/popper'\nimport {\n  Popper,\n  PopperAnchor,\n  PopperArrow,\n  PopperContent,\n  PopperContentFrame,\n  PopperContext,\n  usePopperContext,\n} from '@tamagui/popper'\nimport { Portal, resolveViewZIndex } from '@tamagui/portal'\nimport type { RemoveScrollProps } from '@tamagui/remove-scroll'\nimport { RemoveScroll } from '@tamagui/remove-scroll'\nimport { Sheet, SheetController } from '@tamagui/sheet'\nimport type { YStackProps } from '@tamagui/stacks'\nimport { YStack } from '@tamagui/stacks'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport { StackZIndexContext } from '@tamagui/z-index-stack'\nimport * as React from 'react'\nimport { Platform, ScrollView } from 'react-native'\nimport { useFloatingContext } from './useFloatingContext'\n\n// adapted from radix-ui popover\n\nexport type PopoverProps = PopperProps & {\n  open?: boolean\n  defaultOpen?: boolean\n  onOpenChange?: (open: boolean, via?: 'hover' | 'press') => void\n  keepChildrenMounted?: boolean\n\n  /**\n   * Enable staying open while mouseover\n   */\n  hoverable?: boolean | UseHoverProps\n\n  /**\n   * Disable focusing behavior on open\n   */\n  disableFocus?: boolean\n}\n\ntype ScopedPopoverProps<P> = ScopedProps<P, 'Popover'>\n\ntype PopoverContextValue = {\n  id: string\n  triggerRef: React.RefObject<any>\n  contentId?: string\n  open: boolean\n  onOpenChange(open: boolean, via: 'hover' | 'press'): void\n  onOpenToggle(): void\n  hasCustomAnchor: boolean\n  onCustomAnchorAdd(): void\n  onCustomAnchorRemove(): void\n  size?: SizeTokens\n  breakpointActive?: boolean\n  keepChildrenMounted?: boolean\n  anchorTo?: Rect\n}\n\nconst POPOVER_SCOPE = 'PopoverScope'\n\nexport const PopoverContext = createStyledContext<PopoverContextValue>({} as any)\n\nexport const usePopoverContext = PopoverContext.useStyledContext\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nexport type PopoverAnchorProps = YStackProps\n\nexport const PopoverAnchor = React.forwardRef<\n  TamaguiElement,\n  ScopedPopoverProps<PopoverAnchorProps>\n>(function PopoverAnchor(props: ScopedPopoverProps<PopoverAnchorProps>, forwardedRef) {\n  const { __scopePopover, ...rest } = props\n  const context = usePopoverContext(__scopePopover)\n  const { onCustomAnchorAdd, onCustomAnchorRemove } = context || {}\n\n  React.useEffect(() => {\n    onCustomAnchorAdd()\n    return () => onCustomAnchorRemove()\n  }, [onCustomAnchorAdd, onCustomAnchorRemove])\n\n  return (\n    <PopperAnchor\n      __scopePopper={__scopePopover || POPOVER_SCOPE}\n      {...rest}\n      ref={forwardedRef}\n    />\n  )\n})\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nexport type PopoverTriggerProps = StackProps\n\nexport const PopoverTrigger = React.forwardRef<\n  TamaguiElement,\n  ScopedPopoverProps<PopoverTriggerProps>\n>(function PopoverTrigger(props: ScopedPopoverProps<PopoverTriggerProps>, forwardedRef) {\n  const { __scopePopover, ...rest } = props\n  const context = usePopoverContext(__scopePopover)\n  const anchorTo = context.anchorTo\n  const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef)\n\n  if (!props.children) {\n    return null\n  }\n\n  const trigger = (\n    <View\n      aria-expanded={context.open}\n      // TODO not matching\n      // aria-controls={context.contentId}\n      data-state={getState(context.open)}\n      {...rest}\n      // @ts-ignore\n      ref={composedTriggerRef}\n      onPress={composeEventHandlers(props.onPress as any, context.onOpenToggle)}\n    />\n  )\n\n  const virtualRef = React.useMemo(() => {\n    if (!anchorTo) {\n      return null\n    }\n    return {\n      current: {\n        getBoundingClientRect: () => (isWeb ? DOMRect.fromRect(anchorTo) : anchorTo),\n        ...(!isWeb && {\n          measure: (c) => c(anchorTo?.x, anchorTo?.y, anchorTo?.width, anchorTo?.height),\n          measureInWindow: (c) =>\n            c(anchorTo?.x, anchorTo?.y, anchorTo?.width, anchorTo?.height),\n        }),\n      },\n    }\n  }, [\n    context.anchorTo,\n    anchorTo?.x,\n    anchorTo?.y,\n    anchorTo?.x,\n    anchorTo?.height,\n    anchorTo?.width,\n  ])\n\n  return context.hasCustomAnchor ? (\n    trigger\n  ) : (\n    <PopperAnchor\n      {...(virtualRef && { virtualRef })}\n      __scopePopper={__scopePopover || POPOVER_SCOPE}\n      asChild={rest.asChild}\n    >\n      {trigger}\n    </PopperAnchor>\n  )\n})\n\n/* -------------------------  ------------------------------------------------------------------------\n * PopoverContent\n * -----------------------------------------------------------------------------------------------*/\n\nexport type PopoverContentProps = PopoverContentTypeProps\n\ntype PopoverContentTypeElement = PopoverContentImplElement\n\nexport interface PopoverContentTypeProps\n  extends Omit<PopoverContentImplProps, 'disableOutsidePointerEvents'> {\n  /**\n   * @see https://github.com/theKashey/react-remove-scroll#usage\n   */\n  allowPinchZoom?: RemoveScrollProps['allowPinchZoom']\n\n  /** enable animation for content position changing */\n  enableAnimationForPositionChange?: boolean\n}\n\nexport const PopoverContent = PopperContentFrame.extractable(\n  React.forwardRef<\n    PopoverContentTypeElement,\n    ScopedPopoverProps<PopoverContentTypeProps>\n  >(function PopoverContent(\n    props: ScopedPopoverProps<PopoverContentTypeProps>,\n    forwardedRef\n  ) {\n    const {\n      allowPinchZoom,\n      trapFocus,\n      disableRemoveScroll = true,\n      zIndex,\n      __scopePopover,\n      ...contentImplProps\n    } = props\n    const context = usePopoverContext(__scopePopover)\n    const contentRef = React.useRef<any>(null)\n    const composedRefs = useComposedRefs(forwardedRef, contentRef)\n    const isRightClickOutsideRef = React.useRef(false)\n    const [isFullyHidden, setIsFullyHidden] = React.useState(!context.open)\n\n    if (context.open && isFullyHidden) {\n      setIsFullyHidden(false)\n    }\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      if (!context.open) return\n      const content = contentRef.current\n      if (content) return hideOthers(content)\n    }, [context.open])\n\n    if (!context.keepChildrenMounted) {\n      if (isFullyHidden) {\n        return null\n      }\n    }\n\n    return (\n      <PopoverContentPortal __scopePopover={__scopePopover} zIndex={zIndex}>\n        <Stack\n          pointerEvents={\n            context.open ? (contentImplProps.pointerEvents ?? 'auto') : 'none'\n          }\n        >\n          <PopoverContentImpl\n            {...contentImplProps}\n            disableRemoveScroll={disableRemoveScroll}\n            ref={composedRefs}\n            setIsFullyHidden={setIsFullyHidden}\n            __scopePopover={__scopePopover}\n            // we make sure we're not trapping once it's been closed\n            // (closed !== unmounted when animating out)\n            trapFocus={trapFocus ?? context.open}\n            disableOutsidePointerEvents\n            onCloseAutoFocus={\n              props.onCloseAutoFocus === false\n                ? undefined\n                : composeEventHandlers(props.onCloseAutoFocus, (event) => {\n                    if (event.defaultPrevented) return\n                    event.preventDefault()\n                    if (!isRightClickOutsideRef.current)\n                      context.triggerRef.current?.focus()\n                  })\n            }\n            onPointerDownOutside={composeEventHandlers(\n              props.onPointerDownOutside,\n              (event) => {\n                const originalEvent = event.detail.originalEvent\n                const ctrlLeftClick =\n                  originalEvent.button === 0 && originalEvent.ctrlKey === true\n                const isRightClick = originalEvent.button === 2 || ctrlLeftClick\n                isRightClickOutsideRef.current = isRightClick\n              },\n              { checkDefaultPrevented: false }\n            )}\n            // When focus is trapped, a `focusout` event may still happen.\n            // We make sure we don't trigger our `onDismiss` in such case.\n            onFocusOutside={composeEventHandlers(\n              props.onFocusOutside,\n              (event) => event.preventDefault(),\n              { checkDefaultPrevented: false }\n            )}\n          />\n        </Stack>\n      </PopoverContentPortal>\n    )\n  })\n)\n\nfunction PopoverRepropagateContext(props: {\n  children: any\n  context: any\n  popperContext: any\n  scope: string\n  adaptContext: AdaptParentContextI\n}) {\n  return (\n    <PopperContext.Provider scope={props.scope} {...props.popperContext}>\n      <PopoverContext.Provider {...props.context}>\n        <ProvideAdaptContext {...props.adaptContext}>\n          {props.children}\n        </ProvideAdaptContext>\n      </PopoverContext.Provider>\n    </PopperContext.Provider>\n  )\n}\n\nfunction PopoverContentPortal(props: ScopedPopoverProps<PopoverContentTypeProps>) {\n  const { __scopePopover } = props\n  const zIndex = props.zIndex\n  const context = usePopoverContext(__scopePopover)\n  const popperContext = usePopperContext(__scopePopover || POPOVER_SCOPE)\n  const themeName = useThemeName()\n  const adaptContext = useAdaptContext()\n\n  let contents = props.children\n\n  // native doesnt support portals\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    contents = (\n      <PopoverRepropagateContext\n        scope={__scopePopover || POPOVER_SCOPE}\n        popperContext={popperContext}\n        context={context}\n        adaptContext={adaptContext}\n      >\n        {props.children}\n      </PopoverRepropagateContext>\n    )\n  }\n\n  // Portal the contents and add a transparent bg overlay to handle dismiss on native\n  return (\n    <Portal stackZIndex zIndex={zIndex}>\n      {/* forceClassName avoids forced re-mount renders for some reason... see the HeadMenu as you change tints a few times */}\n      {/* without this you'll see the site menu re-rendering. It must be something in wrapping children in Theme */}\n      <Theme forceClassName name={themeName}>\n        {!!context.open && !context.breakpointActive && (\n          <YStack\n            fullscreen\n            onPress={composeEventHandlers(props.onPress as any, context.onOpenToggle)}\n          />\n        )}\n        <StackZIndexContext zIndex={resolveViewZIndex(zIndex)}>\n          {contents}\n        </StackZIndexContext>\n      </Theme>\n    </Portal>\n  )\n}\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentImplElement = React.ElementRef<typeof PopperContent>\n\nexport interface PopoverContentImplProps\n  extends PopperContentProps,\n    Omit<DismissableProps, 'onDismiss' | 'children' | 'onPointerDownCapture'> {\n  /**\n   * Whether focus should be trapped within the `Popover`\n   * @default false\n   */\n  trapFocus?: FocusScopeProps['trapped']\n\n  /**\n   * Whether popover should not focus contents on open\n   * @default false\n   */\n  disableFocusScope?: boolean\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus']\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'] | false\n\n  disableRemoveScroll?: boolean\n\n  freezeContentsWhenHidden?: boolean\n\n  setIsFullyHidden?: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst PopoverContentImpl = React.forwardRef<\n  PopoverContentImplElement,\n  ScopedPopoverProps<PopoverContentImplProps>\n>(function PopoverContentImpl(\n  props: ScopedPopoverProps<PopoverContentImplProps>,\n  forwardedRef\n) {\n  const {\n    trapFocus,\n    __scopePopover,\n    onOpenAutoFocus,\n    onCloseAutoFocus,\n    disableOutsidePointerEvents,\n    disableFocusScope,\n    onEscapeKeyDown,\n    onPointerDownOutside,\n    onFocusOutside,\n    onInteractOutside,\n    children,\n    disableRemoveScroll,\n    freezeContentsWhenHidden,\n    setIsFullyHidden,\n    ...contentProps\n  } = props\n\n  const context = usePopoverContext(__scopePopover)\n  const { open, keepChildrenMounted } = context\n  const popperContext = usePopperContext(__scopePopover || POPOVER_SCOPE)\n\n  const handleExitComplete = React.useCallback(() => {\n    setIsFullyHidden?.(true)\n  }, [setIsFullyHidden])\n\n  let contents = <ResetPresence>{children}</ResetPresence>\n\n  if (context.breakpointActive) {\n    // unwrap the PopoverScrollView if used, as it will use the SheetScrollView if that exists\n    // TODO this should be disabled through context\n    const childrenWithoutScrollView = React.Children.toArray(children).map((child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === ScrollView) {\n          return child.props.children\n        }\n      }\n      return child\n    })\n\n    return (\n      <AdaptPortalContents>\n        <PopperContext.Provider\n          scope={__scopePopover || POPOVER_SCOPE}\n          {...popperContext}\n        >\n          {childrenWithoutScrollView}\n        </PopperContext.Provider>\n      </AdaptPortalContents>\n    )\n  }\n\n  if (process.env.TAMAGUI_TARGET !== 'native') {\n    contents = (\n      <RemoveScroll\n        enabled={disableRemoveScroll ? false : open}\n        allowPinchZoom\n        // causes lots of bugs on touch web on site\n        removeScrollBar={false}\n        style={dspContentsStyle}\n      >\n        <FocusScope\n          loop\n          enabled={disableFocusScope ? false : open}\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus === false ? undefined : onCloseAutoFocus}\n        >\n          <div style={dspContentsStyle}>{contents}</div>\n        </FocusScope>\n      </RemoveScroll>\n    )\n  }\n\n  // const handleDismiss = React.useCallback((event: GestureResponderEvent) =>{\n  //   context.onOpenChange(false);\n  // }, [])\n  // <Dismissable\n  //     disableOutsidePointerEvents={disableOutsidePointerEvents}\n  //     // onInteractOutside={onInteractOutside}\n  //     onEscapeKeyDown={onEscapeKeyDown}\n  //     // onPointerDownOutside={onPointerDownOutside}\n  //     // onFocusOutside={onFocusOutside}\n  //     onDismiss={handleDismiss}\n  //   >\n\n  // const freeze = Boolean(isFullyHidden && freezeContentsWhenHidden)\n\n  return (\n    <Animate\n      type=\"presence\"\n      present={Boolean(open)}\n      keepChildrenMounted={keepChildrenMounted}\n      onExitComplete={handleExitComplete}\n    >\n      <PopperContent\n        __scopePopper={__scopePopover || POPOVER_SCOPE}\n        key={context.contentId}\n        data-state={getState(open)}\n        id={context.contentId}\n        ref={forwardedRef}\n        {...contentProps}\n      >\n        {contents}\n      </PopperContent>\n    </Animate>\n  )\n})\n\nconst dspContentsStyle = {\n  display: 'contents',\n}\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverClose\n * -----------------------------------------------------------------------------------------------*/\n\nexport type PopoverCloseProps = YStackProps\n\nexport const PopoverClose = React.forwardRef<\n  TamaguiElement,\n  ScopedPopoverProps<PopoverCloseProps>\n>(function PopoverClose(props: ScopedPopoverProps<PopoverCloseProps>, forwardedRef) {\n  const { __scopePopover, ...rest } = props\n  const context = usePopoverContext(__scopePopover)\n  return (\n    <YStack\n      {...rest}\n      ref={forwardedRef}\n      componentName=\"PopoverClose\"\n      onPress={composeEventHandlers(props.onPress as any, () =>\n        context.onOpenChange(false, 'press')\n      )}\n    />\n  )\n})\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverArrow\n * -----------------------------------------------------------------------------------------------*/\n\nexport type PopoverArrowProps = PopperArrowProps\n\nexport const PopoverArrow = PopperArrow.styleable<PopperArrowExtraProps>(\n  function PopoverArrow(props: ScopedPopoverProps<PopoverArrowProps>, forwardedRef) {\n    const { __scopePopover, ...rest } = props\n    const isAdapted = useAdaptIsActive()\n    if (isAdapted) {\n      return null\n    }\n    return (\n      <PopperArrow\n        __scopePopper={__scopePopover || POPOVER_SCOPE}\n        componentName=\"PopoverArrow\"\n        {...rest}\n        ref={forwardedRef}\n      />\n    )\n  }\n)\n\n/* -------------------------------------------------------------------------------------------------\n * Popover\n * -----------------------------------------------------------------------------------------------*/\n\ntype Rect = {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\nexport type Popover = {\n  anchorTo: (rect: Rect) => void\n  toggle: () => void\n  open: () => void\n  close: () => void\n  setOpen: (open: boolean) => void\n}\n\nexport const Popover = withStaticProperties(\n  React.forwardRef<Popover, ScopedPopoverProps<PopoverProps>>(\n    function Popover(props, ref) {\n      const id = React.useId()\n\n      return (\n        <AdaptParent scope={`${id}PopoverContents`} portal>\n          <PopoverInner ref={ref} id={id} {...props} />\n        </AdaptParent>\n      )\n    }\n  ),\n  {\n    Anchor: PopoverAnchor,\n    Arrow: PopoverArrow,\n    Trigger: PopoverTrigger,\n    Content: PopoverContent,\n    Close: PopoverClose,\n    Adapt,\n    ScrollView: ScrollView,\n    Sheet: Sheet.Controlled,\n  }\n)\n\nconst PopoverInner = React.forwardRef<\n  Popover,\n  ScopedPopoverProps<PopoverProps> & { id: string }\n>(function PopoverInner(props, forwardedRef) {\n  const {\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    __scopePopover,\n    keepChildrenMounted,\n    hoverable,\n    disableFocus,\n    id,\n    ...restProps\n  } = props\n\n  const triggerRef = React.useRef<TamaguiElement>(null)\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false)\n  const viaRef = React.useRef()\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen || false,\n    onChange: (val) => {\n      onOpenChange?.(val, viaRef.current)\n    },\n  })\n\n  const handleOpenChange = useEvent((val, via) => {\n    viaRef.current = via\n    setOpen(val)\n  })\n\n  const isAdapted = useAdaptIsActive()\n\n  const floatingContext = useFloatingContext({\n    open,\n    setOpen: handleOpenChange,\n    disable: isAdapted,\n    hoverable,\n    disableFocus: disableFocus,\n  }) as any\n\n  const [anchorTo, setAnchorToRaw] = React.useState<Rect>()\n\n  const setAnchorTo = createShallowSetState(\n    setAnchorToRaw as any\n  ) as typeof setAnchorToRaw\n\n  React.useImperativeHandle(forwardedRef, () => ({\n    anchorTo: setAnchorTo,\n    toggle: () => setOpen((prev) => !prev),\n    open: () => setOpen(true),\n    close: () => setOpen(false),\n    setOpen,\n  }))\n\n  // needs to be entirely memoized!\n  const popoverContext = {\n    id,\n    contentId: React.useId(),\n    triggerRef,\n    open,\n    breakpointActive: isAdapted,\n    onOpenChange: handleOpenChange,\n    onOpenToggle: useEvent(() => {\n      if (open && isAdapted) {\n        return\n      }\n      setOpen(!open)\n    }),\n    hasCustomAnchor,\n    anchorTo,\n    onCustomAnchorAdd: React.useCallback(() => setHasCustomAnchor(true), []),\n    onCustomAnchorRemove: React.useCallback(() => setHasCustomAnchor(false), []),\n    keepChildrenMounted,\n  }\n\n  // // debug if changing too often\n  // if (process.env.NODE_ENV === 'development') {\n  //   Object.keys(popoverContext).forEach((key) => {\n  //     React.useEffect(\n  //       () => console.log(`changed`, key, popoverContext[key]),\n  //       [popoverContext[key]]\n  //     )\n  //   })\n  // }\n\n  const contents = (\n    <Popper __scopePopper={__scopePopover || POPOVER_SCOPE} stayInFrame {...restProps}>\n      <PopoverContext.Provider scope={__scopePopover} {...popoverContext}>\n        <PopoverSheetController onOpenChange={setOpen}>{children}</PopoverSheetController>\n      </PopoverContext.Provider>\n    </Popper>\n  )\n\n  return (\n    <>\n      {isWeb ? (\n        <FloatingOverrideContext.Provider value={floatingContext}>\n          {contents}\n        </FloatingOverrideContext.Provider>\n      ) : (\n        contents\n      )}\n    </>\n  )\n})\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed'\n}\n\nconst PopoverSheetController = ({\n  __scopePopover,\n  ...props\n}: ScopedPopoverProps<{\n  children: React.ReactNode\n  onOpenChange: React.Dispatch<React.SetStateAction<boolean>>\n}>) => {\n  const context = usePopoverContext(__scopePopover)\n  const showSheet = useShowPopoverSheet(context)\n  const breakpointActive = context.breakpointActive\n  const getShowSheet = useGet(showSheet)\n\n  return (\n    <SheetController\n      onOpenChange={(val) => {\n        if (getShowSheet()) {\n          props.onOpenChange?.(val)\n        }\n      }}\n      open={context.open}\n      hidden={breakpointActive === false}\n    >\n      {props.children}\n    </SheetController>\n  )\n}\n\nconst useShowPopoverSheet = (context: PopoverContextValue) => {\n  const isAdapted = useAdaptIsActive()\n  return context.open === false ? false : isAdapted\n}\n", "import React from 'react'\nimport type { UseFloatingOptions } from '@floating-ui/react'\nimport {\n  safePolygon,\n  useDismiss,\n  useFloating,\n  useFocus,\n  useHover,\n  useInteractions,\n  useRole,\n} from '@floating-ui/react'\n\n// Custom floating context to override the Popper on web\nexport const useFloatingContext = ({\n  open,\n  setOpen,\n  disable,\n  disableFocus,\n  hoverable,\n}) => {\n  return React.useCallback(\n    (props: UseFloatingOptions) => {\n      const floating = useFloating({\n        ...props,\n        open,\n        onOpenChange: (val, event) => {\n          const type =\n            event?.type === 'mousemove' ||\n            event?.type === 'mouseenter' ||\n            event?.type === 'mouseleave'\n              ? 'hover'\n              : 'press'\n          setOpen(val, type)\n        },\n      }) as any\n      const { getReferenceProps, getFloatingProps } = useInteractions([\n        hoverable\n          ? useHover(floating.context, {\n              enabled: !disable && hoverable,\n              handleClose: safePolygon({\n                requireIntent: true,\n                blockPointerEvents: true,\n                buffer: 1,\n              }),\n              ...(hoverable && typeof hoverable === 'object' && hoverable),\n            })\n          : useHover(floating.context, {\n              enabled: false,\n            }),\n        useFocus(floating.context, {\n          enabled: !disable && !disableFocus,\n          visibleOnly: true,\n        }),\n        useRole(floating.context, { role: 'dialog' }),\n        useDismiss(floating.context, {\n          enabled: !disable,\n        }),\n      ])\n      return {\n        ...floating,\n        open,\n        getReferenceProps,\n        getFloatingProps,\n      }\n    },\n    [open, setOpen, disable, disableFocus, hoverable]\n  )\n}\n", "import * as React from 'react';\nimport { useLayoutEffect, useEffect, useRef } from 'react';\nimport { stopEvent, getDocument, isMouseLikePointerType, contains, activeElement, isSafari, isTypeableCombobox, isVirtualClick, isVirtualPointerEvent, getTarget, getPlatform, isTypeableElement, isReactEvent, isRootElement, isEventTargetWithin, isMac, getUserAgent } from '@floating-ui/react/utils';\nimport { floor, evaluate, max, min, round } from '@floating-ui/utils';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { getComputedStyle, isElement, getNodeName, isHTMLElement, getWindow, isLastTraversableNode, getParentNode, isWebKit } from '@floating-ui/utils/dom';\nimport { tabbable, isTabbable } from 'tabbable';\nimport * as ReactDOM from 'react-dom';\nimport { getOverflowAncestors, useFloating as useFloating$1, offset, detectOverflow } from '@floating-ui/react-dom';\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/react-dom';\n\n/**\n * Merges an array of refs into a single memoized callback ref or `null`.\n * @see https://floating-ui.com/docs/react-utils#usemergerefs\n */\nfunction useMergeRefs(refs) {\n  const cleanupRef = React.useRef(undefined);\n  const refEffect = React.useCallback(instance => {\n    const cleanups = refs.map(ref => {\n      if (ref == null) {\n        return;\n      }\n      if (typeof ref === 'function') {\n        const refCallback = ref;\n        const refCleanup = refCallback(instance);\n        return typeof refCleanup === 'function' ? refCleanup : () => {\n          refCallback(null);\n        };\n      }\n      ref.current = instance;\n      return () => {\n        ref.current = null;\n      };\n    });\n    return () => {\n      cleanups.forEach(refCleanup => refCleanup == null ? void 0 : refCleanup());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      if (cleanupRef.current) {\n        cleanupRef.current();\n        cleanupRef.current = undefined;\n      }\n      if (value != null) {\n        cleanupRef.current = refEffect(value);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nconst SafeReact = {\n  ...React\n};\n\nconst useInsertionEffect = SafeReact.useInsertionEffect;\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEffectEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\n\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nfunction isDifferentRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction getMinIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\nfunction findNonDisabledIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  const list = listRef.current;\n  let index = startingIndex;\n  do {\n    index += decrement ? -amount : amount;\n  } while (index >= 0 && index <= list.length - 1 && isDisabled(list, index, disabledIndices));\n  return index;\n}\nfunction getGridNavigatedIndex(elementsRef, _ref) {\n  let {\n    event,\n    orientation,\n    loop,\n    rtl,\n    cols,\n    disabledIndices,\n    minIndex,\n    maxIndex,\n    prevIndex,\n    stopEvent: stop = false\n  } = _ref;\n  let nextIndex = prevIndex;\n  if (event.key === ARROW_UP) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = maxIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: nextIndex,\n        amount: cols,\n        decrement: true,\n        disabledIndices\n      });\n      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {\n        const col = prevIndex % cols;\n        const maxCol = maxIndex % cols;\n        const offset = maxIndex - (maxCol - col);\n        if (maxCol === col) {\n          nextIndex = maxIndex;\n        } else {\n          nextIndex = maxCol > col ? offset : offset - cols;\n        }\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n  if (event.key === ARROW_DOWN) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = minIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: prevIndex,\n        amount: cols,\n        disabledIndices\n      });\n      if (loop && prevIndex + cols > maxIndex) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex % cols - cols,\n          amount: cols,\n          disabledIndices\n        });\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n\n  // Remains on the same row/column.\n  if (orientation === 'both') {\n    const prevRow = floor(prevIndex / cols);\n    if (event.key === (rtl ? ARROW_LEFT : ARROW_RIGHT)) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== cols - 1) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex - prevIndex % cols - 1,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    if (event.key === (rtl ? ARROW_RIGHT : ARROW_LEFT)) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== 0) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          decrement: true,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex + (cols - prevIndex % cols),\n            decrement: true,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex + (cols - prevIndex % cols),\n          decrement: true,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    const lastRow = floor(maxIndex / cols) === prevRow;\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      if (loop && lastRow) {\n        nextIndex = event.key === (rtl ? ARROW_RIGHT : ARROW_LEFT) ? maxIndex : findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      } else {\n        nextIndex = prevIndex;\n      }\n    }\n  }\n  return nextIndex;\n}\n\n/** For each cell index, gets the item index that occupies that cell */\nfunction buildCellMap(sizes, cols, dense) {\n  const cellMap = [];\n  let startIndex = 0;\n  sizes.forEach((_ref2, index) => {\n    let {\n      width,\n      height\n    } = _ref2;\n    if (width > cols) {\n      if (process.env.NODE_ENV !== \"production\") {\n        throw new Error(\"[Floating UI]: Invalid grid - item width at index \" + index + \" is greater than grid columns\");\n      }\n    }\n    let itemPlaced = false;\n    if (dense) {\n      startIndex = 0;\n    }\n    while (!itemPlaced) {\n      const targetCells = [];\n      for (let i = 0; i < width; i++) {\n        for (let j = 0; j < height; j++) {\n          targetCells.push(startIndex + i + j * cols);\n        }\n      }\n      if (startIndex % cols + width <= cols && targetCells.every(cell => cellMap[cell] == null)) {\n        targetCells.forEach(cell => {\n          cellMap[cell] = index;\n        });\n        itemPlaced = true;\n      } else {\n        startIndex++;\n      }\n    }\n  });\n\n  // convert into a non-sparse array\n  return [...cellMap];\n}\n\n/** Gets cell index of an item's corner or -1 when index is -1. */\nfunction getCellIndexOfCorner(index, sizes, cellMap, cols, corner) {\n  if (index === -1) return -1;\n  const firstCellIndex = cellMap.indexOf(index);\n  const sizeItem = sizes[index];\n  switch (corner) {\n    case 'tl':\n      return firstCellIndex;\n    case 'tr':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + sizeItem.width - 1;\n    case 'bl':\n      if (!sizeItem) {\n        return firstCellIndex;\n      }\n      return firstCellIndex + (sizeItem.height - 1) * cols;\n    case 'br':\n      return cellMap.lastIndexOf(index);\n  }\n}\n\n/** Gets all cell indices that correspond to the specified indices */\nfunction getCellIndices(indices, cellMap) {\n  return cellMap.flatMap((index, cellIndex) => indices.includes(index) ? [cellIndex] : []);\n}\nfunction isDisabled(list, index, disabledIndices) {\n  if (disabledIndices) {\n    return disabledIndices.includes(index);\n  }\n  const element = list[index];\n  return element == null || element.hasAttribute('disabled') || element.getAttribute('aria-disabled') === 'true';\n}\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction sortByDocumentPosition(a, b) {\n  const position = a.compareDocumentPosition(b);\n  if (position & Node.DOCUMENT_POSITION_FOLLOWING || position & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n    return -1;\n  }\n  if (position & Node.DOCUMENT_POSITION_PRECEDING || position & Node.DOCUMENT_POSITION_CONTAINS) {\n    return 1;\n  }\n  return 0;\n}\nconst FloatingListContext = /*#__PURE__*/React.createContext({\n  register: () => {},\n  unregister: () => {},\n  map: /*#__PURE__*/new Map(),\n  elementsRef: {\n    current: []\n  }\n});\n/**\n * Provides context for a list of items within the floating element.\n * @see https://floating-ui.com/docs/FloatingList\n */\nfunction FloatingList(props) {\n  const {\n    children,\n    elementsRef,\n    labelsRef\n  } = props;\n  const [nodes, setNodes] = React.useState(() => new Set());\n  const register = React.useCallback(node => {\n    setNodes(prevSet => new Set(prevSet).add(node));\n  }, []);\n  const unregister = React.useCallback(node => {\n    setNodes(prevSet => {\n      const set = new Set(prevSet);\n      set.delete(node);\n      return set;\n    });\n  }, []);\n  const map = React.useMemo(() => {\n    const newMap = new Map();\n    const sortedNodes = Array.from(nodes.keys()).sort(sortByDocumentPosition);\n    sortedNodes.forEach((node, index) => {\n      newMap.set(node, index);\n    });\n    return newMap;\n  }, [nodes]);\n  return /*#__PURE__*/jsx(FloatingListContext.Provider, {\n    value: React.useMemo(() => ({\n      register,\n      unregister,\n      map,\n      elementsRef,\n      labelsRef\n    }), [register, unregister, map, elementsRef, labelsRef]),\n    children: children\n  });\n}\n/**\n * Used to register a list item and its index (DOM position) in the\n * `FloatingList`.\n * @see https://floating-ui.com/docs/FloatingList#uselistitem\n */\nfunction useListItem(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    label\n  } = props;\n  const {\n    register,\n    unregister,\n    map,\n    elementsRef,\n    labelsRef\n  } = React.useContext(FloatingListContext);\n  const [index$1, setIndex] = React.useState(null);\n  const componentRef = React.useRef(null);\n  const ref = React.useCallback(node => {\n    componentRef.current = node;\n    if (index$1 !== null) {\n      elementsRef.current[index$1] = node;\n      if (labelsRef) {\n        var _node$textContent;\n        const isLabelDefined = label !== undefined;\n        labelsRef.current[index$1] = isLabelDefined ? label : (_node$textContent = node == null ? void 0 : node.textContent) != null ? _node$textContent : null;\n      }\n    }\n  }, [index$1, elementsRef, labelsRef, label]);\n  index(() => {\n    const node = componentRef.current;\n    if (node) {\n      register(node);\n      return () => {\n        unregister(node);\n      };\n    }\n  }, [register, unregister]);\n  index(() => {\n    const index = componentRef.current ? map.get(componentRef.current) : null;\n    if (index != null) {\n      setIndex(index);\n    }\n  }, [map]);\n  return React.useMemo(() => ({\n    ref,\n    index: index$1 == null ? -1 : index$1\n  }), [index$1, ref]);\n}\n\nfunction renderJsx(render, computedProps) {\n  if (typeof render === 'function') {\n    return render(computedProps);\n  }\n  if (render) {\n    return /*#__PURE__*/React.cloneElement(render, computedProps);\n  }\n  return /*#__PURE__*/jsx(\"div\", {\n    ...computedProps\n  });\n}\nconst CompositeContext = /*#__PURE__*/React.createContext({\n  activeIndex: 0,\n  onNavigate: () => {}\n});\nconst horizontalKeys = [ARROW_LEFT, ARROW_RIGHT];\nconst verticalKeys = [ARROW_UP, ARROW_DOWN];\nconst allKeys = [...horizontalKeys, ...verticalKeys];\n\n/**\n * Creates a single tab stop whose items are navigated by arrow keys, which\n * provides list navigation outside of floating element contexts.\n *\n * This is useful to enable navigation of a list of items that aren’t part of a\n * floating element. A menubar is an example of a composite, with each reference\n * element being an item.\n * @see https://floating-ui.com/docs/Composite\n */\nconst Composite = /*#__PURE__*/React.forwardRef(function Composite(props, forwardedRef) {\n  const {\n    render,\n    orientation = 'both',\n    loop = true,\n    rtl = false,\n    cols = 1,\n    disabledIndices,\n    activeIndex: externalActiveIndex,\n    onNavigate: externalSetActiveIndex,\n    itemSizes,\n    dense = false,\n    ...domProps\n  } = props;\n  const [internalActiveIndex, internalSetActiveIndex] = React.useState(0);\n  const activeIndex = externalActiveIndex != null ? externalActiveIndex : internalActiveIndex;\n  const onNavigate = useEffectEvent(externalSetActiveIndex != null ? externalSetActiveIndex : internalSetActiveIndex);\n  const elementsRef = React.useRef([]);\n  const renderElementProps = render && typeof render !== 'function' ? render.props : {};\n  const contextValue = React.useMemo(() => ({\n    activeIndex,\n    onNavigate\n  }), [activeIndex, onNavigate]);\n  const isGrid = cols > 1;\n  function handleKeyDown(event) {\n    if (!allKeys.includes(event.key)) return;\n    let nextIndex = activeIndex;\n    const minIndex = getMinIndex(elementsRef, disabledIndices);\n    const maxIndex = getMaxIndex(elementsRef, disabledIndices);\n    const horizontalEndKey = rtl ? ARROW_LEFT : ARROW_RIGHT;\n    const horizontalStartKey = rtl ? ARROW_RIGHT : ARROW_LEFT;\n    if (isGrid) {\n      const sizes = itemSizes || Array.from({\n        length: elementsRef.current.length\n      }, () => ({\n        width: 1,\n        height: 1\n      }));\n      // To calculate movements on the grid, we use hypothetical cell indices\n      // as if every item was 1x1, then convert back to real indices.\n      const cellMap = buildCellMap(sizes, cols, dense);\n      const minGridIndex = cellMap.findIndex(index => index != null && !isDisabled(elementsRef.current, index, disabledIndices));\n      // last enabled index\n      const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !isDisabled(elementsRef.current, index, disabledIndices) ? cellIndex : foundIndex, -1);\n      const maybeNextIndex = cellMap[getGridNavigatedIndex({\n        current: cellMap.map(itemIndex => itemIndex ? elementsRef.current[itemIndex] : null)\n      }, {\n        event,\n        orientation,\n        loop,\n        rtl,\n        cols,\n        // treat undefined (empty grid spaces) as disabled indices so we\n        // don't end up in them\n        disabledIndices: getCellIndices([...(disabledIndices || elementsRef.current.map((_, index) => isDisabled(elementsRef.current, index) ? index : undefined)), undefined], cellMap),\n        minIndex: minGridIndex,\n        maxIndex: maxGridIndex,\n        prevIndex: getCellIndexOfCorner(activeIndex > maxIndex ? minIndex : activeIndex, sizes, cellMap, cols,\n        // use a corner matching the edge closest to the direction we're\n        // moving in so we don't end up in the same item. Prefer\n        // top/left over bottom/right.\n        event.key === ARROW_DOWN ? 'bl' : event.key === horizontalEndKey ? 'tr' : 'tl')\n      })];\n      if (maybeNextIndex != null) {\n        nextIndex = maybeNextIndex;\n      }\n    }\n    const toEndKeys = {\n      horizontal: [horizontalEndKey],\n      vertical: [ARROW_DOWN],\n      both: [horizontalEndKey, ARROW_DOWN]\n    }[orientation];\n    const toStartKeys = {\n      horizontal: [horizontalStartKey],\n      vertical: [ARROW_UP],\n      both: [horizontalStartKey, ARROW_UP]\n    }[orientation];\n    const preventedKeys = isGrid ? allKeys : {\n      horizontal: horizontalKeys,\n      vertical: verticalKeys,\n      both: allKeys\n    }[orientation];\n    if (nextIndex === activeIndex && [...toEndKeys, ...toStartKeys].includes(event.key)) {\n      if (loop && nextIndex === maxIndex && toEndKeys.includes(event.key)) {\n        nextIndex = minIndex;\n      } else if (loop && nextIndex === minIndex && toStartKeys.includes(event.key)) {\n        nextIndex = maxIndex;\n      } else {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: nextIndex,\n          decrement: toStartKeys.includes(event.key),\n          disabledIndices\n        });\n      }\n    }\n    if (nextIndex !== activeIndex && !isIndexOutOfBounds(elementsRef, nextIndex)) {\n      var _elementsRef$current$;\n      event.stopPropagation();\n      if (preventedKeys.includes(event.key)) {\n        event.preventDefault();\n      }\n      onNavigate(nextIndex);\n      (_elementsRef$current$ = elementsRef.current[nextIndex]) == null || _elementsRef$current$.focus();\n    }\n  }\n  const computedProps = {\n    ...domProps,\n    ...renderElementProps,\n    ref: forwardedRef,\n    'aria-orientation': orientation === 'both' ? undefined : orientation,\n    onKeyDown(e) {\n      domProps.onKeyDown == null || domProps.onKeyDown(e);\n      renderElementProps.onKeyDown == null || renderElementProps.onKeyDown(e);\n      handleKeyDown(e);\n    }\n  };\n  return /*#__PURE__*/jsx(CompositeContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/jsx(FloatingList, {\n      elementsRef: elementsRef,\n      children: renderJsx(render, computedProps)\n    })\n  });\n});\n/**\n * @see https://floating-ui.com/docs/Composite\n */\nconst CompositeItem = /*#__PURE__*/React.forwardRef(function CompositeItem(props, forwardedRef) {\n  const {\n    render,\n    ...domProps\n  } = props;\n  const renderElementProps = render && typeof render !== 'function' ? render.props : {};\n  const {\n    activeIndex,\n    onNavigate\n  } = React.useContext(CompositeContext);\n  const {\n    ref,\n    index\n  } = useListItem();\n  const mergedRef = useMergeRefs([ref, forwardedRef, renderElementProps.ref]);\n  const isActive = activeIndex === index;\n  const computedProps = {\n    ...domProps,\n    ...renderElementProps,\n    ref: mergedRef,\n    tabIndex: isActive ? 0 : -1,\n    'data-active': isActive ? '' : undefined,\n    onFocus(e) {\n      domProps.onFocus == null || domProps.onFocus(e);\n      renderElementProps.onFocus == null || renderElementProps.onFocus(e);\n      onNavigate(index);\n    }\n  };\n  return renderJsx(render, computedProps);\n});\n\nlet serverHandoffComplete = false;\nlet count = 0;\nconst genId = () => // Ensure the id is unique with multiple independent versions of Floating UI\n// on <React 18\n\"floating-ui-\" + Math.random().toString(36).slice(2, 6) + count++;\nfunction useFloatingId() {\n  const [id, setId] = React.useState(() => serverHandoffComplete ? genId() : undefined);\n  index(() => {\n    if (id == null) {\n      setId(genId());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    serverHandoffComplete = true;\n  }, []);\n  return id;\n}\nconst useReactId = SafeReact.useId;\n\n/**\n * Uses React 18's built-in `useId()` when available, or falls back to a\n * slightly less performant (requiring a double render) implementation for\n * earlier React versions.\n * @see https://floating-ui.com/docs/react-utils#useid\n */\nconst useId = useReactId || useFloatingId;\n\nlet devMessageSet;\nif (process.env.NODE_ENV !== \"production\") {\n  devMessageSet = /*#__PURE__*/new Set();\n}\nfunction warn() {\n  var _devMessageSet;\n  for (var _len = arguments.length, messages = new Array(_len), _key = 0; _key < _len; _key++) {\n    messages[_key] = arguments[_key];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet = devMessageSet) != null && _devMessageSet.has(message))) {\n    var _devMessageSet2;\n    (_devMessageSet2 = devMessageSet) == null || _devMessageSet2.add(message);\n    console.warn(message);\n  }\n}\nfunction error() {\n  var _devMessageSet3;\n  for (var _len2 = arguments.length, messages = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    messages[_key2] = arguments[_key2];\n  }\n  const message = \"Floating UI: \" + messages.join(' ');\n  if (!((_devMessageSet3 = devMessageSet) != null && _devMessageSet3.has(message))) {\n    var _devMessageSet4;\n    (_devMessageSet4 = devMessageSet) == null || _devMessageSet4.add(message);\n    console.error(message);\n  }\n}\n\n/**\n * Renders a pointing arrow triangle.\n * @see https://floating-ui.com/docs/FloatingArrow\n */\nconst FloatingArrow = /*#__PURE__*/React.forwardRef(function FloatingArrow(props, ref) {\n  const {\n    context: {\n      placement,\n      elements: {\n        floating\n      },\n      middlewareData: {\n        arrow,\n        shift\n      }\n    },\n    width = 14,\n    height = 7,\n    tipRadius = 0,\n    strokeWidth = 0,\n    staticOffset,\n    stroke,\n    d,\n    style: {\n      transform,\n      ...restStyle\n    } = {},\n    ...rest\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!ref) {\n      warn('The `ref` prop is required for `FloatingArrow`.');\n    }\n  }\n  const clipPathId = useId();\n  const [isRTL, setIsRTL] = React.useState(false);\n\n  // https://github.com/floating-ui/floating-ui/issues/2932\n  index(() => {\n    if (!floating) return;\n    const isRTL = getComputedStyle(floating).direction === 'rtl';\n    if (isRTL) {\n      setIsRTL(true);\n    }\n  }, [floating]);\n  if (!floating) {\n    return null;\n  }\n  const [side, alignment] = placement.split('-');\n  const isVerticalSide = side === 'top' || side === 'bottom';\n  let computedStaticOffset = staticOffset;\n  if (isVerticalSide && shift != null && shift.x || !isVerticalSide && shift != null && shift.y) {\n    computedStaticOffset = null;\n  }\n\n  // Strokes must be double the border width, this ensures the stroke's width\n  // works as you'd expect.\n  const computedStrokeWidth = strokeWidth * 2;\n  const halfStrokeWidth = computedStrokeWidth / 2;\n  const svgX = width / 2 * (tipRadius / -8 + 1);\n  const svgY = height / 2 * tipRadius / 4;\n  const isCustomShape = !!d;\n  const yOffsetProp = computedStaticOffset && alignment === 'end' ? 'bottom' : 'top';\n  let xOffsetProp = computedStaticOffset && alignment === 'end' ? 'right' : 'left';\n  if (computedStaticOffset && isRTL) {\n    xOffsetProp = alignment === 'end' ? 'left' : 'right';\n  }\n  const arrowX = (arrow == null ? void 0 : arrow.x) != null ? computedStaticOffset || arrow.x : '';\n  const arrowY = (arrow == null ? void 0 : arrow.y) != null ? computedStaticOffset || arrow.y : '';\n  const dValue = d || 'M0,0' + (\" H\" + width) + (\" L\" + (width - svgX) + \",\" + (height - svgY)) + (\" Q\" + width / 2 + \",\" + height + \" \" + svgX + \",\" + (height - svgY)) + ' Z';\n  const rotation = {\n    top: isCustomShape ? 'rotate(180deg)' : '',\n    left: isCustomShape ? 'rotate(90deg)' : 'rotate(-90deg)',\n    bottom: isCustomShape ? '' : 'rotate(180deg)',\n    right: isCustomShape ? 'rotate(-90deg)' : 'rotate(90deg)'\n  }[side];\n  return /*#__PURE__*/jsxs(\"svg\", {\n    ...rest,\n    \"aria-hidden\": true,\n    ref: ref,\n    width: isCustomShape ? width : width + computedStrokeWidth,\n    height: width,\n    viewBox: \"0 0 \" + width + \" \" + (height > width ? height : width),\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      [xOffsetProp]: arrowX,\n      [yOffsetProp]: arrowY,\n      [side]: isVerticalSide || isCustomShape ? '100%' : \"calc(100% - \" + computedStrokeWidth / 2 + \"px)\",\n      transform: [rotation, transform].filter(t => !!t).join(' '),\n      ...restStyle\n    },\n    children: [computedStrokeWidth > 0 && /*#__PURE__*/jsx(\"path\", {\n      clipPath: \"url(#\" + clipPathId + \")\",\n      fill: \"none\",\n      stroke: stroke\n      // Account for the stroke on the fill path rendered below.\n      ,\n      strokeWidth: computedStrokeWidth + (d ? 0 : 1),\n      d: dValue\n    }), /*#__PURE__*/jsx(\"path\", {\n      stroke: computedStrokeWidth && !d ? rest.fill : 'none',\n      d: dValue\n    }), /*#__PURE__*/jsx(\"clipPath\", {\n      id: clipPathId,\n      children: /*#__PURE__*/jsx(\"rect\", {\n        x: -halfStrokeWidth,\n        y: halfStrokeWidth * (isCustomShape ? -1 : 1),\n        width: width + computedStrokeWidth,\n        height: width\n      })\n    })]\n  });\n});\n\nfunction createPubSub() {\n  const map = new Map();\n  return {\n    emit(event, data) {\n      var _map$get;\n      (_map$get = map.get(event)) == null || _map$get.forEach(handler => handler(data));\n    },\n    on(event, listener) {\n      map.set(event, [...(map.get(event) || []), listener]);\n    },\n    off(event, listener) {\n      var _map$get2;\n      map.set(event, ((_map$get2 = map.get(event)) == null ? void 0 : _map$get2.filter(l => l !== listener)) || []);\n    }\n  };\n}\n\nconst FloatingNodeContext = /*#__PURE__*/React.createContext(null);\nconst FloatingTreeContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the parent node id for nested floating elements, if available.\n * Returns `null` for top-level floating elements.\n */\nconst useFloatingParentNodeId = () => {\n  var _React$useContext;\n  return ((_React$useContext = React.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;\n};\n\n/**\n * Returns the nearest floating tree context, if available.\n */\nconst useFloatingTree = () => React.useContext(FloatingTreeContext);\n\n/**\n * Registers a node into the `FloatingTree`, returning its id.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction useFloatingNodeId(customParentId) {\n  const id = useId();\n  const tree = useFloatingTree();\n  const reactParentId = useFloatingParentNodeId();\n  const parentId = customParentId || reactParentId;\n  index(() => {\n    if (!id) return;\n    const node = {\n      id,\n      parentId\n    };\n    tree == null || tree.addNode(node);\n    return () => {\n      tree == null || tree.removeNode(node);\n    };\n  }, [tree, id, parentId]);\n  return id;\n}\n/**\n * Provides parent node context for nested floating elements.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingNode(props) {\n  const {\n    children,\n    id\n  } = props;\n  const parentId = useFloatingParentNodeId();\n  return /*#__PURE__*/jsx(FloatingNodeContext.Provider, {\n    value: React.useMemo(() => ({\n      id,\n      parentId\n    }), [id, parentId]),\n    children: children\n  });\n}\n/**\n * Provides context for nested floating elements when they are not children of\n * each other on the DOM.\n * This is not necessary in all cases, except when there must be explicit communication between parent and child floating elements. It is necessary for:\n * - The `bubbles` option in the `useDismiss()` Hook\n * - Nested virtual list navigation\n * - Nested floating elements that each open on hover\n * - Custom communication between parent and child floating elements\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingTree(props) {\n  const {\n    children\n  } = props;\n  const nodesRef = React.useRef([]);\n  const addNode = React.useCallback(node => {\n    nodesRef.current = [...nodesRef.current, node];\n  }, []);\n  const removeNode = React.useCallback(node => {\n    nodesRef.current = nodesRef.current.filter(n => n !== node);\n  }, []);\n  const events = React.useState(() => createPubSub())[0];\n  return /*#__PURE__*/jsx(FloatingTreeContext.Provider, {\n    value: React.useMemo(() => ({\n      nodesRef,\n      addNode,\n      removeNode,\n      events\n    }), [addNode, removeNode, events]),\n    children: children\n  });\n}\n\nfunction createAttribute(name) {\n  return \"data-floating-ui-\" + name;\n}\n\nfunction clearTimeoutIfSet(timeoutRef) {\n  if (timeoutRef.current !== -1) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = -1;\n  }\n}\n\nfunction useLatestRef(value) {\n  const ref = useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\nconst safePolygonIdentifier = /*#__PURE__*/createAttribute('safe-polygon');\nfunction getDelay(value, prop, pointerType) {\n  if (pointerType && !isMouseLikePointerType(pointerType)) {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return value == null ? void 0 : value[prop];\n}\n/**\n * Opens the floating element while hovering over the reference element, like\n * CSS `:hover`.\n * @see https://floating-ui.com/docs/useHover\n */\nfunction useHover(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    delay = 0,\n    handleClose = null,\n    mouseOnly = false,\n    restMs = 0,\n    move = true\n  } = props;\n  const tree = useFloatingTree();\n  const parentId = useFloatingParentNodeId();\n  const handleCloseRef = useLatestRef(handleClose);\n  const delayRef = useLatestRef(delay);\n  const openRef = useLatestRef(open);\n  const pointerTypeRef = React.useRef();\n  const timeoutRef = React.useRef(-1);\n  const handlerRef = React.useRef();\n  const restTimeoutRef = React.useRef(-1);\n  const blockMouseMoveRef = React.useRef(true);\n  const performedPointerEventsMutationRef = React.useRef(false);\n  const unbindMouseMoveRef = React.useRef(() => {});\n  const restTimeoutPendingRef = React.useRef(false);\n  const isHoverOpen = React.useCallback(() => {\n    var _dataRef$current$open;\n    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;\n    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';\n  }, [dataRef]);\n\n  // When closing before opening, clear the delay timeouts to cancel it\n  // from showing.\n  React.useEffect(() => {\n    if (!enabled) return;\n    function onOpenChange(_ref) {\n      let {\n        open\n      } = _ref;\n      if (!open) {\n        clearTimeoutIfSet(timeoutRef);\n        clearTimeoutIfSet(restTimeoutRef);\n        blockMouseMoveRef.current = true;\n        restTimeoutPendingRef.current = false;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [enabled, events]);\n  React.useEffect(() => {\n    if (!enabled) return;\n    if (!handleCloseRef.current) return;\n    if (!open) return;\n    function onLeave(event) {\n      if (isHoverOpen()) {\n        onOpenChange(false, event, 'hover');\n      }\n    }\n    const html = getDocument(elements.floating).documentElement;\n    html.addEventListener('mouseleave', onLeave);\n    return () => {\n      html.removeEventListener('mouseleave', onLeave);\n    };\n  }, [elements.floating, open, onOpenChange, enabled, handleCloseRef, isHoverOpen]);\n  const closeWithDelay = React.useCallback(function (event, runElseBranch, reason) {\n    if (runElseBranch === void 0) {\n      runElseBranch = true;\n    }\n    if (reason === void 0) {\n      reason = 'hover';\n    }\n    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);\n    if (closeDelay && !handlerRef.current) {\n      clearTimeoutIfSet(timeoutRef);\n      timeoutRef.current = window.setTimeout(() => onOpenChange(false, event, reason), closeDelay);\n    } else if (runElseBranch) {\n      clearTimeoutIfSet(timeoutRef);\n      onOpenChange(false, event, reason);\n    }\n  }, [delayRef, onOpenChange]);\n  const cleanupMouseMoveHandler = useEffectEvent(() => {\n    unbindMouseMoveRef.current();\n    handlerRef.current = undefined;\n  });\n  const clearPointerEvents = useEffectEvent(() => {\n    if (performedPointerEventsMutationRef.current) {\n      const body = getDocument(elements.floating).body;\n      body.style.pointerEvents = '';\n      body.removeAttribute(safePolygonIdentifier);\n      performedPointerEventsMutationRef.current = false;\n    }\n  });\n  const isClickLikeOpenEvent = useEffectEvent(() => {\n    return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;\n  });\n\n  // Registering the mouse events on the reference directly to bypass React's\n  // delegation system. If the cursor was on a disabled element and then entered\n  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.\n  React.useEffect(() => {\n    if (!enabled) return;\n    function onMouseEnter(event) {\n      clearTimeoutIfSet(timeoutRef);\n      blockMouseMoveRef.current = false;\n      if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && !getDelay(delayRef.current, 'open')) {\n        return;\n      }\n      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);\n      if (openDelay) {\n        timeoutRef.current = window.setTimeout(() => {\n          if (!openRef.current) {\n            onOpenChange(true, event, 'hover');\n          }\n        }, openDelay);\n      } else if (!open) {\n        onOpenChange(true, event, 'hover');\n      }\n    }\n    function onMouseLeave(event) {\n      if (isClickLikeOpenEvent()) return;\n      unbindMouseMoveRef.current();\n      const doc = getDocument(elements.floating);\n      clearTimeoutIfSet(restTimeoutRef);\n      restTimeoutPendingRef.current = false;\n      if (handleCloseRef.current && dataRef.current.floatingContext) {\n        // Prevent clearing `onScrollMouseLeave` timeout.\n        if (!open) {\n          clearTimeoutIfSet(timeoutRef);\n        }\n        handlerRef.current = handleCloseRef.current({\n          ...dataRef.current.floatingContext,\n          tree,\n          x: event.clientX,\n          y: event.clientY,\n          onClose() {\n            clearPointerEvents();\n            cleanupMouseMoveHandler();\n            if (!isClickLikeOpenEvent()) {\n              closeWithDelay(event, true, 'safe-polygon');\n            }\n          }\n        });\n        const handler = handlerRef.current;\n        doc.addEventListener('mousemove', handler);\n        unbindMouseMoveRef.current = () => {\n          doc.removeEventListener('mousemove', handler);\n        };\n        return;\n      }\n\n      // Allow interactivity without `safePolygon` on touch devices. With a\n      // pointer, a short close delay is an alternative, so it should work\n      // consistently.\n      const shouldClose = pointerTypeRef.current === 'touch' ? !contains(elements.floating, event.relatedTarget) : true;\n      if (shouldClose) {\n        closeWithDelay(event);\n      }\n    }\n\n    // Ensure the floating element closes after scrolling even if the pointer\n    // did not move.\n    // https://github.com/floating-ui/floating-ui/discussions/1692\n    function onScrollMouseLeave(event) {\n      if (isClickLikeOpenEvent()) return;\n      if (!dataRef.current.floatingContext) return;\n      handleCloseRef.current == null || handleCloseRef.current({\n        ...dataRef.current.floatingContext,\n        tree,\n        x: event.clientX,\n        y: event.clientY,\n        onClose() {\n          clearPointerEvents();\n          cleanupMouseMoveHandler();\n          if (!isClickLikeOpenEvent()) {\n            closeWithDelay(event);\n          }\n        }\n      })(event);\n    }\n    if (isElement(elements.domReference)) {\n      var _elements$floating;\n      const ref = elements.domReference;\n      open && ref.addEventListener('mouseleave', onScrollMouseLeave);\n      (_elements$floating = elements.floating) == null || _elements$floating.addEventListener('mouseleave', onScrollMouseLeave);\n      move && ref.addEventListener('mousemove', onMouseEnter, {\n        once: true\n      });\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      return () => {\n        var _elements$floating2;\n        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);\n        (_elements$floating2 = elements.floating) == null || _elements$floating2.removeEventListener('mouseleave', onScrollMouseLeave);\n        move && ref.removeEventListener('mousemove', onMouseEnter);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [elements, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, openRef, tree, delayRef, handleCloseRef, dataRef, isClickLikeOpenEvent]);\n\n  // Block pointer-events of every element other than the reference and floating\n  // while the floating element is open and has a `handleClose` handler. Also\n  // handles nested floating elements.\n  // https://github.com/floating-ui/floating-ui/issues/1722\n  index(() => {\n    var _handleCloseRef$curre;\n    if (!enabled) return;\n    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {\n      performedPointerEventsMutationRef.current = true;\n      const floatingEl = elements.floating;\n      if (isElement(elements.domReference) && floatingEl) {\n        var _tree$nodesRef$curren;\n        const body = getDocument(elements.floating).body;\n        body.setAttribute(safePolygonIdentifier, '');\n        const ref = elements.domReference;\n        const parentFloating = tree == null || (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null || (_tree$nodesRef$curren = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren.elements.floating;\n        if (parentFloating) {\n          parentFloating.style.pointerEvents = '';\n        }\n        body.style.pointerEvents = 'none';\n        ref.style.pointerEvents = 'auto';\n        floatingEl.style.pointerEvents = 'auto';\n        return () => {\n          body.style.pointerEvents = '';\n          ref.style.pointerEvents = '';\n          floatingEl.style.pointerEvents = '';\n        };\n      }\n    }\n  }, [enabled, open, parentId, elements, tree, handleCloseRef, isHoverOpen]);\n  index(() => {\n    if (!open) {\n      pointerTypeRef.current = undefined;\n      restTimeoutPendingRef.current = false;\n      cleanupMouseMoveHandler();\n      clearPointerEvents();\n    }\n  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);\n  React.useEffect(() => {\n    return () => {\n      cleanupMouseMoveHandler();\n      clearTimeoutIfSet(timeoutRef);\n      clearTimeoutIfSet(restTimeoutRef);\n      clearPointerEvents();\n    };\n  }, [enabled, elements.domReference, cleanupMouseMoveHandler, clearPointerEvents]);\n  const reference = React.useMemo(() => {\n    function setPointerRef(event) {\n      pointerTypeRef.current = event.pointerType;\n    }\n    return {\n      onPointerDown: setPointerRef,\n      onPointerEnter: setPointerRef,\n      onMouseMove(event) {\n        const {\n          nativeEvent\n        } = event;\n        function handleMouseMove() {\n          if (!blockMouseMoveRef.current && !openRef.current) {\n            onOpenChange(true, nativeEvent, 'hover');\n          }\n        }\n        if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current)) {\n          return;\n        }\n        if (open || restMs === 0) {\n          return;\n        }\n\n        // Ignore insignificant movements to account for tremors.\n        if (restTimeoutPendingRef.current && event.movementX ** 2 + event.movementY ** 2 < 2) {\n          return;\n        }\n        clearTimeoutIfSet(restTimeoutRef);\n        if (pointerTypeRef.current === 'touch') {\n          handleMouseMove();\n        } else {\n          restTimeoutPendingRef.current = true;\n          restTimeoutRef.current = window.setTimeout(handleMouseMove, restMs);\n        }\n      }\n    };\n  }, [mouseOnly, onOpenChange, open, openRef, restMs]);\n  const floating = React.useMemo(() => ({\n    onMouseEnter() {\n      clearTimeoutIfSet(timeoutRef);\n    },\n    onMouseLeave(event) {\n      if (!isClickLikeOpenEvent()) {\n        closeWithDelay(event.nativeEvent, false);\n      }\n    }\n  }), [closeWithDelay, isClickLikeOpenEvent]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating\n  } : {}, [enabled, reference, floating]);\n}\n\nconst NOOP = () => {};\nconst FloatingDelayGroupContext = /*#__PURE__*/React.createContext({\n  delay: 0,\n  initialDelay: 0,\n  timeoutMs: 0,\n  currentId: null,\n  setCurrentId: NOOP,\n  setState: NOOP,\n  isInstantPhase: false\n});\n\n/**\n * @deprecated\n * Use the return value of `useDelayGroup()` instead.\n */\nconst useDelayGroupContext = () => React.useContext(FloatingDelayGroupContext);\n/**\n * Provides context for a group of floating elements that should share a\n * `delay`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nfunction FloatingDelayGroup(props) {\n  const {\n    children,\n    delay,\n    timeoutMs = 0\n  } = props;\n  const [state, setState] = React.useReducer((prev, next) => ({\n    ...prev,\n    ...next\n  }), {\n    delay,\n    timeoutMs,\n    initialDelay: delay,\n    currentId: null,\n    isInstantPhase: false\n  });\n  const initialCurrentIdRef = React.useRef(null);\n  const setCurrentId = React.useCallback(currentId => {\n    setState({\n      currentId\n    });\n  }, []);\n  index(() => {\n    if (state.currentId) {\n      if (initialCurrentIdRef.current === null) {\n        initialCurrentIdRef.current = state.currentId;\n      } else if (!state.isInstantPhase) {\n        setState({\n          isInstantPhase: true\n        });\n      }\n    } else {\n      if (state.isInstantPhase) {\n        setState({\n          isInstantPhase: false\n        });\n      }\n      initialCurrentIdRef.current = null;\n    }\n  }, [state.currentId, state.isInstantPhase]);\n  return /*#__PURE__*/jsx(FloatingDelayGroupContext.Provider, {\n    value: React.useMemo(() => ({\n      ...state,\n      setState,\n      setCurrentId\n    }), [state, setCurrentId]),\n    children: children\n  });\n}\n/**\n * Enables grouping when called inside a component that's a child of a\n * `FloatingDelayGroup`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nfunction useDelayGroup(context, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    floatingId\n  } = context;\n  const {\n    id: optionId,\n    enabled = true\n  } = options;\n  const id = optionId != null ? optionId : floatingId;\n  const groupContext = useDelayGroupContext();\n  const {\n    currentId,\n    setCurrentId,\n    initialDelay,\n    setState,\n    timeoutMs\n  } = groupContext;\n  index(() => {\n    if (!enabled) return;\n    if (!currentId) return;\n    setState({\n      delay: {\n        open: 1,\n        close: getDelay(initialDelay, 'close')\n      }\n    });\n    if (currentId !== id) {\n      onOpenChange(false);\n    }\n  }, [enabled, id, onOpenChange, setState, currentId, initialDelay]);\n  index(() => {\n    function unset() {\n      onOpenChange(false);\n      setState({\n        delay: initialDelay,\n        currentId: null\n      });\n    }\n    if (!enabled) return;\n    if (!currentId) return;\n    if (!open && currentId === id) {\n      if (timeoutMs) {\n        const timeout = window.setTimeout(unset, timeoutMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      }\n      unset();\n    }\n  }, [enabled, open, setState, currentId, id, onOpenChange, initialDelay, timeoutMs]);\n  index(() => {\n    if (!enabled) return;\n    if (setCurrentId === NOOP || !open) return;\n    setCurrentId(id);\n  }, [enabled, open, setCurrentId, id]);\n  return groupContext;\n}\n\nlet rafId = 0;\nfunction enqueueFocus(el, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    preventScroll = false,\n    cancelPrevious = true,\n    sync = false\n  } = options;\n  cancelPrevious && cancelAnimationFrame(rafId);\n  const exec = () => el == null ? void 0 : el.focus({\n    preventScroll\n  });\n  if (sync) {\n    exec();\n  } else {\n    rafId = requestAnimationFrame(exec);\n  }\n}\n\nfunction getAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\n\nfunction getChildren(nodes, id) {\n  let allChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);\n  });\n  let currentChildren = allChildren;\n  while (currentChildren.length) {\n    currentChildren = nodes.filter(node => {\n      var _currentChildren;\n      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {\n        var _node$context2;\n        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);\n      });\n    });\n    allChildren = allChildren.concat(currentChildren);\n  }\n  return allChildren;\n}\nfunction getDeepestNode(nodes, id) {\n  let deepestNodeId;\n  let maxDepth = -1;\n  function findDeepest(nodeId, depth) {\n    if (depth > maxDepth) {\n      deepestNodeId = nodeId;\n      maxDepth = depth;\n    }\n    const children = getChildren(nodes, nodeId);\n    children.forEach(child => {\n      findDeepest(child.id, depth + 1);\n    });\n  }\n  findDeepest(id, 0);\n  return nodes.find(node => node.id === deepestNodeId);\n}\n\n// Modified to add conditional `aria-hidden` support:\n// https://github.com/theKashey/aria-hidden/blob/9220c8f4a4fd35f63bee5510a9f41a37264382d4/src/index.ts\nlet counterMap = /*#__PURE__*/new WeakMap();\nlet uncontrolledElementsSet = /*#__PURE__*/new WeakSet();\nlet markerMap = {};\nlet lockCount$1 = 0;\nconst supportsInert = () => typeof HTMLElement !== 'undefined' && 'inert' in HTMLElement.prototype;\nconst unwrapHost = node => node && (node.host || unwrapHost(node.parentNode));\nconst correctElements = (parent, targets) => targets.map(target => {\n  if (parent.contains(target)) {\n    return target;\n  }\n  const correctedTarget = unwrapHost(target);\n  if (parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  return null;\n}).filter(x => x != null);\nfunction applyAttributeToOthers(uncorrectedAvoidElements, body, ariaHidden, inert) {\n  const markerName = 'data-floating-ui-inert';\n  const controlAttribute = inert ? 'inert' : ariaHidden ? 'aria-hidden' : null;\n  const avoidElements = correctElements(body, uncorrectedAvoidElements);\n  const elementsToKeep = new Set();\n  const elementsToStop = new Set(avoidElements);\n  const hiddenElements = [];\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n  const markerCounter = markerMap[markerName];\n  avoidElements.forEach(keep);\n  deep(body);\n  elementsToKeep.clear();\n  function keep(el) {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n    elementsToKeep.add(el);\n    el.parentNode && keep(el.parentNode);\n  }\n  function deep(parent) {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    [].forEach.call(parent.children, node => {\n      if (getNodeName(node) === 'script') return;\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        const attr = controlAttribute ? node.getAttribute(controlAttribute) : null;\n        const alreadyHidden = attr !== null && attr !== 'false';\n        const currentCounterValue = counterMap.get(node) || 0;\n        const counterValue = controlAttribute ? currentCounterValue + 1 : currentCounterValue;\n        const markerValue = (markerCounter.get(node) || 0) + 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenElements.push(node);\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledElementsSet.add(node);\n        }\n        if (markerValue === 1) {\n          node.setAttribute(markerName, '');\n        }\n        if (!alreadyHidden && controlAttribute) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  }\n  lockCount$1++;\n  return () => {\n    hiddenElements.forEach(element => {\n      const currentCounterValue = counterMap.get(element) || 0;\n      const counterValue = controlAttribute ? currentCounterValue - 1 : currentCounterValue;\n      const markerValue = (markerCounter.get(element) || 0) - 1;\n      counterMap.set(element, counterValue);\n      markerCounter.set(element, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledElementsSet.has(element) && controlAttribute) {\n          element.removeAttribute(controlAttribute);\n        }\n        uncontrolledElementsSet.delete(element);\n      }\n      if (!markerValue) {\n        element.removeAttribute(markerName);\n      }\n    });\n    lockCount$1--;\n    if (!lockCount$1) {\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledElementsSet = new WeakSet();\n      markerMap = {};\n    }\n  };\n}\nfunction markOthers(avoidElements, ariaHidden, inert) {\n  if (ariaHidden === void 0) {\n    ariaHidden = false;\n  }\n  if (inert === void 0) {\n    inert = false;\n  }\n  const body = getDocument(avoidElements[0]).body;\n  return applyAttributeToOthers(avoidElements.concat(Array.from(body.querySelectorAll('[aria-live]'))), body, ariaHidden, inert);\n}\n\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, direction) {\n  const allTabbable = tabbable(container, getTabbableOptions());\n  if (direction === 'prev') {\n    allTabbable.reverse();\n  }\n  const activeIndex = allTabbable.indexOf(activeElement(getDocument(container)));\n  const nextTabbableElements = allTabbable.slice(activeIndex + 1);\n  return nextTabbableElements[0];\n}\nfunction getNextTabbable() {\n  return getTabbableIn(document.body, 'next');\n}\nfunction getPreviousTabbable() {\n  return getTabbableIn(document.body, 'prev');\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\nconst HIDDEN_STYLES = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'fixed',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  top: 0,\n  left: 0\n};\nconst FocusGuard = /*#__PURE__*/React.forwardRef(function FocusGuard(props, ref) {\n  const [role, setRole] = React.useState();\n  index(() => {\n    if (isSafari()) {\n      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor\n      // on VoiceOver does trigger the onFocus event, so we can use the focus\n      // trap element. On Safari, only buttons trigger the onFocus event.\n      // NB: \"group\" role in the Sandbox no longer appears to work, must be a\n      // button role.\n      setRole('button');\n    }\n  }, []);\n  const restProps = {\n    ref,\n    tabIndex: 0,\n    // Role is only for VoiceOver\n    role,\n    'aria-hidden': role ? undefined : true,\n    [createAttribute('focus-guard')]: '',\n    style: HIDDEN_STYLES\n  };\n  return /*#__PURE__*/jsx(\"span\", {\n    ...props,\n    ...restProps\n  });\n});\n\nconst PortalContext = /*#__PURE__*/React.createContext(null);\nconst attr = /*#__PURE__*/createAttribute('portal');\n/**\n * @see https://floating-ui.com/docs/FloatingPortal#usefloatingportalnode\n */\nfunction useFloatingPortalNode(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    id,\n    root\n  } = props;\n  const uniqueId = useId();\n  const portalContext = usePortalContext();\n  const [portalNode, setPortalNode] = React.useState(null);\n  const portalNodeRef = React.useRef(null);\n  index(() => {\n    return () => {\n      portalNode == null || portalNode.remove();\n      // Allow the subsequent layout effects to create a new node on updates.\n      // The portal node will still be cleaned up on unmount.\n      // https://github.com/floating-ui/floating-ui/issues/2454\n      queueMicrotask(() => {\n        portalNodeRef.current = null;\n      });\n    };\n  }, [portalNode]);\n  index(() => {\n    // Wait for the uniqueId to be generated before creating the portal node in\n    // React <18 (using `useFloatingId` instead of the native `useId`).\n    // https://github.com/floating-ui/floating-ui/issues/2778\n    if (!uniqueId) return;\n    if (portalNodeRef.current) return;\n    const existingIdRoot = id ? document.getElementById(id) : null;\n    if (!existingIdRoot) return;\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    existingIdRoot.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, uniqueId]);\n  index(() => {\n    // Wait for the root to exist before creating the portal node. The root must\n    // be stored in state, not a ref, for this to work reactively.\n    if (root === null) return;\n    if (!uniqueId) return;\n    if (portalNodeRef.current) return;\n    let container = root || (portalContext == null ? void 0 : portalContext.portalNode);\n    if (container && !isElement(container)) container = container.current;\n    container = container || document.body;\n    let idWrapper = null;\n    if (id) {\n      idWrapper = document.createElement('div');\n      idWrapper.id = id;\n      container.appendChild(idWrapper);\n    }\n    const subRoot = document.createElement('div');\n    subRoot.id = uniqueId;\n    subRoot.setAttribute(attr, '');\n    container = idWrapper || container;\n    container.appendChild(subRoot);\n    portalNodeRef.current = subRoot;\n    setPortalNode(subRoot);\n  }, [id, root, uniqueId, portalContext]);\n  return portalNode;\n}\n/**\n * Portals the floating element into a given container element — by default,\n * outside of the app root and into the body.\n * This is necessary to ensure the floating element can appear outside any\n * potential parent containers that cause clipping (such as `overflow: hidden`),\n * while retaining its location in the React tree.\n * @see https://floating-ui.com/docs/FloatingPortal\n */\nfunction FloatingPortal(props) {\n  const {\n    children,\n    id,\n    root,\n    preserveTabOrder = true\n  } = props;\n  const portalNode = useFloatingPortalNode({\n    id,\n    root\n  });\n  const [focusManagerState, setFocusManagerState] = React.useState(null);\n  const beforeOutsideRef = React.useRef(null);\n  const afterOutsideRef = React.useRef(null);\n  const beforeInsideRef = React.useRef(null);\n  const afterInsideRef = React.useRef(null);\n  const modal = focusManagerState == null ? void 0 : focusManagerState.modal;\n  const open = focusManagerState == null ? void 0 : focusManagerState.open;\n  const shouldRenderGuards =\n  // The FocusManager and therefore floating element are currently open/\n  // rendered.\n  !!focusManagerState &&\n  // Guards are only for non-modal focus management.\n  !focusManagerState.modal &&\n  // Don't render if unmount is transitioning.\n  focusManagerState.open && preserveTabOrder && !!(root || portalNode);\n\n  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx\n  React.useEffect(() => {\n    if (!portalNode || !preserveTabOrder || modal) {\n      return;\n    }\n\n    // Make sure elements inside the portal element are tabbable only when the\n    // portal has already been focused, either by tabbing into a focus trap\n    // element outside or using the mouse.\n    function onFocus(event) {\n      if (portalNode && isOutsideEvent(event)) {\n        const focusing = event.type === 'focusin';\n        const manageFocus = focusing ? enableFocusInside : disableFocusInside;\n        manageFocus(portalNode);\n      }\n    }\n    // Listen to the event on the capture phase so they run before the focus\n    // trap elements onFocus prop is called.\n    portalNode.addEventListener('focusin', onFocus, true);\n    portalNode.addEventListener('focusout', onFocus, true);\n    return () => {\n      portalNode.removeEventListener('focusin', onFocus, true);\n      portalNode.removeEventListener('focusout', onFocus, true);\n    };\n  }, [portalNode, preserveTabOrder, modal]);\n  React.useEffect(() => {\n    if (!portalNode) return;\n    if (open) return;\n    enableFocusInside(portalNode);\n  }, [open, portalNode]);\n  return /*#__PURE__*/jsxs(PortalContext.Provider, {\n    value: React.useMemo(() => ({\n      preserveTabOrder,\n      beforeOutsideRef,\n      afterOutsideRef,\n      beforeInsideRef,\n      afterInsideRef,\n      portalNode,\n      setFocusManagerState\n    }), [preserveTabOrder, portalNode]),\n    children: [shouldRenderGuards && portalNode && /*#__PURE__*/jsx(FocusGuard, {\n      \"data-type\": \"outside\",\n      ref: beforeOutsideRef,\n      onFocus: event => {\n        if (isOutsideEvent(event, portalNode)) {\n          var _beforeInsideRef$curr;\n          (_beforeInsideRef$curr = beforeInsideRef.current) == null || _beforeInsideRef$curr.focus();\n        } else {\n          const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.domReference);\n          prevTabbable == null || prevTabbable.focus();\n        }\n      }\n    }), shouldRenderGuards && portalNode && /*#__PURE__*/jsx(\"span\", {\n      \"aria-owns\": portalNode.id,\n      style: HIDDEN_STYLES\n    }), portalNode && /*#__PURE__*/ReactDOM.createPortal(children, portalNode), shouldRenderGuards && portalNode && /*#__PURE__*/jsx(FocusGuard, {\n      \"data-type\": \"outside\",\n      ref: afterOutsideRef,\n      onFocus: event => {\n        if (isOutsideEvent(event, portalNode)) {\n          var _afterInsideRef$curre;\n          (_afterInsideRef$curre = afterInsideRef.current) == null || _afterInsideRef$curre.focus();\n        } else {\n          const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.domReference);\n          nextTabbable == null || nextTabbable.focus();\n          (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false, event.nativeEvent, 'focus-out'));\n        }\n      }\n    })]\n  });\n}\nconst usePortalContext = () => React.useContext(PortalContext);\n\nconst FOCUSABLE_ATTRIBUTE = 'data-floating-ui-focusable';\nfunction getFloatingFocusElement(floatingElement) {\n  if (!floatingElement) {\n    return null;\n  }\n  // Try to find the element that has `{...getFloatingProps()}` spread on it.\n  // This indicates the floating element is acting as a positioning wrapper, and\n  // so focus should be managed on the child element with the event handlers and\n  // aria props.\n  return floatingElement.hasAttribute(FOCUSABLE_ATTRIBUTE) ? floatingElement : floatingElement.querySelector(\"[\" + FOCUSABLE_ATTRIBUTE + \"]\") || floatingElement;\n}\n\nfunction useLiteMergeRefs(refs) {\n  return React.useMemo(() => {\n    return value => {\n      refs.forEach(ref => {\n        if (ref) {\n          ref.current = value;\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\nconst LIST_LIMIT = 20;\nlet previouslyFocusedElements = [];\nfunction addPreviouslyFocusedElement(element) {\n  previouslyFocusedElements = previouslyFocusedElements.filter(el => el.isConnected);\n  if (element && getNodeName(element) !== 'body') {\n    previouslyFocusedElements.push(element);\n    if (previouslyFocusedElements.length > LIST_LIMIT) {\n      previouslyFocusedElements = previouslyFocusedElements.slice(-LIST_LIMIT);\n    }\n  }\n}\nfunction getPreviouslyFocusedElement() {\n  return previouslyFocusedElements.slice().reverse().find(el => el.isConnected);\n}\nfunction getFirstTabbableElement(container) {\n  const tabbableOptions = getTabbableOptions();\n  if (isTabbable(container, tabbableOptions)) {\n    return container;\n  }\n  return tabbable(container, tabbableOptions)[0] || container;\n}\nconst VisuallyHiddenDismiss = /*#__PURE__*/React.forwardRef(function VisuallyHiddenDismiss(props, ref) {\n  return /*#__PURE__*/jsx(\"button\", {\n    ...props,\n    type: \"button\",\n    ref: ref,\n    tabIndex: -1,\n    style: HIDDEN_STYLES\n  });\n});\n/**\n * Provides focus management for the floating element.\n * @see https://floating-ui.com/docs/FloatingFocusManager\n */\nfunction FloatingFocusManager(props) {\n  const {\n    context,\n    children,\n    disabled = false,\n    order = ['content'],\n    guards: _guards = true,\n    initialFocus = 0,\n    returnFocus = true,\n    restoreFocus = false,\n    modal = true,\n    visuallyHiddenDismiss = false,\n    closeOnFocusOut = true,\n    outsideElementsInert = false\n  } = props;\n  const {\n    open,\n    onOpenChange,\n    events,\n    dataRef,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const getNodeId = useEffectEvent(() => {\n    var _dataRef$current$floa;\n    return (_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.nodeId;\n  });\n  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;\n  // If the reference is a combobox and is typeable (e.g. input/textarea),\n  // there are different focus semantics. The guards should not be rendered, but\n  // aria-hidden should be applied to all nodes still. Further, the visually\n  // hidden dismiss button should only appear at the end of the list, not the\n  // start.\n  const isUntrappedTypeableCombobox = isTypeableCombobox(domReference) && ignoreInitialFocus;\n\n  // Force the guards to be rendered if the `inert` attribute is not supported.\n  const inertSupported = supportsInert();\n  const guards = inertSupported ? _guards : true;\n  const useInert = !guards || inertSupported && outsideElementsInert;\n  const orderRef = useLatestRef(order);\n  const initialFocusRef = useLatestRef(initialFocus);\n  const returnFocusRef = useLatestRef(returnFocus);\n  const tree = useFloatingTree();\n  const portalContext = usePortalContext();\n  const startDismissButtonRef = React.useRef(null);\n  const endDismissButtonRef = React.useRef(null);\n  const preventReturnFocusRef = React.useRef(false);\n  const isPointerDownRef = React.useRef(false);\n  const tabbableIndexRef = React.useRef(-1);\n  const isInsidePortal = portalContext != null;\n  const floatingFocusElement = getFloatingFocusElement(floating);\n  const getTabbableContent = useEffectEvent(function (container) {\n    if (container === void 0) {\n      container = floatingFocusElement;\n    }\n    return container ? tabbable(container, getTabbableOptions()) : [];\n  });\n  const getTabbableElements = useEffectEvent(container => {\n    const content = getTabbableContent(container);\n    return orderRef.current.map(type => {\n      if (domReference && type === 'reference') {\n        return domReference;\n      }\n      if (floatingFocusElement && type === 'floating') {\n        return floatingFocusElement;\n      }\n      return content;\n    }).filter(Boolean).flat();\n  });\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!modal) return;\n    function onKeyDown(event) {\n      if (event.key === 'Tab') {\n        // The focus guards have nothing to focus, so we need to stop the event.\n        if (contains(floatingFocusElement, activeElement(getDocument(floatingFocusElement))) && getTabbableContent().length === 0 && !isUntrappedTypeableCombobox) {\n          stopEvent(event);\n        }\n        const els = getTabbableElements();\n        const target = getTarget(event);\n        if (orderRef.current[0] === 'reference' && target === domReference) {\n          stopEvent(event);\n          if (event.shiftKey) {\n            enqueueFocus(els[els.length - 1]);\n          } else {\n            enqueueFocus(els[1]);\n          }\n        }\n        if (orderRef.current[1] === 'floating' && target === floatingFocusElement && event.shiftKey) {\n          stopEvent(event);\n          enqueueFocus(els[0]);\n        }\n      }\n    }\n    const doc = getDocument(floatingFocusElement);\n    doc.addEventListener('keydown', onKeyDown);\n    return () => {\n      doc.removeEventListener('keydown', onKeyDown);\n    };\n  }, [disabled, domReference, floatingFocusElement, modal, orderRef, isUntrappedTypeableCombobox, getTabbableContent, getTabbableElements]);\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!floating) return;\n    function handleFocusIn(event) {\n      const target = getTarget(event);\n      const tabbableContent = getTabbableContent();\n      const tabbableIndex = tabbableContent.indexOf(target);\n      if (tabbableIndex !== -1) {\n        tabbableIndexRef.current = tabbableIndex;\n      }\n    }\n    floating.addEventListener('focusin', handleFocusIn);\n    return () => {\n      floating.removeEventListener('focusin', handleFocusIn);\n    };\n  }, [disabled, floating, getTabbableContent]);\n  React.useEffect(() => {\n    if (disabled) return;\n    if (!closeOnFocusOut) return;\n\n    // In Safari, buttons lose focus when pressing them.\n    function handlePointerDown() {\n      isPointerDownRef.current = true;\n      setTimeout(() => {\n        isPointerDownRef.current = false;\n      });\n    }\n    function handleFocusOutside(event) {\n      const relatedTarget = event.relatedTarget;\n      queueMicrotask(() => {\n        const nodeId = getNodeId();\n        const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute(createAttribute('focus-guard')) || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context, _node$context2;\n          return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);\n        }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context3, _node$context4, _node$context5;\n          return [(_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating, getFloatingFocusElement((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.floating)].includes(relatedTarget) || ((_node$context5 = node.context) == null ? void 0 : _node$context5.elements.domReference) === relatedTarget;\n        })));\n\n        // Restore focus to the previous tabbable element index to prevent\n        // focus from being lost outside the floating tree.\n        if (restoreFocus && movedToUnrelatedNode && activeElement(getDocument(floatingFocusElement)) === getDocument(floatingFocusElement).body) {\n          // Let `FloatingPortal` effect knows that focus is still inside the\n          // floating tree.\n          if (isHTMLElement(floatingFocusElement)) {\n            floatingFocusElement.focus();\n          }\n          const prevTabbableIndex = tabbableIndexRef.current;\n          const tabbableContent = getTabbableContent();\n          const nodeToFocus = tabbableContent[prevTabbableIndex] || tabbableContent[tabbableContent.length - 1] || floatingFocusElement;\n          if (isHTMLElement(nodeToFocus)) {\n            nodeToFocus.focus();\n          }\n        }\n\n        // Focus did not move inside the floating tree, and there are no tabbable\n        // portal guards to handle closing.\n        if ((isUntrappedTypeableCombobox ? true : !modal) && relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&\n        // Fix React 18 Strict Mode returnFocus due to double rendering.\n        relatedTarget !== getPreviouslyFocusedElement()) {\n          preventReturnFocusRef.current = true;\n          onOpenChange(false, event, 'focus-out');\n        }\n      });\n    }\n    if (floating && isHTMLElement(domReference)) {\n      domReference.addEventListener('focusout', handleFocusOutside);\n      domReference.addEventListener('pointerdown', handlePointerDown);\n      floating.addEventListener('focusout', handleFocusOutside);\n      return () => {\n        domReference.removeEventListener('focusout', handleFocusOutside);\n        domReference.removeEventListener('pointerdown', handlePointerDown);\n        floating.removeEventListener('focusout', handleFocusOutside);\n      };\n    }\n  }, [disabled, domReference, floating, floatingFocusElement, modal, tree, portalContext, onOpenChange, closeOnFocusOut, restoreFocus, getTabbableContent, isUntrappedTypeableCombobox, getNodeId]);\n  const beforeGuardRef = React.useRef(null);\n  const afterGuardRef = React.useRef(null);\n  const mergedBeforeGuardRef = useLiteMergeRefs([beforeGuardRef, portalContext == null ? void 0 : portalContext.beforeInsideRef]);\n  const mergedAfterGuardRef = useLiteMergeRefs([afterGuardRef, portalContext == null ? void 0 : portalContext.afterInsideRef]);\n  React.useEffect(() => {\n    var _portalContext$portal;\n    if (disabled) return;\n    if (!floating) return;\n\n    // Don't hide portals nested within the parent portal.\n    const portalNodes = Array.from((portalContext == null || (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll(\"[\" + createAttribute('portal') + \"]\")) || []);\n    const ancestorFloatingNodes = tree && !modal ? getAncestors(tree == null ? void 0 : tree.nodesRef.current, getNodeId()).map(node => {\n      var _node$context6;\n      return (_node$context6 = node.context) == null ? void 0 : _node$context6.elements.floating;\n    }) : [];\n    const insideElements = [floating, ...portalNodes, ...ancestorFloatingNodes, startDismissButtonRef.current, endDismissButtonRef.current, beforeGuardRef.current, afterGuardRef.current, portalContext == null ? void 0 : portalContext.beforeOutsideRef.current, portalContext == null ? void 0 : portalContext.afterOutsideRef.current, orderRef.current.includes('reference') || isUntrappedTypeableCombobox ? domReference : null].filter(x => x != null);\n    const cleanup = modal || isUntrappedTypeableCombobox ? markOthers(insideElements, !useInert, useInert) : markOthers(insideElements);\n    return () => {\n      cleanup();\n    };\n  }, [disabled, domReference, floating, modal, orderRef, portalContext, isUntrappedTypeableCombobox, guards, useInert, tree, getNodeId]);\n  index(() => {\n    if (disabled || !isHTMLElement(floatingFocusElement)) return;\n    const doc = getDocument(floatingFocusElement);\n    const previouslyFocusedElement = activeElement(doc);\n\n    // Wait for any layout effect state setters to execute to set `tabIndex`.\n    queueMicrotask(() => {\n      const focusableElements = getTabbableElements(floatingFocusElement);\n      const initialFocusValue = initialFocusRef.current;\n      const elToFocus = (typeof initialFocusValue === 'number' ? focusableElements[initialFocusValue] : initialFocusValue.current) || floatingFocusElement;\n      const focusAlreadyInsideFloatingEl = contains(floatingFocusElement, previouslyFocusedElement);\n      if (!ignoreInitialFocus && !focusAlreadyInsideFloatingEl && open) {\n        enqueueFocus(elToFocus, {\n          preventScroll: elToFocus === floatingFocusElement\n        });\n      }\n    });\n  }, [disabled, open, floatingFocusElement, ignoreInitialFocus, getTabbableElements, initialFocusRef]);\n  index(() => {\n    if (disabled || !floatingFocusElement) return;\n    let preventReturnFocusScroll = false;\n    let focusReference = false;\n    const doc = getDocument(floatingFocusElement);\n    const previouslyFocusedElement = activeElement(doc);\n    const contextData = dataRef.current;\n    let openEvent = contextData.openEvent;\n    addPreviouslyFocusedElement(previouslyFocusedElement);\n\n    // Dismissing via outside press should always ignore `returnFocus` to\n    // prevent unwanted scrolling.\n    function onOpenChange(_ref) {\n      let {\n        open,\n        reason,\n        event,\n        nested\n      } = _ref;\n      if (open) {\n        openEvent = event;\n      }\n      if (reason === 'escape-key') {\n        focusReference = true;\n      }\n      if (['hover', 'safe-polygon'].includes(reason) && event.type === 'mouseleave') {\n        preventReturnFocusRef.current = true;\n      }\n      if (reason !== 'outside-press') return;\n      if (nested) {\n        preventReturnFocusRef.current = false;\n        preventReturnFocusScroll = true;\n      } else if (isVirtualClick(event) || isVirtualPointerEvent(event)) {\n        preventReturnFocusRef.current = false;\n      } else {\n        let isPreventScrollSupported = false;\n        document.createElement('div').focus({\n          get preventScroll() {\n            isPreventScrollSupported = true;\n            return false;\n          }\n        });\n        if (isPreventScrollSupported) {\n          preventReturnFocusRef.current = false;\n          preventReturnFocusScroll = true;\n        } else {\n          preventReturnFocusRef.current = true;\n        }\n      }\n    }\n    events.on('openchange', onOpenChange);\n    const fallbackEl = doc.createElement('span');\n    fallbackEl.setAttribute('tabindex', '-1');\n    fallbackEl.setAttribute('aria-hidden', 'true');\n    Object.assign(fallbackEl.style, HIDDEN_STYLES);\n    if (isInsidePortal && domReference) {\n      domReference.insertAdjacentElement('afterend', fallbackEl);\n    }\n    function getReturnElement() {\n      if (typeof returnFocusRef.current === 'boolean') {\n        return focusReference && domReference ? domReference : getPreviouslyFocusedElement() || fallbackEl;\n      }\n      return returnFocusRef.current.current || fallbackEl;\n    }\n    return () => {\n      events.off('openchange', onOpenChange);\n      const activeEl = activeElement(doc);\n      const isFocusInsideFloatingTree = contains(floating, activeEl) || tree && getChildren(tree.nodesRef.current, getNodeId()).some(node => {\n        var _node$context7;\n        return contains((_node$context7 = node.context) == null ? void 0 : _node$context7.elements.floating, activeEl);\n      });\n      if (isFocusInsideFloatingTree || !!openEvent && ['click', 'mousedown'].includes(openEvent.type)) {\n        focusReference = true;\n      }\n      const returnElement = getReturnElement();\n      queueMicrotask(() => {\n        // This is `returnElement`, if it's tabbable, or its first tabbable child.\n        const tabbableReturnElement = getFirstTabbableElement(returnElement);\n        if (\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        returnFocusRef.current && !preventReturnFocusRef.current && isHTMLElement(tabbableReturnElement) && (\n        // If the focus moved somewhere else after mount, avoid returning focus\n        // since it likely entered a different element which should be\n        // respected: https://github.com/floating-ui/floating-ui/issues/2607\n        tabbableReturnElement !== activeEl && activeEl !== doc.body ? isFocusInsideFloatingTree : true)) {\n          tabbableReturnElement.focus({\n            preventScroll: preventReturnFocusScroll\n          });\n        }\n        fallbackEl.remove();\n      });\n    };\n  }, [disabled, floating, floatingFocusElement, returnFocusRef, dataRef, events, tree, isInsidePortal, domReference, getNodeId]);\n  React.useEffect(() => {\n    // The `returnFocus` cleanup behavior is inside a microtask; ensure we\n    // wait for it to complete before resetting the flag.\n    queueMicrotask(() => {\n      preventReturnFocusRef.current = false;\n    });\n  }, [disabled]);\n\n  // Synchronize the `context` & `modal` value to the FloatingPortal context.\n  // It will decide whether or not it needs to render its own guards.\n  index(() => {\n    if (disabled) return;\n    if (!portalContext) return;\n    portalContext.setFocusManagerState({\n      modal,\n      closeOnFocusOut,\n      open,\n      onOpenChange,\n      domReference\n    });\n    return () => {\n      portalContext.setFocusManagerState(null);\n    };\n  }, [disabled, portalContext, modal, open, onOpenChange, closeOnFocusOut, domReference]);\n  index(() => {\n    if (disabled) return;\n    if (!floatingFocusElement) return;\n    if (typeof MutationObserver !== 'function') return;\n    if (ignoreInitialFocus) return;\n    const handleMutation = () => {\n      const tabIndex = floatingFocusElement.getAttribute('tabindex');\n      const tabbableContent = getTabbableContent();\n      const activeEl = activeElement(getDocument(floating));\n      const tabbableIndex = tabbableContent.indexOf(activeEl);\n      if (tabbableIndex !== -1) {\n        tabbableIndexRef.current = tabbableIndex;\n      }\n      if (orderRef.current.includes('floating') || activeEl !== domReference && tabbableContent.length === 0) {\n        if (tabIndex !== '0') {\n          floatingFocusElement.setAttribute('tabindex', '0');\n        }\n      } else if (tabIndex !== '-1') {\n        floatingFocusElement.setAttribute('tabindex', '-1');\n      }\n    };\n    handleMutation();\n    const observer = new MutationObserver(handleMutation);\n    observer.observe(floatingFocusElement, {\n      childList: true,\n      subtree: true,\n      attributes: true\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, [disabled, floating, floatingFocusElement, domReference, orderRef, getTabbableContent, ignoreInitialFocus]);\n  function renderDismissButton(location) {\n    if (disabled || !visuallyHiddenDismiss || !modal) {\n      return null;\n    }\n    return /*#__PURE__*/jsx(VisuallyHiddenDismiss, {\n      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,\n      onClick: event => onOpenChange(false, event.nativeEvent),\n      children: typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss'\n    });\n  }\n  const shouldRenderGuards = !disabled && guards && (modal ? !isUntrappedTypeableCombobox : true) && (isInsidePortal || modal);\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [shouldRenderGuards && /*#__PURE__*/jsx(FocusGuard, {\n      \"data-type\": \"inside\",\n      ref: mergedBeforeGuardRef,\n      onFocus: event => {\n        if (modal) {\n          const els = getTabbableElements();\n          enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);\n        } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n          preventReturnFocusRef.current = false;\n          if (isOutsideEvent(event, portalContext.portalNode)) {\n            const nextTabbable = getNextTabbable() || domReference;\n            nextTabbable == null || nextTabbable.focus();\n          } else {\n            var _portalContext$before;\n            (_portalContext$before = portalContext.beforeOutsideRef.current) == null || _portalContext$before.focus();\n          }\n        }\n      }\n    }), !isUntrappedTypeableCombobox && renderDismissButton('start'), children, renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/jsx(FocusGuard, {\n      \"data-type\": \"inside\",\n      ref: mergedAfterGuardRef,\n      onFocus: event => {\n        if (modal) {\n          enqueueFocus(getTabbableElements()[0]);\n        } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n          if (closeOnFocusOut) {\n            preventReturnFocusRef.current = true;\n          }\n          if (isOutsideEvent(event, portalContext.portalNode)) {\n            const prevTabbable = getPreviousTabbable() || domReference;\n            prevTabbable == null || prevTabbable.focus();\n          } else {\n            var _portalContext$afterO;\n            (_portalContext$afterO = portalContext.afterOutsideRef.current) == null || _portalContext$afterO.focus();\n          }\n        }\n      }\n    })]\n  });\n}\n\nlet lockCount = 0;\nfunction enableScrollLock() {\n  const isIOS = /iP(hone|ad|od)|iOS/.test(getPlatform());\n  const bodyStyle = document.body.style;\n  // RTL <body> scrollbar\n  const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;\n  const paddingProp = scrollbarX ? 'paddingLeft' : 'paddingRight';\n  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n  const scrollX = bodyStyle.left ? parseFloat(bodyStyle.left) : window.scrollX;\n  const scrollY = bodyStyle.top ? parseFloat(bodyStyle.top) : window.scrollY;\n  bodyStyle.overflow = 'hidden';\n  if (scrollbarWidth) {\n    bodyStyle[paddingProp] = scrollbarWidth + \"px\";\n  }\n\n  // Only iOS doesn't respect `overflow: hidden` on document.body, and this\n  // technique has fewer side effects.\n  if (isIOS) {\n    var _window$visualViewpor, _window$visualViewpor2;\n    // iOS 12 does not support `visualViewport`.\n    const offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0;\n    const offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0;\n    Object.assign(bodyStyle, {\n      position: 'fixed',\n      top: -(scrollY - Math.floor(offsetTop)) + \"px\",\n      left: -(scrollX - Math.floor(offsetLeft)) + \"px\",\n      right: '0'\n    });\n  }\n  return () => {\n    Object.assign(bodyStyle, {\n      overflow: '',\n      [paddingProp]: ''\n    });\n    if (isIOS) {\n      Object.assign(bodyStyle, {\n        position: '',\n        top: '',\n        left: '',\n        right: ''\n      });\n      window.scrollTo(scrollX, scrollY);\n    }\n  };\n}\nlet cleanup = () => {};\n\n/**\n * Provides base styling for a fixed overlay element to dim content or block\n * pointer events behind a floating element.\n * It's a regular `<div>`, so it can be styled via any CSS solution you prefer.\n * @see https://floating-ui.com/docs/FloatingOverlay\n */\nconst FloatingOverlay = /*#__PURE__*/React.forwardRef(function FloatingOverlay(props, ref) {\n  const {\n    lockScroll = false,\n    ...rest\n  } = props;\n  index(() => {\n    if (!lockScroll) return;\n    lockCount++;\n    if (lockCount === 1) {\n      cleanup = enableScrollLock();\n    }\n    return () => {\n      lockCount--;\n      if (lockCount === 0) {\n        cleanup();\n      }\n    };\n  }, [lockScroll]);\n  return /*#__PURE__*/jsx(\"div\", {\n    ref: ref,\n    ...rest,\n    style: {\n      position: 'fixed',\n      overflow: 'auto',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      ...rest.style\n    }\n  });\n});\n\nfunction isButtonTarget(event) {\n  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';\n}\nfunction isSpaceIgnored(element) {\n  return isTypeableElement(element);\n}\n/**\n * Opens or closes the floating element when clicking the reference element.\n * @see https://floating-ui.com/docs/useClick\n */\nfunction useClick(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    event: eventOption = 'click',\n    toggle = true,\n    ignoreMouse = false,\n    keyboardHandlers = true,\n    stickIfOpen = true\n  } = props;\n  const pointerTypeRef = React.useRef();\n  const didKeyDownRef = React.useRef(false);\n  const reference = React.useMemo(() => ({\n    onPointerDown(event) {\n      pointerTypeRef.current = event.pointerType;\n    },\n    onMouseDown(event) {\n      const pointerType = pointerTypeRef.current;\n\n      // Ignore all buttons except for the \"main\" button.\n      // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n      if (event.button !== 0) return;\n      if (eventOption === 'click') return;\n      if (isMouseLikePointerType(pointerType, true) && ignoreMouse) return;\n      if (open && toggle && (dataRef.current.openEvent && stickIfOpen ? dataRef.current.openEvent.type === 'mousedown' : true)) {\n        onOpenChange(false, event.nativeEvent, 'click');\n      } else {\n        // Prevent stealing focus from the floating element\n        event.preventDefault();\n        onOpenChange(true, event.nativeEvent, 'click');\n      }\n    },\n    onClick(event) {\n      const pointerType = pointerTypeRef.current;\n      if (eventOption === 'mousedown' && pointerTypeRef.current) {\n        pointerTypeRef.current = undefined;\n        return;\n      }\n      if (isMouseLikePointerType(pointerType, true) && ignoreMouse) return;\n      if (open && toggle && (dataRef.current.openEvent && stickIfOpen ? dataRef.current.openEvent.type === 'click' : true)) {\n        onOpenChange(false, event.nativeEvent, 'click');\n      } else {\n        onOpenChange(true, event.nativeEvent, 'click');\n      }\n    },\n    onKeyDown(event) {\n      pointerTypeRef.current = undefined;\n      if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event)) {\n        return;\n      }\n      if (event.key === ' ' && !isSpaceIgnored(domReference)) {\n        // Prevent scrolling\n        event.preventDefault();\n        didKeyDownRef.current = true;\n      }\n      if (event.key === 'Enter') {\n        if (open && toggle) {\n          onOpenChange(false, event.nativeEvent, 'click');\n        } else {\n          onOpenChange(true, event.nativeEvent, 'click');\n        }\n      }\n    },\n    onKeyUp(event) {\n      if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event) || isSpaceIgnored(domReference)) {\n        return;\n      }\n      if (event.key === ' ' && didKeyDownRef.current) {\n        didKeyDownRef.current = false;\n        if (open && toggle) {\n          onOpenChange(false, event.nativeEvent, 'click');\n        } else {\n          onOpenChange(true, event.nativeEvent, 'click');\n        }\n      }\n    }\n  }), [dataRef, domReference, eventOption, ignoreMouse, keyboardHandlers, onOpenChange, open, stickIfOpen, toggle]);\n  return React.useMemo(() => enabled ? {\n    reference\n  } : {}, [enabled, reference]);\n}\n\nfunction createVirtualElement(domElement, data) {\n  let offsetX = null;\n  let offsetY = null;\n  let isAutoUpdateEvent = false;\n  return {\n    contextElement: domElement || undefined,\n    getBoundingClientRect() {\n      var _data$dataRef$current;\n      const domRect = (domElement == null ? void 0 : domElement.getBoundingClientRect()) || {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n      const isXAxis = data.axis === 'x' || data.axis === 'both';\n      const isYAxis = data.axis === 'y' || data.axis === 'both';\n      const canTrackCursorOnAutoUpdate = ['mouseenter', 'mousemove'].includes(((_data$dataRef$current = data.dataRef.current.openEvent) == null ? void 0 : _data$dataRef$current.type) || '') && data.pointerType !== 'touch';\n      let width = domRect.width;\n      let height = domRect.height;\n      let x = domRect.x;\n      let y = domRect.y;\n      if (offsetX == null && data.x && isXAxis) {\n        offsetX = domRect.x - data.x;\n      }\n      if (offsetY == null && data.y && isYAxis) {\n        offsetY = domRect.y - data.y;\n      }\n      x -= offsetX || 0;\n      y -= offsetY || 0;\n      width = 0;\n      height = 0;\n      if (!isAutoUpdateEvent || canTrackCursorOnAutoUpdate) {\n        width = data.axis === 'y' ? domRect.width : 0;\n        height = data.axis === 'x' ? domRect.height : 0;\n        x = isXAxis && data.x != null ? data.x : x;\n        y = isYAxis && data.y != null ? data.y : y;\n      } else if (isAutoUpdateEvent && !canTrackCursorOnAutoUpdate) {\n        height = data.axis === 'x' ? domRect.height : height;\n        width = data.axis === 'y' ? domRect.width : width;\n      }\n      isAutoUpdateEvent = true;\n      return {\n        width,\n        height,\n        x,\n        y,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x\n      };\n    }\n  };\n}\nfunction isMouseBasedEvent(event) {\n  return event != null && event.clientX != null;\n}\n/**\n * Positions the floating element relative to a client point (in the viewport),\n * such as the mouse position. By default, it follows the mouse cursor.\n * @see https://floating-ui.com/docs/useClientPoint\n */\nfunction useClientPoint(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    dataRef,\n    elements: {\n      floating,\n      domReference\n    },\n    refs\n  } = context;\n  const {\n    enabled = true,\n    axis = 'both',\n    x = null,\n    y = null\n  } = props;\n  const initialRef = React.useRef(false);\n  const cleanupListenerRef = React.useRef(null);\n  const [pointerType, setPointerType] = React.useState();\n  const [reactive, setReactive] = React.useState([]);\n  const setReference = useEffectEvent((x, y) => {\n    if (initialRef.current) return;\n\n    // Prevent setting if the open event was not a mouse-like one\n    // (e.g. focus to open, then hover over the reference element).\n    // Only apply if the event exists.\n    if (dataRef.current.openEvent && !isMouseBasedEvent(dataRef.current.openEvent)) {\n      return;\n    }\n    refs.setPositionReference(createVirtualElement(domReference, {\n      x,\n      y,\n      axis,\n      dataRef,\n      pointerType\n    }));\n  });\n  const handleReferenceEnterOrMove = useEffectEvent(event => {\n    if (x != null || y != null) return;\n    if (!open) {\n      setReference(event.clientX, event.clientY);\n    } else if (!cleanupListenerRef.current) {\n      // If there's no cleanup, there's no listener, but we want to ensure\n      // we add the listener if the cursor landed on the floating element and\n      // then back on the reference (i.e. it's interactive).\n      setReactive([]);\n    }\n  });\n\n  // If the pointer is a mouse-like pointer, we want to continue following the\n  // mouse even if the floating element is transitioning out. On touch\n  // devices, this is undesirable because the floating element will move to\n  // the dismissal touch point.\n  const openCheck = isMouseLikePointerType(pointerType) ? floating : open;\n  const addListener = React.useCallback(() => {\n    // Explicitly specified `x`/`y` coordinates shouldn't add a listener.\n    if (!openCheck || !enabled || x != null || y != null) return;\n    const win = getWindow(floating);\n    function handleMouseMove(event) {\n      const target = getTarget(event);\n      if (!contains(floating, target)) {\n        setReference(event.clientX, event.clientY);\n      } else {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      }\n    }\n    if (!dataRef.current.openEvent || isMouseBasedEvent(dataRef.current.openEvent)) {\n      win.addEventListener('mousemove', handleMouseMove);\n      const cleanup = () => {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      };\n      cleanupListenerRef.current = cleanup;\n      return cleanup;\n    }\n    refs.setPositionReference(domReference);\n  }, [openCheck, enabled, x, y, floating, dataRef, refs, domReference, setReference]);\n  React.useEffect(() => {\n    return addListener();\n  }, [addListener, reactive]);\n  React.useEffect(() => {\n    if (enabled && !floating) {\n      initialRef.current = false;\n    }\n  }, [enabled, floating]);\n  React.useEffect(() => {\n    if (!enabled && open) {\n      initialRef.current = true;\n    }\n  }, [enabled, open]);\n  index(() => {\n    if (enabled && (x != null || y != null)) {\n      initialRef.current = false;\n      setReference(x, y);\n    }\n  }, [enabled, x, y, setReference]);\n  const reference = React.useMemo(() => {\n    function setPointerTypeRef(_ref) {\n      let {\n        pointerType\n      } = _ref;\n      setPointerType(pointerType);\n    }\n    return {\n      onPointerDown: setPointerTypeRef,\n      onPointerEnter: setPointerTypeRef,\n      onMouseMove: handleReferenceEnterOrMove,\n      onMouseEnter: handleReferenceEnterOrMove\n    };\n  }, [handleReferenceEnterOrMove]);\n  return React.useMemo(() => enabled ? {\n    reference\n  } : {}, [enabled, reference]);\n}\n\nconst bubbleHandlerKeys = {\n  pointerdown: 'onPointerDown',\n  mousedown: 'onMouseDown',\n  click: 'onClick'\n};\nconst captureHandlerKeys = {\n  pointerdown: 'onPointerDownCapture',\n  mousedown: 'onMouseDownCapture',\n  click: 'onClickCapture'\n};\nconst normalizeProp = normalizable => {\n  var _normalizable$escapeK, _normalizable$outside;\n  return {\n    escapeKey: typeof normalizable === 'boolean' ? normalizable : (_normalizable$escapeK = normalizable == null ? void 0 : normalizable.escapeKey) != null ? _normalizable$escapeK : false,\n    outsidePress: typeof normalizable === 'boolean' ? normalizable : (_normalizable$outside = normalizable == null ? void 0 : normalizable.outsidePress) != null ? _normalizable$outside : true\n  };\n};\n/**\n * Closes the floating element when a dismissal is requested — by default, when\n * the user presses the `escape` key or outside of the floating element.\n * @see https://floating-ui.com/docs/useDismiss\n */\nfunction useDismiss(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    elements,\n    dataRef\n  } = context;\n  const {\n    enabled = true,\n    escapeKey = true,\n    outsidePress: unstable_outsidePress = true,\n    outsidePressEvent = 'pointerdown',\n    referencePress = false,\n    referencePressEvent = 'pointerdown',\n    ancestorScroll = false,\n    bubbles,\n    capture\n  } = props;\n  const tree = useFloatingTree();\n  const outsidePressFn = useEffectEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);\n  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;\n  const insideReactTreeRef = React.useRef(false);\n  const endedOrStartedInsideRef = React.useRef(false);\n  const {\n    escapeKey: escapeKeyBubbles,\n    outsidePress: outsidePressBubbles\n  } = normalizeProp(bubbles);\n  const {\n    escapeKey: escapeKeyCapture,\n    outsidePress: outsidePressCapture\n  } = normalizeProp(capture);\n  const isComposingRef = React.useRef(false);\n  const closeOnEscapeKeyDown = useEffectEvent(event => {\n    var _dataRef$current$floa;\n    if (!open || !enabled || !escapeKey || event.key !== 'Escape') {\n      return;\n    }\n\n    // Wait until IME is settled. Pressing `Escape` while composing should\n    // close the compose menu, but not the floating element.\n    if (isComposingRef.current) {\n      return;\n    }\n    const nodeId = (_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.nodeId;\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (!escapeKeyBubbles) {\n      event.stopPropagation();\n      if (children.length > 0) {\n        let shouldDismiss = true;\n        children.forEach(child => {\n          var _child$context;\n          if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {\n            shouldDismiss = false;\n            return;\n          }\n        });\n        if (!shouldDismiss) {\n          return;\n        }\n      }\n    }\n    onOpenChange(false, isReactEvent(event) ? event.nativeEvent : event, 'escape-key');\n  });\n  const closeOnEscapeKeyDownCapture = useEffectEvent(event => {\n    var _getTarget2;\n    const callback = () => {\n      var _getTarget;\n      closeOnEscapeKeyDown(event);\n      (_getTarget = getTarget(event)) == null || _getTarget.removeEventListener('keydown', callback);\n    };\n    (_getTarget2 = getTarget(event)) == null || _getTarget2.addEventListener('keydown', callback);\n  });\n  const closeOnPressOutside = useEffectEvent(event => {\n    var _dataRef$current$floa2;\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = insideReactTreeRef.current;\n    insideReactTreeRef.current = false;\n\n    // When click outside is lazy (`click` event), handle dragging.\n    // Don't close if:\n    // - The click started inside the floating element.\n    // - The click ended inside the floating element.\n    const endedOrStartedInside = endedOrStartedInsideRef.current;\n    endedOrStartedInsideRef.current = false;\n    if (outsidePressEvent === 'click' && endedOrStartedInside) {\n      return;\n    }\n    if (insideReactTree) {\n      return;\n    }\n    if (typeof outsidePress === 'function' && !outsidePress(event)) {\n      return;\n    }\n    const target = getTarget(event);\n    const inertSelector = \"[\" + createAttribute('inert') + \"]\";\n    const markers = getDocument(elements.floating).querySelectorAll(inertSelector);\n    let targetRootAncestor = isElement(target) ? target : null;\n    while (targetRootAncestor && !isLastTraversableNode(targetRootAncestor)) {\n      const nextParent = getParentNode(targetRootAncestor);\n      if (isLastTraversableNode(nextParent) || !isElement(nextParent)) {\n        break;\n      }\n      targetRootAncestor = nextParent;\n    }\n\n    // Check if the click occurred on a third-party element injected after the\n    // floating element rendered.\n    if (markers.length && isElement(target) && !isRootElement(target) &&\n    // Clicked on a direct ancestor (e.g. FloatingOverlay).\n    !contains(target, elements.floating) &&\n    // If the target root element contains none of the markers, then the\n    // element was injected after the floating element rendered.\n    Array.from(markers).every(marker => !contains(targetRootAncestor, marker))) {\n      return;\n    }\n\n    // Check if the click occurred on the scrollbar\n    if (isHTMLElement(target) && floating) {\n      const lastTraversableNode = isLastTraversableNode(target);\n      const style = getComputedStyle(target);\n      const scrollRe = /auto|scroll/;\n      const isScrollableX = lastTraversableNode || scrollRe.test(style.overflowX);\n      const isScrollableY = lastTraversableNode || scrollRe.test(style.overflowY);\n      const canScrollX = isScrollableX && target.clientWidth > 0 && target.scrollWidth > target.clientWidth;\n      const canScrollY = isScrollableY && target.clientHeight > 0 && target.scrollHeight > target.clientHeight;\n      const isRTL = style.direction === 'rtl';\n\n      // Check click position relative to scrollbar.\n      // In some browsers it is possible to change the <body> (or window)\n      // scrollbar to the left side, but is very rare and is difficult to\n      // check for. Plus, for modal dialogs with backdrops, it is more\n      // important that the backdrop is checked but not so much the window.\n      const pressedVerticalScrollbar = canScrollY && (isRTL ? event.offsetX <= target.offsetWidth - target.clientWidth : event.offsetX > target.clientWidth);\n      const pressedHorizontalScrollbar = canScrollX && event.offsetY > target.clientHeight;\n      if (pressedVerticalScrollbar || pressedHorizontalScrollbar) {\n        return;\n      }\n    }\n    const nodeId = (_dataRef$current$floa2 = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa2.nodeId;\n    const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n      var _node$context;\n      return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);\n    });\n    if (isEventTargetWithin(event, elements.floating) || isEventTargetWithin(event, elements.domReference) || targetIsInsideChildren) {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (children.length > 0) {\n      let shouldDismiss = true;\n      children.forEach(child => {\n        var _child$context2;\n        if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {\n          shouldDismiss = false;\n          return;\n        }\n      });\n      if (!shouldDismiss) {\n        return;\n      }\n    }\n    onOpenChange(false, event, 'outside-press');\n  });\n  const closeOnPressOutsideCapture = useEffectEvent(event => {\n    var _getTarget4;\n    const callback = () => {\n      var _getTarget3;\n      closeOnPressOutside(event);\n      (_getTarget3 = getTarget(event)) == null || _getTarget3.removeEventListener(outsidePressEvent, callback);\n    };\n    (_getTarget4 = getTarget(event)) == null || _getTarget4.addEventListener(outsidePressEvent, callback);\n  });\n  React.useEffect(() => {\n    if (!open || !enabled) {\n      return;\n    }\n    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;\n    dataRef.current.__outsidePressBubbles = outsidePressBubbles;\n    let compositionTimeout = -1;\n    function onScroll(event) {\n      onOpenChange(false, event, 'ancestor-scroll');\n    }\n    function handleCompositionStart() {\n      window.clearTimeout(compositionTimeout);\n      isComposingRef.current = true;\n    }\n    function handleCompositionEnd() {\n      // Safari fires `compositionend` before `keydown`, so we need to wait\n      // until the next tick to set `isComposing` to `false`.\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      compositionTimeout = window.setTimeout(() => {\n        isComposingRef.current = false;\n      },\n      // 0ms or 1ms don't work in Safari. 5ms appears to consistently work.\n      // Only apply to WebKit for the test to remain 0ms.\n      isWebKit() ? 5 : 0);\n    }\n    const doc = getDocument(elements.floating);\n    if (escapeKey) {\n      doc.addEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n      doc.addEventListener('compositionstart', handleCompositionStart);\n      doc.addEventListener('compositionend', handleCompositionEnd);\n    }\n    outsidePress && doc.addEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n    let ancestors = [];\n    if (ancestorScroll) {\n      if (isElement(elements.domReference)) {\n        ancestors = getOverflowAncestors(elements.domReference);\n      }\n      if (isElement(elements.floating)) {\n        ancestors = ancestors.concat(getOverflowAncestors(elements.floating));\n      }\n      if (!isElement(elements.reference) && elements.reference && elements.reference.contextElement) {\n        ancestors = ancestors.concat(getOverflowAncestors(elements.reference.contextElement));\n      }\n    }\n\n    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)\n    ancestors = ancestors.filter(ancestor => {\n      var _doc$defaultView;\n      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);\n    });\n    ancestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n    });\n    return () => {\n      if (escapeKey) {\n        doc.removeEventListener('keydown', escapeKeyCapture ? closeOnEscapeKeyDownCapture : closeOnEscapeKeyDown, escapeKeyCapture);\n        doc.removeEventListener('compositionstart', handleCompositionStart);\n        doc.removeEventListener('compositionend', handleCompositionEnd);\n      }\n      outsidePress && doc.removeEventListener(outsidePressEvent, outsidePressCapture ? closeOnPressOutsideCapture : closeOnPressOutside, outsidePressCapture);\n      ancestors.forEach(ancestor => {\n        ancestor.removeEventListener('scroll', onScroll);\n      });\n      window.clearTimeout(compositionTimeout);\n    };\n  }, [dataRef, elements, escapeKey, outsidePress, outsidePressEvent, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, closeOnEscapeKeyDown, escapeKeyCapture, closeOnEscapeKeyDownCapture, closeOnPressOutside, outsidePressCapture, closeOnPressOutsideCapture]);\n  React.useEffect(() => {\n    insideReactTreeRef.current = false;\n  }, [outsidePress, outsidePressEvent]);\n  const reference = React.useMemo(() => ({\n    onKeyDown: closeOnEscapeKeyDown,\n    ...(referencePress && {\n      [bubbleHandlerKeys[referencePressEvent]]: event => {\n        onOpenChange(false, event.nativeEvent, 'reference-press');\n      },\n      ...(referencePressEvent !== 'click' && {\n        onClick(event) {\n          onOpenChange(false, event.nativeEvent, 'reference-press');\n        }\n      })\n    })\n  }), [closeOnEscapeKeyDown, onOpenChange, referencePress, referencePressEvent]);\n  const floating = React.useMemo(() => ({\n    onKeyDown: closeOnEscapeKeyDown,\n    onMouseDown() {\n      endedOrStartedInsideRef.current = true;\n    },\n    onMouseUp() {\n      endedOrStartedInsideRef.current = true;\n    },\n    [captureHandlerKeys[outsidePressEvent]]: () => {\n      insideReactTreeRef.current = true;\n    }\n  }), [closeOnEscapeKeyDown, outsidePressEvent]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating\n  } : {}, [enabled, reference, floating]);\n}\n\nfunction useFloatingRootContext(options) {\n  const {\n    open = false,\n    onOpenChange: onOpenChangeProp,\n    elements: elementsProp\n  } = options;\n  const floatingId = useId();\n  const dataRef = React.useRef({});\n  const [events] = React.useState(() => createPubSub());\n  const nested = useFloatingParentNodeId() != null;\n  if (process.env.NODE_ENV !== \"production\") {\n    const optionDomReference = elementsProp.reference;\n    if (optionDomReference && !isElement(optionDomReference)) {\n      error('Cannot pass a virtual element to the `elements.reference` option,', 'as it must be a real DOM element. Use `refs.setPositionReference()`', 'instead.');\n    }\n  }\n  const [positionReference, setPositionReference] = React.useState(elementsProp.reference);\n  const onOpenChange = useEffectEvent((open, event, reason) => {\n    dataRef.current.openEvent = open ? event : undefined;\n    events.emit('openchange', {\n      open,\n      event,\n      reason,\n      nested\n    });\n    onOpenChangeProp == null || onOpenChangeProp(open, event, reason);\n  });\n  const refs = React.useMemo(() => ({\n    setPositionReference\n  }), []);\n  const elements = React.useMemo(() => ({\n    reference: positionReference || elementsProp.reference || null,\n    floating: elementsProp.floating || null,\n    domReference: elementsProp.reference\n  }), [positionReference, elementsProp.reference, elementsProp.floating]);\n  return React.useMemo(() => ({\n    dataRef,\n    open,\n    onOpenChange,\n    elements,\n    events,\n    floatingId,\n    refs\n  }), [open, onOpenChange, elements, events, floatingId, refs]);\n}\n\n/**\n * Provides data to position a floating element and context to add interactions.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    nodeId\n  } = options;\n  const internalRootContext = useFloatingRootContext({\n    ...options,\n    elements: {\n      reference: null,\n      floating: null,\n      ...options.elements\n    }\n  });\n  const rootContext = options.rootContext || internalRootContext;\n  const computedElements = rootContext.elements;\n  const [_domReference, setDomReference] = React.useState(null);\n  const [positionReference, _setPositionReference] = React.useState(null);\n  const optionDomReference = computedElements == null ? void 0 : computedElements.domReference;\n  const domReference = optionDomReference || _domReference;\n  const domReferenceRef = React.useRef(null);\n  const tree = useFloatingTree();\n  index(() => {\n    if (domReference) {\n      domReferenceRef.current = domReference;\n    }\n  }, [domReference]);\n  const position = useFloating$1({\n    ...options,\n    elements: {\n      ...computedElements,\n      ...(positionReference && {\n        reference: positionReference\n      })\n    }\n  });\n  const setPositionReference = React.useCallback(node => {\n    const computedPositionReference = isElement(node) ? {\n      getBoundingClientRect: () => node.getBoundingClientRect(),\n      contextElement: node\n    } : node;\n    // Store the positionReference in state if the DOM reference is specified externally via the\n    // `elements.reference` option. This ensures that it won't be overridden on future renders.\n    _setPositionReference(computedPositionReference);\n    position.refs.setReference(computedPositionReference);\n  }, [position.refs]);\n  const setReference = React.useCallback(node => {\n    if (isElement(node) || node === null) {\n      domReferenceRef.current = node;\n      setDomReference(node);\n    }\n\n    // Backwards-compatibility for passing a virtual element to `reference`\n    // after it has set the DOM reference.\n    if (isElement(position.refs.reference.current) || position.refs.reference.current === null ||\n    // Don't allow setting virtual elements using the old technique back to\n    // `null` to support `positionReference` + an unstable `reference`\n    // callback ref.\n    node !== null && !isElement(node)) {\n      position.refs.setReference(node);\n    }\n  }, [position.refs]);\n  const refs = React.useMemo(() => ({\n    ...position.refs,\n    setReference,\n    setPositionReference,\n    domReference: domReferenceRef\n  }), [position.refs, setReference, setPositionReference]);\n  const elements = React.useMemo(() => ({\n    ...position.elements,\n    domReference: domReference\n  }), [position.elements, domReference]);\n  const context = React.useMemo(() => ({\n    ...position,\n    ...rootContext,\n    refs,\n    elements,\n    nodeId\n  }), [position, refs, elements, nodeId, rootContext]);\n  index(() => {\n    rootContext.dataRef.current.floatingContext = context;\n    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);\n    if (node) {\n      node.context = context;\n    }\n  });\n  return React.useMemo(() => ({\n    ...position,\n    context,\n    refs,\n    elements\n  }), [position, refs, elements, context]);\n}\n\n/**\n * Opens the floating element while the reference element has focus, like CSS\n * `:focus`.\n * @see https://floating-ui.com/docs/useFocus\n */\nfunction useFocus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    events,\n    dataRef,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    visibleOnly = true\n  } = props;\n  const blockFocusRef = React.useRef(false);\n  const timeoutRef = React.useRef(-1);\n  const keyboardModalityRef = React.useRef(true);\n  React.useEffect(() => {\n    if (!enabled) return;\n    const win = getWindow(elements.domReference);\n\n    // If the reference was focused and the user left the tab/window, and the\n    // floating element was not open, the focus should be blocked when they\n    // return to the tab/window.\n    function onBlur() {\n      if (!open && isHTMLElement(elements.domReference) && elements.domReference === activeElement(getDocument(elements.domReference))) {\n        blockFocusRef.current = true;\n      }\n    }\n    function onKeyDown() {\n      keyboardModalityRef.current = true;\n    }\n    win.addEventListener('blur', onBlur);\n    win.addEventListener('keydown', onKeyDown, true);\n    return () => {\n      win.removeEventListener('blur', onBlur);\n      win.removeEventListener('keydown', onKeyDown, true);\n    };\n  }, [elements.domReference, open, enabled]);\n  React.useEffect(() => {\n    if (!enabled) return;\n    function onOpenChange(_ref) {\n      let {\n        reason\n      } = _ref;\n      if (reason === 'reference-press' || reason === 'escape-key') {\n        blockFocusRef.current = true;\n      }\n    }\n    events.on('openchange', onOpenChange);\n    return () => {\n      events.off('openchange', onOpenChange);\n    };\n  }, [events, enabled]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeoutIfSet(timeoutRef);\n    };\n  }, []);\n  const reference = React.useMemo(() => ({\n    onPointerDown(event) {\n      if (isVirtualPointerEvent(event.nativeEvent)) return;\n      keyboardModalityRef.current = false;\n    },\n    onMouseLeave() {\n      blockFocusRef.current = false;\n    },\n    onFocus(event) {\n      if (blockFocusRef.current) return;\n      const target = getTarget(event.nativeEvent);\n      if (visibleOnly && isElement(target)) {\n        try {\n          // Mac Safari unreliably matches `:focus-visible` on the reference\n          // if focus was outside the page initially - use the fallback\n          // instead.\n          if (isSafari() && isMac()) throw Error();\n          if (!target.matches(':focus-visible')) return;\n        } catch (_e) {\n          // Old browsers will throw an error when using `:focus-visible`.\n          if (!keyboardModalityRef.current && !isTypeableElement(target)) {\n            return;\n          }\n        }\n      }\n      onOpenChange(true, event.nativeEvent, 'focus');\n    },\n    onBlur(event) {\n      blockFocusRef.current = false;\n      const relatedTarget = event.relatedTarget;\n      const nativeEvent = event.nativeEvent;\n\n      // Hit the non-modal focus management portal guard. Focus will be\n      // moved into the floating element immediately after.\n      const movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute(createAttribute('focus-guard')) && relatedTarget.getAttribute('data-type') === 'outside';\n\n      // Wait for the window blur listener to fire.\n      timeoutRef.current = window.setTimeout(() => {\n        var _dataRef$current$floa;\n        const activeEl = activeElement(elements.domReference ? elements.domReference.ownerDocument : document);\n\n        // Focus left the page, keep it open.\n        if (!relatedTarget && activeEl === elements.domReference) return;\n\n        // When focusing the reference element (e.g. regular click), then\n        // clicking into the floating element, prevent it from hiding.\n        // Note: it must be focusable, e.g. `tabindex=\"-1\"`.\n        // We can not rely on relatedTarget to point to the correct element\n        // as it will only point to the shadow host of the newly focused element\n        // and not the element that actually has received focus if it is located\n        // inside a shadow root.\n        if (contains((_dataRef$current$floa = dataRef.current.floatingContext) == null ? void 0 : _dataRef$current$floa.refs.floating.current, activeEl) || contains(elements.domReference, activeEl) || movedToFocusGuard) {\n          return;\n        }\n        onOpenChange(false, nativeEvent, 'focus');\n      });\n    }\n  }), [dataRef, elements.domReference, onOpenChange, visibleOnly]);\n  return React.useMemo(() => enabled ? {\n    reference\n  } : {}, [enabled, reference]);\n}\n\nconst ACTIVE_KEY = 'active';\nconst SELECTED_KEY = 'selected';\nfunction mergeProps(userProps, propsList, elementKey) {\n  const map = new Map();\n  const isItem = elementKey === 'item';\n  let domUserProps = userProps;\n  if (isItem && userProps) {\n    const {\n      [ACTIVE_KEY]: _,\n      [SELECTED_KEY]: __,\n      ...validProps\n    } = userProps;\n    domUserProps = validProps;\n  }\n  return {\n    ...(elementKey === 'floating' && {\n      tabIndex: -1,\n      [FOCUSABLE_ATTRIBUTE]: ''\n    }),\n    ...domUserProps,\n    ...propsList.map(value => {\n      const propsOrGetProps = value ? value[elementKey] : null;\n      if (typeof propsOrGetProps === 'function') {\n        return userProps ? propsOrGetProps(userProps) : null;\n      }\n      return propsOrGetProps;\n    }).concat(userProps).reduce((acc, props) => {\n      if (!props) {\n        return acc;\n      }\n      Object.entries(props).forEach(_ref => {\n        let [key, value] = _ref;\n        if (isItem && [ACTIVE_KEY, SELECTED_KEY].includes(key)) {\n          return;\n        }\n        if (key.indexOf('on') === 0) {\n          if (!map.has(key)) {\n            map.set(key, []);\n          }\n          if (typeof value === 'function') {\n            var _map$get;\n            (_map$get = map.get(key)) == null || _map$get.push(value);\n            acc[key] = function () {\n              var _map$get2;\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.map(fn => fn(...args)).find(val => val !== undefined);\n            };\n          }\n        } else {\n          acc[key] = value;\n        }\n      });\n      return acc;\n    }, {})\n  };\n}\n/**\n * Merges an array of interaction hooks' props into prop getters, allowing\n * event handler functions to be composed together without overwriting one\n * another.\n * @see https://floating-ui.com/docs/useInteractions\n */\nfunction useInteractions(propsList) {\n  if (propsList === void 0) {\n    propsList = [];\n  }\n  const referenceDeps = propsList.map(key => key == null ? void 0 : key.reference);\n  const floatingDeps = propsList.map(key => key == null ? void 0 : key.floating);\n  const itemDeps = propsList.map(key => key == null ? void 0 : key.item);\n  const getReferenceProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  referenceDeps);\n  const getFloatingProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  floatingDeps);\n  const getItemProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'item'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  itemDeps);\n  return React.useMemo(() => ({\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  }), [getReferenceProps, getFloatingProps, getItemProps]);\n}\n\nconst ESCAPE = 'Escape';\nfunction doSwitch(orientation, vertical, horizontal) {\n  switch (orientation) {\n    case 'vertical':\n      return vertical;\n    case 'horizontal':\n      return horizontal;\n    default:\n      return vertical || horizontal;\n  }\n}\nfunction isMainOrientationKey(key, orientation) {\n  const vertical = key === ARROW_UP || key === ARROW_DOWN;\n  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isMainOrientationToEndKey(key, orientation, rtl) {\n  const vertical = key === ARROW_DOWN;\n  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key === ' ' || key === '';\n}\nfunction isCrossOrientationOpenKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  const horizontal = key === ARROW_DOWN;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isCrossOrientationCloseKey(key, orientation, rtl, cols) {\n  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;\n  const horizontal = key === ARROW_UP;\n  if (orientation === 'both' || orientation === 'horizontal' && cols && cols > 1) {\n    return key === ESCAPE;\n  }\n  return doSwitch(orientation, vertical, horizontal);\n}\n/**\n * Adds arrow key-based navigation of a list of items, either using real DOM\n * focus or virtual focus.\n * @see https://floating-ui.com/docs/useListNavigation\n */\nfunction useListNavigation(context, props) {\n  const {\n    open,\n    onOpenChange,\n    elements\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onNavigate: unstable_onNavigate = () => {},\n    enabled = true,\n    selectedIndex = null,\n    allowEscape = false,\n    loop = false,\n    nested = false,\n    rtl = false,\n    virtual = false,\n    focusItemOnOpen = 'auto',\n    focusItemOnHover = true,\n    openOnArrowKeyDown = true,\n    disabledIndices = undefined,\n    orientation = 'vertical',\n    cols = 1,\n    scrollItemIntoView = true,\n    virtualItemRef,\n    itemSizes,\n    dense = false\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (allowEscape) {\n      if (!loop) {\n        warn('`useListNavigation` looping must be enabled to allow escaping.');\n      }\n      if (!virtual) {\n        warn('`useListNavigation` must be virtual to allow escaping.');\n      }\n    }\n    if (orientation === 'vertical' && cols > 1) {\n      warn('In grid list navigation mode (`cols` > 1), the `orientation` should', 'be either \"horizontal\" or \"both\".');\n    }\n  }\n  const floatingFocusElement = getFloatingFocusElement(elements.floating);\n  const floatingFocusElementRef = useLatestRef(floatingFocusElement);\n  const parentId = useFloatingParentNodeId();\n  const tree = useFloatingTree();\n  index(() => {\n    context.dataRef.current.orientation = orientation;\n  }, [context, orientation]);\n  const onNavigate = useEffectEvent(() => {\n    unstable_onNavigate(indexRef.current === -1 ? null : indexRef.current);\n  });\n  const typeableComboboxReference = isTypeableCombobox(elements.domReference);\n  const focusItemOnOpenRef = React.useRef(focusItemOnOpen);\n  const indexRef = React.useRef(selectedIndex != null ? selectedIndex : -1);\n  const keyRef = React.useRef(null);\n  const isPointerModalityRef = React.useRef(true);\n  const previousOnNavigateRef = React.useRef(onNavigate);\n  const previousMountedRef = React.useRef(!!elements.floating);\n  const previousOpenRef = React.useRef(open);\n  const forceSyncFocusRef = React.useRef(false);\n  const forceScrollIntoViewRef = React.useRef(false);\n  const disabledIndicesRef = useLatestRef(disabledIndices);\n  const latestOpenRef = useLatestRef(open);\n  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);\n  const selectedIndexRef = useLatestRef(selectedIndex);\n  const [activeId, setActiveId] = React.useState();\n  const [virtualId, setVirtualId] = React.useState();\n  const focusItem = useEffectEvent(() => {\n    function runFocus(item) {\n      if (virtual) {\n        setActiveId(item.id);\n        tree == null || tree.events.emit('virtualfocus', item);\n        if (virtualItemRef) {\n          virtualItemRef.current = item;\n        }\n      } else {\n        enqueueFocus(item, {\n          sync: forceSyncFocusRef.current,\n          preventScroll: true\n        });\n      }\n    }\n    const initialItem = listRef.current[indexRef.current];\n    if (initialItem) {\n      runFocus(initialItem);\n    }\n    const scheduler = forceSyncFocusRef.current ? v => v() : requestAnimationFrame;\n    scheduler(() => {\n      const waitedItem = listRef.current[indexRef.current] || initialItem;\n      if (!waitedItem) return;\n      if (!initialItem) {\n        runFocus(waitedItem);\n      }\n      const scrollIntoViewOptions = scrollItemIntoViewRef.current;\n      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoViewRef.current || !isPointerModalityRef.current);\n      if (shouldScrollIntoView) {\n        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported\n        // by all browsers.\n        waitedItem.scrollIntoView == null || waitedItem.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {\n          block: 'nearest',\n          inline: 'nearest'\n        } : scrollIntoViewOptions);\n      }\n    });\n  });\n\n  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating\n  // element. Also, reset `activeIndex` upon closing the floating element.\n  index(() => {\n    if (!enabled) return;\n    if (open && elements.floating) {\n      if (focusItemOnOpenRef.current && selectedIndex != null) {\n        // Regardless of the pointer modality, we want to ensure the selected\n        // item comes into view when the floating element is opened.\n        forceScrollIntoViewRef.current = true;\n        indexRef.current = selectedIndex;\n        onNavigate();\n      }\n    } else if (previousMountedRef.current) {\n      // Since the user can specify `onNavigate` conditionally\n      // (onNavigate: open ? setActiveIndex : setSelectedIndex),\n      // we store and call the previous function.\n      indexRef.current = -1;\n      previousOnNavigateRef.current();\n    }\n  }, [enabled, open, elements.floating, selectedIndex, onNavigate]);\n\n  // Sync `activeIndex` to be the focused item while the floating element is\n  // open.\n  index(() => {\n    if (!enabled) return;\n    if (!open) return;\n    if (!elements.floating) return;\n    if (activeIndex == null) {\n      forceSyncFocusRef.current = false;\n      if (selectedIndexRef.current != null) {\n        return;\n      }\n\n      // Reset while the floating element was open (e.g. the list changed).\n      if (previousMountedRef.current) {\n        indexRef.current = -1;\n        focusItem();\n      }\n\n      // Initial sync.\n      if ((!previousOpenRef.current || !previousMountedRef.current) && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {\n        let runs = 0;\n        const waitForListPopulated = () => {\n          if (listRef.current[0] == null) {\n            // Avoid letting the browser paint if possible on the first try,\n            // otherwise use rAF. Don't try more than twice, since something\n            // is wrong otherwise.\n            if (runs < 2) {\n              const scheduler = runs ? requestAnimationFrame : queueMicrotask;\n              scheduler(waitForListPopulated);\n            }\n            runs++;\n          } else {\n            indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);\n            keyRef.current = null;\n            onNavigate();\n          }\n        };\n        waitForListPopulated();\n      }\n    } else if (!isIndexOutOfBounds(listRef, activeIndex)) {\n      indexRef.current = activeIndex;\n      focusItem();\n      forceScrollIntoViewRef.current = false;\n    }\n  }, [enabled, open, elements.floating, activeIndex, selectedIndexRef, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);\n\n  // Ensure the parent floating element has focus when a nested child closes\n  // to allow arrow key navigation to work after the pointer leaves the child.\n  index(() => {\n    var _nodes$find;\n    if (!enabled || elements.floating || !tree || virtual || !previousMountedRef.current) {\n      return;\n    }\n    const nodes = tree.nodesRef.current;\n    const parent = (_nodes$find = nodes.find(node => node.id === parentId)) == null || (_nodes$find = _nodes$find.context) == null ? void 0 : _nodes$find.elements.floating;\n    const activeEl = activeElement(getDocument(elements.floating));\n    const treeContainsActiveEl = nodes.some(node => node.context && contains(node.context.elements.floating, activeEl));\n    if (parent && !treeContainsActiveEl && isPointerModalityRef.current) {\n      parent.focus({\n        preventScroll: true\n      });\n    }\n  }, [enabled, elements.floating, tree, parentId, virtual]);\n  index(() => {\n    if (!enabled) return;\n    if (!tree) return;\n    if (!virtual) return;\n    if (parentId) return;\n    function handleVirtualFocus(item) {\n      setVirtualId(item.id);\n      if (virtualItemRef) {\n        virtualItemRef.current = item;\n      }\n    }\n    tree.events.on('virtualfocus', handleVirtualFocus);\n    return () => {\n      tree.events.off('virtualfocus', handleVirtualFocus);\n    };\n  }, [enabled, tree, virtual, parentId, virtualItemRef]);\n  index(() => {\n    previousOnNavigateRef.current = onNavigate;\n    previousOpenRef.current = open;\n    previousMountedRef.current = !!elements.floating;\n  });\n  index(() => {\n    if (!open) {\n      keyRef.current = null;\n    }\n  }, [open]);\n  const hasActiveIndex = activeIndex != null;\n  const item = React.useMemo(() => {\n    function syncCurrentTarget(currentTarget) {\n      if (!open) return;\n      const index = listRef.current.indexOf(currentTarget);\n      if (index !== -1 && indexRef.current !== index) {\n        indexRef.current = index;\n        onNavigate();\n      }\n    }\n    const props = {\n      onFocus(_ref) {\n        let {\n          currentTarget\n        } = _ref;\n        forceSyncFocusRef.current = true;\n        syncCurrentTarget(currentTarget);\n      },\n      onClick: _ref2 => {\n        let {\n          currentTarget\n        } = _ref2;\n        return currentTarget.focus({\n          preventScroll: true\n        });\n      },\n      // Safari\n      ...(focusItemOnHover && {\n        onMouseMove(_ref3) {\n          let {\n            currentTarget\n          } = _ref3;\n          forceSyncFocusRef.current = true;\n          forceScrollIntoViewRef.current = false;\n          syncCurrentTarget(currentTarget);\n        },\n        onPointerLeave(_ref4) {\n          let {\n            pointerType\n          } = _ref4;\n          if (!isPointerModalityRef.current || pointerType === 'touch') {\n            return;\n          }\n          forceSyncFocusRef.current = true;\n          indexRef.current = -1;\n          onNavigate();\n          if (!virtual) {\n            var _floatingFocusElement;\n            (_floatingFocusElement = floatingFocusElementRef.current) == null || _floatingFocusElement.focus({\n              preventScroll: true\n            });\n          }\n        }\n      })\n    };\n    return props;\n  }, [open, floatingFocusElementRef, focusItemOnHover, listRef, onNavigate, virtual]);\n  const commonOnKeyDown = useEffectEvent(event => {\n    isPointerModalityRef.current = false;\n    forceSyncFocusRef.current = true;\n\n    // When composing a character, Chrome fires ArrowDown twice. Firefox/Safari\n    // don't appear to suffer from this. `event.isComposing` is avoided due to\n    // Safari not supporting it properly (although it's not needed in the first\n    // place for Safari, just avoiding any possible issues).\n    if (event.which === 229) {\n      return;\n    }\n\n    // If the floating element is animating out, ignore navigation. Otherwise,\n    // the `activeIndex` gets set to 0 despite not being open so the next time\n    // the user ArrowDowns, the first item won't be focused.\n    if (!latestOpenRef.current && event.currentTarget === floatingFocusElementRef.current) {\n      return;\n    }\n    if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl, cols)) {\n      stopEvent(event);\n      onOpenChange(false, event.nativeEvent, 'list-navigation');\n      if (isHTMLElement(elements.domReference)) {\n        if (virtual) {\n          tree == null || tree.events.emit('virtualfocus', elements.domReference);\n        } else {\n          elements.domReference.focus();\n        }\n      }\n      return;\n    }\n    const currentIndex = indexRef.current;\n    const minIndex = getMinIndex(listRef, disabledIndices);\n    const maxIndex = getMaxIndex(listRef, disabledIndices);\n    if (!typeableComboboxReference) {\n      if (event.key === 'Home') {\n        stopEvent(event);\n        indexRef.current = minIndex;\n        onNavigate();\n      }\n      if (event.key === 'End') {\n        stopEvent(event);\n        indexRef.current = maxIndex;\n        onNavigate();\n      }\n    }\n\n    // Grid navigation.\n    if (cols > 1) {\n      const sizes = itemSizes || Array.from({\n        length: listRef.current.length\n      }, () => ({\n        width: 1,\n        height: 1\n      }));\n      // To calculate movements on the grid, we use hypothetical cell indices\n      // as if every item was 1x1, then convert back to real indices.\n      const cellMap = buildCellMap(sizes, cols, dense);\n      const minGridIndex = cellMap.findIndex(index => index != null && !isDisabled(listRef.current, index, disabledIndices));\n      // last enabled index\n      const maxGridIndex = cellMap.reduce((foundIndex, index, cellIndex) => index != null && !isDisabled(listRef.current, index, disabledIndices) ? cellIndex : foundIndex, -1);\n      const index = cellMap[getGridNavigatedIndex({\n        current: cellMap.map(itemIndex => itemIndex != null ? listRef.current[itemIndex] : null)\n      }, {\n        event,\n        orientation,\n        loop,\n        rtl,\n        cols,\n        // treat undefined (empty grid spaces) as disabled indices so we\n        // don't end up in them\n        disabledIndices: getCellIndices([...(disabledIndices || listRef.current.map((_, index) => isDisabled(listRef.current, index) ? index : undefined)), undefined], cellMap),\n        minIndex: minGridIndex,\n        maxIndex: maxGridIndex,\n        prevIndex: getCellIndexOfCorner(indexRef.current > maxIndex ? minIndex : indexRef.current, sizes, cellMap, cols,\n        // use a corner matching the edge closest to the direction\n        // we're moving in so we don't end up in the same item. Prefer\n        // top/left over bottom/right.\n        event.key === ARROW_DOWN ? 'bl' : event.key === (rtl ? ARROW_LEFT : ARROW_RIGHT) ? 'tr' : 'tl'),\n        stopEvent: true\n      })];\n      if (index != null) {\n        indexRef.current = index;\n        onNavigate();\n      }\n      if (orientation === 'both') {\n        return;\n      }\n    }\n    if (isMainOrientationKey(event.key, orientation)) {\n      stopEvent(event);\n\n      // Reset the index if no item is focused.\n      if (open && !virtual && activeElement(event.currentTarget.ownerDocument) === event.currentTarget) {\n        indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;\n        onNavigate();\n        return;\n      }\n      if (isMainOrientationToEndKey(event.key, orientation, rtl)) {\n        if (loop) {\n          indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            disabledIndices\n          });\n        } else {\n          indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            disabledIndices\n          }));\n        }\n      } else {\n        if (loop) {\n          indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            decrement: true,\n            disabledIndices\n          });\n        } else {\n          indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {\n            startingIndex: currentIndex,\n            decrement: true,\n            disabledIndices\n          }));\n        }\n      }\n      if (isIndexOutOfBounds(listRef, indexRef.current)) {\n        indexRef.current = -1;\n      }\n      onNavigate();\n    }\n  });\n  const ariaActiveDescendantProp = React.useMemo(() => {\n    return virtual && open && hasActiveIndex && {\n      'aria-activedescendant': virtualId || activeId\n    };\n  }, [virtual, open, hasActiveIndex, virtualId, activeId]);\n  const floating = React.useMemo(() => {\n    return {\n      'aria-orientation': orientation === 'both' ? undefined : orientation,\n      ...(!typeableComboboxReference ? ariaActiveDescendantProp : {}),\n      onKeyDown: commonOnKeyDown,\n      onPointerMove() {\n        isPointerModalityRef.current = true;\n      }\n    };\n  }, [ariaActiveDescendantProp, commonOnKeyDown, orientation, typeableComboboxReference]);\n  const reference = React.useMemo(() => {\n    function checkVirtualMouse(event) {\n      if (focusItemOnOpen === 'auto' && isVirtualClick(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    function checkVirtualPointer(event) {\n      // `pointerdown` fires first, reset the state then perform the checks.\n      focusItemOnOpenRef.current = focusItemOnOpen;\n      if (focusItemOnOpen === 'auto' && isVirtualPointerEvent(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    return {\n      ...ariaActiveDescendantProp,\n      onKeyDown(event) {\n        var _tree$nodesRef$curren;\n        isPointerModalityRef.current = false;\n        const isArrowKey = event.key.startsWith('Arrow');\n        const isHomeOrEndKey = ['Home', 'End'].includes(event.key);\n        const isMoveKey = isArrowKey || isHomeOrEndKey;\n        const parentOrientation = tree == null || (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null || (_tree$nodesRef$curren = _tree$nodesRef$curren.context) == null || (_tree$nodesRef$curren = _tree$nodesRef$curren.dataRef) == null ? void 0 : _tree$nodesRef$curren.current.orientation;\n        const isCrossOpenKey = isCrossOrientationOpenKey(event.key, orientation, rtl);\n        const isCrossCloseKey = isCrossOrientationCloseKey(event.key, orientation, rtl, cols);\n        const isParentCrossOpenKey = isCrossOrientationOpenKey(event.key, parentOrientation, rtl);\n        const isMainKey = isMainOrientationKey(event.key, orientation);\n        const isNavigationKey = (nested ? isParentCrossOpenKey : isMainKey) || event.key === 'Enter' || event.key.trim() === '';\n        if (virtual && open) {\n          const rootNode = tree == null ? void 0 : tree.nodesRef.current.find(node => node.parentId == null);\n          const deepestNode = tree && rootNode ? getDeepestNode(tree.nodesRef.current, rootNode.id) : null;\n          if (isMoveKey && deepestNode && virtualItemRef) {\n            const eventObject = new KeyboardEvent('keydown', {\n              key: event.key,\n              bubbles: true\n            });\n            if (isCrossOpenKey || isCrossCloseKey) {\n              var _deepestNode$context, _deepestNode$context2;\n              const isCurrentTarget = ((_deepestNode$context = deepestNode.context) == null ? void 0 : _deepestNode$context.elements.domReference) === event.currentTarget;\n              const dispatchItem = isCrossCloseKey && !isCurrentTarget ? (_deepestNode$context2 = deepestNode.context) == null ? void 0 : _deepestNode$context2.elements.domReference : isCrossOpenKey ? listRef.current.find(item => (item == null ? void 0 : item.id) === activeId) : null;\n              if (dispatchItem) {\n                stopEvent(event);\n                dispatchItem.dispatchEvent(eventObject);\n                setVirtualId(undefined);\n              }\n            }\n            if ((isMainKey || isHomeOrEndKey) && deepestNode.context) {\n              if (deepestNode.context.open && deepestNode.parentId && event.currentTarget !== deepestNode.context.elements.domReference) {\n                var _deepestNode$context$;\n                stopEvent(event);\n                (_deepestNode$context$ = deepestNode.context.elements.domReference) == null || _deepestNode$context$.dispatchEvent(eventObject);\n                return;\n              }\n            }\n          }\n          return commonOnKeyDown(event);\n        }\n        // If a floating element should not open on arrow key down, avoid\n        // setting `activeIndex` while it's closed.\n        if (!open && !openOnArrowKeyDown && isArrowKey) {\n          return;\n        }\n        if (isNavigationKey) {\n          const isParentMainKey = isMainOrientationKey(event.key, parentOrientation);\n          keyRef.current = nested && isParentMainKey ? null : event.key;\n        }\n        if (nested) {\n          if (isParentCrossOpenKey) {\n            stopEvent(event);\n            if (open) {\n              indexRef.current = getMinIndex(listRef, disabledIndicesRef.current);\n              onNavigate();\n            } else {\n              onOpenChange(true, event.nativeEvent, 'list-navigation');\n            }\n          }\n          return;\n        }\n        if (isMainKey) {\n          if (selectedIndex != null) {\n            indexRef.current = selectedIndex;\n          }\n          stopEvent(event);\n          if (!open && openOnArrowKeyDown) {\n            onOpenChange(true, event.nativeEvent, 'list-navigation');\n          } else {\n            commonOnKeyDown(event);\n          }\n          if (open) {\n            onNavigate();\n          }\n        }\n      },\n      onFocus() {\n        if (open && !virtual) {\n          indexRef.current = -1;\n          onNavigate();\n        }\n      },\n      onPointerDown: checkVirtualPointer,\n      onPointerEnter: checkVirtualPointer,\n      onMouseDown: checkVirtualMouse,\n      onClick: checkVirtualMouse\n    };\n  }, [activeId, ariaActiveDescendantProp, cols, commonOnKeyDown, disabledIndicesRef, focusItemOnOpen, listRef, nested, onNavigate, onOpenChange, open, openOnArrowKeyDown, orientation, parentId, rtl, selectedIndex, tree, virtual, virtualItemRef]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating,\n    item\n  } : {}, [enabled, reference, floating, item]);\n}\n\nconst componentRoleToAriaRoleMap = /*#__PURE__*/new Map([['select', 'listbox'], ['combobox', 'listbox'], ['label', false]]);\n\n/**\n * Adds base screen reader props to the reference and floating elements for a\n * given floating element `role`.\n * @see https://floating-ui.com/docs/useRole\n */\nfunction useRole(context, props) {\n  var _componentRoleToAriaR;\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    floatingId\n  } = context;\n  const {\n    enabled = true,\n    role = 'dialog'\n  } = props;\n  const ariaRole = (_componentRoleToAriaR = componentRoleToAriaRoleMap.get(role)) != null ? _componentRoleToAriaR : role;\n  const referenceId = useId();\n  const parentId = useFloatingParentNodeId();\n  const isNested = parentId != null;\n  const reference = React.useMemo(() => {\n    if (ariaRole === 'tooltip' || role === 'label') {\n      return {\n        [\"aria-\" + (role === 'label' ? 'labelledby' : 'describedby')]: open ? floatingId : undefined\n      };\n    }\n    return {\n      'aria-expanded': open ? 'true' : 'false',\n      'aria-haspopup': ariaRole === 'alertdialog' ? 'dialog' : ariaRole,\n      'aria-controls': open ? floatingId : undefined,\n      ...(ariaRole === 'listbox' && {\n        role: 'combobox'\n      }),\n      ...(ariaRole === 'menu' && {\n        id: referenceId\n      }),\n      ...(ariaRole === 'menu' && isNested && {\n        role: 'menuitem'\n      }),\n      ...(role === 'select' && {\n        'aria-autocomplete': 'none'\n      }),\n      ...(role === 'combobox' && {\n        'aria-autocomplete': 'list'\n      })\n    };\n  }, [ariaRole, floatingId, isNested, open, referenceId, role]);\n  const floating = React.useMemo(() => {\n    const floatingProps = {\n      id: floatingId,\n      ...(ariaRole && {\n        role: ariaRole\n      })\n    };\n    if (ariaRole === 'tooltip' || role === 'label') {\n      return floatingProps;\n    }\n    return {\n      ...floatingProps,\n      ...(ariaRole === 'menu' && {\n        'aria-labelledby': referenceId\n      })\n    };\n  }, [ariaRole, floatingId, referenceId, role]);\n  const item = React.useCallback(_ref => {\n    let {\n      active,\n      selected\n    } = _ref;\n    const commonProps = {\n      role: 'option',\n      ...(active && {\n        id: floatingId + \"-option\"\n      })\n    };\n\n    // For `menu`, we are unable to tell if the item is a `menuitemradio`\n    // or `menuitemcheckbox`. For backwards-compatibility reasons, also\n    // avoid defaulting to `menuitem` as it may overwrite custom role props.\n    switch (role) {\n      case 'select':\n        return {\n          ...commonProps,\n          'aria-selected': active && selected\n        };\n      case 'combobox':\n        {\n          return {\n            ...commonProps,\n            ...(active && {\n              'aria-selected': true\n            })\n          };\n        }\n    }\n    return {};\n  }, [floatingId, role]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating,\n    item\n  } : {}, [enabled, reference, floating, item]);\n}\n\n// Converts a JS style key like `backgroundColor` to a CSS transition-property\n// like `background-color`.\nconst camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());\nfunction execWithArgsOrReturn(valueOrFn, args) {\n  return typeof valueOrFn === 'function' ? valueOrFn(args) : valueOrFn;\n}\nfunction useDelayUnmount(open, durationMs) {\n  const [isMounted, setIsMounted] = React.useState(open);\n  if (open && !isMounted) {\n    setIsMounted(true);\n  }\n  React.useEffect(() => {\n    if (!open && isMounted) {\n      const timeout = setTimeout(() => setIsMounted(false), durationMs);\n      return () => clearTimeout(timeout);\n    }\n  }, [open, isMounted, durationMs]);\n  return isMounted;\n}\n/**\n * Provides a status string to apply CSS transitions to a floating element,\n * correctly handling placement-aware transitions.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstatus\n */\nfunction useTransitionStatus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    elements: {\n      floating\n    }\n  } = context;\n  const {\n    duration = 250\n  } = props;\n  const isNumberDuration = typeof duration === 'number';\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [status, setStatus] = React.useState('unmounted');\n  const isMounted = useDelayUnmount(open, closeDuration);\n  if (!isMounted && status === 'close') {\n    setStatus('unmounted');\n  }\n  index(() => {\n    if (!floating) return;\n    if (open) {\n      setStatus('initial');\n      const frame = requestAnimationFrame(() => {\n        setStatus('open');\n      });\n      return () => {\n        cancelAnimationFrame(frame);\n      };\n    }\n    setStatus('close');\n  }, [open, floating]);\n  return {\n    isMounted,\n    status\n  };\n}\n/**\n * Provides styles to apply CSS transitions to a floating element, correctly\n * handling placement-aware transitions. Wrapper around `useTransitionStatus`.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstyles\n */\nfunction useTransitionStyles(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    initial: unstable_initial = {\n      opacity: 0\n    },\n    open: unstable_open,\n    close: unstable_close,\n    common: unstable_common,\n    duration = 250\n  } = props;\n  const placement = context.placement;\n  const side = placement.split('-')[0];\n  const fnArgs = React.useMemo(() => ({\n    side,\n    placement\n  }), [side, placement]);\n  const isNumberDuration = typeof duration === 'number';\n  const openDuration = (isNumberDuration ? duration : duration.open) || 0;\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [styles, setStyles] = React.useState(() => ({\n    ...execWithArgsOrReturn(unstable_common, fnArgs),\n    ...execWithArgsOrReturn(unstable_initial, fnArgs)\n  }));\n  const {\n    isMounted,\n    status\n  } = useTransitionStatus(context, {\n    duration\n  });\n  const initialRef = useLatestRef(unstable_initial);\n  const openRef = useLatestRef(unstable_open);\n  const closeRef = useLatestRef(unstable_close);\n  const commonRef = useLatestRef(unstable_common);\n  index(() => {\n    const initialStyles = execWithArgsOrReturn(initialRef.current, fnArgs);\n    const closeStyles = execWithArgsOrReturn(closeRef.current, fnArgs);\n    const commonStyles = execWithArgsOrReturn(commonRef.current, fnArgs);\n    const openStyles = execWithArgsOrReturn(openRef.current, fnArgs) || Object.keys(initialStyles).reduce((acc, key) => {\n      acc[key] = '';\n      return acc;\n    }, {});\n    if (status === 'initial') {\n      setStyles(styles => ({\n        transitionProperty: styles.transitionProperty,\n        ...commonStyles,\n        ...initialStyles\n      }));\n    }\n    if (status === 'open') {\n      setStyles({\n        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: openDuration + \"ms\",\n        ...commonStyles,\n        ...openStyles\n      });\n    }\n    if (status === 'close') {\n      const styles = closeStyles || initialStyles;\n      setStyles({\n        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: closeDuration + \"ms\",\n        ...commonStyles,\n        ...styles\n      });\n    }\n  }, [closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status, fnArgs]);\n  return {\n    isMounted,\n    styles\n  };\n}\n\n/**\n * Provides a matching callback that can be used to focus an item as the user\n * types, often used in tandem with `useListNavigation()`.\n * @see https://floating-ui.com/docs/useTypeahead\n */\nfunction useTypeahead(context, props) {\n  var _ref;\n  const {\n    open,\n    dataRef\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onMatch: unstable_onMatch,\n    onTypingChange: unstable_onTypingChange,\n    enabled = true,\n    findMatch = null,\n    resetMs = 750,\n    ignoreKeys = [],\n    selectedIndex = null\n  } = props;\n  const timeoutIdRef = React.useRef(-1);\n  const stringRef = React.useRef('');\n  const prevIndexRef = React.useRef((_ref = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref : -1);\n  const matchIndexRef = React.useRef(null);\n  const onMatch = useEffectEvent(unstable_onMatch);\n  const onTypingChange = useEffectEvent(unstable_onTypingChange);\n  const findMatchRef = useLatestRef(findMatch);\n  const ignoreKeysRef = useLatestRef(ignoreKeys);\n  index(() => {\n    if (open) {\n      clearTimeoutIfSet(timeoutIdRef);\n      matchIndexRef.current = null;\n      stringRef.current = '';\n    }\n  }, [open]);\n  index(() => {\n    // Sync arrow key navigation but not typeahead navigation.\n    if (open && stringRef.current === '') {\n      var _ref2;\n      prevIndexRef.current = (_ref2 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref2 : -1;\n    }\n  }, [open, selectedIndex, activeIndex]);\n  const setTypingChange = useEffectEvent(value => {\n    if (value) {\n      if (!dataRef.current.typing) {\n        dataRef.current.typing = value;\n        onTypingChange(value);\n      }\n    } else {\n      if (dataRef.current.typing) {\n        dataRef.current.typing = value;\n        onTypingChange(value);\n      }\n    }\n  });\n  const onKeyDown = useEffectEvent(event => {\n    function getMatchingIndex(list, orderedList, string) {\n      const str = findMatchRef.current ? findMatchRef.current(orderedList, string) : orderedList.find(text => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(string.toLocaleLowerCase())) === 0);\n      return str ? list.indexOf(str) : -1;\n    }\n    const listContent = listRef.current;\n    if (stringRef.current.length > 0 && stringRef.current[0] !== ' ') {\n      if (getMatchingIndex(listContent, listContent, stringRef.current) === -1) {\n        setTypingChange(false);\n      } else if (event.key === ' ') {\n        stopEvent(event);\n      }\n    }\n    if (listContent == null || ignoreKeysRef.current.includes(event.key) ||\n    // Character key.\n    event.key.length !== 1 ||\n    // Modifier key.\n    event.ctrlKey || event.metaKey || event.altKey) {\n      return;\n    }\n    if (open && event.key !== ' ') {\n      stopEvent(event);\n      setTypingChange(true);\n    }\n\n    // Bail out if the list contains a word like \"llama\" or \"aaron\". TODO:\n    // allow it in this case, too.\n    const allowRapidSuccessionOfFirstLetter = listContent.every(text => {\n      var _text$, _text$2;\n      return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : true;\n    });\n\n    // Allows the user to cycle through items that start with the same letter\n    // in rapid succession.\n    if (allowRapidSuccessionOfFirstLetter && stringRef.current === event.key) {\n      stringRef.current = '';\n      prevIndexRef.current = matchIndexRef.current;\n    }\n    stringRef.current += event.key;\n    clearTimeoutIfSet(timeoutIdRef);\n    timeoutIdRef.current = window.setTimeout(() => {\n      stringRef.current = '';\n      prevIndexRef.current = matchIndexRef.current;\n      setTypingChange(false);\n    }, resetMs);\n    const prevIndex = prevIndexRef.current;\n    const index = getMatchingIndex(listContent, [...listContent.slice((prevIndex || 0) + 1), ...listContent.slice(0, (prevIndex || 0) + 1)], stringRef.current);\n    if (index !== -1) {\n      onMatch(index);\n      matchIndexRef.current = index;\n    } else if (event.key !== ' ') {\n      stringRef.current = '';\n      setTypingChange(false);\n    }\n  });\n  const reference = React.useMemo(() => ({\n    onKeyDown\n  }), [onKeyDown]);\n  const floating = React.useMemo(() => {\n    return {\n      onKeyDown,\n      onKeyUp(event) {\n        if (event.key === ' ') {\n          setTypingChange(false);\n        }\n      }\n    };\n  }, [onKeyDown, setTypingChange]);\n  return React.useMemo(() => enabled ? {\n    reference,\n    floating\n  } : {}, [enabled, reference, floating]);\n}\n\nfunction getArgsWithCustomFloatingHeight(state, height) {\n  return {\n    ...state,\n    rects: {\n      ...state.rects,\n      floating: {\n        ...state.rects.floating,\n        height\n      }\n    }\n  };\n}\n/**\n * Positions the floating element such that an inner element inside of it is\n * anchored to the reference element.\n * @see https://floating-ui.com/docs/inner\n * @deprecated\n */\nconst inner = props => ({\n  name: 'inner',\n  options: props,\n  async fn(state) {\n    const {\n      listRef,\n      overflowRef,\n      onFallbackChange,\n      offset: innerOffset = 0,\n      index = 0,\n      minItemsVisible = 4,\n      referenceOverflowThreshold = 0,\n      scrollRef,\n      ...detectOverflowOptions\n    } = evaluate(props, state);\n    const {\n      rects,\n      elements: {\n        floating\n      }\n    } = state;\n    const item = listRef.current[index];\n    const scrollEl = (scrollRef == null ? void 0 : scrollRef.current) || floating;\n\n    // Valid combinations:\n    // 1. Floating element is the scrollRef and has a border (default)\n    // 2. Floating element is not the scrollRef, floating element has a border\n    // 3. Floating element is not the scrollRef, scrollRef has a border\n    // Floating > {...getFloatingProps()} wrapper > scrollRef > items is not\n    // allowed as VoiceOver doesn't work.\n    const clientTop = floating.clientTop || scrollEl.clientTop;\n    const floatingIsBordered = floating.clientTop !== 0;\n    const scrollElIsBordered = scrollEl.clientTop !== 0;\n    const floatingIsScrollEl = floating === scrollEl;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!state.placement.startsWith('bottom')) {\n        warn('`placement` side must be \"bottom\" when using the `inner`', 'middleware.');\n      }\n    }\n    if (!item) {\n      return {};\n    }\n    const nextArgs = {\n      ...state,\n      ...(await offset(-item.offsetTop - floating.clientTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(state))\n    };\n    const overflow = await detectOverflow(getArgsWithCustomFloatingHeight(nextArgs, scrollEl.scrollHeight + clientTop + floating.clientTop), detectOverflowOptions);\n    const refOverflow = await detectOverflow(nextArgs, {\n      ...detectOverflowOptions,\n      elementContext: 'reference'\n    });\n    const diffY = max(0, overflow.top);\n    const nextY = nextArgs.y + diffY;\n    const isScrollable = scrollEl.scrollHeight > scrollEl.clientHeight;\n    const rounder = isScrollable ? v => v : round;\n    const maxHeight = rounder(max(0, scrollEl.scrollHeight + (floatingIsBordered && floatingIsScrollEl || scrollElIsBordered ? clientTop * 2 : 0) - diffY - max(0, overflow.bottom)));\n    scrollEl.style.maxHeight = maxHeight + \"px\";\n    scrollEl.scrollTop = diffY;\n\n    // There is not enough space, fallback to standard anchored positioning\n    if (onFallbackChange) {\n      const shouldFallback = scrollEl.offsetHeight < item.offsetHeight * min(minItemsVisible, listRef.current.length) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold;\n      ReactDOM.flushSync(() => onFallbackChange(shouldFallback));\n    }\n    if (overflowRef) {\n      overflowRef.current = await detectOverflow(getArgsWithCustomFloatingHeight({\n        ...nextArgs,\n        y: nextY\n      }, scrollEl.offsetHeight + clientTop + floating.clientTop), detectOverflowOptions);\n    }\n    return {\n      y: nextY\n    };\n  }\n});\n/**\n * Changes the `inner` middleware's `offset` upon a `wheel` event to\n * expand the floating element's height, revealing more list items.\n * @see https://floating-ui.com/docs/inner\n * @deprecated\n */\nfunction useInnerOffset(context, props) {\n  const {\n    open,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    overflowRef,\n    scrollRef,\n    onChange: unstable_onChange\n  } = props;\n  const onChange = useEffectEvent(unstable_onChange);\n  const controlledScrollingRef = React.useRef(false);\n  const prevScrollTopRef = React.useRef(null);\n  const initialOverflowRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!enabled) return;\n    function onWheel(e) {\n      if (e.ctrlKey || !el || overflowRef.current == null) {\n        return;\n      }\n      const dY = e.deltaY;\n      const isAtTop = overflowRef.current.top >= -0.5;\n      const isAtBottom = overflowRef.current.bottom >= -0.5;\n      const remainingScroll = el.scrollHeight - el.clientHeight;\n      const sign = dY < 0 ? -1 : 1;\n      const method = dY < 0 ? 'max' : 'min';\n      if (el.scrollHeight <= el.clientHeight) {\n        return;\n      }\n      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {\n        e.preventDefault();\n        ReactDOM.flushSync(() => {\n          onChange(d => d + Math[method](dY, remainingScroll * sign));\n        });\n      } else if (/firefox/i.test(getUserAgent())) {\n        // Needed to propagate scrolling during momentum scrolling phase once\n        // it gets limited by the boundary. UX improvement, not critical.\n        el.scrollTop += dY;\n      }\n    }\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n    if (open && el) {\n      el.addEventListener('wheel', onWheel);\n\n      // Wait for the position to be ready.\n      requestAnimationFrame(() => {\n        prevScrollTopRef.current = el.scrollTop;\n        if (overflowRef.current != null) {\n          initialOverflowRef.current = {\n            ...overflowRef.current\n          };\n        }\n      });\n      return () => {\n        prevScrollTopRef.current = null;\n        initialOverflowRef.current = null;\n        el.removeEventListener('wheel', onWheel);\n      };\n    }\n  }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]);\n  const floating = React.useMemo(() => ({\n    onKeyDown() {\n      controlledScrollingRef.current = true;\n    },\n    onWheel() {\n      controlledScrollingRef.current = false;\n    },\n    onPointerMove() {\n      controlledScrollingRef.current = false;\n    },\n    onScroll() {\n      const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n      if (!overflowRef.current || !el || !controlledScrollingRef.current) {\n        return;\n      }\n      if (prevScrollTopRef.current !== null) {\n        const scrollDiff = el.scrollTop - prevScrollTopRef.current;\n        if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {\n          ReactDOM.flushSync(() => onChange(d => d + scrollDiff));\n        }\n      }\n\n      // [Firefox] Wait for the height change to have been applied.\n      requestAnimationFrame(() => {\n        prevScrollTopRef.current = el.scrollTop;\n      });\n    }\n  }), [elements.floating, onChange, overflowRef, scrollRef]);\n  return React.useMemo(() => enabled ? {\n    floating\n  } : {}, [enabled, floating]);\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [x, y] = point;\n  let isInside = false;\n  const length = polygon.length;\n  for (let i = 0, j = length - 1; i < length; j = i++) {\n    const [xi, yi] = polygon[i] || [0, 0];\n    const [xj, yj] = polygon[j] || [0, 0];\n    const intersect = yi >= y !== yj >= y && x <= (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) {\n      isInside = !isInside;\n    }\n  }\n  return isInside;\n}\nfunction isInside(point, rect) {\n  return point[0] >= rect.x && point[0] <= rect.x + rect.width && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n}\n/**\n * Generates a safe polygon area that the user can traverse without closing the\n * floating element once leaving the reference element.\n * @see https://floating-ui.com/docs/useHover#safepolygon\n */\nfunction safePolygon(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    buffer = 0.5,\n    blockPointerEvents = false,\n    requireIntent = true\n  } = options;\n  let timeoutId;\n  let hasLanded = false;\n  let lastX = null;\n  let lastY = null;\n  let lastCursorTime = performance.now();\n  function getCursorSpeed(x, y) {\n    const currentTime = performance.now();\n    const elapsedTime = currentTime - lastCursorTime;\n    if (lastX === null || lastY === null || elapsedTime === 0) {\n      lastX = x;\n      lastY = y;\n      lastCursorTime = currentTime;\n      return null;\n    }\n    const deltaX = x - lastX;\n    const deltaY = y - lastY;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const speed = distance / elapsedTime; // px / ms\n\n    lastX = x;\n    lastY = y;\n    lastCursorTime = currentTime;\n    return speed;\n  }\n  const fn = _ref => {\n    let {\n      x,\n      y,\n      placement,\n      elements,\n      onClose,\n      nodeId,\n      tree\n    } = _ref;\n    return function onMouseMove(event) {\n      function close() {\n        clearTimeout(timeoutId);\n        onClose();\n      }\n      clearTimeout(timeoutId);\n      if (!elements.domReference || !elements.floating || placement == null || x == null || y == null) {\n        return;\n      }\n      const {\n        clientX,\n        clientY\n      } = event;\n      const clientPoint = [clientX, clientY];\n      const target = getTarget(event);\n      const isLeave = event.type === 'mouseleave';\n      const isOverFloatingEl = contains(elements.floating, target);\n      const isOverReferenceEl = contains(elements.domReference, target);\n      const refRect = elements.domReference.getBoundingClientRect();\n      const rect = elements.floating.getBoundingClientRect();\n      const side = placement.split('-')[0];\n      const cursorLeaveFromRight = x > rect.right - rect.width / 2;\n      const cursorLeaveFromBottom = y > rect.bottom - rect.height / 2;\n      const isOverReferenceRect = isInside(clientPoint, refRect);\n      const isFloatingWider = rect.width > refRect.width;\n      const isFloatingTaller = rect.height > refRect.height;\n      const left = (isFloatingWider ? refRect : rect).left;\n      const right = (isFloatingWider ? refRect : rect).right;\n      const top = (isFloatingTaller ? refRect : rect).top;\n      const bottom = (isFloatingTaller ? refRect : rect).bottom;\n      if (isOverFloatingEl) {\n        hasLanded = true;\n        if (!isLeave) {\n          return;\n        }\n      }\n      if (isOverReferenceEl) {\n        hasLanded = false;\n      }\n      if (isOverReferenceEl && !isLeave) {\n        hasLanded = true;\n        return;\n      }\n\n      // Prevent overlapping floating element from being stuck in an open-close\n      // loop: https://github.com/floating-ui/floating-ui/issues/1910\n      if (isLeave && isElement(event.relatedTarget) && contains(elements.floating, event.relatedTarget)) {\n        return;\n      }\n\n      // If any nested child is open, abort.\n      if (tree && getChildren(tree.nodesRef.current, nodeId).some(_ref2 => {\n        let {\n          context\n        } = _ref2;\n        return context == null ? void 0 : context.open;\n      })) {\n        return;\n      }\n\n      // If the pointer is leaving from the opposite side, the \"buffer\" logic\n      // creates a point where the floating element remains open, but should be\n      // ignored.\n      // A constant of 1 handles floating point rounding errors.\n      if (side === 'top' && y >= refRect.bottom - 1 || side === 'bottom' && y <= refRect.top + 1 || side === 'left' && x >= refRect.right - 1 || side === 'right' && x <= refRect.left + 1) {\n        return close();\n      }\n\n      // Ignore when the cursor is within the rectangular trough between the\n      // two elements. Since the triangle is created from the cursor point,\n      // which can start beyond the ref element's edge, traversing back and\n      // forth from the ref to the floating element can cause it to close. This\n      // ensures it always remains open in that case.\n      let rectPoly = [];\n      switch (side) {\n        case 'top':\n          rectPoly = [[left, refRect.top + 1], [left, rect.bottom - 1], [right, rect.bottom - 1], [right, refRect.top + 1]];\n          break;\n        case 'bottom':\n          rectPoly = [[left, rect.top + 1], [left, refRect.bottom - 1], [right, refRect.bottom - 1], [right, rect.top + 1]];\n          break;\n        case 'left':\n          rectPoly = [[rect.right - 1, bottom], [rect.right - 1, top], [refRect.left + 1, top], [refRect.left + 1, bottom]];\n          break;\n        case 'right':\n          rectPoly = [[refRect.right - 1, bottom], [refRect.right - 1, top], [rect.left + 1, top], [rect.left + 1, bottom]];\n          break;\n      }\n      function getPolygon(_ref3) {\n        let [x, y] = _ref3;\n        switch (side) {\n          case 'top':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.bottom - buffer : isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'bottom':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.top + buffer : isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'left':\n            {\n              const cursorPointOne = [x + buffer + 1, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x + buffer + 1, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.right - buffer : isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]];\n              return [...commonPoints, cursorPointOne, cursorPointTwo];\n            }\n          case 'right':\n            {\n              const cursorPointOne = [x - buffer, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x - buffer, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.left + buffer : isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n        }\n      }\n      if (isPointInPolygon([clientX, clientY], rectPoly)) {\n        return;\n      }\n      if (hasLanded && !isOverReferenceRect) {\n        return close();\n      }\n      if (!isLeave && requireIntent) {\n        const cursorSpeed = getCursorSpeed(event.clientX, event.clientY);\n        const cursorSpeedThreshold = 0.1;\n        if (cursorSpeed !== null && cursorSpeed < cursorSpeedThreshold) {\n          return close();\n        }\n      }\n      if (!isPointInPolygon([clientX, clientY], getPolygon([x, y]))) {\n        close();\n      } else if (!hasLanded && requireIntent) {\n        timeoutId = window.setTimeout(close, 40);\n      }\n    };\n  };\n  fn.__options = {\n    blockPointerEvents\n  };\n  return fn;\n}\n\nexport { Composite, CompositeItem, FloatingArrow, FloatingDelayGroup, FloatingFocusManager, FloatingList, FloatingNode, FloatingOverlay, FloatingPortal, FloatingTree, inner, safePolygon, useClick, useClientPoint, useDelayGroup, useDelayGroupContext, useDismiss, useFloating, useFloatingNodeId, useFloatingParentNodeId, useFloatingPortalNode, useFloatingRootContext, useFloatingTree, useFocus, useHover, useId, useInnerOffset, useInteractions, useListItem, useListNavigation, useMergeRefs, useRole, useTransitionStatus, useTransitionStyles, useTypeahead };\n", "import { isShadowRoot, isHTMLElement } from '@floating-ui/utils/dom';\n\nfunction activeElement(doc) {\n  let activeElement = doc.activeElement;\n  while (((_activeElement = activeElement) == null || (_activeElement = _activeElement.shadowRoot) == null ? void 0 : _activeElement.activeElement) != null) {\n    var _activeElement;\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n  return activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n\n  // then fallback to custom implementation with Shadow DOM support\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) {\n        return true;\n      }\n      // @ts-ignore\n      next = next.parentNode || next.host;\n    }\n  }\n\n  // Give up, the result is false\n  return false;\n}\n// Avoid Chrome DevTools blue warning.\nfunction getPlatform() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.platform) {\n    return uaData.platform;\n  }\n  return navigator.platform;\n}\nfunction getUserAgent() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(_ref => {\n      let {\n        brand,\n        version\n      } = _ref;\n      return brand + \"/\" + version;\n    }).join(' ');\n  }\n  return navigator.userAgent;\n}\n\n// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts\nfunction isVirtualClick(event) {\n  // FIXME: Firefox is now emitting a deprecation warning for `mozInputSource`.\n  // Try to find a workaround for this. `react-aria` source still has the check.\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  if (isAndroid() && event.pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isVirtualPointerEvent(event) {\n  if (isJSDOM()) return false;\n  return !isAndroid() && event.width === 0 && event.height === 0 || isAndroid() && event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'mouse' ||\n  // iOS VoiceOver returns 0.333• for width/height.\n  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'touch';\n}\nfunction isSafari() {\n  // Chrome DevTools does not complain about navigator.vendor\n  return /apple/i.test(navigator.vendor);\n}\nfunction isAndroid() {\n  const re = /android/i;\n  return re.test(getPlatform()) || re.test(getUserAgent());\n}\nfunction isMac() {\n  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;\n}\nfunction isJSDOM() {\n  return getUserAgent().includes('jsdom/');\n}\nfunction isMouseLikePointerType(pointerType, strict) {\n  // On some Linux machines with Chromium, mouse inputs return a `pointerType`\n  // of \"pen\": https://github.com/floating-ui/floating-ui/issues/2015\n  const values = ['mouse', 'pen'];\n  if (!strict) {\n    values.push('', undefined);\n  }\n  return values.includes(pointerType);\n}\nfunction isReactEvent(event) {\n  return 'nativeEvent' in event;\n}\nfunction isRootElement(element) {\n  return element.matches('html,body');\n}\nfunction getDocument(node) {\n  return (node == null ? void 0 : node.ownerDocument) || document;\n}\nfunction isEventTargetWithin(event, node) {\n  if (node == null) {\n    return false;\n  }\n  if ('composedPath' in event) {\n    return event.composedPath().includes(node);\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't\n  const e = event;\n  return e.target != null && node.contains(e.target);\n}\nfunction getTarget(event) {\n  if ('composedPath' in event) {\n    return event.composedPath()[0];\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support\n  // `composedPath()`, but browsers without shadow DOM don't.\n  return event.target;\n}\nconst TYPEABLE_SELECTOR = \"input:not([type='hidden']):not([disabled]),\" + \"[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\";\nfunction isTypeableElement(element) {\n  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\nfunction isTypeableCombobox(element) {\n  if (!element) return false;\n  return element.getAttribute('role') === 'combobox' && isTypeableElement(element);\n}\n\nexport { TYPEABLE_SELECTOR, activeElement, contains, getDocument, getPlatform, getTarget, getUserAgent, isAndroid, isEventTargetWithin, isJSDOM, isMac, isMouseLikePointerType, isReactEvent, isRootElement, isSafari, isTypeableCombobox, isTypeableElement, isVirtualClick, isVirtualPointerEvent, stopEvent };\n", "// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nconst candidateSelectors = [\n  'input:not([inert])',\n  'select:not([inert])',\n  'textarea:not([inert])',\n  'a[href]:not([inert])',\n  'button:not([inert])',\n  '[tabindex]:not(slot):not([inert])',\n  'audio[controls]:not([inert])',\n  'video[controls]:not([inert])',\n  '[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\n  'details>summary:first-of-type:not([inert])',\n  'details:not([inert])',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element?.getRootNode?.()\n    : (element) => element?.ownerDocument;\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nconst isInert = function (node, lookUp = true) {\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  const inertAtt = node?.getAttribute?.('inert');\n  const inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  const result = inert || (lookUp && node && isInert(node.parentNode)); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nconst isContentEditable = function (node) {\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  const attValue = node?.getAttribute?.('contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      const validShadowRoot =\n        !isInert(shadowRoot, false) &&\n        (!options.shadowRootFilter || options.shadowRootFilter(element));\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nconst hasTabIndex = function (node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nconst getTabIndex = function (node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if (\n      (/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        isContentEditable(node)) &&\n      !hasTabIndex(node)\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nconst getSortOrderTabIndex = function (node, isScope) {\n  const tabIndex = getTabIndex(node);\n\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n\n  return tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  let nodeRoot = node && getRootNode(node);\n  let nodeRootHost = nodeRoot?.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  let attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    attached = !!(\n      nodeRootHost?.ownerDocument?.contains(nodeRootHost) ||\n      node?.ownerDocument?.contains(node)\n    );\n\n    while (!attached && nodeRootHost) {\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = nodeRoot?.host;\n      attached = !!nodeRootHost?.ownerDocument?.contains(nodeRootHost);\n    }\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    // we must do an inert look up to filter out any elements inside an inert ancestor\n    //  because we're limited in the type of selectors we can use in JSDom (see related\n    //  note related to `candidateSelectors`)\n    isInert(node) ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabIndex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getSortOrderTabIndex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorTabbable.bind(null, options),\n        flatten: false,\n        getShadowRoot: options.getShadowRoot,\n        shadowRootFilter: isValidShadowRootTabbable,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorFocusable.bind(null, options),\n        flatten: true,\n        getShadowRoot: options.getShadowRoot,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable, getTabIndex };\n", "// forked from Radix UI\n// https://github.com/radix-ui/primitives/blob/main/packages/react/progress/src/Progress.tsx\n\nimport type { GetProps } from '@tamagui/core'\nimport { getVariableValue, styled } from '@tamagui/core'\nimport type { Scope } from '@tamagui/create-context'\nimport { createContextScope } from '@tamagui/create-context'\nimport { getSize } from '@tamagui/get-token'\nimport { withStaticProperties } from '@tamagui/helpers'\nimport { ThemeableStack } from '@tamagui/stacks'\nimport * as React from 'react'\n\nconst PROGRESS_NAME = 'Progress'\n\nconst [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME)\ntype ProgressContextValue = { value: number | null; max: number; width: number }\nconst [ProgressProvider, useProgressContext] =\n  createProgressContext<ProgressContextValue>(PROGRESS_NAME)\n\n/* -------------------------------------------------------------------------------------------------\n * ProgressIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'ProgressIndicator'\n\nexport const ProgressIndicatorFrame = styled(ThemeableStack, {\n  name: INDICATOR_NAME,\n\n  variants: {\n    unstyled: {\n      false: {\n        height: '100%',\n        width: '100%',\n        backgrounded: true,\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport type ProgressIndicatorProps = GetProps<typeof ProgressIndicatorFrame>\n\nconst ProgressIndicator = ProgressIndicatorFrame.styleable(function ProgressIndicator(\n  props: ScopedProps<ProgressIndicatorProps>,\n  forwardedRef\n) {\n  const { __scopeProgress, animation, ...indicatorProps } = props\n  const context = useProgressContext(INDICATOR_NAME, __scopeProgress)\n  const pct = context.max - (context.value ?? 0)\n  // default somewhat far off\n  const x = -(context.width === 0 ? 300 : context.width) * (pct / 100)\n\n  return (\n    <ProgressIndicatorFrame\n      data-state={getProgressState(context.value, context.max)}\n      data-value={context.value ?? undefined}\n      data-max={context.max}\n      x={x}\n      width={context.width}\n      {...(!props.unstyled && {\n        animateOnly: ['transform'],\n        opacity: context.width === 0 ? 0 : 1,\n      })}\n      {...indicatorProps}\n      ref={forwardedRef}\n      // avoid animation on first render so the progress doesn't bounce to initial location\n      animation={!context.width ? null : animation}\n    />\n  )\n})\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction defaultGetValueLabel(value: number, max: number) {\n  return `${Math.round((value / max) * 100)}%`\n}\n\nfunction getProgressState(\n  value: number | undefined | null,\n  maxValue: number\n): ProgressState {\n  return value == null ? 'indeterminate' : value === maxValue ? 'complete' : 'loading'\n}\n\nfunction isNumber(value: any): value is number {\n  return typeof value === 'number'\n}\n\nfunction isValidMaxNumber(max: any): max is number {\n  return isNumber(max) && !Number.isNaN(max) && max > 0\n}\n\nfunction isValidValueNumber(value: any, max: number): value is number {\n  return isNumber(value) && !Number.isNaN(value) && value <= max && value >= 0\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Progress\n * -----------------------------------------------------------------------------------------------*/\n\nconst DEFAULT_MAX = 100\n\ntype ScopedProps<P> = P & { __scopeProgress?: Scope }\n\ntype ProgressState = 'indeterminate' | 'complete' | 'loading'\n\nexport const ProgressFrame = styled(ThemeableStack, {\n  name: 'Progress',\n\n  variants: {\n    unstyled: {\n      false: {\n        borderRadius: 100_000,\n        overflow: 'hidden',\n        backgrounded: true,\n      },\n    },\n\n    size: {\n      '...size': (val) => {\n        const size = Math.round(getVariableValue(getSize(val)) * 0.25)\n        return {\n          height: size,\n          minWidth: getVariableValue(size) * 20,\n          width: '100%',\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport interface ProgressExtraProps {\n  value?: number | null | undefined\n  max?: number\n  getValueLabel?(value: number, max: number): string\n}\n\nexport type ProgressProps = GetProps<typeof ProgressFrame> & ProgressExtraProps\n\nconst Progress = withStaticProperties(\n  ProgressFrame.styleable<ProgressExtraProps>(function Progress(props, forwardedRef) {\n    const {\n      // @ts-expect-error\n      __scopeProgress,\n      value: valueProp,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      size = '$true',\n      ...progressProps\n    } = props\n\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : undefined\n    const [width, setWidth] = React.useState(0)\n\n    return (\n      <ProgressProvider scope={__scopeProgress} value={value} max={max} width={width}>\n        <ProgressFrame\n          aria-valuemax={max}\n          aria-valuemin={0}\n          aria-valuenow={isNumber(value) ? value : undefined}\n          aria-valuetext={valueLabel}\n          // @ts-ignore\n          role=\"progressbar\"\n          data-state={getProgressState(value, max)}\n          data-value={value ?? undefined}\n          data-max={max}\n          {...(progressProps.unstyled !== true && {\n            size,\n          })}\n          {...progressProps}\n          onLayout={(e) => {\n            setWidth(e.nativeEvent.layout.width)\n            progressProps.onLayout?.(e)\n          }}\n          ref={forwardedRef}\n        />\n      </ProgressProvider>\n    )\n  }),\n  {\n    Indicator: ProgressIndicator,\n  }\n)\n\nexport { createProgressScope, Progress, ProgressIndicator }\n", "import { getVariableValue, styled } from '@tamagui/core'\nimport { getSize } from '@tamagui/get-token'\nimport { ThemeableStack } from '@tamagui/stacks'\n\nconst RADIO_GROUP_ITEM_NAME = 'RadioGroupItem'\n\nexport const RadioGroupItemFrame = styled(ThemeableStack, {\n  name: RADIO_GROUP_ITEM_NAME,\n  tag: 'button',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$true',\n        borderRadius: 1000,\n        backgroundColor: '$background',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderWidth: 1,\n        borderColor: '$borderColor',\n        padding: 0,\n\n        hoverStyle: {\n          borderColor: '$borderColorHover',\n          backgroundColor: '$backgroundHover',\n        },\n\n        focusStyle: {\n          borderColor: '$borderColorHover',\n          backgroundColor: '$backgroundHover',\n        },\n\n        focusVisibleStyle: {\n          outlineStyle: 'solid',\n          outlineWidth: 2,\n          outlineColor: '$outlineColor',\n        },\n\n        pressStyle: {\n          borderColor: '$borderColorFocus',\n          backgroundColor: '$backgroundFocus',\n        },\n      },\n    },\n\n    disabled: {\n      true: {\n        pointerEvents: 'none',\n        userSelect: 'none',\n        cursor: 'not-allowed',\n\n        hoverStyle: {\n          borderColor: '$borderColor',\n          backgroundColor: '$background',\n        },\n\n        pressStyle: {\n          borderColor: '$borderColor',\n          backgroundColor: '$background',\n        },\n\n        focusVisibleStyle: {\n          outlineWidth: 0,\n        },\n      },\n    },\n\n    size: {\n      '...size': (value, { props }) => {\n        const size = Math.floor(\n          getVariableValue(getSize(value)) * (props['scaleSize'] ?? 0.5)\n        )\n        return {\n          width: size,\n          height: size,\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nconst RADIO_GROUP_INDICATOR_NAME = 'RadioGroupIndicator'\n\nexport const RadioGroupIndicatorFrame = styled(ThemeableStack, {\n  name: RADIO_GROUP_INDICATOR_NAME,\n\n  variants: {\n    unstyled: {\n      false: {\n        width: '33%',\n        height: '33%',\n        borderRadius: 1000,\n        backgroundColor: '$color',\n        pressTheme: true,\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nconst RADIO_GROUP_NAME = 'RadioGroup'\n\nexport const RadioGroupFrame = styled(ThemeableStack, {\n  name: RADIO_GROUP_NAME,\n\n  variants: {\n    orientation: {\n      horizontal: {\n        flexDirection: 'row',\n        spaceDirection: 'horizontal',\n      },\n      vertical: {\n        flexDirection: 'column',\n        spaceDirection: 'vertical',\n      },\n    },\n  } as const,\n})\n", "import React from 'react'\nimport type {\n  RadioGroupContextValue,\n  RadioGroupItemContextValue,\n} from '@tamagui/radio-headless'\nimport type { GetProps } from '@tamagui/core'\nimport { isWeb, withStaticProperties } from '@tamagui/core'\n\nimport {\n  RadioGroupFrame,\n  RadioGroupIndicatorFrame,\n  RadioGroupItemFrame,\n} from './RadioGroup'\n\nconst ensureContext = (x: any) => {\n  if (!x.context) {\n    x.context = RadioGroupContext\n  }\n}\n\ntype RadioIndicatorProps = GetProps<typeof RadioGroupIndicatorFrame> & {\n  forceMount?: boolean\n  unstyled?: boolean\n}\n\nimport {\n  useRadioGroup,\n  useRadioGroupItem,\n  useRadioGroupItemIndicator,\n} from '@tamagui/radio-headless'\nimport { RovingFocusGroup } from '@tamagui/roving-focus'\n\nconst RadioGroupContext = React.createContext<RadioGroupContextValue>({})\nconst RadioGroupItemContext = React.createContext<RadioGroupItemContextValue>({\n  checked: false,\n  disabled: false,\n})\n\nexport type RadioGroupItemProps = GetProps<typeof RadioGroupItemFrame> & {\n  value: string\n  id?: string\n  labelledBy?: string\n  disabled?: boolean\n}\n\nexport type RadioGroupProps = GetProps<typeof RadioGroupFrame> & {\n  value?: string\n  defaultValue?: string\n  onValueChange?: (value: string) => void\n  required?: boolean\n  disabled?: boolean\n  name?: string\n  native?: boolean\n  accentColor?: string\n}\n\ntype RadioGroupComponent = (props: RadioGroupProps) => any\n\ntype RadioGroupIndicatorComponent = (props: RadioIndicatorProps) => any\n\ntype RadioGroupItemComponent = (props: RadioGroupItemProps) => any\n\nexport function createRadioGroup<\n  F extends RadioGroupComponent,\n  D extends RadioGroupIndicatorComponent,\n  I extends RadioGroupItemComponent,\n>(createProps: { disableActiveTheme?: boolean; Frame?: F; Indicator?: D; Item?: I }) {\n  const {\n    disableActiveTheme,\n    Frame = RadioGroupFrame,\n    Indicator = RadioGroupIndicatorFrame,\n    Item = RadioGroupItemFrame,\n  } = createProps as any as {\n    disableActiveTheme?: boolean\n    Frame: typeof RadioGroupFrame\n    Indicator: typeof RadioGroupIndicatorFrame\n    Item: typeof RadioGroupItemFrame\n  }\n\n  ensureContext(Frame)\n  ensureContext(Indicator)\n  ensureContext(Item)\n\n  type RadioGroupProps = GetProps<typeof RadioGroupFrame> & {\n    value?: string\n    defaultValue?: string\n    onValueChange?: (value: string) => void\n    required?: boolean\n    disabled?: boolean\n    name?: string\n    native?: boolean\n    accentColor?: string\n  }\n\n  const RadioGroupImp = Frame.styleable<RadioGroupProps>((props, ref) => {\n    const {\n      value,\n      defaultValue,\n      onValueChange,\n      required = false,\n      disabled = false,\n      name,\n      native,\n      accentColor,\n      orientation = 'vertical',\n      ...rest\n    } = props\n\n    const { providerValue, frameAttrs, rovingFocusGroupAttrs } = useRadioGroup({\n      orientation,\n      name,\n      defaultValue,\n      value,\n      onValueChange,\n      required,\n      disabled,\n      native,\n      accentColor,\n    })\n\n    return (\n      <RadioGroupContext.Provider value={providerValue}>\n        <RovingFocusGroup {...rovingFocusGroupAttrs}>\n          <RadioGroupFrame {...frameAttrs} ref={ref} {...rest} />\n        </RovingFocusGroup>\n      </RadioGroupContext.Provider>\n    )\n  })\n\n  const RadioGroupItemImp = Item.styleable<RadioGroupItemProps>((props, ref) => {\n    const {\n      value,\n      labelledBy,\n      onPress,\n      //@ts-expect-error\n      onKeyDown,\n      disabled,\n      id,\n      ...rest\n    } = props\n\n    const {\n      providerValue,\n      bubbleInput,\n      rovingFocusGroupAttrs,\n      frameAttrs,\n      isFormControl,\n      native,\n    } = useRadioGroupItem({\n      radioGroupContext: RadioGroupContext,\n      value,\n      id,\n      labelledBy,\n      disabled,\n      onPress: onPress!,\n      onKeyDown,\n    })\n\n    return (\n      <RadioGroupItemContext.Provider value={providerValue}>\n        {isWeb && native ? (\n          bubbleInput\n        ) : (\n          <>\n            <RovingFocusGroup.Item {...rovingFocusGroupAttrs}>\n              <RadioGroupItemFrame {...frameAttrs} ref={ref} {...rest} />\n            </RovingFocusGroup.Item>\n            {isFormControl && bubbleInput}\n          </>\n        )}\n      </RadioGroupItemContext.Provider>\n    )\n  })\n\n  RadioGroupItemImp.displayName = 'RadioGroupItem'\n\n  const RadioIndicator = Indicator.styleable<RadioIndicatorProps>(\n    (props: RadioIndicatorProps, forwardedRef) => {\n      const { forceMount, disabled, ...indicatorProps } = props\n      const { checked, ...useIndicatorRest } = useRadioGroupItemIndicator({\n        radioGroupItemContext: RadioGroupItemContext,\n        disabled,\n      })\n\n      if (forceMount || checked) {\n        return <Indicator {...useIndicatorRest} ref={forwardedRef} {...indicatorProps} />\n      }\n\n      return null\n    }\n  )\n\n  RadioIndicator.displayName = 'RadioIndicator'\n\n  const RadioGroup = withStaticProperties(RadioGroupImp, {\n    Item: RadioGroupItemImp,\n    Indicator: RadioIndicator,\n  })\n  RadioGroup.displayName = 'RadioGroup'\n\n  return RadioGroup\n}\n", "import { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport { registerFocusable } from '@tamagui/focusable'\nimport { composeEventHandlers } from '@tamagui/helpers'\nimport { useLabelContext } from '@tamagui/label'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport type { StackProps } from '@tamagui/web'\nimport type { ReactElement } from 'react'\nimport { useContext, useEffect, useRef, useState } from 'react'\nimport type { GestureResponderEvent } from 'react-native'\nimport { BubbleInput } from './BubbleInput'\nimport { getState } from './utils'\n\ninterface UseRadioGroupParams {\n  value?: string\n  defaultValue?: string\n  onValueChange?: (value: string) => void\n  required?: boolean\n  disabled?: boolean\n  name?: string\n  native?: boolean\n  accentColor?: string\n  orientation: 'horizontal' | 'vertical'\n  ref?: React.Ref<ReactElement>\n}\nexport function useRadioGroup(params: UseRadioGroupParams) {\n  const {\n    value: valueProp,\n    onValueChange,\n    defaultValue,\n    required,\n    disabled,\n    name,\n    native,\n    accentColor,\n    orientation,\n    ref,\n  } = params\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue!,\n    onChange: onValueChange,\n  })\n\n  return {\n    providerValue: {\n      value,\n      onChange: setValue,\n      required,\n      disabled,\n      name,\n      native,\n      accentColor,\n    },\n    frameAttrs: {\n      role: 'radiogroup' as any,\n      'aria-orientation': orientation,\n      'data-disabled': disabled ? '' : undefined,\n    },\n    rovingFocusGroupAttrs: {\n      orientation,\n      loop: true,\n    },\n  }\n}\n\ninterface UseRadioItemParams {\n  radioGroupContext: React.Context<RadioGroupContextValue>\n  value: string\n  id?: string\n  labelledBy?: string\n  disabled?: boolean\n  ref?: any\n  onPress?: StackProps['onPress']\n  onKeyDown?: React.HTMLProps<React.ReactElement>['onKeyDown']\n  onFocus?: StackProps['onFocus']\n}\n\nexport type RadioGroupContextValue = {\n  value?: string\n  disabled?: boolean\n  required?: boolean\n  onChange?: (value: string) => void\n  name?: string\n  native?: boolean\n  accentColor?: string\n}\n\nconst ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight']\n\nexport const useRadioGroupItem = (params: UseRadioItemParams) => {\n  const {\n    radioGroupContext,\n    value,\n    labelledBy: ariaLabelledby,\n    disabled: itemDisabled,\n    ref: refProp,\n    id,\n    onPress,\n    onKeyDown,\n    onFocus,\n  } = params\n  const {\n    value: groupValue,\n    disabled,\n    required,\n    onChange,\n    name,\n    native,\n    accentColor,\n  } = useContext(radioGroupContext)\n\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const hasConsumerStoppedPropagationRef = useRef(false)\n  const ref = useRef<any>(null)\n  const composedRefs = useComposedRefs(refProp, (node) => setButton(node), ref)\n  const isArrowKeyPressedRef = useRef(false)\n\n  const isFormControl = isWeb ? (button ? Boolean(button.closest('form')) : true) : false\n\n  const checked = groupValue === value\n\n  const labelId = useLabelContext(button)\n  const labelledBy = ariaLabelledby || labelId\n\n  useEffect(() => {\n    if (isWeb) {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (ARROW_KEYS.includes(event.key)) {\n          isArrowKeyPressedRef.current = true\n        }\n      }\n      const handleKeyUp = () => {\n        isArrowKeyPressedRef.current = false\n      }\n      document.addEventListener('keydown', handleKeyDown)\n      document.addEventListener('keyup', handleKeyUp)\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown)\n        document.removeEventListener('keyup', handleKeyUp)\n      }\n    }\n  }, [])\n\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    useEffect(() => {\n      if (!id) return\n      if (disabled) return\n\n      return registerFocusable(id, {\n        focusAndSelect: () => {\n          onChange?.(value)\n        },\n        focus: () => {},\n      })\n    }, [id, value, disabled])\n  }\n\n  const isDisabled = disabled || itemDisabled\n\n  return {\n    providerValue: {\n      checked,\n    },\n    checked,\n    isFormControl,\n    bubbleInput: (\n      <BubbleInput\n        isHidden={!native}\n        control={button}\n        bubbles={!hasConsumerStoppedPropagationRef.current}\n        name={name}\n        value={value}\n        checked={checked}\n        required={required}\n        disabled={isDisabled}\n        {...(isWeb &&\n          native && {\n            accentColor,\n            id,\n          })}\n      />\n    ),\n    native,\n    frameAttrs: {\n      'data-state': getState(checked),\n      'data-disabled': isDisabled ? '' : undefined,\n      role: 'radio' as any,\n      'aria-labelledby': labelledBy,\n      'aria-checked': checked,\n      'aria-required': required,\n      disabled: isDisabled,\n      ref: composedRefs,\n      ...(isWeb && {\n        type: 'button',\n        value: value,\n      }),\n      id,\n      onPress: composeEventHandlers(onPress as any, (event: GestureResponderEvent) => {\n        if (!checked) {\n          onChange?.(value)\n        }\n\n        if (isFormControl) {\n          hasConsumerStoppedPropagationRef.current = event.isPropagationStopped()\n          // if radio is in a form, stop propagation from the button so that we only propagate\n          // one click event (from the input). We propagate changes from an input so that native\n          // form validation works and form events reflect radio updates.\n          if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation()\n        }\n      }),\n      ...(isWeb && {\n        onKeyDown: composeEventHandlers(onKeyDown as any, (event: KeyboardEvent) => {\n          // According to WAI ARIA, Checkboxes don't activate on enter keypress\n          if (event.key === 'Enter') event.preventDefault()\n        }) as (event: KeyboardEvent) => void,\n        onFocus: composeEventHandlers(onFocus, () => {\n          /**\n           * Our `RovingFocusGroup` will focus the radio when navigating with arrow keys\n           * and we need to \"check\" it in that case. We click it to \"check\" it (instead\n           * of updating `context.value`) so that the radio change event fires.\n           */\n          if (isArrowKeyPressedRef.current) {\n            ;(ref.current as HTMLButtonElement)?.click()\n          }\n        }),\n      }),\n    },\n    rovingFocusGroupAttrs: {\n      asChild: 'expect-style' as boolean | 'web' | 'except-style' | 'except-style-web',\n      focusable: !isDisabled,\n      active: checked,\n    },\n  }\n}\n\nexport type RadioGroupItemContextValue = {\n  checked: boolean\n  disabled?: boolean\n}\n\ntype UseRadioGroupItemIndicatorParams = {\n  radioGroupItemContext: React.Context<RadioGroupItemContextValue>\n  disabled?: boolean\n}\nexport function useRadioGroupItemIndicator(params: UseRadioGroupItemIndicatorParams) {\n  const { radioGroupItemContext, disabled, ...rest } = params\n  const { checked } = useContext(radioGroupItemContext)\n\n  return {\n    checked,\n    'data-state': getState(checked),\n    'data-disabled': disabled ? '' : undefined,\n    ...rest,\n  }\n}\n", "import React from 'react'\nimport { usePrevious } from '@tamagui/use-previous'\n\ninterface BubbleInputProps extends Omit<React.HTMLProps<HTMLInputElement>, 'checked'> {\n  checked: boolean\n  control: HTMLElement | null\n  bubbles: boolean\n  isHidden?: boolean\n  accentColor?: string\n}\n\nexport const BubbleInput = (props: BubbleInputProps) => {\n  const { checked, bubbles = true, control, isHidden, accentColor, ...inputProps } = props\n  const ref = React.useRef<HTMLInputElement>(null)\n  const prevChecked = usePrevious(checked)\n\n  // Bubble checked change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!\n    const inputProto = window.HTMLInputElement.prototype\n    const descriptor = Object.getOwnPropertyDescriptor(\n      inputProto,\n      'checked'\n    ) as PropertyDescriptor\n    const setChecked = descriptor.set\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', { bubbles })\n      setChecked.call(input, checked)\n      input.dispatchEvent(event)\n    }\n  }, [prevChecked, checked, bubbles])\n\n  return (\n    <input\n      type=\"radio\"\n      defaultChecked={checked}\n      {...inputProps}\n      tabIndex={-1}\n      ref={ref}\n      aria-hidden={isHidden}\n      style={{\n        ...(isHidden\n          ? {\n              // ...controlSize,\n              position: 'absolute',\n              pointerEvents: 'none',\n              opacity: 0,\n              margin: 0,\n            }\n          : {\n              appearance: 'auto',\n              accentColor,\n            }),\n\n        ...props.style,\n      }}\n    />\n  )\n}\n", "export function getState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked'\n}\n", "import { createCollection } from '@tamagui/collection'\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport { Stack, createStyledContext, useEvent } from '@tamagui/core'\nimport { composeEventHandlers, withStaticProperties } from '@tamagui/helpers'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport { useDirection } from '@tamagui/use-direction'\nimport * as React from 'react'\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus'\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true }\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ElementRef<typeof Stack>\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Stack>\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null\n  defaultCurrentTabStopId?: string\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void\n  onEntryFocus?: (event: Event) => void\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  ScopedProps<RovingFocusGroupImplProps>\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    ...groupProps\n  } = props\n  const ref = React.useRef<RovingFocusGroupImplElement>(null)\n  const composedRefs = useComposedRefs(forwardedRef, ref)\n  const direction = useDirection(dir)\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId ?? null,\n    onChange: onCurrentTabStopIdChange,\n  })\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false)\n  const handleEntryFocus = useEvent(onEntryFocus)\n  const getItems = useCollection(__scopeRovingFocusGroup || ROVING_FOCUS_GROUP_CONTEXT)\n  const isClickFocusRef = React.useRef(false)\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0)\n\n  React.useEffect(() => {\n    const node = (ref as unknown as React.RefObject<HTMLDivElement>).current\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus)\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus)\n    }\n  }, [handleEntryFocus])\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n      onFocusableItemAdd={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      )}\n      onFocusableItemRemove={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      )}\n    >\n      <Stack\n        tabIndex={isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        // @ts-ignore\n        style={[{ outline: 'none' }, props.style]}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current\n\n          if (\n            event.target === event.currentTarget &&\n            isKeyboardFocus &&\n            !isTabbingBackOut\n          ) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS)\n            event.currentTarget.dispatchEvent(entryFocusEvent)\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable)\n              const activeItem = items.find((item) => item.active)\n              const currentItem = items.find((item) => item.id === currentTabStopId)\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items\n              const candidateNodes = candidateItems.map((item) => item.ref.current!)\n              focusFirst(candidateNodes)\n            }\n          }\n\n          isClickFocusRef.current = false\n        })}\n        // @ts-ignore\n        onBlur={composeEventHandlers((props as any).onBlur, () =>\n          setIsTabbingBackOut(false)\n        )}\n      />\n    </RovingFocusProvider>\n  )\n})\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem'\n\ntype RovingFocusItemElement = React.ElementRef<typeof Stack>\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Stack>\ninterface RovingFocusItemProps extends PrimitiveSpanProps {\n  tabStopId?: string\n  focusable?: boolean\n  active?: boolean\n}\n\nconst RovingFocusGroupItem = React.forwardRef<\n  RovingFocusItemElement,\n  ScopedProps<RovingFocusItemProps>\n>((props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    focusable = true,\n    active = false,\n    tabStopId,\n    ...itemProps\n  } = props\n  const autoId = React.useId()\n  const id = tabStopId || autoId\n  const context = useRovingFocusContext(__scopeRovingFocusGroup)\n  const isCurrentTabStop = context.currentTabStopId === id\n  const getItems = useCollection(__scopeRovingFocusGroup || ROVING_FOCUS_GROUP_CONTEXT)\n\n  const { onFocusableItemAdd, onFocusableItemRemove } = context\n\n  React.useEffect(() => {\n    if (focusable) {\n      onFocusableItemAdd()\n      return () => onFocusableItemRemove()\n    }\n  }, [focusable, onFocusableItemAdd, onFocusableItemRemove])\n\n  return (\n    <Collection.ItemSlot\n      __scopeCollection={__scopeRovingFocusGroup || ROVING_FOCUS_GROUP_CONTEXT}\n      id={id}\n      focusable={focusable}\n      active={active}\n    >\n      <Stack\n        tabIndex={isCurrentTabStop ? 0 : -1}\n        data-orientation={context.orientation}\n        {...itemProps}\n        ref={forwardedRef}\n        onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n          // We prevent focusing non-focusable items on `mousedown`.\n          // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n          if (!focusable) event.preventDefault()\n          // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n          else context.onItemFocus(id)\n        })}\n        onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n        {...(isWeb && {\n          onKeyDown: composeEventHandlers(\n            (props as React.ComponentProps<'span'>).onKeyDown,\n            (event) => {\n              if (event.key === 'Tab' && event.shiftKey) {\n                context.onItemShiftTab()\n                return\n              }\n\n              if (event.target !== event.currentTarget) return\n\n              const focusIntent = getFocusIntent(event, context.orientation, context.dir)\n\n              if (focusIntent !== undefined) {\n                event.preventDefault()\n                const items = getItems().filter((item) => item.focusable)\n                let candidateNodes = items.map((item) => item.ref.current!)\n\n                if (focusIntent === 'last') candidateNodes.reverse()\n                else if (focusIntent === 'prev' || focusIntent === 'next') {\n                  if (focusIntent === 'prev') candidateNodes.reverse()\n                  const currentIndex = candidateNodes.indexOf(event.currentTarget)\n                  candidateNodes = context.loop\n                    ? wrapArray(candidateNodes, currentIndex + 1)\n                    : candidateNodes.slice(currentIndex + 1)\n                }\n\n                /**\n                 * Imperative focus during keydown is risky so we prevent React's batching updates\n                 * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n                 */\n                setTimeout(() => focusFirst(candidateNodes))\n              }\n            }\n          ),\n        })}\n      />\n    </Collection.ItemSlot>\n  )\n})\n\nRovingFocusGroupItem.displayName = ITEM_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup'\n\ntype ItemData = { id: string; focusable: boolean; active: boolean }\nconst [Collection, useCollection] = createCollection<HTMLSpanElement, ItemData>(\n  GROUP_NAME\n)\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: string }\n// const [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n//   GROUP_NAME,\n//   [createCollectionScope]\n// )\n\ntype Orientation = React.AriaAttributes['aria-orientation']\ntype Direction = 'ltr' | 'rtl'\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null\n  onItemFocus(tabStopId: string): void\n  onItemShiftTab(): void\n  onFocusableItemAdd(): void\n  onFocusableItemRemove(): void\n}\n\n// const [RovingFocusProvider, useRovingFocusContext] =\n//   createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME)\n\nconst { Provider: RovingFocusProvider, useStyledContext: useRovingFocusContext } =\n  createStyledContext<RovingContextValue>()\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst ROVING_FOCUS_GROUP_CONTEXT = 'RovingFocusGroupContext'\n\nconst RovingFocusGroup = withStaticProperties(\n  React.forwardRef<RovingFocusGroupElement, ScopedProps<RovingFocusGroupProps>>(\n    (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n      return (\n        <Collection.Provider\n          __scopeCollection={props.__scopeRovingFocusGroup || ROVING_FOCUS_GROUP_CONTEXT}\n        >\n          <Collection.Slot\n            __scopeCollection={\n              props.__scopeRovingFocusGroup || ROVING_FOCUS_GROUP_CONTEXT\n            }\n          >\n            <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n          </Collection.Slot>\n        </Collection.Provider>\n      )\n    }\n  ),\n  {\n    Item: RovingFocusGroupItem,\n  }\n)\n\nRovingFocusGroup.displayName = GROUP_NAME\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev',\n  ArrowUp: 'prev',\n  ArrowRight: 'next',\n  ArrowDown: 'next',\n  PageUp: 'first',\n  Home: 'first',\n  PageDown: 'last',\n  End: 'last',\n}\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next'\n\nfunction getFocusIntent(\n  event: React.KeyboardEvent,\n  orientation?: Orientation,\n  dir?: Direction\n) {\n  const key = getDirectionAwareKey(event.key, dir)\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key))\n    return undefined\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key))\n    return undefined\n  return MAP_KEY_TO_FOCUS_INTENT[key]\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return\n    candidate.focus()\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length])\n}\n\nexport { RovingFocusGroup }\n\nexport type { RovingFocusGroupProps, RovingFocusItemProps }\n", "import type { SizeTokens } from '@tamagui/core'\nimport { createStyledContext } from '@tamagui/core'\n\nexport const RadioGroupStyledContext = createStyledContext({\n  size: '$true' as SizeTokens,\n  scaleIcon: 1,\n})\n", "import {\n  RadioGroupFrame,\n  RadioGroupIndicatorFrame,\n  RadioGroupItemFrame,\n} from './RadioGroup'\nimport { createRadioGroup } from './createRadioGroup'\n\nexport * from './createRadioGroup'\nexport * from './RadioGroup'\nexport * from './RadioGroupStyledContext'\n\nexport const RadioGroup = createRadioGroup({\n  Frame: RadioGroupFrame,\n  Indicator: RadioGroupIndicatorFrame,\n  Item: RadioGroupItemFrame,\n})\n", "import { isWeb } from '@tamagui/constants'\nimport { Stack, styled } from '@tamagui/core'\n\nexport const Separator = styled(Stack, {\n  name: 'Separator',\n  borderColor: '$borderColor',\n  flexShrink: 0,\n  borderWidth: 0,\n  flex: 1,\n  height: 0,\n  maxHeight: 0,\n  borderBottomWidth: 1,\n  y: -0.5,\n\n  variants: {\n    vertical: {\n      true: {\n        y: 0,\n        x: -0.5,\n\n        height: isWeb ? 'initial' : 'auto',\n        // maxHeight auto WILL BE passed to style attribute, but for some reason not used?\n        // almost seems like a react or browser bug, but for now `initial` works\n        // also, it doesn't happen for `height`, but for consistency using the same values\n        maxHeight: isWeb ? 'initial' : 'auto',\n        width: 0,\n        maxWidth: 0,\n        borderBottomWidth: 0,\n        borderRightWidth: 1,\n      },\n    },\n  } as const,\n})\n", "import * as React from 'react'\n\ntype DebounceSettings = {\n  leading?: boolean\n}\n\n// TODO doesn't return value of the function called :/\n\nexport function debounce<A extends Function>(\n  func: A,\n  wait?: number,\n  leading?: boolean\n): A & {\n  cancel: () => void\n} {\n  let timeout: any\n  let isCancelled = false\n\n  function debounced(this: any) {\n    isCancelled = false\n    const args = arguments\n    if (leading && !timeout) {\n      func.apply(this, args)\n    }\n    clearTimeout(timeout)\n    timeout = setTimeout(() => {\n      timeout = null\n      if (!(leading || isCancelled)) {\n        func.apply(this, args)\n      }\n      isCancelled = false\n    }, wait)\n  }\n\n  debounced.cancel = () => {\n    isCancelled = true\n  }\n\n  return debounced as any\n}\n\nconst defaultOpts = { leading: false }\n\nexport function useDebounce<\n  A extends (...args: any) => any | undefined | null,\n  DebouncedFn extends A & {\n    cancel: () => void\n  },\n>(\n  fn: A,\n  wait: number,\n  options: DebounceSettings = defaultOpts,\n  mountArgs: any[] = [fn]\n): DebouncedFn {\n  const dbEffect = React.useRef<DebouncedFn | null>(null)\n\n  React.useEffect(() => {\n    return () => {\n      dbEffect.current?.cancel()\n    }\n  }, [])\n\n  return React.useMemo(() => {\n    dbEffect.current = debounce(fn, wait, options.leading) as unknown as DebouncedFn\n    return dbEffect.current\n  }, [options.leading, ...mountArgs])\n}\n\n/**\n * Returns a value once it stops changing after \"amt\" time.\n * Note: you may need to memo or this will keep re-rendering\n */\nexport function useDebounceValue<A>(val: A, amt = 0): A {\n  const [state, setState] = React.useState(val)\n\n  React.useEffect(() => {\n    const tm = setTimeout(() => {\n      setState((prev) => {\n        if (prev === val) return prev\n        return val\n      })\n    }, amt)\n\n    return () => {\n      clearTimeout(tm)\n    }\n  }, [val])\n\n  return state\n}\n", "import { Adapt, AdaptParent, useAdaptIsActive } from '@tamagui/adapt'\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb, useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport type { FontSizeTokens, GetProps, TamaguiElement } from '@tamagui/core'\nimport { getVariableValue, styled, useEvent, useGet } from '@tamagui/core'\nimport { registerFocusable } from '@tamagui/focusable'\nimport { getSpace } from '@tamagui/get-token'\nimport { withStaticProperties } from '@tamagui/helpers'\nimport type { ListItemProps } from '@tamagui/list-item'\nimport { ListItem } from '@tamagui/list-item'\nimport { Separator } from '@tamagui/separator'\nimport { Sheet, SheetController } from '@tamagui/sheet'\nimport { ThemeableStack, XStack, YStack } from '@tamagui/stacks'\nimport { Paragraph, SizableText } from '@tamagui/text'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport { useDebounce } from '@tamagui/use-debounce'\nimport * as React from 'react'\nimport {\n  SelectItemParentProvider,\n  SelectProvider,\n  createSelectContext,\n  useSelectContext,\n  useSelectItemParentContext,\n} from './context'\nimport { SelectContent } from './SelectContent'\nimport { SelectInlineImpl } from './SelectImpl'\nimport { SelectItem, useSelectItemContext } from './SelectItem'\nimport { ITEM_TEXT_NAME, SelectItemText } from './SelectItemText'\nimport { SelectScrollDownButton, SelectScrollUpButton } from './SelectScrollButton'\nimport { SelectTrigger } from './SelectTrigger'\nimport { SelectViewport } from './SelectViewport'\nimport type { SelectImplProps, SelectProps, SelectScopedProps } from './types'\nimport { useShowSelectSheet } from './useSelectBreakpointActive'\n\n/* -------------------------------------------------------------------------------------------------\n * SelectValue\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALUE_NAME = 'SelectValue'\n\nconst SelectValueFrame = styled(SizableText, {\n  name: VALUE_NAME,\n  userSelect: 'none',\n})\n\nexport interface SelectValueExtraProps {\n  placeholder?: React.ReactNode\n}\n\ntype SelectValueProps = GetProps<typeof SelectValueFrame> & SelectValueExtraProps\n\nconst SelectValue = SelectValueFrame.styleable<SelectValueExtraProps>(\n  function SelectValue(\n    {\n      __scopeSelect,\n      children: childrenProp,\n      placeholder,\n      ...props\n    }: SelectScopedProps<SelectValueProps>,\n    forwardedRef\n  ) {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const context = useSelectContext(VALUE_NAME, __scopeSelect)\n    const itemParentContext = useSelectItemParentContext(VALUE_NAME, __scopeSelect)\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange)\n    const children = childrenProp ?? context.selectedItem\n    const isEmptyValue = context.value == null || context.value === ''\n    const selectValueChildren = isEmptyValue ? (placeholder ?? children) : children\n\n    return (\n      <SelectValueFrame\n        {...(!props.unstyled && {\n          size: itemParentContext.size as any,\n          ellipse: true,\n          // we don't want events from the portalled `SelectValue` children to bubble\n          // through the item they came from\n          pointerEvents: 'none',\n        })}\n        ref={composedRefs}\n        {...props}\n      >\n        {unwrapSelectItem(selectValueChildren)}\n      </SelectValueFrame>\n    )\n  }\n)\n\nfunction unwrapSelectItem(selectValueChildren: any) {\n  return React.Children.map(selectValueChildren, (child) => {\n    if (child) {\n      if (child.type?.staticConfig?.componentName === ITEM_TEXT_NAME) {\n        return child.props.children\n      }\n      if (child.props?.children) {\n        return unwrapSelectItem(child.props.children)\n      }\n    }\n    return child\n  })\n}\n\n/* -------------------------------------------------------------------------------------------------\n * SelectIcon\n * -----------------------------------------------------------------------------------------------*/\n\nexport const SelectIcon = styled(XStack, {\n  name: 'SelectIcon',\n  // @ts-ignore\n  'aria-hidden': true,\n  children: <Paragraph>▼</Paragraph>,\n})\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'SelectItemIndicator'\n\nconst SelectItemIndicatorFrame = styled(XStack, {\n  name: ITEM_TEXT_NAME,\n})\n\ntype SelectItemIndicatorProps = GetProps<typeof SelectItemIndicatorFrame>\n\nconst SelectItemIndicator = React.forwardRef<TamaguiElement, SelectItemIndicatorProps>(\n  (props: SelectScopedProps<SelectItemIndicatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props\n    const context = useSelectItemParentContext(ITEM_INDICATOR_NAME, __scopeSelect)\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect)\n\n    if (context.shouldRenderWebNative) {\n      return null\n    }\n\n    return itemContext.isSelected ? (\n      <SelectItemIndicatorFrame aria-hidden {...itemIndicatorProps} ref={forwardedRef} />\n    ) : null\n  }\n)\n\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * SelectGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'SelectGroup'\n\ntype SelectGroupContextValue = { id: string }\n\nconst [SelectGroupContextProvider, useSelectGroupContext] =\n  createSelectContext<SelectGroupContextValue>(GROUP_NAME)\n\nexport const SelectGroupFrame = styled(YStack, {\n  name: GROUP_NAME,\n  width: '100%',\n})\n\nconst NativeSelectTextFrame = styled(SizableText, {\n  tag: 'select',\n  backgroundColor: '$background',\n  borderColor: '$borderColor',\n  hoverStyle: {\n    backgroundColor: '$backgroundHover',\n  },\n})\n\nconst NativeSelectFrame = styled(ThemeableStack, {\n  name: 'NativeSelect',\n\n  bordered: true,\n  userSelect: 'none',\n  outlineWidth: 0,\n  paddingRight: 10,\n\n  variants: {\n    size: {\n      '...size': (val, extras) => {\n        const { tokens } = extras\n        const paddingHorizontal = getVariableValue(tokens.space[val])\n\n        return {\n          borderRadius: tokens.radius[val] ?? val,\n          minHeight: tokens.size[val],\n          paddingRight: paddingHorizontal + 20,\n          paddingLeft: paddingHorizontal,\n          paddingVertical: getSpace(val, {\n            shift: -3,\n          }),\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    size: '$2',\n  },\n})\n\ntype SelectGroupProps = GetProps<typeof SelectGroupFrame>\n\nconst SelectGroup = React.forwardRef<TamaguiElement, SelectGroupProps>(\n  (props: SelectScopedProps<SelectGroupProps>, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props\n    const groupId = React.useId()\n\n    const context = useSelectContext(GROUP_NAME, __scopeSelect)\n    const itemParentContext = useSelectItemParentContext(GROUP_NAME, __scopeSelect)\n    const size = itemParentContext.size ?? '$true'\n    const nativeSelectRef = React.useRef<HTMLSelectElement>(null)\n\n    const content = (() => {\n      if (itemParentContext.shouldRenderWebNative) {\n        return (\n          <NativeSelectFrame\n            asChild\n            size={size}\n            // @ts-expect-error until we support typing based on tag\n            value={context.value}\n            id={itemParentContext.id}\n          >\n            <NativeSelectTextFrame\n              // @ts-ignore it's ok since tag=\"select\"\n              onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n                itemParentContext.onChange(event.currentTarget.value)\n              }}\n              size={size as FontSizeTokens}\n              ref={nativeSelectRef}\n              style={{\n                color: 'var(--color)',\n                // @ts-ignore\n                appearance: 'none',\n              }}\n            >\n              {props.children}\n            </NativeSelectTextFrame>\n          </NativeSelectFrame>\n        )\n      }\n      return (\n        <SelectGroupFrame\n          // @ts-ignore\n          role=\"group\"\n          aria-labelledby={groupId}\n          {...groupProps}\n          ref={forwardedRef}\n        />\n      )\n    })()\n\n    return (\n      <SelectGroupContextProvider scope={__scopeSelect} id={groupId || ''}>\n        {content}\n      </SelectGroupContextProvider>\n    )\n  }\n)\n\nSelectGroup.displayName = GROUP_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * SelectLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'SelectLabel'\n\nexport type SelectLabelProps = ListItemProps\n\nconst SelectLabel = React.forwardRef<TamaguiElement, SelectLabelProps>(\n  (props: SelectScopedProps<SelectLabelProps>, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props\n    const context = useSelectItemParentContext(LABEL_NAME, __scopeSelect)\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect)\n\n    if (context.shouldRenderWebNative) {\n      return null\n    }\n\n    return (\n      <ListItem\n        tag=\"div\"\n        componentName={LABEL_NAME}\n        fontWeight=\"800\"\n        id={groupContext.id}\n        size={context.size}\n        {...labelProps}\n        ref={forwardedRef}\n      />\n    )\n  }\n)\n\nSelectLabel.displayName = LABEL_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * SelectSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nexport const SelectSeparator = styled(Separator, {\n  name: 'SelectSeparator',\n})\n\nconst SelectSheetController = (\n  props: SelectScopedProps<{}> & {\n    children: React.ReactNode\n    onOpenChange: React.Dispatch<React.SetStateAction<boolean>>\n  }\n) => {\n  const context = useSelectContext('SelectSheetController', props.__scopeSelect)\n  const showSheet = useShowSelectSheet(context)\n  const isAdapted = useAdaptIsActive()\n  const getShowSheet = useGet(showSheet)\n\n  return (\n    <SheetController\n      onOpenChange={(val) => {\n        if (getShowSheet()) {\n          props.onOpenChange(val)\n        }\n      }}\n      open={context.open}\n      hidden={isAdapted === false}\n    >\n      {props.children}\n    </SheetController>\n  )\n}\n\nconst SelectSheetImpl = (props: SelectImplProps) => {\n  return <>{props.children}</>\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Select\n * -----------------------------------------------------------------------------------------------*/\n\nexport const Select = withStaticProperties(\n  function Select(props: SelectScopedProps<SelectProps>) {\n    const internalId = React.useId()\n    const scopeKey = props.__scopeSelect\n      ? (Object.keys(props.__scopeSelect)[0] ?? internalId)\n      : internalId\n\n    return (\n      <AdaptParent scope={`${scopeKey}SheetContents`} portal>\n        <SelectInner scopeKey={scopeKey} {...props} />\n      </AdaptParent>\n    )\n  },\n  {\n    Adapt,\n    Content: SelectContent,\n    Group: SelectGroup,\n    Icon: SelectIcon,\n    Item: SelectItem,\n    ItemIndicator: SelectItemIndicator,\n    ItemText: SelectItemText,\n    Label: SelectLabel,\n    ScrollDownButton: SelectScrollDownButton,\n    ScrollUpButton: SelectScrollUpButton,\n    Trigger: SelectTrigger,\n    Value: SelectValue,\n    Viewport: SelectViewport,\n    Sheet: Sheet.Controlled,\n  }\n)\n\nfunction useEmitter<A>() {\n  const listeners = React.useRef<Set<Function>>()\n  if (!listeners.current) {\n    listeners.current = new Set()\n  }\n  const emit = (value: A) => {\n    listeners.current!.forEach((l) => l(value))\n  }\n  const subscribe = React.useCallback((listener: (val: A) => void) => {\n    listeners.current!.add(listener)\n    return () => {\n      listeners.current!.delete(listener)\n    }\n  }, [])\n  return [emit, subscribe] as const\n}\n\nfunction SelectInner(props: SelectScopedProps<SelectProps> & { scopeKey: string }) {\n  const {\n    __scopeSelect,\n    native,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    disablePreventBodyScroll,\n    size: sizeProp = '$true',\n    onActiveChange,\n    dir,\n    id,\n  } = props\n\n  const isAdapted = useAdaptIsActive()\n  const SelectImpl = isAdapted || !isWeb ? SelectSheetImpl : SelectInlineImpl\n  const forceUpdate = React.useReducer(() => ({}), {})[1]\n  const [selectedItem, setSelectedItem] = React.useState<React.ReactNode>(null)\n\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen || false,\n    onChange: onOpenChange,\n  })\n\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue || '',\n    onChange: onValueChange,\n    transition: true,\n  })\n\n  React.useEffect(() => {\n    if (open) {\n      emitValue(value)\n    }\n  }, [open])\n\n  React.useEffect(() => {\n    emitValue(value)\n  }, [value])\n\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    React.useEffect(() => {\n      if (!props.id) return\n\n      return registerFocusable(props.id, {\n        focusAndSelect: () => {\n          setOpen?.((value) => !value)\n        },\n        focus: () => {},\n      })\n    }, [props.id])\n  }\n\n  const [activeIndex, setActiveIndex] = React.useState<number | null>(0)\n\n  const [emitValue, valueSubscribe] = useEmitter<any>()\n  const [emitActiveIndex, activeIndexSubscribe] = useEmitter<number>()\n\n  const selectedIndexRef = React.useRef<number | null>(null)\n  const activeIndexRef = React.useRef<number | null>(null)\n  const listContentRef = React.useRef<string[]>([])\n  const [selectedIndex, setSelectedIndex] = React.useState(0)\n  const [valueNode, setValueNode] = React.useState<HTMLElement | null>(null)\n\n  useIsomorphicLayoutEffect(() => {\n    selectedIndexRef.current = selectedIndex\n    activeIndexRef.current = activeIndex\n  })\n\n  const shouldRenderWebNative =\n    isWeb &&\n    (native === true ||\n      native === 'web' ||\n      (Array.isArray(native) && native.includes('web')))\n\n  // TODO its calling this a bunch if you move mouse around on select items fast\n  // using a debounce for now but need to fix root issue\n  const setActiveIndexDebounced = useDebounce(\n    (index: number | null) => {\n      setActiveIndex((prev) => {\n        if (prev !== index) {\n          if (typeof index === 'number') {\n            emitActiveIndex(index)\n          }\n          return index\n        }\n        return prev\n      })\n    },\n    1,\n    {},\n    []\n  )\n\n  return (\n    <SelectItemParentProvider\n      scope={__scopeSelect}\n      initialValue={React.useMemo(() => value, [open])}\n      size={sizeProp}\n      activeIndexSubscribe={activeIndexSubscribe}\n      valueSubscribe={valueSubscribe}\n      setOpen={setOpen}\n      id={id}\n      onChange={React.useCallback((val) => {\n        setValue(val)\n        emitValue(val)\n      }, [])}\n      onActiveChange={useEvent((...args) => {\n        onActiveChange?.(...args)\n      })}\n      setSelectedIndex={setSelectedIndex}\n      setValueAtIndex={React.useCallback((index, value) => {\n        listContentRef.current[index] = value\n      }, [])}\n      shouldRenderWebNative={shouldRenderWebNative}\n    >\n      <SelectProvider\n        scope={__scopeSelect}\n        disablePreventBodyScroll={disablePreventBodyScroll}\n        dir={dir}\n        blockSelection={false}\n        fallback={false}\n        selectedItem={selectedItem}\n        setSelectedItem={setSelectedItem}\n        forceUpdate={forceUpdate}\n        valueNode={valueNode}\n        onValueNodeChange={setValueNode}\n        scopeKey={props.scopeKey}\n        activeIndex={activeIndex}\n        selectedIndex={selectedIndex}\n        setActiveIndex={setActiveIndexDebounced}\n        value={value}\n        open={open}\n        native={native}\n      >\n        <SelectSheetController onOpenChange={setOpen} __scopeSelect={__scopeSelect}>\n          {shouldRenderWebNative ? (\n            children\n          ) : (\n            <SelectImpl\n              activeIndexRef={activeIndexRef}\n              listContentRef={listContentRef}\n              selectedIndexRef={selectedIndexRef}\n              {...props}\n              open={open}\n              value={value}\n            >\n              {children}\n            </SelectImpl>\n          )}\n        </SelectSheetController>\n      </SelectProvider>\n    </SelectItemParentProvider>\n  )\n}\n", "export const SELECT_NAME = 'Select'\nexport const WINDOW_PADDING = 8\nexport const SCROLL_ARROW_VELOCITY = 8\nexport const SCROLL_ARROW_THRESHOLD = 8\nexport const MIN_HEIGHT = 80\nexport const FALLBACK_THRESHOLD = 16\nexport const VIEWPORT_NAME = 'SelectViewport'\n", "import { createContextScope } from '@tamagui/create-context'\n\nimport { SELECT_NAME } from './constants'\nimport type {\n  SelectScopedProps,\n  SelectContextValue,\n  SelectItemParentContextValue,\n} from './types'\n\nexport const [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME)\n\nexport const [SelectProvider, useSelectContext] =\n  createSelectContext<SelectContextValue>(SELECT_NAME)\n\n// these values shouldn't change as often for performance to avoid re-rendering every item\n\nexport const [createSelectItemParentContext, createSelectItemParentScope] =\n  createContextScope(SELECT_NAME)\n\nexport const [SelectItemParentProvider, useSelectItemParentContext] =\n  createSelectContext<SelectItemParentContextValue>(SELECT_NAME)\n\nexport const ForwardSelectContext = ({\n  __scopeSelect,\n  context,\n  itemContext,\n  children,\n}: SelectScopedProps<{\n  children?: any\n  context: SelectContextValue\n  itemContext: SelectItemParentContextValue\n}>) => {\n  return (\n    <SelectProvider isInSheet scope={__scopeSelect} {...context}>\n      <SelectItemParentProvider scope={__scopeSelect} {...itemContext}>\n        {children}\n      </SelectItemParentProvider>\n    </SelectProvider>\n  )\n}\n", "import React from 'react'\nimport { FloatingOverlay, FloatingPortal } from '@floating-ui/react'\nimport { Theme, useIsTouchDevice, useThemeName } from '@tamagui/core'\nimport type { FocusScopeProps } from '@tamagui/focus-scope'\nimport { FocusScope } from '@tamagui/focus-scope'\n\nimport { useSelectContext, useSelectItemParentContext } from './context'\nimport type { SelectContentProps } from './types'\nimport { useShowSelectSheet } from './useSelectBreakpointActive'\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'SelectContent'\n\nexport const SelectContent = ({\n  children,\n  __scopeSelect,\n  zIndex = 1000,\n  ...focusScopeProps\n}: SelectContentProps & FocusScopeProps) => {\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect)\n  const itemParentContext = useSelectItemParentContext(CONTENT_NAME, __scopeSelect)\n  const themeName = useThemeName()\n  const showSheet = useShowSelectSheet(context)\n\n  const contents = (\n    <Theme forceClassName name={themeName}>\n      {children}\n    </Theme>\n  )\n\n  const touch = useIsTouchDevice()\n\n  const overlayStyle = React.useMemo(() => {\n    return { zIndex, pointerEvents: context.open ? 'auto' : 'none' } as const\n  }, [context.open])\n\n  if (itemParentContext.shouldRenderWebNative) {\n    return <>{children}</>\n  }\n\n  if (showSheet) {\n    if (!context.open) {\n      return null\n    }\n    return <>{contents}</>\n  }\n\n  return (\n    <FloatingPortal>\n      <FloatingOverlay\n        style={overlayStyle}\n        lockScroll={!context.disablePreventBodyScroll && !!context.open && !touch}\n      >\n        <FocusScope loop enabled={!!context.open} trapped {...focusScopeProps}>\n          {contents}\n        </FocusScope>\n      </FloatingOverlay>\n    </FloatingPortal>\n  )\n}\n", "import { useAdaptIsActive } from '@tamagui/adapt'\nimport type { SelectContextValue } from './types'\n\nexport const useShowSelectSheet = (context: SelectContextValue) => {\n  const breakpointActive = useAdaptIsActive()\n  return context.open === false ? false : breakpointActive\n}\n", "import type { SideObject } from '@floating-ui/react'\nimport {\n  autoUpdate,\n  flip,\n  inner,\n  offset,\n  shift,\n  size,\n  useClick,\n  useDismiss,\n  useFloating,\n  useInnerOffset,\n  useInteractions,\n  useListNavigation,\n  useRole,\n  useTypeahead,\n} from '@floating-ui/react'\nimport { isClient, isWeb, useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport { useEvent, useIsTouchDevice } from '@tamagui/core'\nimport * as React from 'react'\nimport { flushSync } from 'react-dom'\n\nimport { SCROLL_ARROW_THRESHOLD, WINDOW_PADDING } from './constants'\nimport {\n  SelectItemParentProvider,\n  SelectProvider,\n  useSelectContext,\n  useSelectItemParentContext,\n} from './context'\nimport type { SelectImplProps } from './types'\n\n// TODO use id for focusing from label\nexport const SelectInlineImpl = (props: SelectImplProps) => {\n  const {\n    __scopeSelect,\n    children,\n    open = false,\n    selectedIndexRef,\n    listContentRef,\n  } = props\n\n  const selectContext = useSelectContext('SelectSheetImpl', __scopeSelect)\n  const selectItemParentContext = useSelectItemParentContext(\n    'SelectSheetImpl',\n    __scopeSelect\n  )\n  const { setActiveIndex, selectedIndex, activeIndex, forceUpdate } = selectContext\n\n  const { setOpen, setSelectedIndex } = selectItemParentContext\n\n  const [scrollTop, setScrollTop] = React.useState(0)\n  const touch = useIsTouchDevice()\n\n  const listItemsRef = React.useRef<Array<HTMLElement | null>>([])\n  const overflowRef = React.useRef<null | SideObject>(null)\n  const upArrowRef = React.useRef<HTMLDivElement | null>(null)\n  const downArrowRef = React.useRef<HTMLDivElement | null>(null)\n  const allowSelectRef = React.useRef(false)\n  const allowMouseUpRef = React.useRef(true)\n  const selectTimeoutRef = React.useRef<any>()\n  const state = React.useRef({\n    isMouseOutside: false,\n    isTyping: false,\n  })\n\n  const [controlledScrolling, setControlledScrolling] = React.useState(false)\n  const [fallback, setFallback] = React.useState(false)\n  const [innerOffset, setInnerOffset] = React.useState(0)\n  const [blockSelection, setBlockSelection] = React.useState(false)\n  const floatingStyle = React.useRef({})\n\n  // Wait for scroll position to settle before showing arrows to prevent\n  // interference with pointer events.\n  useIsomorphicLayoutEffect(() => {\n    queueMicrotask(() => {\n      if (!open) {\n        setScrollTop(0)\n        setFallback(false)\n        setActiveIndex(null)\n        setControlledScrolling(false)\n      }\n    })\n  }, [open, setActiveIndex])\n\n  // close when mouseup outside select\n  if (isWeb && isClient) {\n    useIsomorphicLayoutEffect(() => {\n      if (!open) return\n      const mouseUp = (e: MouseEvent) => {\n        if (state.current.isMouseOutside) {\n          setOpen(false)\n        }\n      }\n      document.addEventListener('mouseup', mouseUp)\n      return () => {\n        document.removeEventListener('mouseup', mouseUp)\n      }\n    }, [open])\n  }\n\n  const { x, y, strategy, context, refs, update } = useFloating({\n    open,\n    onOpenChange: setOpen,\n    placement: 'bottom-start',\n    whileElementsMounted: autoUpdate,\n    // biome-ignore lint/correctness/noConstantCondition: <explanation>\n    middleware: false\n      ? // this is the logic from floating-ui\n        // but i find it causes issues (open, drag select, close, then re-open its not positioned \"over\")\n        // https://github.com/floating-ui/floating-ui/blob/master/packages/react/test/visual/components/MacSelect.tsx\n        [\n          offset(5),\n          touch\n            ? shift({ crossAxis: true, padding: WINDOW_PADDING })\n            : flip({ padding: WINDOW_PADDING }),\n          size({\n            apply({ availableHeight, rects }) {\n              Object.assign(floatingStyle.current, {\n                maxHeight: `${availableHeight}px`,\n                minWidth: `${rects.reference.width}px`,\n              })\n              if (refs.floating.current) {\n                Object.assign(refs.floating.current.style, floatingStyle.current)\n              }\n            },\n            padding: 10,\n          }),\n        ]\n      : [\n          size({\n            apply({\n              rects: {\n                reference: { width },\n              },\n            }) {\n              Object.assign(floatingStyle.current, {\n                minWidth: width + 8,\n              })\n              if (refs.floating.current) {\n                Object.assign(refs.floating.current.style, floatingStyle.current)\n              }\n            },\n          }),\n          inner({\n            listRef: listItemsRef,\n            overflowRef,\n            index: selectedIndex,\n            offset: innerOffset,\n            onFallbackChange: setFallback,\n            padding: 10,\n            minItemsVisible: touch ? 10 : 4,\n            referenceOverflowThreshold: 20,\n          }),\n          offset({ crossAxis: -5 }),\n        ],\n  })\n\n  const floatingRef = refs.floating\n\n  const showUpArrow = open && scrollTop > SCROLL_ARROW_THRESHOLD\n  const showDownArrow =\n    open &&\n    floatingRef.current &&\n    scrollTop <\n      floatingRef.current.scrollHeight -\n        floatingRef.current.clientHeight -\n        SCROLL_ARROW_THRESHOLD\n\n  const isScrollable = showDownArrow || showUpArrow\n\n  useIsomorphicLayoutEffect(() => {\n    window.addEventListener('resize', update)\n    if (open) {\n      update()\n    }\n    return () => window.removeEventListener('resize', update)\n  }, [update, open])\n\n  const onMatch = useEvent((index: number) => {\n    const fn = open ? setActiveIndex : setSelectedIndex\n    return fn(index)\n  })\n\n  const interactionsProps = [\n    useClick(context, { event: 'mousedown', keyboardHandlers: false }),\n    useDismiss(context, { outsidePress: false }),\n    useRole(context, { role: 'listbox' }),\n    useInnerOffset(context, {\n      enabled: !fallback && isScrollable,\n      onChange: setInnerOffset,\n      overflowRef,\n      scrollRef: refs.floating,\n    }),\n    useListNavigation(context, {\n      listRef: listItemsRef,\n      activeIndex: activeIndex || 0,\n      selectedIndex,\n      onNavigate: setActiveIndex,\n      scrollItemIntoView: false,\n    }),\n    useTypeahead(context, {\n      listRef: listContentRef,\n      onMatch,\n      selectedIndex,\n      activeIndex,\n      onTypingChange: (e) => {\n        state.current.isTyping = e\n      },\n    }),\n  ]\n\n  const interactions = useInteractions(\n    // unfortunately these memos will just always break due to floating-ui context always changing :/\n    React.useMemo(() => {\n      return interactionsProps\n    }, interactionsProps)\n  )\n\n  const interactionsContext = React.useMemo(() => {\n    return {\n      ...interactions,\n      getReferenceProps() {\n        return interactions.getReferenceProps({\n          ref: refs.reference as any,\n          className: 'SelectTrigger',\n          onKeyDown(event) {\n            if (\n              event.key === 'Enter' ||\n              event.code === 'Space' ||\n              (event.key === ' ' && !state.current.isTyping)\n            ) {\n              event.preventDefault()\n              setOpen(true)\n            }\n          },\n        })\n      },\n      getFloatingProps(props) {\n        return interactions.getFloatingProps({\n          ref: refs.floating,\n          className: 'Select',\n          ...props,\n          style: {\n            position: strategy,\n            top: y ?? '',\n            left: x ?? '',\n            outline: 0,\n            scrollbarWidth: 'none',\n            ...floatingStyle.current,\n            ...props?.style,\n          },\n          onPointerEnter() {\n            setControlledScrolling(false)\n            state.current.isMouseOutside = false\n          },\n          onPointerLeave() {\n            state.current.isMouseOutside = true\n          },\n          onPointerMove() {\n            state.current.isMouseOutside = false\n            setControlledScrolling(false)\n          },\n          onKeyDown() {\n            setControlledScrolling(true)\n          },\n          onContextMenu(e) {\n            e.preventDefault()\n          },\n          onScroll(event) {\n            flushSync(() => {\n              setScrollTop(event.currentTarget.scrollTop)\n            })\n          },\n        })\n      },\n    }\n  }, [refs.reference.current, x, y, refs.floating.current, interactions])\n\n  // effects\n\n  useIsomorphicLayoutEffect(() => {\n    if (open) {\n      selectTimeoutRef.current = setTimeout(() => {\n        allowSelectRef.current = true\n      }, 300)\n\n      return () => {\n        clearTimeout(selectTimeoutRef.current)\n      }\n    }\n    allowSelectRef.current = false\n    allowMouseUpRef.current = true\n    setInnerOffset(0)\n    setFallback(false)\n    setBlockSelection(false)\n  }, [open])\n\n  useIsomorphicLayoutEffect(() => {\n    if (!open && state.current.isMouseOutside) {\n      state.current.isMouseOutside = false\n    }\n  }, [open])\n\n  // Replacement for `useDismiss` as the arrows are outside of the floating\n  // element DOM tree.\n  useIsomorphicLayoutEffect(() => {\n    function onPointerDown(e: PointerEvent) {\n      const target = e.target as Node\n      if (\n        !(\n          refs.floating.current?.contains(target) ||\n          upArrowRef.current?.contains(target) ||\n          downArrowRef.current?.contains(target)\n        )\n      ) {\n        setOpen(false)\n        setControlledScrolling(false)\n      }\n    }\n\n    if (open) {\n      document.addEventListener('pointerdown', onPointerDown)\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown)\n      }\n    }\n  }, [open, refs, setOpen])\n\n  // Scroll the `activeIndex` item into view only in \"controlledScrolling\"\n  // (keyboard nav) mode.\n  React.useEffect(() => {\n    if (open && controlledScrolling) {\n      if (activeIndex != null) {\n        listItemsRef.current[activeIndex]?.scrollIntoView({ block: 'nearest' })\n      }\n    }\n\n    setScrollTop(refs.floating.current?.scrollTop ?? 0)\n  }, [open, refs, controlledScrolling, activeIndex])\n\n  // Scroll the `selectedIndex` into view upon opening the floating element.\n  React.useEffect(() => {\n    if (open && fallback) {\n      if (selectedIndex != null) {\n        listItemsRef.current[selectedIndex]?.scrollIntoView({ block: 'nearest' })\n      }\n    }\n  }, [open, fallback, selectedIndex])\n\n  // Unset the height limiting for fallback mode. This gets executed prior to\n  // the positioning call.\n  useIsomorphicLayoutEffect(() => {\n    if (refs.floating.current && fallback) {\n      refs.floating.current.style.maxHeight = ''\n    }\n  }, [refs, fallback])\n\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  // const isFormControl = trigger ? Boolean(trigger.closest('form')) : true\n  // const [bubbleSelect, setBubbleSelect] = React.useState<HTMLSelectElement | null>(null)\n  // const triggerPointerDownPosRef = React.useRef<{ x: number; y: number } | null>(null)\n\n  return (\n    <SelectProvider\n      scope={__scopeSelect}\n      {...(selectContext as Required<typeof selectContext>)}\n      setScrollTop={setScrollTop}\n      setInnerOffset={setInnerOffset}\n      fallback={fallback}\n      floatingContext={context}\n      activeIndex={activeIndex}\n      canScrollDown={!!showDownArrow}\n      canScrollUp={!!showUpArrow}\n      controlledScrolling={controlledScrolling}\n      blockSelection={blockSelection}\n      upArrowRef={upArrowRef}\n      downArrowRef={downArrowRef}\n      update={update}\n    >\n      <SelectItemParentProvider\n        scope={__scopeSelect}\n        {...selectItemParentContext}\n        allowMouseUpRef={allowMouseUpRef}\n        allowSelectRef={allowSelectRef}\n        dataRef={context.dataRef}\n        interactions={interactionsContext}\n        listRef={listItemsRef}\n        selectTimeoutRef={selectTimeoutRef}\n      >\n        {children}\n      </SelectItemParentProvider>\n      {/* {isFormControl ? (\n            <BubbleSelect\n              ref={setBubbleSelect}\n              aria-hidden\n              tabIndex={-1}\n              name={name}\n              autoComplete={autoComplete}\n              value={value}\n              // enable form autofill\n              onChange={(event) => setValue(event.target.value)}\n            />\n          ) : null} */}\n    </SelectProvider>\n  )\n}\n", "import { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb, useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport type { ListItemProps } from '@tamagui/list-item'\nimport { ListItemFrame, useListItem } from '@tamagui/list-item'\nimport * as React from 'react'\n\nimport { createSelectContext, useSelectItemParentContext } from './context'\nimport type { SelectScopedProps } from './types'\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'SelectItem'\n\ntype SelectItemContextValue = {\n  value: string\n  textId: string\n  isSelected: boolean\n}\n\nexport const [SelectItemContextProvider, useSelectItemContext] =\n  createSelectContext<SelectItemContextValue>(ITEM_NAME)\n\nexport interface SelectItemExtraProps {\n  value: string\n  index: number\n  disabled?: boolean\n  textValue?: string\n}\n\nexport interface SelectItemProps\n  extends Omit<ListItemProps, keyof SelectItemExtraProps>,\n    SelectItemExtraProps {}\n\nexport const SelectItem = ListItemFrame.styleable<SelectItemExtraProps>(\n  function SelectItem(props: SelectScopedProps<SelectItemProps>, forwardedRef) {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      index,\n      ...restProps\n    } = props\n\n    const { props: listItemProps } = useListItem({\n      ...(!props.unstyled && {\n        ellipse: true,\n      }),\n      ...restProps,\n    })\n\n    const context = useSelectItemParentContext(ITEM_NAME, __scopeSelect)\n\n    const {\n      setSelectedIndex,\n      listRef,\n      setOpen,\n      onChange,\n      activeIndexSubscribe,\n      valueSubscribe,\n      allowMouseUpRef,\n      allowSelectRef,\n      setValueAtIndex,\n      selectTimeoutRef,\n      dataRef,\n      interactions,\n      shouldRenderWebNative,\n      size,\n      onActiveChange,\n      initialValue,\n    } = context\n\n    const [isSelected, setSelected] = React.useState(initialValue === value)\n\n    React.useEffect(() => {\n      return activeIndexSubscribe((i) => {\n        const isActive = index === i\n\n        if (isActive) {\n          onActiveChange(value, index)\n          listRef?.current[index]?.focus()\n        }\n      })\n    }, [index])\n\n    React.useEffect(() => {\n      return valueSubscribe((val) => {\n        setSelected(val === value)\n      })\n    }, [value])\n\n    const textId = React.useId()\n\n    const refCallback = React.useCallback((node) => {\n      if (!isWeb) return\n      if (node instanceof HTMLElement) {\n        if (listRef) {\n          listRef.current[index] = node\n        }\n      }\n    }, [])\n\n    const composedRefs = useComposedRefs(forwardedRef, refCallback)\n\n    useIsomorphicLayoutEffect(() => {\n      setValueAtIndex(index, value)\n    }, [index, setValueAtIndex, value])\n\n    function handleSelect() {\n      setSelectedIndex(index)\n      onChange(value)\n      setOpen(false)\n    }\n\n    const selectItemProps = React.useMemo(() => {\n      return interactions\n        ? interactions.getItemProps({\n            onTouchMove() {\n              allowSelectRef!.current = true\n              allowMouseUpRef!.current = false\n            },\n            onTouchEnd() {\n              allowSelectRef!.current = false\n              allowMouseUpRef!.current = true\n            },\n            onKeyDown(event) {\n              if (\n                event.key === 'Enter' ||\n                (event.key === ' ' && !dataRef?.current.typing)\n              ) {\n                event.preventDefault()\n                handleSelect()\n              } else {\n                allowSelectRef!.current = true\n              }\n            },\n\n            onClick() {\n              if (allowSelectRef!.current) {\n                handleSelect()\n              }\n            },\n\n            onMouseUp() {\n              if (!allowMouseUpRef!.current) {\n                return\n              }\n\n              if (allowSelectRef!.current) {\n                handleSelect()\n              }\n\n              // On touch devices, prevent the element from\n              // immediately closing `onClick` by deferring it\n              clearTimeout(selectTimeoutRef!.current)\n              selectTimeoutRef!.current = setTimeout(() => {\n                allowSelectRef!.current = true\n              })\n            },\n          })\n        : {\n            onPress: handleSelect,\n          }\n    }, [handleSelect])\n\n    return (\n      <SelectItemContextProvider\n        scope={__scopeSelect}\n        value={value}\n        textId={textId || ''}\n        isSelected={isSelected}\n      >\n        {shouldRenderWebNative ? (\n          <option value={value}>{props.children}</option>\n        ) : (\n          <ListItemFrame\n            tag=\"div\"\n            componentName={ITEM_NAME}\n            ref={composedRefs}\n            aria-labelledby={textId}\n            aria-selected={isSelected}\n            data-state={isSelected ? 'active' : 'inactive'}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            tabIndex={disabled ? undefined : -1}\n            {...(!props.unstyled && {\n              backgrounded: true,\n              pressTheme: true,\n              hoverTheme: true,\n              focusTheme: true,\n              cursor: 'default',\n              size,\n              outlineOffset: -0.5,\n\n              focusVisibleStyle: {\n                outlineColor: '$outlineColor',\n                outlineWidth: 1,\n                outlineStyle: 'solid',\n              },\n            })}\n            {...listItemProps}\n            {...selectItemProps}\n          />\n        )}\n      </SelectItemContextProvider>\n    )\n  },\n  {\n    disableTheme: true,\n  }\n)\n", "import { useComposedRefs } from '@tamagui/compose-refs'\nimport type { GetProps, TamaguiTextElement } from '@tamagui/core'\nimport { styled } from '@tamagui/core'\nimport { SizableText } from '@tamagui/text'\nimport * as React from 'react'\n\nimport { useSelectContext, useSelectItemParentContext } from './context'\nimport { useSelectItemContext } from './SelectItem'\nimport type { SelectScopedProps } from './types'\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemText\n * -----------------------------------------------------------------------------------------------*/\n\nexport const ITEM_TEXT_NAME = 'SelectItemText'\n\nexport const SelectItemTextFrame = styled(SizableText, {\n  name: ITEM_TEXT_NAME,\n\n  variants: {\n    unstyled: {\n      false: {\n        userSelect: 'none',\n        color: '$color',\n        ellipse: true,\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport type SelectItemTextProps = GetProps<typeof SelectItemTextFrame>\n\nexport const SelectItemText = SelectItemTextFrame.styleable(function SelectItemText(\n  props: SelectScopedProps<SelectItemTextProps>,\n  forwardedRef\n) {\n  const { __scopeSelect, className, ...itemTextProps } = props\n  const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect)\n  const itemParentContext = useSelectItemParentContext(ITEM_TEXT_NAME, __scopeSelect)\n  const ref = React.useRef<TamaguiTextElement | null>(null)\n  const composedRefs = useComposedRefs(forwardedRef, ref)\n  const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect)\n  const contents = React.useRef<React.ReactNode>()\n\n  // we portal this to the selected area, which is fine to be a bit unsafe concurrently (mostly? its not changing often)...\n  // until react native supports portals this is best i think\n  contents.current = (\n    <SelectItemTextFrame\n      className={className}\n      size={itemParentContext.size as any}\n      id={itemContext.textId}\n      {...itemTextProps}\n      ref={composedRefs}\n    />\n  )\n\n  React.useEffect(() => {\n    if (itemParentContext.initialValue === itemContext.value && !context.selectedIndex) {\n      context.setSelectedItem(contents.current)\n    }\n  }, [])\n\n  React.useEffect(() => {\n    return itemParentContext.valueSubscribe((val) => {\n      if (val === itemContext.value) {\n        context.setSelectedItem(contents.current)\n      }\n    })\n  }, [itemContext.value])\n\n  if (itemParentContext.shouldRenderWebNative) {\n    return <>{props.children}</>\n  }\n\n  return (\n    <>\n      {contents.current}\n\n      {/* Portal an option in the bubble select */}\n      {/* {context.bubbleSelect\n              ? ReactDOM.createPortal(\n                  // we use `.textContent` because `option` only support `string` or `number`\n                  <option value={itemContext.value}>{ref.current?.textContent}</option>,\n                  context.bubbleSelect\n                )\n              : null} */}\n    </>\n  )\n})\n", "import { autoUpdate, offset, useFloating } from '@floating-ui/react'\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport type { TamaguiElement } from '@tamagui/core'\nimport { YStack } from '@tamagui/stacks'\nimport * as React from 'react'\nimport { flushSync } from 'react-dom'\n\nimport { useSelectContext } from './context'\nimport type {\n  SelectScopedProps,\n  SelectScrollButtonImplProps,\n  SelectScrollButtonProps,\n} from './types'\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollUpButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_UP_BUTTON_NAME = 'SelectScrollUpButton'\n\nexport const SelectScrollUpButton = React.forwardRef<\n  TamaguiElement,\n  SelectScrollButtonProps\n>((props: SelectScopedProps<SelectScrollButtonProps>, forwardedRef) => {\n  return (\n    <SelectScrollButtonImpl\n      componentName={SCROLL_UP_BUTTON_NAME}\n      {...props}\n      dir=\"up\"\n      ref={forwardedRef}\n    />\n  )\n})\n\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollDownButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_DOWN_BUTTON_NAME = 'SelectScrollDownButton'\n\nexport const SelectScrollDownButton = React.forwardRef<\n  TamaguiElement,\n  SelectScrollButtonProps\n>((props: SelectScopedProps<SelectScrollButtonProps>, forwardedRef) => {\n  return (\n    <SelectScrollButtonImpl\n      componentName={SCROLL_DOWN_BUTTON_NAME}\n      {...props}\n      dir=\"down\"\n      ref={forwardedRef}\n    />\n  )\n})\n\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME\n\ntype SelectScrollButtonImplElement = TamaguiElement\n\nconst SelectScrollButtonImpl = React.memo(\n  React.forwardRef<SelectScrollButtonImplElement, SelectScrollButtonImplProps>(\n    (props: SelectScopedProps<SelectScrollButtonImplProps>, forwardedRef) => {\n      const { __scopeSelect, dir, componentName, ...scrollIndicatorProps } = props\n      const { forceUpdate, open, fallback, setScrollTop, setInnerOffset, ...context } =\n        useSelectContext(componentName, __scopeSelect)\n      const floatingRef = context.floatingContext?.refs.floating\n\n      const statusRef = React.useRef<'idle' | 'active'>('idle')\n      const isVisible = context[dir === 'down' ? 'canScrollDown' : 'canScrollUp']\n      const frameRef = React.useRef<any>()\n\n      const { x, y, refs, strategy } = useFloating({\n        open: open && isVisible,\n        strategy: 'fixed',\n        elements: {\n          reference: floatingRef?.current,\n        },\n        placement: dir === 'up' ? 'top' : 'bottom',\n        middleware: [offset(({ rects }) => -rects.floating.height)],\n        whileElementsMounted: (...args) => autoUpdate(...args, { animationFrame: true }),\n      })\n\n      const composedRef = useComposedRefs(forwardedRef, refs.setFloating)\n\n      if (!isVisible) {\n        return null\n      }\n\n      const onScroll = (amount: number) => {\n        const floating = floatingRef\n        if (!floating) return\n        if (fallback) {\n          if (floating.current) {\n            floating.current.scrollTop -= amount\n            flushSync(() => setScrollTop!(floating.current?.scrollTop ?? 0))\n          }\n        } else {\n          flushSync(() => setInnerOffset!((value) => value - amount))\n        }\n      }\n\n      return (\n        <YStack\n          ref={composedRef}\n          componentName={componentName}\n          aria-hidden\n          {...scrollIndicatorProps}\n          zIndex={1000}\n          // @ts-expect-error\n          position={strategy}\n          left={x || 0}\n          top={y || 0}\n          width={`calc(${(floatingRef?.current?.offsetWidth ?? 0) - 2}px)`}\n          onPointerEnter={() => {\n            statusRef.current = 'active'\n            let prevNow = Date.now()\n\n            function frame() {\n              const element = floatingRef?.current\n              if (element) {\n                const currentNow = Date.now()\n                const msElapsed = currentNow - prevNow\n                prevNow = currentNow\n\n                const pixelsToScroll = msElapsed / 2\n\n                const remainingPixels =\n                  dir === 'up'\n                    ? element.scrollTop\n                    : element.scrollHeight - element.clientHeight - element.scrollTop\n\n                const scrollRemaining =\n                  dir === 'up'\n                    ? element.scrollTop - pixelsToScroll > 0\n                    : element.scrollTop + pixelsToScroll <\n                      element.scrollHeight - element.clientHeight\n\n                onScroll(\n                  dir === 'up'\n                    ? Math.min(pixelsToScroll, remainingPixels)\n                    : Math.max(-pixelsToScroll, -remainingPixels)\n                )\n\n                if (scrollRemaining) {\n                  frameRef.current = requestAnimationFrame(frame)\n                }\n              }\n            }\n\n            cancelAnimationFrame(frameRef.current)\n            frameRef.current = requestAnimationFrame(frame)\n          }}\n          onPointerLeave={() => {\n            statusRef.current = 'idle'\n            cancelAnimationFrame(frameRef.current)\n          }}\n        />\n      )\n    }\n  )\n)\n", "import { useComposedRefs } from '@tamagui/compose-refs'\nimport { isClient, isWeb, type TamaguiElement } from '@tamagui/core'\nimport type { ListItemProps } from '@tamagui/list-item'\nimport { ListItem } from '@tamagui/list-item'\nimport * as React from 'react'\n\nimport { useSelectContext, useSelectItemParentContext } from './context'\nimport type { SelectScopedProps } from './types'\n\n/* -------------------------------------------------------------------------------------------------\n * SelectTrigger\n * -----------------------------------------------------------------------------------------------*/\nconst TRIGGER_NAME = 'SelectTrigger'\n\nexport type SelectTriggerProps = ListItemProps\n\nconst isPointerCoarse =\n  isWeb && isClient ? window.matchMedia('(pointer:coarse)').matches : true\n\nexport const SelectTrigger = React.forwardRef<TamaguiElement, SelectTriggerProps>(\n  function SelectTrigger(props: SelectScopedProps<SelectTriggerProps>, forwardedRef) {\n    const { __scopeSelect, disabled = false, unstyled = false, ...triggerProps } = props\n\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect)\n    const itemParentContext = useSelectItemParentContext(TRIGGER_NAME, __scopeSelect)\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      context.floatingContext?.refs.setReference as any\n    )\n    // const getItems = useCollection(__scopeSelect)\n    // const labelId = useLabelContext(context.trigger)\n    // const labelledBy = ariaLabelledby || labelId\n    if (itemParentContext.shouldRenderWebNative) {\n      return null\n    }\n\n    return (\n      <ListItem\n        componentName={TRIGGER_NAME}\n        unstyled={unstyled}\n        tag=\"button\"\n        type=\"button\"\n        id={itemParentContext.id}\n        {...(!unstyled && {\n          backgrounded: true,\n          radiused: true,\n          hoverTheme: true,\n          pressTheme: true,\n          focusable: true,\n          focusVisibleStyle: {\n            outlineStyle: 'solid',\n            outlineWidth: 2,\n            outlineColor: '$outlineColor',\n          },\n          borderWidth: 1,\n          size: itemParentContext.size,\n        })}\n        // aria-controls={context.contentId}\n        aria-expanded={context.open}\n        aria-autocomplete=\"none\"\n        dir={context.dir}\n        disabled={disabled}\n        data-disabled={disabled ? '' : undefined}\n        {...triggerProps}\n        ref={composedRefs}\n        {...(process.env.TAMAGUI_TARGET === 'web' && itemParentContext.interactions\n          ? {\n              ...itemParentContext.interactions.getReferenceProps(),\n              ...(isPointerCoarse\n                ? {\n                    onPress() {\n                      itemParentContext.setOpen(!context.open)\n                    },\n                  }\n                : {\n                    onMouseDown() {\n                      context.floatingContext?.update()\n                      itemParentContext.setOpen(!context.open)\n                    },\n                  }),\n            }\n          : {\n              onPress() {\n                itemParentContext.setOpen(!context.open)\n              },\n            })}\n      />\n    )\n  }\n)\n", "import { FloatingFocusManager } from '@floating-ui/react'\nimport { AdaptPortalContents, useAdaptIsActive } from '@tamagui/adapt'\nimport { AnimatePresence } from '@tamagui/animate-presence'\nimport { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb, useIsomorphicLayoutEffect } from '@tamagui/constants'\nimport { styled } from '@tamagui/core'\nimport { ThemeableStack } from '@tamagui/stacks'\nimport { VIEWPORT_NAME } from './constants'\nimport {\n  ForwardSelectContext,\n  useSelectContext,\n  useSelectItemParentContext,\n} from './context'\nimport type {\n  SelectScopedProps,\n  SelectViewportExtraProps,\n  SelectViewportProps,\n} from './types'\nimport { useId } from 'react'\n\n/* -------------------------------------------------------------------------------------------------\n * SelectViewport\n * -----------------------------------------------------------------------------------------------*/\n\nexport const SelectViewportFrame = styled(ThemeableStack, {\n  name: VIEWPORT_NAME,\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$2',\n        backgroundColor: '$background',\n        elevate: true,\n        bordered: true,\n        userSelect: 'none',\n        outlineWidth: 0,\n      },\n    },\n\n    size: {\n      '...size': (val, { tokens }) => {\n        return {\n          borderRadius: tokens.radius[val] ?? val,\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport const SelectViewport = SelectViewportFrame.styleable<SelectViewportExtraProps>(\n  function SelectViewport(props: SelectScopedProps<SelectViewportProps>, forwardedRef) {\n    const { __scopeSelect, children, disableScroll, ...viewportProps } = props\n    const context = useSelectContext(VIEWPORT_NAME, __scopeSelect)\n    const itemContext = useSelectItemParentContext(VIEWPORT_NAME, __scopeSelect)\n    const isAdapted = useAdaptIsActive()\n\n    useIsomorphicLayoutEffect(() => {\n      if (context.update) {\n        context.update()\n      }\n    }, [isAdapted])\n\n    if (itemContext.shouldRenderWebNative) {\n      return <>{children}</>\n    }\n\n    if (isAdapted || !isWeb) {\n      return (\n        <AdaptPortalContents>\n          <ForwardSelectContext\n            __scopeSelect={__scopeSelect}\n            itemContext={itemContext}\n            context={context}\n          >\n            {children}\n          </ForwardSelectContext>\n        </AdaptPortalContents>\n      )\n    }\n\n    if (!itemContext.interactions) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(`No interactions provided to Select, potentially missing Adapt`)\n      }\n\n      return null\n    }\n\n    const {\n      style,\n      // remove this, it was set to \"Select\" always\n      className,\n      ...floatingProps\n    } = itemContext.interactions.getFloatingProps()\n\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      context.floatingContext?.refs.setFloating\n    )\n\n    return (\n      <>\n        {!disableScroll && !props.unstyled && (\n          <style\n            dangerouslySetInnerHTML={{\n              __html: selectViewportCSS,\n            }}\n          />\n        )}\n        <AnimatePresence>\n          {context.open ? (\n            <FloatingFocusManager context={context.floatingContext!} modal={false}>\n              <SelectViewportFrame\n                key=\"select-viewport\"\n                size={itemContext.size}\n                role=\"presentation\"\n                {...viewportProps}\n                {...style}\n                {...floatingProps}\n                {...(!props.unstyled && {\n                  overflowY: disableScroll ? undefined : (style.overflow ?? 'auto'),\n                })}\n                ref={composedRefs}\n              >\n                {children}\n              </SelectViewportFrame>\n            </FloatingFocusManager>\n          ) : null}\n        </AnimatePresence>\n\n        {/* keep in dom to allow for portal to the trigger... very hacky! we should fix */}\n        {!context.open && <div style={{ display: 'none' }}>{props.children}</div>}\n      </>\n    )\n  }\n)\n\nconst selectViewportCSS = `\n.is_SelectViewport {\n  scrollbar-width: none;\n  -webkit-overflow-scrolling: touch;\n  overscroll-behavior: contain;\n}\n\n.is_SelectViewport::-webkit-scrollbar{\n  display:none\n}\n`\n", "// forked from radix-ui\n\nimport { composeRefs, useComposedRefs } from '@tamagui/compose-refs'\nimport { isClient, isWeb } from '@tamagui/constants'\nimport type {\n  GestureReponderEvent,\n  GetProps,\n  SizeTokens,\n  TamaguiElement,\n} from '@tamagui/core'\nimport { createShallowSetState, getTokens, getVariableValue, styled } from '@tamagui/core'\nimport { getSize } from '@tamagui/get-token'\nimport { withStaticProperties } from '@tamagui/helpers'\nimport { clamp, composeEventHandlers } from '@tamagui/helpers'\nimport type { SizableStackProps } from '@tamagui/stacks'\nimport { ThemeableStack } from '@tamagui/stacks'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport { useDirection } from '@tamagui/use-direction'\nimport * as React from 'react'\nimport type { View } from 'react-native'\n\nimport {\n  ARROW_KEYS,\n  BACK_KEYS,\n  PAGE_KEYS,\n  SLIDER_NAME,\n  SliderOrientationProvider,\n  SliderProvider,\n  useSliderContext,\n  useSliderOrientationContext,\n} from './constants'\nimport {\n  convertValueToPercentage,\n  getClosestValueIndex,\n  getDecimalCount,\n  getLabel,\n  getNextSortedValues,\n  getThumbInBoundsOffset,\n  hasMinStepsBetweenValues,\n  linearScale,\n  roundValue,\n} from './helpers'\nimport { SliderFrame, SliderImpl } from './SliderImpl'\nimport type {\n  ScopedProps,\n  SliderContextValue,\n  SliderHorizontalProps,\n  SliderProps,\n  SliderTrackProps,\n  SliderVerticalProps,\n} from './types'\n\nconst activeSliderMeasureListeners = new Set<Function>()\n\n// run an interval on web as using translate can move things at any moment\n// without triggering layout or intersection observers\n\nif (isWeb && isClient) {\n  if (!process.env.TAMAGUI_DISABLE_SLIDER_INTERVAL) {\n    setInterval?.(\n      () => {\n        activeSliderMeasureListeners.forEach((cb) => cb())\n      },\n      // really doesn't need to be super often\n      1000\n    )\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * SliderHorizontal\n * -----------------------------------------------------------------------------------------------*/\n\nconst SliderHorizontal = React.forwardRef<View, SliderHorizontalProps>(\n  (props: ScopedProps<SliderHorizontalProps>, forwardedRef) => {\n    const {\n      min,\n      max,\n      dir,\n      onSlideStart,\n      onSlideMove,\n      onStepKeyDown,\n      onSlideEnd,\n      ...sliderProps\n    } = props\n    const direction = useDirection(dir)\n    const isDirectionLTR = direction === 'ltr'\n    const sliderRef = React.useRef<View>(null)\n    const [state, setState_] = React.useState(() => ({ size: 0, offset: 0 }))\n    const setState = createShallowSetState(setState_)\n\n    function getValueFromPointer(pointerPosition: number) {\n      const input: [number, number] = [0, state.size]\n      const output: [number, number] = isDirectionLTR ? [min, max] : [max, min]\n      const value = linearScale(input, output)\n      return value(pointerPosition)\n    }\n\n    const measure = () => {\n      sliderRef.current?.measure((_x, _y, width, _height, pageX, _pageY) => {\n        setState({\n          size: width,\n          offset: pageX,\n        })\n      })\n    }\n\n    if (isClient) {\n      useOnDebouncedWindowResize(measure)\n\n      // intersection change\n      React.useEffect(() => {\n        const node = sliderRef.current as any as HTMLDivElement\n        if (!node) return\n\n        let measureTm\n        const debouncedMeasure = () => {\n          clearTimeout(measureTm)\n          measureTm = setTimeout(() => {\n            measure()\n          }, 200)\n        }\n\n        const io = new IntersectionObserver(\n          (entries) => {\n            debouncedMeasure()\n            if (entries?.[0].isIntersecting) {\n              activeSliderMeasureListeners.add(debouncedMeasure)\n            } else {\n              activeSliderMeasureListeners.delete(debouncedMeasure)\n            }\n          },\n          {\n            root: null, // Use the viewport as the container.\n            rootMargin: '0px',\n            threshold: [0, 0.5, 1.0],\n          }\n        )\n\n        io.observe(node)\n\n        return () => {\n          activeSliderMeasureListeners.delete(debouncedMeasure)\n          io.disconnect()\n        }\n      }, [])\n    }\n\n    return (\n      <SliderOrientationProvider\n        scope={props.__scopeSlider}\n        startEdge={isDirectionLTR ? 'left' : 'right'}\n        endEdge={isDirectionLTR ? 'right' : 'left'}\n        direction={isDirectionLTR ? 1 : -1}\n        sizeProp=\"width\"\n        size={state.size}\n      >\n        <SliderImpl\n          ref={composeRefs(forwardedRef, sliderRef) as any}\n          dir={direction}\n          {...sliderProps}\n          orientation=\"horizontal\"\n          onLayout={measure}\n          onSlideStart={(event, target) => {\n            const value = getValueFromPointer(event.nativeEvent.locationX)\n            if (value) {\n              onSlideStart?.(value, target, event)\n            }\n          }}\n          onSlideMove={(event) => {\n            const value = getValueFromPointer(event.nativeEvent.pageX - state.offset)\n            if (value) {\n              onSlideMove?.(value, event)\n            }\n          }}\n          onSlideEnd={(event) => {\n            const value = getValueFromPointer(event.nativeEvent.pageX - state.offset)\n            if (value) {\n              onSlideEnd?.(event, value)\n            }\n          }}\n          onStepKeyDown={(event) => {\n            const isBackKey = BACK_KEYS[direction].includes(event.key)\n            onStepKeyDown?.({ event, direction: isBackKey ? -1 : 1 })\n          }}\n        />\n      </SliderOrientationProvider>\n    )\n  }\n)\n\nfunction useOnDebouncedWindowResize(callback: Function, amt = 200) {\n  React.useEffect(() => {\n    let last\n    const onResize = () => {\n      clearTimeout(last)\n      last = setTimeout(callback, amt)\n    }\n    window.addEventListener('resize', onResize)\n    return () => {\n      clearTimeout(last)\n      window.removeEventListener('resize', onResize)\n    }\n  }, [])\n}\n\n/* -------------------------------------------------------------------------------------------------\n * SliderVertical\n * -----------------------------------------------------------------------------------------------*/\n\nconst SliderVertical = React.forwardRef<View, SliderVerticalProps>(\n  (props: ScopedProps<SliderVerticalProps>, forwardedRef) => {\n    const {\n      min,\n      max,\n      onSlideStart,\n      onSlideMove,\n      onStepKeyDown,\n      onSlideEnd,\n      ...sliderProps\n    } = props\n    const [state, setState_] = React.useState(() => ({ size: 0, offset: 0 }))\n    const setState = createShallowSetState(setState_)\n    const sliderRef = React.useRef<View>(null)\n\n    function getValueFromPointer(pointerPosition: number) {\n      const input: [number, number] = [0, state.size]\n      const output: [number, number] = [max, min]\n      const value = linearScale(input, output)\n      return value(pointerPosition)\n    }\n\n    const measure = () => {\n      sliderRef.current?.measure((_x, _y, _width, height, _pageX, pageY) => {\n        setState({\n          size: height,\n          offset: pageY,\n        })\n      })\n    }\n\n    if (isClient) {\n      useOnDebouncedWindowResize(measure)\n    }\n\n    return (\n      <SliderOrientationProvider\n        scope={props.__scopeSlider}\n        startEdge=\"bottom\"\n        endEdge=\"top\"\n        sizeProp=\"height\"\n        size={state.size}\n        direction={1}\n      >\n        <SliderImpl\n          ref={composeRefs(forwardedRef, sliderRef) as any}\n          {...sliderProps}\n          orientation=\"vertical\"\n          onLayout={measure}\n          onSlideStart={(event, target) => {\n            const value = getValueFromPointer(event.nativeEvent.locationY)\n            if (value) {\n              onSlideStart?.(value, target, event)\n            }\n          }}\n          onSlideMove={(event) => {\n            const value = getValueFromPointer(event.nativeEvent.pageY - state.offset)\n            if (value) {\n              onSlideMove?.(value, event)\n            }\n          }}\n          onSlideEnd={(event) => {\n            const value = getValueFromPointer(event.nativeEvent.pageY - state.offset)\n            onSlideEnd?.(event, value)\n          }}\n          onStepKeyDown={(event) => {\n            const isBackKey = BACK_KEYS.ltr.includes(event.key)\n            onStepKeyDown?.({ event, direction: isBackKey ? -1 : 1 })\n          }}\n        />\n      </SliderOrientationProvider>\n    )\n  }\n)\n\n/* -------------------------------------------------------------------------------------------------\n * SliderTrack\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRACK_NAME = 'SliderTrack'\n\ntype SliderTrackElement = HTMLElement | View\n\nexport const SliderTrackFrame = styled(SliderFrame, {\n  name: 'SliderTrack',\n\n  variants: {\n    unstyled: {\n      false: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: '$background',\n        position: 'relative',\n        borderRadius: 100_000,\n        overflow: 'hidden',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nconst SliderTrack = React.forwardRef<SliderTrackElement, SliderTrackProps>(\n  (props: ScopedProps<SliderTrackProps>, forwardedRef) => {\n    const { __scopeSlider, ...trackProps } = props\n    const context = useSliderContext(TRACK_NAME, __scopeSlider)\n    return (\n      <SliderTrackFrame\n        data-disabled={context.disabled ? '' : undefined}\n        data-orientation={context.orientation}\n        orientation={context.orientation}\n        size={context.size}\n        {...trackProps}\n        ref={forwardedRef}\n      />\n    )\n  }\n)\n\nSliderTrack.displayName = TRACK_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * SliderTrackActive\n * -----------------------------------------------------------------------------------------------*/\n\nconst RANGE_NAME = 'SliderTrackActive'\n\nexport const SliderTrackActiveFrame = styled(SliderFrame, {\n  name: 'SliderTrackActive',\n  backgroundColor: '$background',\n  position: 'absolute',\n  pointerEvents: 'box-none',\n})\n\ntype SliderTrackActiveProps = GetProps<typeof SliderTrackActiveFrame>\n\nconst SliderTrackActive = React.forwardRef<View, SliderTrackActiveProps>(\n  (props: ScopedProps<SliderTrackActiveProps>, forwardedRef) => {\n    const { __scopeSlider, ...rangeProps } = props\n    const context = useSliderContext(RANGE_NAME, __scopeSlider)\n    const orientation = useSliderOrientationContext(RANGE_NAME, __scopeSlider)\n    const ref = React.useRef<View>(null)\n    const composedRefs = useComposedRefs(forwardedRef, ref)\n    const valuesCount = context.values.length\n    const percentages = context.values.map((value) =>\n      convertValueToPercentage(value, context.min, context.max)\n    )\n    const offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0\n    const offsetEnd = 100 - Math.max(...percentages)\n\n    return (\n      <SliderTrackActiveFrame\n        orientation={context.orientation}\n        data-orientation={context.orientation}\n        data-disabled={context.disabled ? '' : undefined}\n        size={context.size}\n        animateOnly={['left', 'top', 'right', 'bottom']}\n        {...rangeProps}\n        ref={composedRefs}\n        {...{\n          [orientation.startEdge]: `${offsetStart}%`,\n          [orientation.endEdge]: `${offsetEnd}%`,\n        }}\n        {...(orientation.sizeProp === 'width'\n          ? {\n              height: '100%',\n            }\n          : {\n              left: 0,\n              right: 0,\n            })}\n      />\n    )\n  }\n)\n\nSliderTrackActive.displayName = RANGE_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * SliderThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'SliderThumb'\n\n// TODO make this customizable through tamagui\n// so we can accurately use it for estimatedSize below\nconst getThumbSize = (val?: SizeTokens | number) => {\n  const tokens = getTokens()\n  const size =\n    typeof val === 'number'\n      ? val\n      : getSize(tokens.size[val as any], {\n          shift: -1,\n        })\n  return {\n    width: size,\n    height: size,\n    minWidth: size,\n    minHeight: size,\n  }\n}\n\nexport const SliderThumbFrame = styled(ThemeableStack, {\n  name: 'SliderThumb',\n\n  variants: {\n    size: {\n      '...size': getThumbSize,\n    },\n\n    unstyled: {\n      false: {\n        position: 'absolute',\n        bordered: 2,\n        borderWidth: 2,\n        backgrounded: true,\n        pressTheme: isWeb,\n        focusTheme: isWeb,\n        hoverTheme: isWeb,\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport interface SliderThumbExtraProps {\n  index: number\n}\n\nexport interface SliderThumbProps extends SizableStackProps, SliderThumbExtraProps {}\n\nconst SliderThumb = SliderThumbFrame.styleable<SliderThumbExtraProps>(\n  function SliderThumb(props: ScopedProps<SliderThumbProps>, forwardedRef) {\n    const { __scopeSlider, index, size: sizeProp, ...thumbProps } = props\n    const context = useSliderContext(THUMB_NAME, __scopeSlider)\n    const orientation = useSliderOrientationContext(THUMB_NAME, __scopeSlider)\n    const [thumb, setThumb] = React.useState<TamaguiElement | null>(null)\n    const composedRefs = useComposedRefs(forwardedRef, setThumb as any)\n\n    // We cast because index could be `-1` which would return undefined\n    const value = context.values[index] as number | undefined\n    const percent =\n      value === undefined ? 0 : convertValueToPercentage(value, context.min, context.max)\n    const label = getLabel(index, context.values.length)\n    const sizeIn = sizeProp ?? context.size ?? '$true'\n    const [size, setSize] = React.useState(() => {\n      // for SSR\n      const estimatedSize = getVariableValue(getThumbSize(sizeIn).width) as number\n      return estimatedSize\n    })\n\n    const thumbInBoundsOffset = size\n      ? getThumbInBoundsOffset(size, percent, orientation.direction)\n      : 0\n\n    React.useEffect(() => {\n      if (thumb) {\n        context.thumbs.set(thumb, index)\n        return () => {\n          context.thumbs.delete(thumb)\n        }\n      }\n    }, [thumb, context.thumbs, index])\n\n    const positionalStyles =\n      context.orientation === 'horizontal'\n        ? {\n            x: thumbInBoundsOffset - size / 2,\n            y: -size / 2,\n            top: '50%',\n            ...(size === 0 && {\n              top: 'auto',\n              bottom: 'auto',\n            }),\n          }\n        : {\n            x: -size / 2,\n            y: size / 2,\n            left: '50%',\n            ...(size === 0 && {\n              left: 'auto',\n              right: 'auto',\n            }),\n          }\n\n    return (\n      <SliderThumbFrame\n        ref={composedRefs}\n        role=\"slider\"\n        aria-label={props['aria-label'] || label}\n        aria-valuemin={context.min}\n        aria-valuenow={value}\n        aria-valuemax={context.max}\n        aria-orientation={context.orientation}\n        data-orientation={context.orientation}\n        data-disabled={context.disabled ? '' : undefined}\n        tabIndex={context.disabled ? undefined : 0}\n        animateOnly={['transform', 'left', 'top', 'right', 'bottom']}\n        {...positionalStyles}\n        {...{\n          [orientation.startEdge]: `${percent}%`,\n        }}\n        size={sizeIn}\n        {...thumbProps}\n        onLayout={(e) => {\n          setSize(e.nativeEvent.layout[orientation.sizeProp])\n        }}\n        /**\n         * There will be no value on initial render while we work out the index so we hide thumbs\n         * without a value, otherwise SSR will render them in the wrong position before they\n         * snap into the correct position during hydration which would be visually jarring for\n         * slower connections.\n         */\n        // style={value === undefined ? { display: 'none' } : props.style}\n        onFocus={composeEventHandlers(props.onFocus, () => {\n          context.valueIndexToChangeRef.current = index\n        })}\n      />\n    )\n  },\n  {\n    staticConfig: {\n      memo: true,\n    },\n  }\n)\n\n/* -------------------------------------------------------------------------------------------------\n * Slider\n * -----------------------------------------------------------------------------------------------*/\n\nconst SliderComponent = React.forwardRef(\n  (props: ScopedProps<SliderProps>, forwardedRef) => {\n    const {\n      name,\n      min = 0,\n      max = 100,\n      step = 1,\n      orientation = 'horizontal',\n      disabled = false,\n      minStepsBetweenThumbs = 0,\n      defaultValue = [min],\n      value,\n      onValueChange = () => {},\n      size: sizeProp,\n      onSlideEnd,\n      onSlideMove,\n      onSlideStart,\n      ...sliderProps\n    } = props\n    const sliderRef = React.useRef<View>(null)\n    const composedRefs = useComposedRefs(sliderRef, forwardedRef)\n    const thumbRefs = React.useRef<SliderContextValue['thumbs']>(new Map())\n    const valueIndexToChangeRef = React.useRef<number>(0)\n    const isHorizontal = orientation === 'horizontal'\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    // const isFormControl =\n    //   sliderRef.current instanceof HTMLElement ? Boolean(sliderRef.current.closest('form')) : true\n\n    const [values = [], setValues] = useControllableState({\n      prop: value,\n      defaultProp: defaultValue,\n      transition: true,\n      onChange: (value: number[]) => {\n        updateThumbFocus(valueIndexToChangeRef.current)\n        onValueChange(value)\n      },\n    })\n\n    if (isWeb) {\n      React.useEffect(() => {\n        // @ts-ignore\n        const node = sliderRef.current as HTMLElement\n        if (!node) return\n        const preventDefault = (e) => {\n          e.preventDefault()\n        }\n        node.addEventListener('touchstart', preventDefault)\n        return () => {\n          node.removeEventListener('touchstart', preventDefault)\n        }\n      }, [])\n    }\n\n    function updateThumbFocus(focusIndex: number) {\n      // Thumbs are not focusable on native\n      if (!isWeb) return\n\n      for (const [node, index] of thumbRefs.current.entries()) {\n        if (index === focusIndex) {\n          node.focus()\n          return\n        }\n      }\n    }\n\n    function handleSlideMove(value: number, event: GestureReponderEvent) {\n      updateValues(value, valueIndexToChangeRef.current)\n      onSlideMove?.(event, value)\n    }\n\n    function updateValues(value: number, atIndex: number) {\n      const decimalCount = getDecimalCount(step)\n      const snapToStep = roundValue(\n        Math.round((value - min) / step) * step + min,\n        decimalCount\n      )\n      const nextValue = clamp(snapToStep, [min, max])\n      setValues((prevValues = []) => {\n        const nextValues = getNextSortedValues(prevValues, nextValue, atIndex)\n        if (hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {\n          valueIndexToChangeRef.current = nextValues.indexOf(nextValue)\n          return String(nextValues) === String(prevValues) ? prevValues : nextValues\n        }\n        return prevValues\n      })\n    }\n\n    const SliderOriented = isHorizontal ? SliderHorizontal : SliderVertical\n\n    return (\n      <SliderProvider\n        scope={props.__scopeSlider}\n        disabled={disabled}\n        min={min}\n        max={max}\n        valueIndexToChangeRef={valueIndexToChangeRef}\n        thumbs={thumbRefs.current}\n        values={values}\n        orientation={orientation}\n        size={sizeProp}\n      >\n        <SliderOriented\n          aria-disabled={disabled}\n          data-disabled={disabled ? '' : undefined}\n          {...sliderProps}\n          ref={composedRefs as any}\n          min={min}\n          max={max}\n          onSlideEnd={onSlideEnd}\n          onSlideStart={\n            disabled\n              ? undefined\n              : (value: number, target, event) => {\n                  // when starting on the track, move it right away\n                  // when starting on thumb, dont jump until movemenet as it feels weird\n                  if (target !== 'thumb') {\n                    const closestIndex = getClosestValueIndex(values, value)\n                    updateValues(value, closestIndex)\n                  }\n                  onSlideStart?.(event, value, target)\n                }\n          }\n          onSlideMove={disabled ? undefined : handleSlideMove}\n          onHomeKeyDown={() => !disabled && updateValues(min, 0)}\n          onEndKeyDown={() => !disabled && updateValues(max, values.length - 1)}\n          onStepKeyDown={({ event, direction: stepDirection }) => {\n            if (!disabled) {\n              const isPageKey = PAGE_KEYS.includes(event.key)\n              const isSkipKey =\n                isPageKey || (event.shiftKey && ARROW_KEYS.includes(event.key))\n              const multiplier = isSkipKey ? 10 : 1\n              const atIndex = valueIndexToChangeRef.current\n              const value = values[atIndex]\n              const stepInDirection = step * multiplier * stepDirection\n              updateValues(value + stepInDirection, atIndex)\n            }\n          }}\n        />\n        {/* {isFormControl &&\n        values.map((value, index) => (\n          <BubbleInput\n            key={index}\n            name={name ? name + (values.length > 1 ? '[]' : '') : undefined}\n            value={value}\n          />\n        ))} */}\n      </SliderProvider>\n    )\n  }\n)\n\nconst Slider = withStaticProperties(SliderComponent, {\n  Track: SliderTrack,\n  TrackActive: SliderTrackActive,\n  Thumb: SliderThumb,\n})\n\nSlider.displayName = SLIDER_NAME\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// // TODO\n// const BubbleInput = (props: any) => {\n//   const { value, ...inputProps } = props\n//   const ref = React.useRef<HTMLInputElement>(null)\n//   const prevValue = usePrevious(value)\n\n//   // Bubble value change to parents (e.g form change event)\n//   React.useEffect(() => {\n//     const input = ref.current!\n//     const inputProto = window.HTMLInputElement.prototype\n//     const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'value') as PropertyDescriptor\n//     const setValue = descriptor.set\n//     if (prevValue !== value && setValue) {\n//       const event = new Event('input', { bubbles: true })\n//       setValue.call(input, value)\n//       input.dispatchEvent(event)\n//     }\n//   }, [prevValue, value])\n\n//   /**\n//    * We purposefully do not use `type=\"hidden\"` here otherwise forms that\n//    * wrap it will not be able to access its value via the FormData API.\n//    *\n//    * We purposefully do not add the `value` attribute here to allow the value\n//    * to be set programatically and bubble to any parent form `onChange` event.\n//    * Adding the `value` will cause React to consider the programatic\n//    * dispatch a duplicate and it will get swallowed.\n//    */\n//   return <input style={{ display: 'none' }} {...inputProps} ref={ref} defaultValue={value} />\n// }\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Track = SliderTrack\nconst Range = SliderTrackActive\nconst Thumb = SliderThumb\n\nexport {\n  Slider,\n  SliderTrack,\n  SliderTrackActive,\n  SliderThumb,\n  //\n  Track,\n  Range,\n  Thumb,\n}\n\nexport type { SliderProps, SliderTrackProps, SliderTrackActiveProps }\n", "import type { SizeTokens } from '@tamagui/core'\nimport { createContextScope } from '@tamagui/create-context'\n\nimport type { Direction, SliderContextValue } from './types'\n\nexport const SLIDER_NAME = 'Slider'\n\nexport const [createSliderContext, createSliderScope] = createContextScope(SLIDER_NAME)\n\nexport const [SliderProvider, useSliderContext] =\n  createSliderContext<SliderContextValue>(SLIDER_NAME)\n\nexport const [SliderOrientationProvider, useSliderOrientationContext] =\n  createSliderContext<{\n    startEdge: 'bottom' | 'left' | 'right'\n    endEdge: 'top' | 'right' | 'left'\n    sizeProp: 'width' | 'height'\n    size: number | SizeTokens\n    direction: number\n  }>(SLIDER_NAME, {\n    startEdge: 'left',\n    endEdge: 'right',\n    sizeProp: 'width',\n    size: 0,\n    direction: 1,\n  })\n\nexport const PAGE_KEYS = ['PageUp', 'PageDown']\nexport const ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight']\nexport const BACK_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowDown', 'Home', 'ArrowLeft', 'PageDown'],\n  rtl: ['ArrowDown', 'Home', 'ArrowRight', 'PageDown'],\n}\n", "export function getNextSortedValues(\n  prevValues: number[] = [],\n  nextValue: number,\n  atIndex: number\n) {\n  const nextValues = [...prevValues]\n  nextValues[atIndex] = nextValue\n  return nextValues.sort((a, b) => a - b)\n}\n\nexport function convertValueToPercentage(value: number, min: number, max: number) {\n  const maxSteps = max - min\n  const percentPerStep = 100 / maxSteps\n  return percentPerStep * (value - min)\n}\n\n/**\n * Returns a label for each thumb when there are two or more thumbs\n */\nexport function getLabel(index: number, totalValues: number) {\n  if (totalValues > 2) {\n    return `Value ${index + 1} of ${totalValues}`\n  }\n  if (totalValues === 2) {\n    return ['Minimum', 'Maximum'][index]\n  }\n  return undefined\n}\n\n/**\n * Given a `values` array and a `nextValue`, determine which value in\n * the array is closest to `nextValue` and return its index.\n *\n * @example\n * // returns 1\n * getClosestValueIndex([10, 30], 25);\n */\nexport function getClosestValueIndex(values: number[], nextValue: number) {\n  if (values.length === 1) return 0\n  const distances = values.map((value) => Math.abs(value - nextValue))\n  const closestDistance = Math.min(...distances)\n  return distances.indexOf(closestDistance)\n}\n\n/**\n * Offsets the thumb centre point while sliding to ensure it remains\n * within the bounds of the slider when reaching the edges\n */\nexport function getThumbInBoundsOffset(width: number, left: number, direction: number) {\n  const quarterWidth = width / 4 // changed to quarter width to allow some overlap but not so much\n  const halfPercent = 50\n  const offset = linearScale([0, halfPercent], [0, quarterWidth])\n  return (quarterWidth - offset(left) * direction) * direction\n}\n\n/**\n * Gets an array of steps between each value.\n *\n * @example\n * // returns [1, 9]\n * getStepsBetweenValues([10, 11, 20]);\n */\nfunction getStepsBetweenValues(values: number[]) {\n  return values.slice(0, -1).map((value, index) => values[index + 1] - value)\n}\n\n/**\n * Verifies the minimum steps between all values is greater than or equal\n * to the expected minimum steps.\n *\n * @example\n * // returns false\n * hasMinStepsBetweenValues([1,2,3], 2);\n *\n * @example\n * // returns true\n * hasMinStepsBetweenValues([1,2,3], 1);\n */\nexport function hasMinStepsBetweenValues(\n  values: number[],\n  minStepsBetweenValues: number\n) {\n  if (minStepsBetweenValues > 0) {\n    const stepsBetweenValues = getStepsBetweenValues(values)\n    const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues)\n    return actualMinStepsBetweenValues >= minStepsBetweenValues\n  }\n  return true\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nexport function linearScale(\n  input: readonly [number, number],\n  output: readonly [number, number]\n) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0]\n    const ratio = (output[1] - output[0]) / (input[1] - input[0])\n    return output[0] + ratio * (value - input[0])\n  }\n}\n\nexport function getDecimalCount(value: number) {\n  return (String(value).split('.')[1] || '').length\n}\n\nexport function roundValue(value: number, decimalCount: number) {\n  const rounder = 10 ** decimalCount\n  return Math.round(value * rounder) / rounder\n}\n", "/* -------------------------------------------------------------------------------------------------\n * SliderImpl\n * -----------------------------------------------------------------------------------------------*/\n\nimport { isWeb } from '@tamagui/constants'\nimport type { TamaguiElement } from '@tamagui/core'\nimport { getVariableValue, styled } from '@tamagui/core'\nimport { getSize } from '@tamagui/get-token'\nimport { composeEventHandlers } from '@tamagui/helpers'\nimport { YStack } from '@tamagui/stacks'\nimport * as React from 'react'\nimport type { View } from 'react-native'\n\nimport { ARROW_KEYS, PAGE_KEYS, SLIDER_NAME, useSliderContext } from './constants'\nimport type { ScopedProps, SliderImplProps } from './types'\n\nexport const SliderFrame = styled(YStack, {\n  position: 'relative',\n\n  variants: {\n    orientation: {\n      horizontal: {},\n      vertical: {},\n    },\n\n    size: (val, extras) => {\n      if (!val) {\n        return\n      }\n      const orientation = extras.props['orientation']\n      const size = Math.round(getVariableValue(getSize(val)) / 6)\n      if (orientation === 'horizontal') {\n        return {\n          height: size,\n          borderRadius: size,\n          justifyContent: 'center',\n        }\n      }\n      return {\n        width: size,\n        borderRadius: size,\n        alignItems: 'center',\n      }\n    },\n  } as const,\n})\n\n// export const SliderTrackFrame = styled(SliderFrame, {\n//   // name: 'SliderTrack',\n\n//   variants: {\n//     unstyled: {\n//       false: {\n//         height: '100%',\n//         width: '100%',\n//         backgroundColor: '$background',\n//         position: 'relative',\n//         borderRadius: 100_000,\n//         overflow: 'hidden',\n//       },\n//     },\n//   } as const,\n\n//   // defaultVariants: {\n//   //   unstyled: process.env.TAMAGUI_HEADLESS === '1' ? true : false,\n//   // },\n// })\n\n// const XXXX = <SliderFrame margin={10} />\n// const XX = <SliderTrackFrame  />\n\nexport const SliderImpl = React.forwardRef<View, SliderImplProps>(\n  (props: ScopedProps<SliderImplProps>, forwardedRef) => {\n    const {\n      __scopeSlider,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onHomeKeyDown,\n      onEndKeyDown,\n      onStepKeyDown,\n      ...sliderProps\n    } = props\n    const context = useSliderContext(SLIDER_NAME, __scopeSlider)\n    return (\n      <SliderFrame\n        size=\"$4\"\n        {...sliderProps}\n        data-orientation={sliderProps.orientation}\n        ref={forwardedRef}\n        {...(isWeb && {\n          onKeyDown: (event) => {\n            if (event.key === 'Home') {\n              onHomeKeyDown(event)\n              // Prevent scrolling to page start\n              event.preventDefault()\n            } else if (event.key === 'End') {\n              onEndKeyDown(event)\n              // Prevent scrolling to page end\n              event.preventDefault()\n            } else if (PAGE_KEYS.concat(ARROW_KEYS).includes(event.key)) {\n              onStepKeyDown(event)\n              // Prevent scrolling for directional key presses\n              event.preventDefault()\n            }\n          },\n        })}\n        onMoveShouldSetResponderCapture={() => true}\n        onScrollShouldSetResponder={() => true}\n        onScrollShouldSetResponderCapture={() => true}\n        onMoveShouldSetResponder={() => true}\n        onStartShouldSetResponder={() => true}\n        // onStartShouldSetResponderCapture={() => true}\n        onResponderTerminationRequest={() => {\n          return false\n        }}\n        onResponderGrant={composeEventHandlers(props.onResponderGrant, (event) => {\n          const target = event.target as unknown as TamaguiElement | number\n          const thumbIndex = context.thumbs.get(target as TamaguiElement)\n          const isStartingOnThumb = thumbIndex !== undefined\n\n          // Prevent browser focus behaviour because we focus a thumb manually when values change.\n          // Touch devices have a delay before focusing so won't focus if touch immediately moves\n          // away from target (sliding). We want thumb to focus regardless.\n          if (isWeb && target instanceof HTMLElement) {\n            if (context.thumbs.has(target)) {\n              target.focus()\n            }\n          }\n\n          // Thumbs won't receive focus events on native, so we have to manually\n          // set the value index to change when sliding starts on a thumb.\n          if (!isWeb && isStartingOnThumb) {\n            context.valueIndexToChangeRef.current = thumbIndex\n          }\n\n          onSlideStart(event, isStartingOnThumb ? 'thumb' : 'track')\n        })}\n        onResponderMove={composeEventHandlers(props.onResponderMove, (event) => {\n          event.stopPropagation()\n          // const target = event.target as HTMLElement\n          onSlideMove(event)\n        })}\n        onResponderRelease={composeEventHandlers(props.onResponderRelease, (event) => {\n          // const target = event.target as HTMLElement\n          onSlideEnd(event)\n        })}\n      />\n    )\n  }\n)\n", "import { useComposedRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport { composeEventHandlers } from '@tamagui/helpers'\nimport { useLabelContext } from '@tamagui/label'\nimport { usePrevious } from '@tamagui/use-previous'\nimport * as React from 'react'\nimport type { GestureResponderEvent, PressableProps, View, ViewProps } from 'react-native'\n\ntype SwitchBaseProps = ViewProps & Pick<PressableProps, 'onPress'>\n\nexport type SwitchExtraProps = {\n  labeledBy?: string\n  disabled?: boolean\n  name?: string\n  value?: string\n  checked?: boolean\n  defaultChecked?: boolean\n  required?: boolean\n  onCheckedChange?(checked: boolean): void\n}\n\nexport type SwitchProps = SwitchBaseProps & SwitchExtraProps\nexport type SwitchState = boolean\n\nfunction getState(checked: SwitchState) {\n  return checked ? 'checked' : 'unchecked'\n}\n\ntype InputProps = React.HTMLProps<'input'>\n\ninterface BubbleInputProps extends Omit<InputProps, 'checked'> {\n  checked: boolean\n  control: HTMLElement | null\n  bubbles: boolean\n}\n\n// TODO make this native friendly\nconst BubbleInput = (props: BubbleInputProps) => {\n  const { control, checked, bubbles = true, ...inputProps } = props\n  const ref = React.useRef<HTMLInputElement>(null)\n  const prevChecked = usePrevious(checked)\n\n  // Bubble checked change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!\n    const inputProto = window.HTMLInputElement.prototype\n    const descriptor = Object.getOwnPropertyDescriptor(\n      inputProto,\n      'checked'\n    ) as PropertyDescriptor\n    const setChecked = descriptor.set\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', { bubbles })\n      setChecked.call(input, checked)\n      input.dispatchEvent(event)\n    }\n  }, [prevChecked, checked, bubbles])\n\n  return (\n    // @ts-ignore\n    <input\n      type=\"checkbox\"\n      aria-hidden\n      defaultChecked={checked}\n      {...inputProps}\n      tabIndex={-1}\n      ref={ref}\n      style={{\n        ...props.style,\n        position: 'absolute',\n        pointerEvents: 'none',\n        opacity: 0,\n        margin: 0,\n      }}\n    />\n  )\n}\n\nexport function useSwitch<R extends View, P extends SwitchProps>(\n  props: P,\n  [checked, setChecked]: [SwitchState, React.Dispatch<React.SetStateAction<SwitchState>>],\n  ref: React.Ref<R>\n) {\n  if (process.env.TAMAGUI_TARGET === 'native') {\n    return {\n      switchProps: {\n        onPress() {\n          setChecked((prevChecked) => !prevChecked)\n        },\n      } satisfies SwitchBaseProps,\n      switchRef: ref,\n      bubbleInput: null,\n    }\n  } else {\n    const { disabled, name, value, required } = props\n    const hasConsumerStoppedPropagationRef = React.useRef(false)\n\n    const [button, setButton] = React.useState<HTMLButtonElement | null>(null)\n    const composedRefs = useComposedRefs<View>(ref, setButton as any)\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = isWeb\n      ? button\n        ? Boolean(button.closest('form'))\n        : true\n      : false\n\n    const labelId = useLabelContext(button)\n    const ariaLabelledBy = props['aria-labelledby'] || props.labeledBy || labelId\n    return {\n      switchProps: {\n        role: 'switch',\n        'aria-checked': checked,\n        ...(isWeb\n          ? {\n              tabIndex: disabled ? undefined : 0,\n              'data-state': getState(checked),\n              'data-disabled': disabled ? '' : undefined,\n              disabled: disabled,\n            }\n          : {}),\n        'aria-labelledby': ariaLabelledBy,\n        onPress: composeEventHandlers(props.onPress, (event: GestureResponderEvent) => {\n          setChecked((prevChecked) => !prevChecked)\n          if (isWeb && isFormControl) {\n            hasConsumerStoppedPropagationRef.current = event.isPropagationStopped()\n            // if switch is in a form, stop propagation from the button so that we only propagate\n            // one click event (from the input). We propagate changes from an input so that native\n            // form validation works and form events reflect switch updates.\n            if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation()\n          }\n        }),\n      } satisfies SwitchBaseProps,\n      switchRef: composedRefs,\n      /**\n       * insert as a sibling of your switch (should not be inside the switch)\n       */\n      bubbleInput:\n        isWeb && isFormControl ? (\n          <BubbleInput\n            control={button}\n            bubbles={!hasConsumerStoppedPropagationRef.current}\n            name={name}\n            value={value}\n            checked={checked}\n            required={required}\n            disabled={disabled}\n            // We transform because the input is absolutely positioned but we have\n            // rendered it **after** the button. This pulls it back to sit on top\n            // of the button.\n            style={{ transform: 'translateX(-100%)' }}\n          />\n        ) : null,\n    }\n  }\n}\n", "import type { NativeValue, SizeTokens, StackProps } from '@tamagui/core'\nimport {\n  composeEventHandlers,\n  getShorthandValue,\n  getVariableValue,\n  isWeb,\n  shouldRenderNativePlatform,\n  withStaticProperties,\n} from '@tamagui/core'\nimport { registerFocusable } from '@tamagui/focusable'\nimport type {\n  SwitchExtraProps as HeadlessSwitchExtraProps,\n  SwitchState,\n} from '@tamagui/switch-headless'\nimport { useSwitch } from '@tamagui/switch-headless'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport * as React from 'react'\nimport type {\n  LayoutChangeEvent,\n  SwitchProps as NativeSwitchProps,\n  ViewStyle,\n} from 'react-native'\nimport { Switch as NativeSwitch, View } from 'react-native'\nimport { SwitchStyledContext } from './StyledContext'\nimport { SwitchFrame as DefaultSwitchFrame, SwitchThumb } from './Switch'\n\ntype SwitchSharedProps = {\n  size?: SizeTokens | number\n  unstyled?: boolean\n}\n\ntype SwitchBaseProps = StackProps & SwitchSharedProps\n\nexport type SwitchExtraProps = HeadlessSwitchExtraProps & {\n  native?: NativeValue<'mobile' | 'ios' | 'android'>\n  nativeProps?: NativeSwitchProps\n}\n\nexport type SwitchProps = SwitchBaseProps & SwitchExtraProps\n\ntype SwitchThumbBaseProps = StackProps\n\nexport type SwitchThumbProps = SwitchThumbBaseProps & SwitchSharedProps\n\nexport const SwitchContext = React.createContext<{\n  checked: SwitchState\n  frameWidth: number\n  disabled?: boolean\n}>({\n  checked: false,\n  disabled: false,\n  frameWidth: 0,\n})\n\ntype SwitchComponent = (props: SwitchSharedProps & SwitchExtraProps) => any\ntype SwitchThumbComponent = (props: any) => any\n\nexport function createSwitch<\n  F extends SwitchComponent,\n  T extends SwitchThumbComponent,\n>(createProps: { disableActiveTheme?: boolean; Frame?: F; Thumb?: T }) {\n  const {\n    disableActiveTheme,\n    Frame = DefaultSwitchFrame,\n    Thumb = SwitchThumb,\n  } = createProps as any as {\n    disableActiveTheme?: boolean\n    Frame: typeof DefaultSwitchFrame\n    Thumb: typeof SwitchThumb\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    if (\n      (Frame !== DefaultSwitchFrame &&\n        Frame.staticConfig.context &&\n        Frame.staticConfig.context !== SwitchStyledContext) ||\n      (Thumb !== SwitchThumb &&\n        Thumb.staticConfig.context &&\n        Thumb.staticConfig.context !== SwitchStyledContext)\n    ) {\n      console.warn(\n        `Warning: createSwitch() needs to control context to pass checked state from Frame to Thumb, any custom context passed will be overridden.`\n      )\n    }\n  }\n\n  Frame.staticConfig.context = SwitchStyledContext\n  Thumb.staticConfig.context = SwitchStyledContext\n\n  const SwitchThumbComponent = Thumb.styleable<SwitchThumbProps>(\n    function SwitchThumb(props, forwardedRef) {\n      const { size: sizeProp, unstyled: unstyledProp, nativeID, ...thumbProps } = props\n      const context = React.useContext(SwitchContext)\n      const { checked, disabled, frameWidth } = context\n      const styledContext = SwitchStyledContext.useStyledContext()\n      const { unstyled: unstyledContext, size: sizeContext } = styledContext\n      const unstyled =\n        process.env.TAMAGUI_HEADLESS === '1'\n          ? true\n          : (unstyledProp ?? unstyledContext ?? false)\n      const size = sizeProp ?? sizeContext ?? '$true'\n\n      const initialChecked = React.useRef(checked).current\n\n      const initialWidth = getVariableValue(props.width, 'size')\n      const [thumbWidth, setThumbWidth] = React.useState(\n        typeof initialWidth === 'number' ? initialWidth : 0\n      )\n      const distance = frameWidth - thumbWidth\n      const x = initialChecked ? (checked ? 0 : -distance) : checked ? distance : 0\n\n      return (\n        <Thumb\n          ref={forwardedRef}\n          unstyled={unstyled}\n          {...(unstyled === false && {\n            size,\n            ...(!disableActiveTheme &&\n              !unstyled && {\n                theme: checked ? 'active' : null,\n              }),\n          })}\n          alignSelf={initialChecked ? 'flex-end' : 'flex-start'}\n          x={x}\n          onLayout={composeEventHandlers(props.onLayout, (e) => {\n            const next = e.nativeEvent.layout.width\n            if (next !== thumbWidth) {\n              setThumbWidth(next)\n            }\n          })}\n          // expected variants\n          checked={checked}\n          disabled={disabled}\n          {...thumbProps}\n        />\n      )\n    }\n  )\n\n  const SwitchComponent = Frame.styleable<SwitchProps>(\n    function SwitchFrame(_props, forwardedRef) {\n      const {\n        native,\n        nativeProps,\n        checked: checkedProp,\n        defaultChecked,\n        onCheckedChange,\n        ...props\n      } = _props\n      const [checked, setChecked] = useControllableState({\n        prop: checkedProp,\n        defaultProp: defaultChecked || false,\n        onChange: onCheckedChange,\n        transition: true,\n      })\n\n      const styledContext = React.useContext(SwitchStyledContext.context)\n\n      let estimatedInitialWidth = 0\n\n      const estWidth = getVariableValue(getShorthandValue(props, 'width'), 'size')\n\n      if (estWidth) {\n        const estPad =\n          getShorthandValue(props, 'paddingHorizontal') ??\n          getShorthandValue(props, 'padding') ??\n          0\n        const estLeftPad = getShorthandValue(props, 'paddingLeft') ?? estPad ?? 0\n        const estRightPad = getShorthandValue(props, 'paddingRight') ?? estPad ?? 0\n        estimatedInitialWidth =\n          estWidth -\n          (estLeftPad ? getVariableValue(estLeftPad, 'size') : 0) -\n          (estRightPad ? getVariableValue(estRightPad, 'size') : 0)\n      }\n\n      // this is actually inner width\n      const [frameWidth, setFrameInnerWidth] = React.useState(estimatedInitialWidth)\n\n      const { switchProps, bubbleInput, switchRef } = useSwitch(\n        // @ts-ignore\n        props as any,\n        [checked, setChecked],\n        forwardedRef\n      )\n\n      if (process.env.TAMAGUI_TARGET === 'native') {\n        React.useEffect(() => {\n          if (!props.id) return\n          if (props.disabled) return\n\n          return registerFocusable(props.id, {\n            focusAndSelect: () => {\n              setChecked?.((value) => !value)\n            },\n            focus: () => {},\n          })\n        }, [props.id, props.disabled])\n      }\n\n      const renderNative = shouldRenderNativePlatform(native)\n      if (renderNative === 'android' || renderNative === 'ios') {\n        return (\n          <NativeSwitch value={checked} onValueChange={setChecked} {...nativeProps} />\n        )\n      }\n\n      const disabled = props.disabled\n      const value = React.useMemo(\n        () => ({ checked, disabled, frameWidth }),\n        [checked, disabled, frameWidth]\n      )\n\n      const handleLayout = (e: LayoutChangeEvent) => {\n        const next = e.nativeEvent.layout.width\n        if (next !== frameWidth) {\n          setFrameInnerWidth(next)\n        }\n      }\n\n      const unstyled = styledContext.unstyled ?? props.unstyled ?? false\n\n      return (\n        <SwitchContext.Provider value={value}>\n          <Frame\n            ref={switchRef}\n            tag=\"button\"\n            {...(isWeb && { type: 'button' })}\n            {...(!unstyled && {\n              size: styledContext.size ?? props.size ?? '$true',\n            })}\n            unstyled={unstyled}\n            {...props}\n            {...(switchProps as any)}\n            {...(!disableActiveTheme &&\n              !props.unstyled && {\n                theme: checked ? 'active' : null,\n              })}\n            // expected variants\n            checked={checked}\n            disabled={disabled}\n          >\n            <View style={measureContainerStyle} onLayout={handleLayout}>\n              {!frameWidth ? null : props.children}\n            </View>\n          </Frame>\n\n          {bubbleInput}\n        </SwitchContext.Provider>\n      )\n    },\n    {\n      disableTheme: true,\n    }\n  )\n\n  return withStaticProperties(SwitchComponent, {\n    Thumb: SwitchThumbComponent,\n  })\n}\n\nconst measureContainerStyle = {\n  alignSelf: 'stretch',\n  flex: 1,\n} satisfies ViewStyle\n", "import type { SizeTokens } from '@tamagui/core'\nimport { createStyledContext } from '@tamagui/core'\n\nexport const SwitchStyledContext = createStyledContext<{\n  size?: SizeTokens\n  unstyled?: boolean\n}>({\n  size: undefined,\n  unstyled: process.env.TAMAGUI_HEADLESS === '1',\n})\n", "import type { SizeTokens } from '@tamagui/core'\nimport { getVariableValue, styled } from '@tamagui/core'\nimport { getSize } from '@tamagui/get-token'\nimport { ThemeableStack, YStack } from '@tamagui/stacks'\n\nexport const SwitchThumb = styled(ThemeableStack, {\n  name: 'SwitchThumb',\n\n  variants: {\n    unstyled: {\n      false: {\n        size: '$true',\n        backgroundColor: '$background',\n        borderRadius: 1000,\n      },\n    },\n\n    checked: {\n      true: {},\n    },\n\n    size: {\n      '...size': (val) => {\n        const size = getSwitchHeight(val)\n        return {\n          height: size,\n          width: size,\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nconst getSwitchHeight = (val: SizeTokens) =>\n  Math.round(getVariableValue(getSize(val)) * 0.65)\n\nconst getSwitchWidth = (val: SizeTokens) => getSwitchHeight(val) * 2\n\nexport const SwitchFrame = styled(YStack, {\n  name: 'Switch',\n  tag: 'button',\n  tabIndex: 0,\n\n  variants: {\n    unstyled: {\n      false: {\n        borderRadius: 1000,\n        backgroundColor: '$background',\n        borderWidth: 2,\n        borderColor: '$background',\n\n        focusVisibleStyle: {\n          outlineColor: '$outlineColor',\n          outlineStyle: 'solid',\n          outlineWidth: 2,\n        },\n      },\n    },\n\n    checked: {\n      true: {},\n    },\n\n    size: {\n      '...size': (val) => {\n        const height = getSwitchHeight(val) + 4\n        const width = getSwitchWidth(val) + 4\n        return {\n          height,\n          minHeight: height,\n          width,\n        }\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n", "import { createSwitch } from './createSwitch'\nimport { SwitchFrame, SwitchThumb } from './Switch'\n\nexport * from './createSwitch'\nexport * from './StyledContext'\nexport * from './Switch'\n\n/**\n * @summary A component that displays a switch that can be used to toggle between two states.\n * @see — Docs https://tamagui.dev/ui/switch\n *\n * @example\n * ```tsx\n * <Switch id={id} size={props.size} defaultChecked={props.defaultChecked}>\n *  <Switch.Thumb animation=\"quicker\" />\n * </Switch>\n * ```\n */\nexport const Switch = createSwitch({\n  Frame: SwitchFrame,\n  Thumb: SwitchThumb,\n})\n", "import { composeRefs } from '@tamagui/compose-refs'\nimport { isWeb } from '@tamagui/constants'\nimport { RNTamaguiViewNonStyleProps } from '@tamagui/core/types'\nimport { getButtonSized } from '@tamagui/get-button-sized'\nimport type { GroupProps } from '@tamagui/group'\nimport { Group, useGroupItem } from '@tamagui/group'\nimport { composeEventHandlers, withStaticProperties } from '@tamagui/helpers'\nimport { RovingFocusGroup } from '@tamagui/roving-focus'\nimport { SizableStack, ThemeableStack } from '@tamagui/stacks'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport { useDirection } from '@tamagui/use-direction'\nimport type {\n  GetProps,\n  GetStyledVariants,\n  SizeTokens,\n  StackStyleBase,\n  StaticConfigPublic,\n  TamaDefer,\n  TamaguiComponent,\n  TamaguiElement,\n} from '@tamagui/web'\nimport { Theme, createStyledContext, styled, useEvent } from '@tamagui/web'\nimport * as React from 'react'\nimport type { LayoutRectangle } from 'react-native'\n\nconst TABS_CONTEXT = 'TabsContext'\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList'\n\ntype TabsListFrameProps = GroupProps\n\ntype TabsListProps = TabsListFrameProps & {\n  /**\n   * Whether to loop over after reaching the end or start of the items\n   * @default true\n   */\n  loop?: boolean\n}\n\nconst TabsList = React.forwardRef<TamaguiElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, children, ...listProps } = props\n    const context = useTabsContext(__scopeTabs)\n\n    return (\n      <RovingFocusGroup\n        __scopeRovingFocusGroup={__scopeTabs || TABS_CONTEXT}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n        asChild\n      >\n        <Group\n          role=\"tablist\"\n          componentName={TAB_LIST_NAME}\n          aria-orientation={context.orientation}\n          ref={forwardedRef}\n          orientation={context.orientation}\n          {...listProps}\n        >\n          {children}\n        </Group>\n      </RovingFocusGroup>\n    )\n  }\n)\n\nTabsList.displayName = TAB_LIST_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger'\n\nconst TabsTriggerFrame = styled(ThemeableStack, {\n  name: TRIGGER_NAME,\n  tag: 'button',\n\n  variants: {\n    size: {\n      '...size': getButtonSized,\n    },\n\n    disabled: {\n      true: {\n        pointerEvents: 'none',\n      },\n    },\n\n    active: {\n      true: {\n        hoverStyle: {\n          backgroundColor: '$background',\n        },\n\n        focusStyle: {\n          backgroundColor: '$background',\n        },\n      },\n    },\n\n    unstyled: {\n      false: {\n        borderWidth: 0,\n        backgroundColor: '$background',\n        userSelect: 'none',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'nowrap',\n        flexDirection: 'row',\n        cursor: 'pointer',\n\n        pressStyle: {\n          backgroundColor: '$backgroundPress',\n        },\n\n        hoverStyle: {\n          backgroundColor: '$backgroundHover',\n        },\n\n        focusStyle: {\n          backgroundColor: '$backgroundFocus',\n        },\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\n/**\n * @deprecated Use `TabLayout` instead\n */\ntype TabsTriggerLayout = LayoutRectangle\ntype TabLayout = LayoutRectangle\ntype InteractionType = 'select' | 'focus' | 'hover'\n\ntype TabsTriggerFrameProps = GetProps<typeof TabsTriggerFrame>\n\n/**\n * @deprecated use `TabTabsProps` instead\n */\ntype TabsTriggerProps = TabsTriggerFrameProps & {\n  /** The value for the tabs state to be changed to after activation of the trigger */\n  value: string\n\n  /** Used for making custom indicators when trigger interacted with */\n  onInteraction?: (type: InteractionType, layout: TabLayout | null) => void\n\n  /** Disables setting the active theme when tab is active */\n  disableActiveTheme?: boolean\n}\n\ntype TabsTabProps = TabsTriggerProps\n\nconst TabsTrigger = TabsTriggerFrame.styleable<ScopedProps<TabsTabProps>>(\n  (props, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value,\n      disabled = false,\n      onInteraction,\n      disableActiveTheme,\n      ...triggerProps\n    } = props\n    const context = useTabsContext(__scopeTabs)\n    const triggerId = makeTriggerId(context.baseId, value)\n    const contentId = makeContentId(context.baseId, value)\n    const isSelected = value === context.value\n    const [layout, setLayout] = React.useState<TabLayout | null>(null)\n    const triggerRef = React.useRef<HTMLButtonElement>(null)\n    const groupItemProps = useGroupItem({ disabled: !!disabled })\n\n    React.useEffect(() => {\n      context.registerTrigger()\n      return () => context.unregisterTrigger()\n    }, [])\n\n    React.useEffect(() => {\n      if (!triggerRef.current || !isWeb) return\n\n      function getTriggerSize() {\n        if (!triggerRef.current) return\n        setLayout({\n          width: triggerRef.current.offsetWidth,\n          height: triggerRef.current.offsetHeight,\n          x: triggerRef.current.offsetLeft,\n          y: triggerRef.current.offsetTop,\n        })\n      }\n      getTriggerSize()\n\n      const observer = new ResizeObserver(getTriggerSize)\n      observer.observe(triggerRef.current)\n\n      return () => {\n        if (!triggerRef.current) return\n        observer.unobserve(triggerRef.current)\n      }\n    }, [context.triggersCount])\n\n    React.useEffect(() => {\n      if (isSelected && layout) {\n        onInteraction?.('select', layout)\n      }\n    }, [isSelected, value, layout])\n\n    return (\n      <Theme name={isSelected && !disableActiveTheme ? 'active' : null}>\n        <RovingFocusGroup.Item\n          __scopeRovingFocusGroup={__scopeTabs || TABS_CONTEXT}\n          asChild\n          focusable={!disabled}\n          active={isSelected}\n        >\n          <TabsTriggerFrame\n            onLayout={(event) => {\n              if (!isWeb) {\n                setLayout(event.nativeEvent.layout)\n              }\n            }}\n            onHoverIn={composeEventHandlers(props.onHoverIn, () => {\n              if (layout) {\n                onInteraction?.('hover', layout)\n              }\n            })}\n            onHoverOut={composeEventHandlers(props.onHoverOut, () => {\n              onInteraction?.('hover', null)\n            })}\n            role=\"tab\"\n            aria-selected={isSelected}\n            aria-controls={contentId}\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-disabled={disabled ? '' : undefined}\n            disabled={disabled}\n            id={triggerId}\n            {...(!props.unstyled && {\n              size: context.size,\n            })}\n            {...(isSelected && {\n              forceStyle: 'focus',\n            })}\n            {...groupItemProps}\n            {...triggerProps}\n            ref={composeRefs(forwardedRef, triggerRef)}\n            onPress={composeEventHandlers(props.onPress ?? undefined, (event) => {\n              // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n              // but not when the control key is pressed (avoiding MacOS right click)\n\n              const webChecks =\n                !isWeb ||\n                ((event as unknown as React.MouseEvent).button === 0 &&\n                  (event as unknown as React.MouseEvent).ctrlKey === false)\n              if (!disabled && !isSelected && webChecks) {\n                context.onChange(value)\n              } else {\n                // prevent focus to avoid accidental activation\n                event.preventDefault()\n              }\n            })}\n            {...(isWeb && {\n              type: 'button',\n              onKeyDown: composeEventHandlers(\n                (props as React.HTMLProps<HTMLButtonElement>).onKeyDown,\n                (event) => {\n                  if ([' ', 'Enter'].includes(event.key)) {\n                    context.onChange(value)\n                    event.preventDefault()\n                  }\n                }\n              ),\n              onFocus: composeEventHandlers(props.onFocus, (event) => {\n                if (layout) {\n                  onInteraction?.('focus', layout)\n                }\n                // handle \"automatic\" activation if necessary\n                // ie. activate tab following focus\n                const isAutomaticActivation = context.activationMode !== 'manual'\n                if (!isSelected && !disabled && isAutomaticActivation) {\n                  context.onChange(value)\n                }\n              }),\n              onBlur: composeEventHandlers(props.onFocus, () => {\n                onInteraction?.('focus', null)\n              }),\n            })}\n          />\n        </RovingFocusGroup.Item>\n      </Theme>\n    )\n  }\n)\n\nTabsTrigger.displayName = TRIGGER_NAME\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent'\n\nconst TabsContentFrame = styled(ThemeableStack, {\n  name: CONTENT_NAME,\n})\ntype TabsContentFrameProps = GetProps<typeof TabsContentFrame>\n\ntype TabsContentExtraProps = {\n  /** Will show the content when the value matches the state of Tabs root */\n  value: string\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Tamagui animations.\n   */\n  forceMount?: true\n}\n\ntype TabsContentProps = TabsContentFrameProps & TabsContentExtraProps\n\nconst TabsContent = TabsContentFrame.styleable<TabsContentExtraProps>(\n  function TabsContent(props: ScopedProps<TabsContentProps>, forwardedRef) {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props\n    const context = useTabsContext(__scopeTabs)\n    const isSelected = value === context.value\n    const show = forceMount || isSelected\n\n    const triggerId = makeTriggerId(context.baseId, value)\n    const contentId = makeContentId(context.baseId, value)\n\n    if (!show) {\n      return null\n    }\n\n    return (\n      <TabsContentFrame\n        key={value}\n        data-state={isSelected ? 'active' : 'inactive'}\n        data-orientation={context.orientation}\n        role=\"tabpanel\"\n        aria-labelledby={triggerId}\n        // @ts-ignore\n        hidden={!show}\n        id={contentId}\n        tabIndex={0}\n        {...contentProps}\n        ref={forwardedRef}\n      >\n        {children}\n      </TabsContentFrame>\n    )\n  }\n)\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs'\n\ntype ScopedProps<P> = P & { __scopeTabs?: string }\n// const [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n//   createRovingFocusGroupScope,\n// ])\n// const useRovingFocusGroupScope = createRovingFocusGroupScope()\n\ntype TabsContextValue = {\n  baseId: string\n  value?: string\n  onChange: (value: string) => void\n  orientation?: TabsProps['orientation']\n  dir?: TabsProps['dir']\n  activationMode?: TabsProps['activationMode']\n  size: SizeTokens\n  registerTrigger: () => void\n  unregisterTrigger: () => void\n  triggersCount: number\n}\n\nconst { Provider: TabsProvider, useStyledContext: useTabsContext } =\n  createStyledContext<TabsContextValue>()\n\nconst TabsFrame = styled(SizableStack, {\n  name: TABS_NAME,\n})\n\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup>\n\ntype TabsFrameProps = GetProps<typeof TabsFrame>\n\ntype TabsExtraProps<Tab = string> = {\n  /** The value for the selected tab, if controlled */\n  value?: string\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: Tab\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: Tab) => void\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation']\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir']\n  /**\n   * Whether a tab is activated automatically or manually. Only supported in web.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual'\n}\n\ntype TabsProps<Tab = string> = TabsFrameProps & TabsExtraProps<Tab>\n\nconst TabsComponent = TabsFrame.styleable<TabsExtraProps>(function Tabs(\n  props: ScopedProps<TabsProps>,\n  forwardedRef\n) {\n  const {\n    __scopeTabs,\n    value: valueProp,\n    onValueChange,\n    defaultValue,\n    orientation = 'horizontal',\n    dir,\n    activationMode = 'automatic',\n    size = '$true',\n    ...tabsProps\n  } = props\n  const direction = useDirection(dir)\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    onChange: onValueChange,\n    defaultProp: defaultValue ?? '',\n  })\n  const [triggersCount, setTriggersCount] = React.useState(0)\n  const registerTrigger = useEvent(() => setTriggersCount((v) => v + 1))\n  const unregisterTrigger = useEvent(() => setTriggersCount((v) => v - 1))\n\n  return (\n    <TabsProvider\n      scope={__scopeTabs}\n      baseId={React.useId()}\n      value={value}\n      onChange={setValue}\n      orientation={orientation}\n      dir={direction}\n      activationMode={activationMode}\n      size={size}\n      registerTrigger={registerTrigger}\n      triggersCount={triggersCount}\n      unregisterTrigger={unregisterTrigger}\n    >\n      <TabsFrame\n        direction={direction}\n        //   dir={direction}\n        data-orientation={orientation}\n        {...tabsProps}\n        ref={forwardedRef}\n      />\n    </TabsProvider>\n  )\n})\n\n// make it so it can accept a generic\n// this broke things outside our repo, but not sure why, all non style props were missing\n// like onPress etc\n// as <Tab = string>(\n//   props: TabsProps<Tab> & { ref?: React.Ref<TamaguiElement> }\n// ) => React.JSX.Element\n\nexport const Tabs = withStaticProperties(TabsComponent, {\n  List: TabsList,\n  /**\n   * @deprecated Use Tabs.Tab instead\n   */\n  Trigger: TabsTrigger,\n  Tab: TabsTrigger,\n  Content: TabsContent,\n})\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`\n}\n\nexport { useTabsContext }\n\nexport type {\n  TabsProps,\n  TabsListProps,\n  TabsTriggerProps,\n  TabsTriggerLayout,\n  TabsTabProps,\n  TabsContentProps,\n  TabLayout,\n}\n", "import { isServer } from '@tamagui/constants'\nimport { startTransition } from '@tamagui/start-transition'\nimport type { ThemeDefinition, ThemeParsed } from '@tamagui/web'\nimport {\n  ensureThemeVariable,\n  forceUpdateThemes,\n  getConfig,\n  getThemeCSSRules,\n  proxyThemeToParents,\n  simpleHash,\n  updateConfig,\n} from '@tamagui/web'\n\ntype MutateThemeOptions = {\n  mutationType: 'replace' | 'update' | 'add'\n  insertCSS?: boolean\n  avoidUpdate?: boolean\n}\n\ntype PartialTheme = Partial<Record<keyof ThemeDefinition, any>>\n\nexport type MutateOneThemeProps = {\n  name: string\n  theme: PartialTheme\n}\n\n// need to name the batch in case the theme amount changes so it removes properly\ntype Batch = boolean | string\n\n// more advanced helper used only internally in studio for now\nexport function mutateThemes({\n  themes,\n  batch,\n  insertCSS = true,\n  ...props\n}: Omit<MutateThemeOptions, 'mutationType'> & {\n  themes: MutateOneThemeProps[] // if using batch, know that if you later on do addTheme/etc it will break things\n  // batch is only useful if you know youre only ever going to change these themes using batch\n  // aka only in studio as a preview mode\n  batch?: Batch\n}) {\n  const allThemesProxied: Record<string, ThemeParsed> = {}\n  const allThemesRaw: Record<string, ThemeParsed> = {}\n  for (const { name, theme } of themes) {\n    const res = _mutateTheme({\n      ...props,\n      name,\n      theme,\n      // we'll do one update at the end\n      avoidUpdate: true,\n      // always add which also replaces but doesnt fail first time\n      mutationType: 'add',\n    })\n    if (res) {\n      allThemesProxied[name] = res.theme\n      allThemesRaw[name] = res.themeRaw\n    }\n  }\n\n  const cssRules = insertCSS ? insertThemeCSS(allThemesRaw, batch) : []\n\n  startTransition(() => {\n    for (const themeName in allThemesProxied) {\n      const theme = allThemesProxied[themeName]\n      updateThemeConfig(themeName, theme)\n    }\n    updateThemeStates()\n  })\n\n  return {\n    themes: allThemesProxied,\n    themesRaw: allThemesRaw,\n    cssRules,\n  }\n}\n\nexport function _mutateTheme(props: MutateThemeOptions & MutateOneThemeProps) {\n  if (isServer) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('Theme mutation is not supported on server side')\n    }\n    return\n  }\n  const config = getConfig()\n  const { name: themeName, theme: themeIn, insertCSS, mutationType } = props\n\n  if (process.env.NODE_ENV === 'development') {\n    if (!config) {\n      throw new Error('No config')\n    }\n    const theme = config.themes[props.name]\n\n    if (mutationType !== 'add' && !theme) {\n      throw new Error(\n        `${mutationType === 'replace' ? 'Replace' : 'Update'} theme failed! Theme ${\n          props.name\n        } does not exist`\n      )\n    }\n  }\n\n  const theme = {\n    ...(mutationType === 'update' ? (config.themes[themeName] ?? {}) : {}),\n    ...themeIn,\n  } as ThemeParsed\n\n  for (const key in theme) {\n    ensureThemeVariable(theme, key)\n  }\n\n  const themeProxied = proxyThemeToParents(themeName, theme)\n\n  const response = {\n    themeRaw: theme,\n    theme: themeProxied,\n    cssRules: [] as string[],\n  }\n\n  if (props.avoidUpdate) {\n    return response\n  }\n\n  if (insertCSS) {\n    response.cssRules = insertThemeCSS({\n      [themeName]: theme,\n    })\n  }\n\n  updateThemeConfig(themeName, themeProxied)\n  updateThemeStates()\n\n  return response\n}\n\nfunction updateThemeConfig(themeName: string, theme: ThemeParsed) {\n  const config = getConfig()\n  config.themes[themeName] = theme\n  updateConfig('themes', config.themes)\n}\n\nfunction updateThemeStates() {\n  forceUpdateThemes()\n}\n\nfunction insertThemeCSS(themes: Record<string, PartialTheme>, batch: Batch = false) {\n  if (process.env.TAMAGUI_TARGET !== 'web') {\n    return []\n  }\n\n  const config = getConfig()\n  let cssRules: string[] = []\n\n  for (const themeName in themes) {\n    const theme = themes[themeName]\n\n    const rules = getThemeCSSRules({\n      config,\n      themeName,\n      names: [themeName],\n      hasDarkLight: true,\n      theme,\n    })\n\n    cssRules = [...cssRules, ...rules]\n\n    if (!batch) {\n      updateStyle(`t_theme_style_${themeName}`, rules)\n    }\n  }\n\n  if (batch) {\n    const id = typeof batch == 'string' ? batch : simpleHash(Object.keys(themes).join(''))\n    updateStyle(`t_theme_style_${id}`, cssRules)\n  }\n\n  return cssRules\n}\n\nfunction updateStyle(id: string, rules: string[]) {\n  const existing = document.querySelector(`#${id}`)\n  const style = document.createElement('style')\n  style.id = id\n  style.appendChild(document.createTextNode(rules.join('\\n')))\n  document.head.appendChild(style)\n  if (existing) {\n    existing.parentElement?.removeChild(existing)\n  }\n}\n", "import type { ThemeDefinition, ThemeParsed } from '@tamagui/web'\n\nimport { _mutateTheme } from './_mutateTheme'\n\nexport function addTheme(props: {\n  name: string\n  theme: Partial<Record<keyof ThemeDefinition, any>>\n  insertCSS?: boolean\n}) {\n  return _mutateTheme({ ...props, insertCSS: true, mutationType: 'add' })\n}\n", "import type { ThemeDefinition, ThemeName } from '@tamagui/web'\n\nimport { _mutateTheme } from './_mutateTheme'\n\nexport function updateTheme({\n  name,\n  theme,\n}: {\n  name: ThemeName | (string & {})\n  theme: Partial<Record<keyof ThemeDefinition, any>>\n}) {\n  return _mutateTheme({ name, theme, insertCSS: true, mutationType: 'update' })\n}\n", "import type { ThemeDefinition } from '@tamagui/web'\n\nimport { _mutateTheme } from './_mutateTheme'\n\nexport function replaceTheme({\n  name,\n  theme,\n}: {\n  name: string\n  theme: Partial<Record<keyof ThemeDefinition, any>>\n}) {\n  const next = _mutateTheme({ name, theme, insertCSS: true, mutationType: 'replace' })\n  return next\n}\n", "import { isWeb } from '@tamagui/constants'\nimport { registerFocusable } from '@tamagui/focusable'\nimport { getFontSize } from '@tamagui/font-size'\nimport { getSize } from '@tamagui/get-token'\nimport type { GroupProps } from '@tamagui/group'\nimport { Group, useGroupItem } from '@tamagui/group'\nimport { withStaticProperties } from '@tamagui/helpers'\nimport { useGetThemedIcon } from '@tamagui/helpers-tamagui'\nimport { RovingFocusGroup } from '@tamagui/roving-focus'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport { useDirection } from '@tamagui/use-direction'\nimport type { FontSizeTokens, GetProps, SizeTokens } from '@tamagui/web'\nimport {\n  createStyledContext,\n  getVariableValue,\n  styled,\n  usePropsAndStyle,\n  useTheme,\n} from '@tamagui/web'\nimport React from 'react'\n\nimport type { ToggleProps } from './Toggle'\nimport { Toggle, ToggleFrame } from './Toggle'\n\nconst TOGGLE_GROUP_NAME = 'ToggleGroup'\n\n/* -------------------------------------------------------------------------------------------------\n * ToggleGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOGGLE_GROUP_ITEM_NAME = 'ToggleGroupItem'\n\nconst TOGGLE_GROUP_CONTEXT = 'ToggleGroup'\n\ntype ToggleGroupItemContextValue = { disabled?: boolean }\n\nconst { Provider: ToggleGroupItemProvider, useStyledContext: useToggleGroupItemContext } =\n  createStyledContext<ToggleGroupItemContextValue>()\n\nconst { Provider: ToggleGroupContext, useStyledContext: useToggleGroupContext } =\n  createStyledContext<ToggleGroupContextValue>()\n\ntype ToggleGroupItemElement = ToggleGroupItemImplElement\n\ntype ToggleGroupItemProps = GetProps<typeof ToggleFrame> & {\n  value: string\n  id?: string\n  disabled?: boolean\n  size?: SizeTokens\n  /**\n   * Used to disable passing styles down to children.\n   */\n  disablePassStyles?: boolean\n}\nconst ToggleGroupItem = ToggleFrame.extractable(\n  React.forwardRef<ToggleGroupItemElement, ToggleGroupItemProps>(\n    (props: ScopedProps<ToggleGroupItemProps>, forwardedRef) => {\n      const [_, { color }] = usePropsAndStyle(props)\n      const { disablePassStyles, ...rest } = props\n      const valueContext = useToggleGroupValueContext(props.__scopeToggleGroup)\n      const context = useToggleGroupContext(props.__scopeToggleGroup)\n      const pressed = valueContext?.value.includes(props.value)\n      const disabled = context.disabled || props.disabled || false\n      const groupItemProps = useGroupItem({ disabled })\n      const size = props.size ?? context.size\n\n      const sizeProps: Record<string, any> = props.unstyled\n        ? {}\n        : {\n            width: undefined,\n            height: undefined,\n            padding: getVariableValue(size) * 0.6,\n          }\n\n      const iconSize =\n        (typeof size === 'number' ? size * 0.7 : getFontSize(size as FontSizeTokens)) *\n        1.2\n\n      const theme = useTheme()\n      const getThemedIcon = useGetThemedIcon({\n        size: iconSize,\n        color: color ?? theme.color,\n      })\n\n      const childrens = React.Children.toArray(props.children)\n      const children = childrens.map((child) => {\n        if (props.disablePassStyles || !React.isValidElement(child)) {\n          return child\n        }\n        return getThemedIcon(child)\n      })\n\n      const commonProps = { pressed, disabled, ...sizeProps, ...rest, children }\n\n      const inner = (\n        <ToggleGroupItemImpl\n          {...commonProps}\n          ref={forwardedRef}\n          // focusable={!disabled}\n          tabIndex={disabled ? -1 : 0}\n          disabled={disabled}\n          {...groupItemProps}\n        />\n      )\n\n      return (\n        <ToggleGroupItemProvider scope={props.__scopeToggleGroup}>\n          {context.rovingFocus ? (\n            <RovingFocusGroup.Item\n              asChild=\"except-style\"\n              __scopeRovingFocusGroup={props.__scopeToggleGroup || TOGGLE_GROUP_CONTEXT}\n              focusable={!disabled}\n              active={pressed}\n            >\n              {inner}\n            </RovingFocusGroup.Item>\n          ) : (\n            inner\n          )}\n        </ToggleGroupItemProvider>\n      )\n    }\n  )\n)\nToggleGroupItem.displayName = TOGGLE_GROUP_ITEM_NAME\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ToggleGroupItemImplElement = React.ElementRef<typeof Toggle>\ntype ToggleGroupItemImplProps = Omit<\n  ToggleProps,\n  'defaultPressed' | 'onPressedChange' | 'size'\n> & {\n  /**\n   * A string value for the toggle group item. All items within a toggle group should use a unique value.\n   */\n  value: string\n  size?: SizeTokens\n}\n\nconst ToggleGroupItemImpl = React.forwardRef<\n  ToggleGroupItemImplElement,\n  ScopedProps<ToggleGroupItemImplProps>\n>((props: ScopedProps<ToggleGroupItemImplProps>, forwardedRef) => {\n  const { __scopeToggleGroup, value, ...itemProps } = props\n\n  const valueContext = useToggleGroupValueContext(__scopeToggleGroup)\n  const singleProps = {\n    'aria-pressed': undefined,\n  }\n  const typeProps = valueContext.type === 'single' ? singleProps : undefined\n\n  return (\n    <Toggle\n      {...typeProps}\n      {...itemProps}\n      ref={forwardedRef}\n      onPressedChange={(pressed) => {\n        if (pressed) {\n          valueContext.onItemActivate(value)\n        } else {\n          valueContext.onItemDeactivate(value)\n        }\n      }}\n    />\n  )\n})\n\n/* -----------------------------------------------------------------------------------------------*/\n\n/* -------------------------------------------------------------------------------------------------\n * ToggleGroup\n * -----------------------------------------------------------------------------------------------*/\n\ntype ScopedProps<P> = P & { __scopeToggleGroup?: string }\n\ntype ToggleGroupElement = ToggleGroupImplSingleElement | ToggleGroupImplMultipleElement\n\ninterface ToggleGroupSingleProps extends ToggleGroupImplSingleProps {\n  type: 'single'\n}\n\ninterface ToggleGroupMultipleProps extends ToggleGroupImplMultipleProps {\n  type: 'multiple'\n}\n\ntype ToggleGroupProps = ToggleGroupSingleProps | ToggleGroupMultipleProps\n\nconst ToggleGroup = withStaticProperties(\n  React.forwardRef<ToggleGroupElement, ScopedProps<ToggleGroupProps>>(\n    (props, forwardedRef) => {\n      const { type, ...toggleGroupProps } = props\n\n      if (!isWeb) {\n        React.useEffect(() => {\n          if (!props.id) return\n          return registerFocusable(props.id, {\n            // TODO: would be nice to focus on the first child later - could be done with reforest\n            // for now leaving it empty\n            focus: () => {},\n          })\n        }, [props.id])\n      }\n\n      if (type === 'single') {\n        const singleProps = toggleGroupProps as ToggleGroupImplSingleProps\n        return <ToggleGroupImplSingle {...singleProps} ref={forwardedRef} />\n      }\n\n      if (type === 'multiple') {\n        const multipleProps = toggleGroupProps as ToggleGroupImplMultipleProps\n        return <ToggleGroupImplMultiple {...multipleProps} ref={forwardedRef} />\n      }\n\n      throw new Error(`Missing prop \\`type\\` expected on \\`${TOGGLE_GROUP_NAME}\\``)\n    }\n  ),\n  {\n    Item: ToggleGroupItem,\n  }\n)\n\nToggleGroup.displayName = TOGGLE_GROUP_NAME\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ToggleGroupValueContextValue = {\n  type: 'single' | 'multiple'\n  defaultValue?: string | string[]\n  value: string[]\n  onItemActivate(value: string): void\n  onItemDeactivate(value: string): void\n}\n\nconst {\n  Provider: ToggleGroupValueProvider,\n  useStyledContext: useToggleGroupValueContext,\n} = createStyledContext<ToggleGroupValueContextValue>()\n\ntype ToggleGroupImplSingleElement = ToggleGroupImplElement\ninterface ToggleGroupImplSingleProps extends ToggleGroupImplProps {\n  /**\n   * The controlled stateful value of the item that is pressed.\n   */\n  value?: string\n  /**\n   * The value of the item that is pressed when initially rendered. Use\n   * `defaultValue` if you do not need to control the state of a toggle group.\n   */\n  defaultValue?: string\n  /**\n   * The callback that fires when the value of the toggle group changes.\n   */\n  onValueChange?(value: string): void\n  /**\n   * Won't let the user turn the active item off.\n   */\n  disableDeactivation?: boolean\n}\n\nconst ToggleGroupImplSingle = React.forwardRef<\n  ToggleGroupImplSingleElement,\n  ScopedProps<ToggleGroupImplSingleProps>\n>((props: ScopedProps<ToggleGroupImplSingleProps>, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {},\n    disableDeactivation = false,\n    ...toggleGroupSingleProps\n  } = props\n\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue!,\n    onChange: onValueChange,\n  })\n\n  return (\n    <ToggleGroupValueProvider\n      scope={props.__scopeToggleGroup}\n      type=\"single\"\n      value={value ? [value] : []}\n      defaultValue={value}\n      onItemActivate={setValue}\n      onItemDeactivate={React.useCallback(\n        () => (disableDeactivation ? null : setValue('')),\n        [setValue, disableDeactivation]\n      )}\n    >\n      <ToggleGroupImpl {...toggleGroupSingleProps} ref={forwardedRef} />\n    </ToggleGroupValueProvider>\n  )\n})\n\ntype ToggleGroupImplMultipleElement = ToggleGroupImplElement\ninterface ToggleGroupImplMultipleProps extends ToggleGroupImplProps {\n  /**\n   * The controlled stateful value of the items that are pressed.\n   */\n  value?: string[]\n  /**\n   * The value of the items that are pressed when initially rendered. Use\n   * `defaultValue` if you do not need to control the state of a toggle group.\n   */\n  defaultValue?: string[]\n  /**\n   * The callback that fires when the state of the toggle group changes.\n   */\n  onValueChange?(value: string[]): void\n  disableDeactivation?: never\n}\n\nconst ToggleGroupImplMultiple = React.forwardRef<\n  ToggleGroupImplMultipleElement,\n  ToggleGroupImplMultipleProps\n>((props: ScopedProps<ToggleGroupImplMultipleProps>, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {},\n    disableDeactivation,\n    ...toggleGroupMultipleProps\n  } = props\n\n  const [value = [], setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue!,\n    onChange: onValueChange,\n  })\n\n  const handleButtonActivate = React.useCallback(\n    (itemValue: string) => setValue((prevValue = []) => [...prevValue, itemValue]),\n    [setValue]\n  )\n\n  const handleButtonDeactivate = React.useCallback(\n    (itemValue: string) =>\n      setValue((prevValue = []) => prevValue.filter((value) => value !== itemValue)),\n    [setValue]\n  )\n\n  return (\n    <ToggleGroupValueProvider\n      scope={props.__scopeToggleGroup}\n      type=\"multiple\"\n      value={value}\n      defaultValue={value}\n      onItemActivate={handleButtonActivate}\n      onItemDeactivate={handleButtonDeactivate}\n    >\n      <ToggleGroupImpl {...toggleGroupMultipleProps} ref={forwardedRef} />\n    </ToggleGroupValueProvider>\n  )\n})\n\nToggleGroup.displayName = TOGGLE_GROUP_NAME\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ToggleGroupContextValue = {\n  rovingFocus: boolean\n  disabled: boolean\n  size: SizeTokens\n}\n\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup>\ntype TamaguiElement = HTMLElement\ntype ToggleGroupImplElement = TamaguiElement\n\nconst ToggleGroupImplElementFrame = styled(Group, {\n  name: TOGGLE_GROUP_NAME,\n\n  variants: {\n    unstyled: {\n      false: {\n        backgroundColor: '$background',\n      },\n    },\n\n    orientation: {\n      vertical: {\n        flexDirection: 'column',\n        spaceDirection: 'vertical',\n      },\n      horizontal: {\n        flexDirection: 'row',\n        spaceDirection: 'horizontal',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\ntype ToggleGroupImplProps = GetProps<typeof ToggleGroupImplElementFrame> &\n  GroupProps & {\n    rovingFocus?: boolean\n    dir?: RovingFocusGroupProps['dir']\n    loop?: RovingFocusGroupProps['loop']\n    sizeAdjust?: number\n  }\n\nconst ToggleGroupImpl = ToggleGroupImplElementFrame.extractable(\n  React.forwardRef<ToggleGroupImplElement, ToggleGroupImplProps>(\n    (props: ScopedProps<ToggleGroupImplProps>, forwardedRef) => {\n      const {\n        __scopeToggleGroup,\n        disabled = false,\n        orientation = 'horizontal',\n        dir,\n        rovingFocus = true,\n        loop = true,\n        unstyled = false,\n        size: sizeProp = '$true',\n        sizeAdjust = 0,\n        ...toggleGroupProps\n      } = props\n      const direction = useDirection(dir)\n      const commonProps: ToggleGroupImplProps = {\n        role: 'group',\n        dir: direction,\n        ...toggleGroupProps,\n      }\n      const adjustedSize = getVariableValue(\n        getSize(sizeProp, {\n          shift: sizeAdjust,\n        })\n      )\n      const size = Math.round(adjustedSize * 0.45)\n\n      return (\n        <ToggleGroupContext\n          scope={__scopeToggleGroup}\n          rovingFocus={rovingFocus}\n          disabled={disabled}\n          size={size}\n        >\n          {rovingFocus ? (\n            <RovingFocusGroup\n              asChild=\"except-style\"\n              __scopeRovingFocusGroup={__scopeToggleGroup || TOGGLE_GROUP_CONTEXT}\n              orientation={orientation}\n              dir={direction}\n              loop={loop}\n            >\n              <ToggleGroupImplElementFrame\n                aria-orientation={orientation}\n                orientation={orientation}\n                axis={orientation}\n                ref={forwardedRef}\n                data-disabled={disabled ? '' : undefined}\n                unstyled={unstyled}\n                {...commonProps}\n              />\n            </RovingFocusGroup>\n          ) : (\n            <ToggleGroupImplElementFrame\n              aria-orientation={orientation}\n              ref={forwardedRef}\n              orientation={orientation}\n              data-disabled={disabled ? '' : undefined}\n              unstyled={unstyled}\n              {...commonProps}\n            />\n          )}\n        </ToggleGroupContext>\n      )\n    }\n  )\n)\n\nexport { ToggleGroup }\nexport type {\n  ToggleGroupItemProps,\n  ToggleGroupMultipleProps,\n  ToggleGroupProps,\n  ToggleGroupSingleProps,\n}\n", "import { composeEventHandlers } from '@tamagui/helpers'\nimport { ThemeableStack } from '@tamagui/stacks'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport type { GetProps } from '@tamagui/web'\nimport { createStyledContext, styled, Text } from '@tamagui/web'\nimport * as React from 'react'\n\nexport const context = createStyledContext({\n  color: '',\n})\n\n/* -------------------------------------------------------------------------------------------------\n * Toggle\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Toggle'\n\ntype TamaguiButtonElement = HTMLButtonElement\n\nexport type ToggleElement = TamaguiButtonElement\n\nexport const ToggleFrame = styled(ThemeableStack, {\n  name: NAME,\n  tag: 'button',\n  context,\n\n  variants: {\n    unstyled: {\n      false: {\n        pressTheme: true,\n        backgroundColor: '$background',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        borderColor: '$borderColor',\n        borderWidth: 1,\n        margin: -1,\n        hoverStyle: {\n          backgroundColor: '$backgroundHover',\n        },\n        pressStyle: {\n          backgroundColor: '$backgroundPress',\n        },\n        focusStyle: {\n          borderColor: '$borderColorFocus',\n        },\n        focusVisibleStyle: {\n          outlineColor: '$outlineColor',\n          outlineWidth: 2,\n          outlineStyle: 'solid',\n        },\n      },\n    },\n\n    color: {\n      '...color': () => {\n        return {}\n      },\n    },\n\n    active: {\n      true: {\n        zIndex: 1,\n\n        hoverStyle: {\n          backgroundColor: '$background',\n        },\n\n        focusStyle: {\n          borderColor: '$borderColor',\n          backgroundColor: '$background',\n        },\n      },\n    },\n\n    orientation: {\n      horizontal: {\n        flexDirection: 'row',\n        spaceDirection: 'horizontal',\n      },\n      vertical: {\n        flexDirection: 'column',\n        spaceDirection: 'vertical',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\ntype ToggleFrameProps = GetProps<typeof ToggleFrame>\n\ntype ToggleItemExtraProps = {\n  defaultValue?: string\n  disabled?: boolean\n  pressed?: boolean\n  defaultPressed?: boolean\n  onPressedChange?(pressed: boolean): void\n}\n\nexport type ToggleProps = ToggleFrameProps & ToggleItemExtraProps\n\nexport const Toggle = React.forwardRef<ToggleElement, ToggleProps>(\n  function Toggle(props, forwardedRef) {\n    const {\n      pressed: pressedProp,\n      defaultPressed = false,\n      onPressedChange,\n      ...buttonProps\n    } = props\n\n    const [pressed = false, setPressed] = useControllableState({\n      prop: pressedProp,\n      onChange: onPressedChange,\n      defaultProp: defaultPressed,\n    })\n\n    return (\n      <ToggleFrame\n        {...(!props.unstyled && {\n          theme: pressed ? 'active' : null,\n          themeShallow: true,\n        })}\n        active={!props.unstyled ? pressed : undefined}\n        aria-pressed={pressed}\n        data-state={pressed ? 'on' : 'off'}\n        data-disabled={props.disabled ? '' : undefined}\n        {...buttonProps}\n        ref={forwardedRef}\n        onPress={composeEventHandlers(props.onPress ?? undefined, () => {\n          if (!props.disabled) {\n            setPressed(!pressed)\n          }\n        })}\n      />\n    )\n  }\n)\n\n/* ---------------------------------------------------------------------------------------------- */\n", "import '@tamagui/polyfill-dev'\n\nimport {\n  FloatingDelayGroup,\n  useDelayGroup,\n  useDelayGroupContext,\n  useDismiss,\n  useFloating,\n  useFocus,\n  useHover,\n  useInteractions,\n  useRole,\n} from '@floating-ui/react'\nimport type { ScopedProps, SizeTokens } from '@tamagui/core'\nimport { useEvent } from '@tamagui/core'\nimport type { UseFloatingFn } from '@tamagui/floating'\nimport { FloatingOverrideContext } from '@tamagui/floating'\nimport { getSize } from '@tamagui/get-token'\nimport { withStaticProperties } from '@tamagui/helpers'\nimport type {\n  PopoverAnchorProps,\n  PopoverArrowProps,\n  PopoverContentProps,\n  PopoverTriggerProps,\n} from '@tamagui/popover'\nimport {\n  PopoverAnchor,\n  PopoverArrow,\n  PopoverContent,\n  PopoverContext,\n  PopoverTrigger,\n} from '@tamagui/popover'\nimport type { PopperProps } from '@tamagui/popper'\nimport { Popper, PopperContentFrame, usePopperContext } from '@tamagui/popper'\nimport { useControllableState } from '@tamagui/use-controllable-state'\nimport * as React from 'react'\n\nconst TOOLTIP_SCOPE = 'tooltip'\ntype ScopedTooltipProps<P> = ScopedProps<P, 'Tooltip'>\n\nconst TooltipContent = PopperContentFrame.extractable(\n  React.forwardRef(\n    ({ __scopeTooltip, ...props }: ScopedTooltipProps<PopoverContentProps>, ref: any) => {\n      const preventAnimation = React.useContext(PreventTooltipAnimationContext)\n      const popper = usePopperContext(__scopeTooltip || TOOLTIP_SCOPE)\n      const padding = !props.unstyled\n        ? (props.padding ??\n          props.size ??\n          popper.size ??\n          getSize('$true', {\n            shift: -2,\n          }))\n        : undefined\n\n      return (\n        <PopoverContent\n          __scopePopover={__scopeTooltip || TOOLTIP_SCOPE}\n          componentName=\"Tooltip\"\n          disableRemoveScroll\n          disableFocusScope\n          {...(!props.unstyled && {\n            padding,\n            pointerEvents: 'none',\n          })}\n          ref={ref}\n          {...props}\n          {...(preventAnimation && {\n            animation: null,\n          })}\n        />\n      )\n    }\n  )\n)\n\nconst TooltipArrow = React.forwardRef(\n  (props: ScopedTooltipProps<PopoverArrowProps>, ref: any) => {\n    const { __scopeTooltip, ...rest } = props\n    return (\n      <PopoverArrow\n        __scopePopper={__scopeTooltip || TOOLTIP_SCOPE}\n        componentName=\"Tooltip\"\n        ref={ref}\n        {...rest}\n      />\n    )\n  }\n)\n\nexport type TooltipProps = PopperProps & {\n  open?: boolean\n  unstyled?: boolean\n  children?: React.ReactNode\n  onOpenChange?: (open: boolean) => void\n  focus?: {\n    enabled?: boolean\n    visibleOnly?: boolean\n  }\n  groupId?: string\n  restMs?: number\n  delay?:\n    | number\n    | {\n        open?: number\n        close?: number\n      }\n  disableAutoCloseOnScroll?: boolean\n}\n\ntype Delay =\n  | number\n  | Partial<{\n      open: number\n      close: number\n    }>\n\nconst PreventTooltipAnimationContext = React.createContext(false)\n\nexport const TooltipGroup = ({\n  children,\n  delay,\n  preventAnimation = false,\n  timeoutMs,\n}: { children?: any; delay: Delay; preventAnimation?: boolean; timeoutMs?: number }) => {\n  return (\n    <PreventTooltipAnimationContext.Provider value={preventAnimation}>\n      <FloatingDelayGroup\n        timeoutMs={timeoutMs}\n        delay={React.useMemo(() => delay, [JSON.stringify(delay)])}\n      >\n        {children}\n      </FloatingDelayGroup>\n    </PreventTooltipAnimationContext.Provider>\n  )\n}\n\nconst setOpens = new Set<React.Dispatch<React.SetStateAction<boolean>>>()\n\nexport const closeOpenTooltips = () => {\n  setOpens.forEach((x) => x(false))\n}\n\nconst TooltipComponent = React.forwardRef(function Tooltip(\n  props: ScopedTooltipProps<TooltipProps>,\n  // no real ref here but React complaining need to see why see SandboxCustomStyledAnimatedTooltip.ts\n  ref\n) {\n  const {\n    children,\n    delay: delayProp,\n    restMs = typeof delayProp === 'undefined'\n      ? 500\n      : typeof delayProp === 'number'\n        ? delayProp\n        : 0,\n    onOpenChange: onOpenChangeProp,\n    focus,\n    open: openProp,\n    disableAutoCloseOnScroll,\n    __scopeTooltip,\n    ...restProps\n  } = props\n  const triggerRef = React.useRef<HTMLButtonElement>(null)\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false)\n  const { delay: delayGroup, setCurrentId } = useDelayGroupContext()\n  const delay = delayProp ?? delayGroup\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: false,\n    onChange: onOpenChangeProp,\n  })\n  const id = props.groupId\n\n  const onOpenChange = useEvent((open) => {\n    if (open) {\n      setCurrentId(id)\n    }\n    setOpen(open)\n  })\n\n  // Auto close when document scroll\n  React.useEffect(() => {\n    if (!open) return\n    if (disableAutoCloseOnScroll) return\n    if (typeof document === 'undefined') return\n    const openIt = () => {\n      setOpen(false)\n    }\n    setOpens.add(setOpen)\n    document.documentElement.addEventListener('scroll', openIt)\n    return () => {\n      setOpens.delete(setOpen)\n      document.documentElement.removeEventListener('scroll', openIt)\n    }\n  }, [open, disableAutoCloseOnScroll])\n\n  const useFloatingFn: UseFloatingFn = (props) => {\n    // @ts-ignore\n    const floating = useFloating({\n      ...props,\n      open,\n      onOpenChange,\n    })\n    const { delay: delayContext } = useDelayGroup(floating.context, { id })\n    const { getReferenceProps, getFloatingProps } = useInteractions([\n      useHover(floating.context, { delay: delay ?? delayContext, restMs }),\n      useFocus(floating.context, focus),\n      useRole(floating.context, { role: 'tooltip' }),\n      useDismiss(floating.context),\n    ])\n    return {\n      ...floating,\n      open,\n      getReferenceProps,\n      getFloatingProps,\n    } as any\n  }\n\n  const useFloatingContext = React.useCallback(useFloatingFn, [\n    id,\n    delay,\n    open,\n    restMs,\n    focus ? JSON.stringify(focus) : 0,\n  ])\n  const onCustomAnchorAdd = React.useCallback(() => setHasCustomAnchor(true), [])\n  const onCustomAnchorRemove = React.useCallback(() => setHasCustomAnchor(false), [])\n  const contentId = React.useId()\n  const smallerSize = props.unstyled\n    ? null\n    : getSize('$true', {\n        shift: -2,\n        bounds: [0],\n      })\n\n  return (\n    // TODO: FloatingOverrideContext might also need to be scoped\n    <FloatingOverrideContext.Provider value={useFloatingContext}>\n      {/* default tooltip to a smaller size */}\n      <Popper\n        __scopePopper={__scopeTooltip || TOOLTIP_SCOPE}\n        size={smallerSize?.key as SizeTokens}\n        allowFlip\n        stayInFrame\n        {...restProps}\n      >\n        <PopoverContext.Provider\n          contentId={contentId}\n          triggerRef={triggerRef}\n          open={open}\n          scope={__scopeTooltip || TOOLTIP_SCOPE}\n          onOpenChange={setOpen}\n          onOpenToggle={voidFn}\n          hasCustomAnchor={hasCustomAnchor}\n          onCustomAnchorAdd={onCustomAnchorAdd}\n          onCustomAnchorRemove={onCustomAnchorRemove}\n        >\n          {children}\n        </PopoverContext.Provider>\n      </Popper>\n    </FloatingOverrideContext.Provider>\n  )\n})\n\nconst TooltipTrigger = React.forwardRef(function TooltipTrigger(\n  props: ScopedTooltipProps<PopoverTriggerProps>,\n  ref: any\n) {\n  const { __scopeTooltip, ...rest } = props\n  return (\n    <PopoverTrigger\n      {...rest}\n      __scopePopover={__scopeTooltip || TOOLTIP_SCOPE}\n      ref={ref}\n    />\n  )\n})\n\nconst TooltipAnchor = React.forwardRef(function TooltipAnchor(\n  props: ScopedTooltipProps<PopoverAnchorProps>,\n  ref: any\n) {\n  const { __scopeTooltip, ...rest } = props\n  return (\n    <PopoverAnchor {...rest} __scopePopover={__scopeTooltip || TOOLTIP_SCOPE} ref={ref} />\n  )\n})\n\nexport const Tooltip = withStaticProperties(TooltipComponent, {\n  Anchor: TooltipAnchor,\n  Arrow: TooltipArrow,\n  Content: TooltipContent,\n  Trigger: TooltipTrigger,\n})\n\nconst voidFn = () => {}\n", "import { getSpace } from '@tamagui/get-token'\nimport type { SizableStackProps } from '@tamagui/stacks'\nimport { Paragraph } from '@tamagui/text'\nimport * as React from 'react'\n\nimport type { TooltipProps } from './Tooltip'\nimport { Tooltip } from './Tooltip'\n\nexport type TooltipSimpleProps = TooltipProps & {\n  disabled?: boolean\n  label?: React.ReactNode\n  children?: React.ReactNode\n  contentProps?: SizableStackProps\n}\n\nexport const TooltipSimple: React.FC<TooltipSimpleProps> = React.forwardRef(\n  ({ label, children, contentProps, disabled, ...tooltipProps }, ref) => {\n    const child = React.Children.only(children)\n\n    if (!label) {\n      return children\n    }\n\n    return (\n      <Tooltip\n        disableRTL\n        offset={15}\n        restMs={40}\n        delay={40}\n        {...tooltipProps}\n        {...(disabled ? { open: false } : null)}\n      >\n        <Tooltip.Trigger\n          {...(typeof label === 'string' && {\n            'aria-label': label,\n          })}\n          asChild=\"except-style\"\n        >\n          {ref && React.isValidElement(child)\n            ? React.cloneElement(child, { ref } as any)\n            : child}\n        </Tooltip.Trigger>\n        <Tooltip.Content\n          zIndex={1_000_000_000}\n          enterStyle={{ x: 0, y: -4, opacity: 0, scale: 0.96 }}\n          exitStyle={{ x: 0, y: -4, opacity: 0, scale: 0.96 }}\n          x={0}\n          scale={1}\n          y={0}\n          elevation=\"$0.5\"\n          opacity={1}\n          pointerEvents=\"none\"\n          paddingVertical={getSpace(tooltipProps.size || '$true', {\n            shift: -4,\n          })}\n          animateOnly={['transform', 'opacity']}\n          animation={[\n            'quicker',\n            {\n              opacity: {\n                overshootClamping: true,\n              },\n            },\n          ]}\n          {...contentProps}\n        >\n          <Tooltip.Arrow />\n          <Paragraph size=\"$3\">{label}</Paragraph>\n        </Tooltip.Content>\n      </Tooltip>\n    )\n  }\n)\n", "import React from 'react'\nimport { isWeb } from '@tamagui/constants'\n\nimport type { ScaledSize } from 'react-native'\nimport { Dimensions } from 'react-native'\n\n/**\n * SSR safe useWindowDimensions\n */\n\ntype Size = {\n  width: number\n  height: number\n}\n\nconst initialValue: Size = {\n  height: 800,\n  width: 600,\n}\n\nexport function configureInitialWindowDimensions(next: Size): void {\n  Object.assign(initialValue, next)\n}\n\nDimensions.addEventListener('change', () => {\n  cbs.forEach((cb) => cb(window))\n})\n\nconst cbs = new Set<Function>()\n\ntype WindowSizeListener = ({ window }: { window: ScaledSize }) => void\n\nfunction subscribe(cb: WindowSizeListener) {\n  cbs.add(cb)\n  return () => cbs.delete(cb)\n}\n\nexport function useWindowDimensions({\n  serverValue = initialValue,\n}: { serverValue?: Size } = {}): Size {\n  return React.useSyncExternalStore(\n    subscribe,\n    () => Dimensions.get('window'),\n    () => (isWeb ? serverValue : Dimensions.get('window'))\n  )\n}\n", "import {\n  type TamaDefer,\n  type TamaguiComponent,\n  type TamaguiTextElement,\n  Text,\n  type TextNonStyleProps,\n  type TextStylePropsBase,\n  styled,\n} from '@tamagui/web'\n\nexport const VisuallyHidden: TamaguiComponent<\n  TamaDefer,\n  TamaguiTextElement,\n  TextNonStyleProps,\n  TextStylePropsBase,\n  {\n    visible?: boolean | undefined\n    preserveDimensions?: boolean | undefined\n  }\n> = styled(Text, {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  zIndex: -10000,\n  overflow: 'hidden',\n  opacity: 0.00000001,\n  pointerEvents: 'none',\n\n  variants: {\n    preserveDimensions: {\n      true: {\n        position: 'relative',\n        width: 'auto',\n        height: 'auto',\n      },\n    },\n\n    visible: {\n      true: {\n        position: 'relative',\n        width: 'auto',\n        height: 'auto',\n        margin: 0,\n        zIndex: 1,\n        overflow: 'visible',\n        opacity: 1,\n        pointerEvents: 'auto',\n      },\n    },\n  } as const,\n})\n\n// @tamgui/core checks for this in spacing\nVisuallyHidden['isVisuallyHidden'] = true\n", "import { createTamagui as createTamaguiCore } from '@tamagui/core'\n\n/**\n * Adds some helpful validation at dev time only for `tamagui` specifically\n **/\n\nexport const createTamagui: typeof createTamaguiCore =\n  process.env.NODE_ENV !== 'development'\n    ? createTamaguiCore\n    : (conf) => {\n        const sizeTokenKeys = ['$true']\n\n        const hasKeys = (expectedKeys: string[], obj: Record<any, any>) => {\n          return expectedKeys.every((k) => typeof obj[k] !== 'undefined')\n        }\n\n        const tamaguiConfig = createTamaguiCore(conf)\n\n        // size and space should be fully defined\n        for (const name of ['size', 'space'] as const) {\n          const tokenSet = tamaguiConfig.tokensParsed[name]\n          if (!tokenSet) {\n            throw new Error(\n              `Expected tokens for \"${name}\" in ${Object.keys(\n                tamaguiConfig.tokensParsed\n              ).join(', ')}`\n            )\n          }\n          if (!hasKeys(sizeTokenKeys, tokenSet)) {\n            throw new Error(`\ncreateTamagui() missing expected tokens.${name}:\n\nReceived: ${Object.keys(tokenSet).join(', ')}\n\nExpected: ${sizeTokenKeys.join(', ')}\n\nTamagui expects a \"true\" key that is the same value as your default size. This is so \nit can size things up or down from the defaults without assuming which keys you use.\n\nPlease define a \"true\" or \"$true\" key on your size and space tokens like so (example):\n\nsize: {\n  sm: 2,\n  md: 10,\n  true: 10, // this means \"md\" is your default size\n  lg: 20,\n}\n\n`)\n          }\n        }\n\n        // others must define subset of size tokens\n        const expected = Object.keys(tamaguiConfig.tokensParsed.size)\n        for (const name of ['radius', 'zIndex'] as const) {\n          const tokenSet = tamaguiConfig.tokensParsed[name]\n          const received = Object.keys(tokenSet)\n          const hasSomeOverlap = received.some((rk) => expected.includes(rk))\n          if (!hasSomeOverlap) {\n            throw new Error(`\ncreateTamagui() invalid tokens.${name}:\n\nReceived: ${received.join(', ')}\n\nExpected a subset of: ${expected.join(', ')}\n\n`)\n          }\n        }\n\n        return tamaguiConfig\n      }\n", "import type { TamaguiProviderProps } from '@tamagui/core'\nimport { TamaguiProvider as OGProvider } from '@tamagui/core'\nimport { PortalProvider } from '@tamagui/portal'\nimport { ZIndexStackContext } from '@tamagui/z-index-stack'\n\nexport const TamaguiProvider = ({ children, ...props }: TamaguiProviderProps) => {\n  return (\n    <OGProvider {...props}>\n      <ZIndexStackContext.Provider value={1}>\n        <PortalProvider shouldAddRootHost>{children}</PortalProvider>\n      </ZIndexStackContext.Provider>\n    </OGProvider>\n  )\n}\n", "import { isWeb } from '@tamagui/constants'\nimport { styled } from '@tamagui/core'\nimport type { SizableTextProps } from '@tamagui/text'\nimport { SizableText } from '@tamagui/text'\nimport { Linking } from 'react-native'\n\nexport interface AnchorExtraProps {\n  href?: string\n  target?: string\n  rel?: string\n}\n\nexport type AnchorProps = SizableTextProps & AnchorExtraProps\n\nconst AnchorFrame = styled(SizableText, {\n  name: 'Anchor',\n  tag: 'a',\n  accessibilityRole: 'link',\n})\n\nexport const Anchor = AnchorFrame.styleable<AnchorExtraProps>(\n  ({ href, target, ...props }, ref) => {\n    return (\n      <AnchorFrame\n        {...props}\n        {...(isWeb\n          ? {\n              href,\n              target,\n            }\n          : {\n              onPress: (event) => {\n                props.onPress?.(event)\n                if (href !== undefined) {\n                  Linking.openURL(href)\n                }\n              },\n            })}\n        ref={ref as any}\n      />\n    )\n  }\n)\n", "import { Text, styled } from '@tamagui/core'\n\n// expands flex elements when they should push a far as they \"want\" naturally\n\nexport const EnsureFlexed = styled(Text, {\n  opacity: 0,\n  lineHeight: 0,\n  height: 0,\n  display: 'flex',\n  fontSize: 200,\n  children: 'wwwwwwwwwwwwwwwwwww',\n  pointerEvents: 'none',\n})\n\n// @tamgui/core checks for this in spacing\n// @ts-ignore its ok some type setups dont like this\nEnsureFlexed['isVisuallyHidden'] = true\n", "import type { GetProps } from '@tamagui/core'\nimport { styled } from '@tamagui/core'\nimport { YStack } from '@tamagui/stacks'\n\nexport const Fieldset = styled(YStack, {\n  name: 'Fieldset',\n  tag: 'fieldset',\n\n  variants: {\n    horizontal: {\n      true: {\n        flexDirection: 'row',\n        alignItems: 'center',\n      },\n    },\n  } as const,\n})\n\nexport type FieldsetProps = GetProps<typeof Fieldset>\n", "import React from 'react'\nimport { isWeb } from '@tamagui/constants'\nimport type { GetProps } from '@tamagui/core'\nimport { styled, useComposedRefs, useTheme } from '@tamagui/core'\nimport { useFocusable } from '@tamagui/focusable'\nimport { TextInput } from 'react-native'\n\nimport { inputSizeVariant } from '../helpers/inputHelpers'\n\nexport const defaultStyles = {\n  size: '$true',\n  fontFamily: '$body',\n  borderWidth: 1,\n  outlineWidth: 0,\n  color: '$color',\n\n  ...(isWeb\n    ? {\n        tabIndex: 0 as const,\n      }\n    : {\n        focusable: true,\n      }),\n\n  borderColor: '$borderColor',\n  backgroundColor: '$background',\n\n  // this fixes a flex bug where it overflows container\n  minWidth: 0,\n\n  hoverStyle: {\n    borderColor: '$borderColorHover',\n  },\n\n  focusStyle: {\n    borderColor: '$borderColorFocus',\n  },\n\n  focusVisibleStyle: {\n    outlineColor: '$outlineColor',\n    outlineWidth: 2,\n    outlineStyle: 'solid',\n  },\n} as const\n\nexport const InputFrame = styled(\n  TextInput,\n  {\n    name: 'Input',\n\n    variants: {\n      unstyled: {\n        false: defaultStyles,\n      },\n\n      size: {\n        '...size': inputSizeVariant,\n      },\n\n      disabled: {\n        true: {},\n      },\n    } as const,\n\n    defaultVariants: {\n      unstyled: process.env.TAMAGUI_HEADLESS === '1',\n    },\n  },\n  {\n    isInput: true,\n\n    accept: {\n      placeholderTextColor: 'color',\n      selectionColor: 'color',\n    } as const,\n  }\n)\n\n// const x = <InputFrame selectionColor=\"\" />\n\nexport type Input = TextInput\n\nexport type InputFrameProps = GetProps<typeof InputFrame>\n\nexport type InputExtraProps = {\n  rows?: number\n}\n\nexport type InputProps = InputFrameProps & InputExtraProps\n\nexport const Input = InputFrame.styleable<InputExtraProps>((propsIn, forwardedRef) => {\n  const ref = React.useRef<Input>(null)\n  const composedRefs = useComposedRefs(forwardedRef, ref)\n  const props = useInputProps(propsIn, composedRefs)\n\n  return <InputFrame {...props} />\n})\n\nexport function useInputProps(props: InputProps, ref: any) {\n  const theme = useTheme()\n  const focusableProps = useFocusable({\n    props,\n    ref,\n    isInput: true,\n  })\n\n  const placeholderTextColor = React.useMemo(() => {\n    const placeholderColorProp = props.placeholderTextColor\n    return (\n      theme[placeholderColorProp as any]?.get() ??\n      placeholderColorProp ??\n      theme.placeholderColor?.get()\n    )\n  }, [props.placeholderTextColor, theme])\n\n  return React.useMemo(\n    () => ({\n      ref: focusableProps.ref,\n      readOnly: props.disabled,\n      ...props,\n      placeholderTextColor,\n      onChangeText: focusableProps.onChangeText,\n    }),\n    [\n      focusableProps.ref,\n      focusableProps.onChangeText,\n      props.disabled,\n      props,\n      placeholderTextColor,\n    ]\n  )\n}\n", "import type { SizeVariantSpreadFunction } from '@tamagui/core'\nimport { getVariableValue, isWeb } from '@tamagui/core'\nimport { getButtonSized } from '@tamagui/get-button-sized'\nimport { getFontSized } from '@tamagui/get-font-sized'\nimport { getSpace } from '@tamagui/get-token'\n\nexport const inputSizeVariant: SizeVariantSpreadFunction<any> = (\n  val = '$true',\n  extras\n) => {\n  if (extras.props.multiline || extras.props.numberOfLines > 1) {\n    return textAreaSizeVariant(val, extras)\n  }\n  const buttonStyles = getButtonSized(val, extras)\n  const paddingHorizontal = getSpace(val, {\n    shift: -1,\n    bounds: [2],\n  })\n  const fontStyle = getFontSized(val as any, extras)\n  // lineHeight messes up input on native\n  if (!isWeb && fontStyle) {\n    delete fontStyle['lineHeight']\n  }\n  return {\n    ...fontStyle,\n    ...buttonStyles,\n    paddingHorizontal,\n  }\n}\n\nexport const textAreaSizeVariant: SizeVariantSpreadFunction<any> = (\n  val = '$true',\n  extras\n) => {\n  const { props } = extras\n  const buttonStyles = getButtonSized(val, extras)\n  const fontStyle = getFontSized(val as any, extras)!\n  const lines = props.rows ?? props.numberOfLines\n  const height =\n    typeof lines === 'number' ? lines * getVariableValue(fontStyle.lineHeight) : 'auto'\n  const paddingVertical = getSpace(val, {\n    shift: -2,\n    bounds: [2],\n  })\n  const paddingHorizontal = getSpace(val, {\n    shift: -1,\n    bounds: [2],\n  })\n  return {\n    ...buttonStyles,\n    ...fontStyle,\n    paddingVertical,\n    paddingHorizontal,\n    height,\n  }\n}\n", "import type { ColorTokens, TamaguiElement, ThemeTokens } from '@tamagui/core'\nimport { themeable, useTheme, variableToString } from '@tamagui/core'\nimport type { YStackProps } from '@tamagui/stacks'\nimport { YStack } from '@tamagui/stacks'\nimport * as React from 'react'\nimport { ActivityIndicator } from 'react-native'\n\nexport type SpinnerProps = Omit<YStackProps, 'children'> & {\n  size?: 'small' | 'large'\n  color?: (ColorTokens | ThemeTokens | (string & {})) | null\n}\n\nexport const Spinner: React.ForwardRefExoticComponent<\n  SpinnerProps & React.RefAttributes<any>\n> = YStack.extractable(\n  themeable(\n    React.forwardRef<TamaguiElement>((props: SpinnerProps, ref) => {\n      const { size, color: colorProp, ...stackProps } = props\n      const theme = useTheme()\n      let color = colorProp as string\n      if (color && color[0] === '$') {\n        color = variableToString(theme[color])\n      }\n      return (\n        <YStack ref={ref} {...stackProps}>\n          <ActivityIndicator size={size} color={color} />\n        </YStack>\n      )\n    }),\n    {\n      componentName: 'Spinner',\n    }\n  )\n) as any\n", "import React from 'react'\nimport { isWeb } from '@tamagui/constants'\nimport { styled, useComposedRefs } from '@tamagui/core'\n\nimport { textAreaSizeVariant } from '../helpers/inputHelpers'\nimport type { Input, InputExtraProps, InputProps } from './Input'\nimport { InputFrame, defaultStyles, useInputProps } from './Input'\n\n/**\n * Is basically Input but with rows = 4 to start\n */\n\nexport const TextAreaFrame = styled(InputFrame, {\n  name: 'TextArea',\n  multiline: true,\n  // this attribute fixes firefox newline issue\n  whiteSpace: 'pre-wrap',\n\n  variants: {\n    unstyled: {\n      false: {\n        height: 'auto',\n        ...defaultStyles,\n      },\n    },\n\n    size: {\n      '...size': textAreaSizeVariant,\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n\nexport type TextAreaProps = InputProps\n\nexport const TextArea = TextAreaFrame.styleable<InputExtraProps>(\n  (propsIn, forwardedRef) => {\n    const ref = React.useRef<Input>(null)\n    const composedRefs = useComposedRefs(forwardedRef, ref)\n\n    const props = useInputProps(propsIn, composedRefs)\n    // defaults to 4 rows\n    const linesProp = {\n      // web uses rows now, but native not caught up :/\n      [isWeb ? 'rows' : 'numberOfLines']: propsIn.unstyled ? undefined : 4,\n    }\n\n    return <TextAreaFrame {...linesProp} {...props} />\n  }\n) as typeof Input\n", "import { Text as TamaguiText, styled } from '@tamagui/core'\n\n// TODO remove in v2\n\nexport const Text = styled(TamaguiText, {\n  variants: {\n    unstyled: {\n      false: {\n        color: '$color',\n      },\n    },\n  } as const,\n\n  defaultVariants: {\n    unstyled: process.env.TAMAGUI_HEADLESS === '1',\n  },\n})\n"],
  "mappings": "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",
  "names": ["startTransition", "callback", "reactStartTransition", "emptyCallbackFn", "_", "useControllableState", "prop", "defaultProp", "onChange", "strategy", "preventUpdate", "transition", "state", "setState", "useState", "previous", "useRef", "propWins", "value", "onChangeCb", "useEvent", "idFn", "transitionFn", "startTransition", "React", "useEffect", "current", "setter", "next", "nextValue", "React", "COLLAPSIBLE_NAME", "Provider", "CollapsibleProvider", "useStyledContext", "useCollapsibleContext", "createStyledContext", "_Collapsible", "forwardRef", "props", "forwardedRef", "__scopeCollapsible", "open", "openProp", "defaultOpen", "disabled", "onOpenChange", "collapsibleProps", "setOpen", "useControllableState", "prop", "defaultProp", "onChange", "jsx", "scope", "contentId", "useId", "onOpenToggle", "useCallback", "prevOpen", "children", "Stack", "getState", "ref", "displayName", "TRIGGER_NAME", "CollapsibleTriggerFrame", "styled", "name", "tag", "CollapsibleTrigger", "styleable", "triggerProps", "context", "onPress", "composeEventHandlers", "CONTENT_NAME", "CollapsibleContentFrame", "CollapsibleContent", "forceMount", "contentProps", "AnimatePresence", "ResetPresence", "Collapsible", "withStaticProperties", "Trigger", "Content", "import_react", "import_jsx_runtime", "createCollection", "name", "Provider", "CollectionProviderImpl", "useStyledContext", "useCollectionContext", "createStyledContext", "collectionRef", "current", "itemMap", "Map", "CollectionProvider", "props", "__scopeCollection", "children", "ref", "React", "useRef", "jsx", "scope", "displayName", "COLLECTION_SLOT_NAME", "CollectionSlot", "forwardRef", "forwardedRef", "context", "composedRefs", "useComposedRefs", "Slot", "ITEM_SLOT_NAME", "ITEM_DATA_ATTR", "CollectionItemSlot", "itemData", "useEffect", "set", "delete", "useCollection", "useCallback", "isWeb", "collectionNode", "orderedNodes", "Array", "from", "querySelectorAll", "values", "sort", "a", "b", "indexOf", "ItemSlot", "getElevation", "size", "extras", "tokens", "token", "sizeNum", "isVariable", "val", "getSizedElevation", "theme", "num", "val2", "getVariableValue", "true", "height", "shadowRadius", "Math", "round", "shadowColor", "shadowOffset", "width", "isAndroid", "elevationAndroid", "fullscreenStyle", "position", "top", "left", "right", "bottom", "getInset", "val", "variants", "fullscreen", "true", "elevation", "getElevation", "inset", "YStack", "styled", "View", "flexDirection", "displayName", "XStack", "ZStack", "neverFlatten", "isZStack", "defaultOptions", "shift", "bounds", "getSize", "size", "options", "getTokenRelative", "getSpace", "space", "cacheVariables", "cacheWholeVariables", "cacheKeys", "cacheWholeKeys", "stepTokenUpOrDown", "type", "current", "options", "defaultOptions", "tokens", "getTokens", "prefixed", "sorted", "Object", "keys", "map", "k", "sort", "a", "b", "val", "token", "push", "key", "sortedExcludingHalfSteps", "filter", "x", "endsWith", "isString", "tokensOrdered", "excludeHalfSteps", "min", "bounds", "max", "length", "currentIndex", "indexOf", "shift", "isVariable", "name", "index", "Math", "found", "$true", "getTokenRelative", "getButtonSized", "val", "tokens", "props", "circular", "paddingHorizontal", "height", "borderRadius", "xSize", "getSpace", "radiusToken", "radius", "$true", "elevate", "true", "_", "extras", "getElevation", "props", "size", "bordered", "val", "borderWidth", "borderColor", "hoverTheme", "hoverStyle", "pressTheme", "pressStyle", "focusTheme", "focusStyle", "padded", "tokens", "padding", "space", "$true", "radiused", "borderRadius", "radius", "circularStyle", "circular", "width", "height", "maxWidth", "maxHeight", "minWidth", "minHeight", "backgroundColor", "false", "cursor", "SizableStack", "styled", "XStack", "name", "variants", "unstyled", "true", "hoverTheme", "pressTheme", "focusTheme", "elevate", "bordered", "circular", "size", "...size", "val", "extras", "getButtonSized", "chromelessStyle", "backgroundColor", "borderColor", "shadowColor", "hoverStyle", "themeableVariants", "backgrounded", "true", "radiused", "hoverTheme", "pressTheme", "focusTheme", "circular", "padded", "elevate", "bordered", "transparent", "chromeless", "all", "pressStyle", "focusStyle", "ThemeableStack", "styled", "YStack", "variants", "import_react", "ButtonNestingContext", "React", "createContext", "getFontSized", "sizeTokenIn", "font", "fontFamily", "props", "fontSize", "sizeToken", "getDefaultSizeToken", "style", "size", "lineHeight", "fontWeight", "weight", "letterSpacing", "textTransform", "transform", "fontStyle", "color", "debug", "console", "groupCollapsed", "isClient", "info", "groupEnd", "cache", "WeakMap", "has", "get", "sizeTokens", "getTokens", "sizeDefault", "$true", "sizeDefaultSpecific", "Object", "keys", "find", "x", "val", "warn", "set", "SizableText", "styled", "Text", "name", "fontFamily", "variants", "unstyled", "false", "size", "color", "getFontSized", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "staticConfig", "...", "_val", "extras", "sizeProp", "props", "fontSizeProp", "fontSize", "Paragraph", "styled", "SizableText", "name", "tag", "userSelect", "color", "size", "whiteSpace", "Heading", "styled", "Paragraph", "tag", "name", "accessibilityRole", "fontFamily", "size", "margin", "H1", "variants", "unstyled", "false", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "H2", "H3", "H4", "H5", "H6", "import_react", "import_jsx_runtime", "wrapChildrenInText", "TextComponent", "propsIn", "extraProps", "children", "textProps", "size", "noTextWrap", "color", "fontFamily", "fontSize", "fontWeight", "letterSpacing", "textAlign", "fontStyle", "maxFontSizeMultiplier", "props", "React", "Children", "toArray", "map", "child", "index", "jsx", "React", "import_jsx_runtime", "DirectionContext", "createContext", "useDirection", "localDir", "globalDir", "useContext", "DirectionContext", "React", "import_jsx_runtime", "ACCORDION_NAME", "ACCORDION_KEYS", "Collection", "useCollection", "createCollection", "ACCORDION_CONTEXT", "AccordionComponent", "forwardRef", "props", "forwardedRef", "type", "accordionProps", "singleProps", "multipleProps", "jsx", "Provider", "__scopeCollection", "__scopeAccordion", "children", "AccordionImplMultiple", "ref", "AccordionImplSingle", "displayName", "propTypes", "value", "defaultValue", "includes", "Error", "Array", "isArray", "AccordionValueProvider", "useStyledContext", "useAccordionValueContext", "createStyledContext", "AccordionCollapsibleProvider", "useAccordionCollapsibleContext", "valueProp", "control", "onValueChange", "collapsible", "accordionSingleProps", "setValue", "useControllableState", "prop", "defaultProp", "onChange", "scope", "onItemOpen", "onItemClose", "useCallback", "AccordionImpl", "accordionMultipleProps", "handleItemOpen", "itemValue", "prevValue", "handleItemClose", "filter", "value2", "AccordionImplProvider", "useAccordionContext", "disabled", "dir", "orientation", "accordionRef", "useRef", "composedRef", "useComposedRefs", "getItems", "isDirectionLTR", "useDirection", "handleKeyDown", "composeEventHandlers", "onKeyDown", "event", "key", "target", "triggerCollection", "item", "_a", "current", "triggerIndex", "findIndex", "triggerCount", "length", "preventDefault", "nextIndex", "homeIndex", "endIndex", "moveNext", "movePrev", "clampedIndex", "focus", "direction", "Slot", "YStack", "isWeb", "ITEM_NAME", "AccordionItemProvider", "useAccordionItemContext", "AccordionItem", "accordionItemProps", "accordionContext", "valueContext", "triggerId", "useId", "open", "Collapsible", "__scopeCollapsible", "onOpenChange", "open2", "HEADER_NAME", "AccordionHeader", "headerProps", "itemContext", "H1", "getState", "AccordionTriggerFrame", "styled", "Trigger", "variants", "unstyled", "false", "cursor", "backgroundColor", "borderColor", "borderWidth", "padding", "hoverStyle", "focusStyle", "pressStyle", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "AccordionTrigger", "styleable", "triggerProps", "collapsibleContext", "ItemSlot", "id", "AccordionContentFrame", "Content", "AccordionContent", "contentProps", "role", "HeightAnimator", "View", "rest", "height", "setHeight", "useState", "onLayout", "useEvent", "nativeEvent", "layout", "position", "width", "Accordion", "withStaticProperties", "Header", "Item", "import_react", "import_react", "ZIndexStackContext", "createContext", "ZIndexHardcodedContext", "ZIndicesByContext", "useStackedZIndex", "props", "stackZIndex", "zIndex", "zIndexProp", "id", "useId", "stackingContextLevel", "useContext", "ZIndexStackContext", "hardcoded", "ZIndexHardcodedContext", "stackContext", "useMemo", "highest", "Object", "values", "reduce", "acc", "cur", "Math", "max", "found", "useEffect", "import_react", "import_jsx_runtime", "StackZIndexContext", "children", "zIndex", "existing", "useContext", "ZIndexStackContext", "content", "jsx", "Provider", "value", "ZIndexHardcodedContext", "React", "getStackedZIndexProps", "propsIn", "stackZIndex", "zIndex", "resolveViewZIndex", "getTokenValue", "import_jsx_runtime", "Portal", "memo", "propsIn", "isServer", "host", "globalThis", "document", "body", "stackZIndex", "children", "props", "zIndex", "useStackedZIndex", "getStackedZIndexProps", "createPortal", "jsx", "YStack", "contain", "fullscreen", "position", "maxWidth", "maxHeight", "pointerEvents", "import_react", "IS_FABRIC", "global", "_IS_FABRIC", "nativeFabricUIManager", "USE_NATIVE_PORTAL", "process", "env", "TAMAGUI_USE_NATIVE_PORTAL", "isAndroid", "allPortalHosts", "Map", "portalListeners", "import_jsx_runtime", "ACTIONS", "ACTIONS2", "REGISTER_HOST", "DEREGISTER_HOST", "ADD_UPDATE_PORTAL", "REMOVE_PORTAL", "INITIAL_STATE", "registerHost", "state", "hostName", "deregisterHost", "addUpdatePortal", "portalName", "node", "index", "findIndex", "item", "name", "push", "removePortal", "console", "info", "splice", "reducer", "action", "type", "PortalStateContext", "createContext", "PortalDispatchContext", "usePortalState", "useContext", "Error", "usePortal", "dispatch", "registerHost2", "useCallback", "deregisterHost2", "addUpdatePortal2", "removePortal2", "addPortal", "updatePortal", "PortalProviderComponent", "rootHostName", "shouldAddRootHost", "children", "useReducer", "transitionDispatch", "useMemo", "value", "startTransition", "jsx", "Provider", "jsxs", "PortalHost", "PortalProvider", "memo", "displayName", "defaultRenderer", "Fragment", "props", "isWeb", "PortalHostWeb", "PortalHostNonNative", "mounted", "setMounted", "useState", "useEffect", "allPortalHosts", "delete", "style", "display", "ref", "set", "portalListeners", "forEach", "x", "forwardProps", "render", "window", "map", "next", "restForwardProps", "React", "Children", "child", "isValidElement", "cloneElement", "key", "import_react", "import_react_dom", "GorhomPortalItem", "props", "hostName", "Error", "cur", "allPortalHosts", "get", "node", "setNode", "useState", "useEffect", "listener", "node2", "portalListeners", "Set", "add", "_a", "delete", "createPortal", "children", "import_react", "import_jsx_runtime", "CurrentAdaptContextScope", "createContext", "AdaptContext", "createStyledContext", "Contents", "scopeName", "portalName", "platform", "setPlatform", "x", "when", "setChildren", "setWhen", "ProvideAdaptContext", "children", "context", "scope", "jsx", "Provider", "value", "useAdaptContext", "contextScope", "useContext", "useStyledContext", "AdaptPortals", "Map", "AdaptParent", "portal", "id", "useId", "FinalContents", "get", "PortalHost", "name", "forwardProps", "set", "useEffect", "delete", "React", "useState", "children2", "AdaptContents", "rest", "Error", "process", "createElement", "key", "shouldForwardSpace", "Adapt", "withStaticProperties", "props", "enabled", "useAdaptIsActiveGiven", "useIsomorphicLayoutEffect", "output", "Component", "StackZIndexContext", "AdaptPortalContents", "PortalItem", "hostName", "media", "useMedia", "isTouchable", "isWeb", "isIos", "isAndroid", "useAdaptIsActive", "React", "import_jsx_runtime", "createContext", "rootComponentName", "defaultContext", "Context", "Provider", "props", "children", "context", "value", "useMemo", "Object", "values", "jsx", "useContext", "consumerName", "Error", "createContextScope", "scopeName", "createContextScopeDeps", "defaultContexts", "createContext2", "BaseContext", "index", "length", "scope", "options", "missingContextMessage", "fallback", "warn", "console", "createScope", "scopeContexts", "map", "contexts", "composeContextScopes", "scopes", "baseScope", "scopeHooks", "createScope2", "useScope", "overrideScopes", "nextScopes", "reduce", "nextScopes2", "currentScope", "attr", "hideOthers", "ah", "React", "useCallbackRef", "callback", "callbackRef", "useRef", "useEffect", "current", "useMemo", "args", "import_react", "useEscapeKeydown", "onEscapeKeyDownProp", "ownerDocument", "globalThis", "document", "onEscapeKeyDown", "useCallbackRef", "React", "useEffect", "handleKeyDown", "event", "key", "addEventListener", "removeEventListener", "React", "import_jsx_runtime", "dispatchDiscreteCustomEvent", "target", "event", "flushSync", "dispatchEvent", "DISMISSABLE_LAYER_NAME", "CONTEXT_UPDATE", "POINTER_DOWN_OUTSIDE", "FOCUS_OUTSIDE", "originalBodyPointerEvents", "DismissableContext", "createContext", "layers", "Set", "layersWithOutsidePointerEventsDisabled", "branches", "Dismissable", "forwardRef", "props", "forwardedRef", "disableOutsidePointerEvents", "forceUnmount", "onEscapeKeyDown", "onPointerDownOutside", "onFocusOutside", "onInteractOutside", "onDismiss", "layerProps", "context", "useContext", "node", "setNode", "useState", "force", "composedRefs", "useComposedRefs", "node2", "Array", "from", "highestLayerWithOutsidePointerEventsDisabled", "slice", "highestLayerWithOutsidePointerEventsDisabledIndex", "indexOf", "index", "isBodyPointerEventsDisabled", "size", "isPointerEventsEnabled", "pointerDownOutside", "usePointerDownOutside", "isPointerDownOnBranch", "some", "branch", "contains", "defaultPrevented", "focusOutside", "useFocusOutside", "useEscapeKeydown", "preventDefault", "useEffect", "document", "body", "style", "pointerEvents", "add", "dispatchUpdate", "delete", "handleUpdate", "addEventListener", "removeEventListener", "jsx", "ref", "display", "onFocusCapture", "composeEventHandlers", "onBlurCapture", "onPointerDownCapture", "displayName", "BRANCH_NAME", "DismissableBranch", "useRef", "current", "handlePointerDownOutside", "useEvent", "isPointerInsideReactTreeRef", "handleClickRef", "handlePointerDown", "handleAndDispatchPointerDownOutsideEvent", "handleAndDispatchCustomEvent", "eventDetail", "discrete", "originalEvent", "pointerType", "once", "timerId", "setTimeout", "window", "clearTimeout", "handleFocusOutside", "isFocusInsideReactTreeRef", "handleFocus", "CustomEvent", "name", "handler", "detail", "bubbles", "cancelable", "React", "import_jsx_runtime", "AUTOFOCUS_ON_MOUNT", "AUTOFOCUS_ON_UNMOUNT", "EVENT_OPTIONS", "bubbles", "cancelable", "FocusScope", "forwardRef", "props", "forwardedRef", "childProps", "useFocusScope", "children", "jsx", "Fragment", "cloneElement", "Children", "only", "loop", "enabled", "trapped", "onMountAutoFocus", "onMountAutoFocusProp", "onUnmountAutoFocus", "onUnmountAutoFocusProp", "forceUnmount", "scopeProps", "container", "setContainer", "useState", "useEvent", "lastFocusedElementRef", "useRef", "setContainerTransition", "useCallback", "node", "startTransition", "composedRefs", "useComposedRefs", "focusScope", "paused", "pause", "resume", "current", "useEffect", "controller", "AbortController", "handleFocusIn", "event", "target", "contains", "addEventListener", "handleBlur", "signal", "focus", "select", "handleFocusOut", "abort", "relatedTarget", "document", "removeEventListener", "focusScopesStack", "add", "previouslyFocusedElement", "activeElement", "mountEvent", "CustomEvent", "dispatchEvent", "defaultPrevented", "candidates", "removeLinks", "getTabbableCandidates", "focusFirst", "unmountEvent", "body", "remove", "handleKeyDown", "isTabKey", "key", "altKey", "ctrlKey", "metaKey", "focusedElement", "container2", "currentTarget", "first", "last", "getTabbableEdges", "shiftKey", "preventDefault", "tabIndex", "ref", "onKeyDown", "candidate", "findVisible", "reverse", "nodes", "walker", "createTreeWalker", "NodeFilter", "SHOW_ELEMENT", "acceptNode", "isHiddenInput", "tagName", "type", "disabled", "hidden", "FILTER_SKIP", "FILTER_ACCEPT", "nextNode", "push", "currentNode", "elements", "element", "isHidden", "upTo", "getComputedStyle", "visibility", "display", "parentElement", "isSelectableInput", "HTMLInputElement", "preventScroll", "createFocusScopesStack", "stack", "activeFocusScope", "arrayRemove", "unshift", "array", "item", "updatedArray", "index", "indexOf", "splice", "items", "filter", "import_react", "__assign", "React", "React", "import_react", "useCallbackRef", "initialValue", "React", "useIsomorphicLayoutEffect", "useCallbackRef", "React", "import_react", "cbs", "React", "import_react", "React", "SideCar", "React", "React", "React", "useStyle", "Sheet", "Style", "import_jsx_runtime", "RemoveScroll", "React", "memo", "props", "children", "jsx", "RS", "classNames", "SHEET_NAME", "SHEET_HANDLE_NAME", "SHEET_OVERLAY_NAME", "import_react", "createSheetContext", "createSheetScope", "createContextScope", "SHEET_NAME", "SheetProvider", "useSheetContext", "import_react", "import_react", "ParentSheetContext", "React", "createContext", "zIndex", "SheetInsideSheetContext", "resisted", "y", "minY", "maxOverflow", "past", "extra", "Math", "min", "import_react", "useSheetController", "controller", "React", "useContext", "SheetControllerContext", "isHidden", "hidden", "isShowingNonSheet", "open", "disableDrag", "createContext", "useSheetOpenState", "props", "isHidden", "controller", "useSheetController", "onOpenChangeInternal", "val", "onOpenChange", "open", "setOpen", "useControllableState", "prop", "defaultProp", "defaultOpen", "onChange", "strategy", "transition", "import_react", "useSheetProviderProps", "props", "state", "options", "handleRef", "React", "useRef", "contentRef", "frameSize", "setFrameSize", "useState", "maxContentSize", "setMaxContentSize", "snapPointsMode", "snapPointsProp", "snapPoints", "hasFit", "useMemo", "dismissOnSnapToBottom", "JSON", "stringify", "position_", "setPositionImmediate", "useControllableState", "prop", "position", "defaultProp", "defaultPosition", "open", "onChange", "onPositionChange", "strategy", "transition", "setPosition", "useCallback", "next", "length", "setOpen", "process", "some", "p", "endsWith", "n", "Number", "slice", "console", "warn", "indexOf", "shouldSetPositionOpen", "useEffect", "animationDriver", "useConfiguration", "Error", "scrollBridge", "useConstant", "enabled", "y", "paneY", "paneMinY", "scrollStartY", "drag", "release", "scrollLock", "removeScrollEnabled", "forceRemoveScrollEnabled", "modal", "maxSnapPoint", "screenSize", "hidden", "isHidden", "dismissOnOverlayPress", "onOverlayComponent", "scope", "__scopeSheet", "onlyShowFrame", "import_jsx_runtime", "hiddenSize", "sheetHiddenStyleSheet", "relativeDimensionTo", "isWeb", "SheetImplementationCustom", "React", "forwardRef", "props", "forwardedRef", "parentSheet", "useContext", "ParentSheetContext", "animation", "animationConfig", "animationConfigProp", "modal", "zIndex", "moveOnKeyboardChange", "unmountChildrenWhenHidden", "portalProps", "containerComponent", "ContainerComponent", "Fragment", "state", "useSheetOpenState", "overlayComponent", "setOverlayComponent", "useState", "providerProps", "useSheetProviderProps", "onOverlayComponent", "frameSize", "setFrameSize", "snapPoints", "snapPointsMode", "hasFit", "position", "setPosition", "scrollBridge", "screenSize", "setMaxContentSize", "maxSnapPoint", "open", "controller", "isHidden", "sheetRef", "useRef", "ref", "useComposedRefs", "contentRef", "animationDriver", "useConfiguration", "supportsCSSVars", "animationProp", "animationPropConfig", "Array", "isArray", "animations", "isShowingInnerSheet", "setIsShowingInnerSheet", "shouldHideParentSheet", "USE_NATIVE_PORTAL", "sheetInsideSheet", "SheetInsideSheetContext", "onInnerSheet", "useCallback", "hasChild", "positions", "useMemo", "map", "point", "getYPositions", "useAnimatedNumber", "useAnimatedNumberStyle", "useAnimatedNumberReaction", "AnimatedView", "View", "Stack", "useIsomorphicLayoutEffect", "nextParentContext", "startPosition", "useDidFinishSSR", "animatedNumber", "at", "hasntMeasured", "current", "disableAnimation", "setDisableAnimation", "value", "hostRef", "paneY", "stopSpring", "stop", "onFinishAnimate", "animateTo", "useEvent", "position2", "toValue", "setValue", "type", "duration", "setTimeout", "disableDrag", "themeName", "useThemeName", "isDragging", "setIsDragging", "panResponder", "minY", "paneMinY", "startY", "setPanning", "val", "isClient", "document", "createElement", "head", "appendChild", "innerText", "release", "vy", "dragAt", "isExternalDrag", "previouslyScrolling", "end", "closestPoint", "dist", "Number", "POSITIVE_INFINITY", "i", "length", "curDist", "finish", "_e", "state2", "dy", "onMoveShouldSet", "e", "target", "handleRef", "isScrolled", "y", "isDraggingUp", "isNearTop", "Math", "abs", "grant", "drag", "to", "resisted", "PanResponder", "create", "onMoveShouldSetPanResponder", "onPanResponderGrant", "onPanResponderMove", "toFull", "onPanResponderEnd", "onPanResponderTerminate", "onPanResponderRelease", "handleAnimationViewLayout", "next", "min", "nativeEvent", "layout", "height", "Dimensions", "get", "handleMaxContentViewLayout", "animatedStyle", "transform", "translateY", "sizeBeforeKeyboard", "useEffect", "keyboardShowListener", "Keyboard", "addListener", "currentPlatform", "max", "endCoordinates", "keyboardDidHideListener", "remove", "opacity", "setOpacity", "tm", "clearTimeout", "forcedContentHeight", "contents", "jsx", "Provider", "children", "jsxs", "SheetProvider", "AnimatePresence", "custom", "style", "top", "left", "right", "bottom", "pointerEvents", "onLayout", "panHandlers", "disableClassName", "width", "minHeight", "shouldMountChildren", "modalContents", "Portal", "stackZIndex", "Theme", "forceClassName", "name", "mode", "endsWith", "pct2", "slice", "isNaN", "console", "warn", "round", "pct", "import_react", "ScrollView", "styled", "ScrollViewNative", "name", "scrollEnabled", "variants", "fullscreen", "true", "fullscreenStyle", "accept", "contentContainerStyle", "import_jsx_runtime", "SHEET_SCROLL_VIEW_NAME", "SheetScrollView", "React", "forwardRef", "__scopeSheet", "children", "onScroll", "props", "ref", "context", "useSheetContext", "scrollBridge", "scrollRef", "useRef", "state", "lastPageY", "dragAt", "dys", "isScrolling", "isDragging", "release", "current", "scrollStartY", "vy", "length", "recentDys", "slice", "reduce", "a", "b", "jsx", "ScrollView", "composeRefs", "flex", "scrollEventThrottle", "onResponderRelease", "className", "e", "y", "nativeEvent", "contentOffset", "onStartShouldSetResponder", "onMoveShouldSetResponder", "useSheetOffscreenSize", "snapPoints", "position", "screenSize", "frameSize", "snapPointsMode", "maxSize2", "Number", "currentSize2", "maxPercentOpened", "percentOpened", "maxSnapPoint", "maxSize", "slice", "currentSnapPoint", "currentSize", "offscreenSize", "isNaN", "import_jsx_runtime", "createSheet", "Handle", "Frame", "Overlay", "SheetHandle", "styleable", "__scopeSheet", "props", "forwardedRef", "context", "useSheetContext", "SHEET_HANDLE_NAME", "composedRef", "useComposedRefs", "handleRef", "onlyShowFrame", "jsx", "ref", "onPress", "max", "snapPoints", "length", "dismissOnSnapToBottom", "nextPos", "position", "setPosition", "open", "SheetOverlay", "extractable", "memo", "propsIn", "SHEET_OVERLAY_NAME", "element", "useMemo", "composeEventHandlers", "dismissOnOverlayPress", "setOpen", "opacity", "useIsomorphicLayoutEffect", "onOverlayComponent", "SheetFrame", "forwardRef", "adjustPaddingForOffscreenContent", "disableHideBottomOverflow", "children", "SHEET_NAME", "hasFit", "removeScrollEnabled", "frameSize", "contentRef", "composedContentRef", "offscreenSize", "useSheetOffscreenSize", "sheetContents", "jsxs", "flex", "height", "pointerEvents", "StackZIndexContext", "zIndex", "resolveViewZIndex", "Stack", "width", "Fragment", "RemoveScroll", "forwardProps", "enabled", "allowPinchZoom", "shards", "removeScrollBar", "componentName", "bottom", "left", "right", "borderWidth", "borderRadius", "shadowOpacity", "Sheet", "hydrated", "useDidFinishSSR", "isShowingNonSheet", "useSheetController", "SheetImplementation", "SheetImplementationCustom", "native", "Platform", "OS", "components", "ScrollView", "SheetScrollView", "Controlled", "withStaticProperties", "Handle", "styled", "XStack", "name", "SHEET_HANDLE_NAME", "variants", "open", "true", "opacity", "pointerEvents", "false", "unstyled", "height", "borderRadius", "backgroundColor", "zIndex", "marginHorizontal", "marginBottom", "hoverStyle", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "Overlay", "ThemeableStack", "SHEET_OVERLAY_NAME", "fullscreen", "position", "backgrounded", "Frame", "YStack", "SHEET_NAME", "flex", "borderTopLeftRadius", "borderTopRightRadius", "width", "maxHeight", "overflow", "Sheet", "createSheet", "SheetOverlayFrame", "SheetHandleFrame", "useSheet", "useSheetContext", "import_react", "import_jsx_runtime", "SheetController", "children", "onOpenChange", "onOpenChangeProp", "value", "useEvent", "memoValue", "React", "useMemo", "open", "hidden", "disableDrag", "jsx", "SheetControllerContext", "Provider", "import_react", "import_jsx_runtime", "nativeSheets", "ios", "getNativeSheet", "platform", "setupNativeSheet", "RNIOSModal", "ModalSheetView", "ModalSheetViewMainContent", "props", "state", "useSheetOpenState", "providerProps", "useSheetProviderProps", "open", "setOpen", "ref", "useRef", "useEffect", "current", "presentModal", "dismissModal", "setOpenInternal", "next", "onOpenChange", "jsx", "Fragment", "children", "jsxs", "SheetProvider", "onlyShowFrame", "onModalDidDismiss", "View", "style", "flex", "YStack", "position", "opacity", "pointerEvents", "width", "height", "React", "import_jsx_runtime", "DIALOG_NAME", "createDialogContext", "createDialogScope", "createContextScope", "DialogProvider", "useDialogContext", "TRIGGER_NAME", "DialogTriggerFrame", "styled", "View", "name", "DialogTrigger", "styleable", "props", "forwardedRef", "__scopeDialog", "triggerProps", "isInsideButton", "useContext", "ButtonNestingContext", "context", "composedTriggerRef", "useComposedRefs", "triggerRef", "jsx", "Provider", "value", "children", "tag", "open", "contentId", "getState", "ref", "onPress", "composeEventHandlers", "onOpenToggle", "PORTAL_NAME", "PortalProvider", "usePortalContext", "forceMount", "DialogPortalFrame", "YStack", "pointerEvents", "variants", "unstyled", "false", "alignItems", "justifyContent", "fullscreen", "isWeb", "maxHeight", "position", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "DialogPortalItem", "space", "spaceDirection", "separator", "themeName", "useThemeName", "isAdapted", "useAdaptIsActive", "childrenSpaced", "spacedChildren", "direction", "content", "scope", "Theme", "AdaptPortalContents", "PortalItem", "DialogPortal", "frameProps", "isShowing", "isFullyHidden", "setIsFullyHidden", "useState", "handleExitComplete", "useCallback", "modal", "contents", "StackZIndexContext", "zIndex", "resolveViewZIndex", "AnimatePresence", "onExitComplete", "framedContents", "Portal", "stackZIndex", "PassthroughTheme", "forceClassName", "OVERLAY_NAME", "DialogOverlayFrame", "Overlay", "DialogOverlay", "extractable", "forwardRef", "portalContext", "overlayProps", "CONTENT_NAME", "DialogContentFrame", "ThemeableStack", "size", "...size", "val", "extras", "backgrounded", "padded", "radiused", "elevate", "DialogContent", "contentProps", "Fragment", "DialogContentModal", "DialogContentNonModal", "disableRemoveScroll", "RemoveScroll", "forwardProps", "enabled", "allowPinchZoom", "shards", "contentRef", "removeScrollBar", "className", "useRef", "composedRefs", "useEffect", "current", "hideOthers", "DialogContentImpl", "trapFocus", "disableOutsidePointerEvents", "onCloseAutoFocus", "event", "preventDefault", "focus", "onPointerDownOutside", "originalEvent", "detail", "ctrlLeftClick", "button", "ctrlKey", "onFocusOutside", "outlineStyle", "hasInteractedOutsideRef", "defaultPrevented", "onInteractOutside", "target", "trigger", "HTMLElement", "contains", "onOpenAutoFocus", "onEscapeKeyDown", "id", "descriptionId", "titleId", "jsxs", "Dismissable", "forceUnmount", "onDismiss", "onOpenChange", "FocusScope", "loop", "trapped", "onMountAutoFocus", "onUnmountAutoFocus", "TitleWarning", "DescriptionWarning", "DialogTitleFrame", "H2", "DialogTitle", "titleProps", "DialogDescriptionFrame", "Paragraph", "DESCRIPTION_NAME", "DialogDescription", "descriptionProps", "CLOSE_NAME", "DialogCloseFrame", "DialogClose", "displayWhenAdapted", "closeProps", "warn", "fallback", "accessibilityLabel", "TITLE_WARNING_NAME", "DialogWarningProvider", "useWarningContext", "createContext", "contentName", "titleName", "docsSlug", "titleWarningContext", "MESSAGE", "document", "getElementById", "console", "DESCRIPTION_WARNING_NAME", "contentNode", "describedById", "getAttribute", "Dialog", "withStaticProperties", "openProp", "defaultOpen", "baseId", "useId", "scopeId", "scopeKey", "Object", "keys", "adaptName", "getAdaptName", "setOpen", "useControllableState", "prop", "defaultProp", "onChange", "prevOpen", "useImperativeHandle", "AdaptParent", "portal", "DialogSheetController", "Trigger", "Content", "Title", "Description", "Close", "Sheet", "Controlled", "Adapt", "SheetController", "hidden", "React", "import_jsx_runtime", "ROOT_NAME", "createAlertDialogContext", "createAlertDialogScope", "createContextScope", "createDialogScope", "useDialogScope", "TRIGGER_NAME", "NativeAlertDialogTriggerFrame", "styled", "View", "name", "AlertDialogTrigger", "forwardRef", "props", "forwardedRef", "__native", "onPress", "__onPress", "rest", "jsx", "composeEventHandlers", "__scopeAlertDialog", "triggerProps", "dialogScope", "DialogTrigger", "ref", "displayName", "PORTAL_NAME", "AlertDialogPortal", "portalProps", "DialogPortal", "OVERLAY_NAME", "AlertDialogOverlayFrame", "DialogOverlayFrame", "AlertDialogOverlay", "extractable", "overlayProps", "DialogOverlay", "CONTENT_NAME", "AlertDialogContentProvider", "useAlertDialogContentContext", "AlertDialogContent", "children", "contentProps", "contentRef", "useRef", "composedRefs", "useComposedRefs", "cancelRef", "DialogWarningProvider", "contentName", "titleName", "TITLE_NAME", "docsSlug", "scope", "jsxs", "DialogContent", "role", "onOpenAutoFocus", "event", "preventDefault", "isWeb", "current", "focus", "preventScroll", "onPointerDownOutside", "onInteractOutside", "Slottable", "DescriptionWarning", "AlertDialogTitle", "titleProps", "DialogTitle", "DESCRIPTION_NAME", "AlertDialogDescription", "descriptionProps", "DialogDescription", "ACTION_NAME", "AlertDialogAction", "actionProps", "DialogClose", "CANCEL_NAME", "AlertDialogCancel", "cancelProps", "useEffect", "document", "getElementById", "getAttribute", "console", "warn", "AlertDialogInner", "native", "alertDialogProps", "Dialog", "modal", "AlertDialog", "withStaticProperties", "Trigger", "Portal", "Overlay", "Content", "Action", "Cancel", "Title", "Description", "import_react", "import_jsx_runtime", "StyledImage", "styled", "RNImage", "name", "hasWarned", "Image", "styleable", "inProps", "ref", "props", "style", "usePropsAndStyle", "src", "source", "objectFit", "rest", "process", "width", "height", "console", "warn", "finalSource", "uri", "isWeb", "env", "TAMAGUI_IMAGE_CHECK_ERROR", "React", "useEffect", "run", "fetch", "then", "res", "text", "error", "default", "jsx", "resizeMode", "getSize", "getSizeWithHeaders", "prefetch", "prefetchWithMetadata", "abortPrefetch", "queryCache", "getShapeSize", "size", "tokens", "width", "height", "minWidth", "maxWidth", "maxHeight", "minHeight", "Square", "styled", "ThemeableStack", "name", "alignItems", "justifyContent", "variants", "size", "getShapeSize", "Circle", "styled", "Square", "name", "circular", "React", "import_jsx_runtime", "AVATAR_NAME", "createAvatarContext", "createAvatarScope", "createContextScope", "AvatarProvider", "useAvatarContext", "IMAGE_NAME", "AvatarImage", "forwardRef", "props", "forwardedRef", "__scopeAvatar", "src", "onLoadingStatusChange", "imageProps", "context", "status", "setStatus", "useState", "shapeSize", "getVariableValue", "getShapeSize", "size", "tokens", "getTokens", "width", "useEffect", "JSON", "stringify", "onImageLoadingStatusChange", "jsx", "YStack", "fullscreen", "zIndex", "children", "Image", "Number", "isNaN", "height", "ref", "onError", "onLoad", "displayName", "FALLBACK_NAME", "AvatarFallbackFrame", "styled", "name", "position", "AvatarFallback", "extractable", "delayMs", "fallbackProps", "canRender", "setCanRender", "timerId", "setTimeout", "clearTimeout", "imageLoadingStatus", "AvatarFrame", "Square", "overflow", "Avatar", "withStaticProperties", "avatarProps", "setImageLoadingStatus", "scope", "Fallback", "getFontSize", "inSize", "opts", "res", "getFontSizeVariable", "isVariable", "val", "token", "getFontSizeToken", "conf", "getConfig", "fontsParsed", "font", "defaultFontToken", "size", "relativeSize", "fontSize", "tokensParsed", "sizeTokens", "Object", "keys", "foundIndex", "indexOf", "endsWith", "replace", "console", "warn", "tokenIndex", "Math", "min", "max", "length", "prevent", "e", "preventDefault", "stopPropagation", "useCurrentColor", "colorProp", "theme", "useTheme", "getVariable", "get", "color", "import_react", "useGetThemedIcon", "props", "color", "useCurrentColor", "el", "React", "isValidElement", "cloneElement", "createElement", "import_react", "import_jsx_runtime", "ButtonContext", "createStyledContext", "color", "ellipse", "fontFamily", "fontSize", "fontStyle", "fontWeight", "letterSpacing", "maxFontSizeMultiplier", "size", "textAlign", "variant", "BUTTON_NAME", "ButtonFrame", "styled", "ThemeableStack", "name", "tag", "context", "role", "focusable", "variants", "unstyled", "false", "justifyContent", "alignItems", "flexWrap", "flexDirection", "cursor", "hoverTheme", "pressTheme", "backgrounded", "borderWidth", "borderColor", "focusVisibleStyle", "outlineColor", "outlineStyle", "outlineWidth", "outlined", "backgroundColor", "hoverStyle", "pressStyle", "getButtonSized", "disabled", "true", "pointerEvents", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "ButtonText", "SizableText", "userSelect", "flexGrow", "flexShrink", "ButtonIcon", "props", "children", "scaleIcon", "useContext", "iconSize", "getFontSize", "useGetThemedIcon", "ButtonComponent", "styleable", "ref", "buttonProps", "useButton", "jsx", "Button2", "withStaticProperties", "Text", "Icon", "textProps", "propsIn", "isNested", "ButtonNestingContext", "propsActive", "useProps", "noNormalize", "noExpand", "icon", "iconAfter", "space", "spaceFlex", "scaleSpace", "separator", "noTextWrap", "restProps", "font", "getThemedIcon", "themedIcon", "themedIconAfter", "map", "spaceSize", "getVariableValue", "contents", "wrapChildrenInText", "inner", "spacedChildren", "ensureKeys", "direction", "accessibilityRole", "Provider", "value", "disableClassName", "CardContext", "createStyledContext", "size", "CardFrame", "styled", "ThemeableStack", "name", "context", "variants", "unstyled", "false", "backgroundColor", "position", "...size", "val", "tokens", "borderRadius", "radius", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "CardHeader", "zIndex", "marginBottom", "padding", "space", "CardFooter", "flexDirection", "marginTop", "CardBackground", "fullscreen", "overflow", "pointerEvents", "Card", "withStaticProperties", "Header", "Footer", "Background", "CheckboxStyledContext", "createStyledContext", "size", "scaleIcon", "INDICATOR_NAME", "CheckboxIndicatorFrame", "styled", "ThemeableStack", "name", "context", "CheckboxStyledContext", "variants", "unstyled", "false", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "CHECKBOX_NAME", "CheckboxFrame", "tag", "size", "backgroundColor", "alignItems", "justifyContent", "pressTheme", "focusable", "borderWidth", "borderColor", "hoverStyle", "focusStyle", "focusVisibleStyle", "outlineStyle", "outlineWidth", "outlineColor", "disabled", "true", "pointerEvents", "userSelect", "cursor", "pressStyle", "val", "borderRadius", "getVariableValue", "getSize", "import_react", "registerFocusable", "id", "input", "focusFocusable", "id", "import_react", "useFocusable", "isInput", "props", "ref", "id", "onChangeText", "value", "defaultValue", "inputValue", "React", "useRef", "unregisterFocusable", "focusAndSelect", "useCallback", "input", "focus", "setSelection", "current", "length", "registerFocusableHandler", "registerFocusable", "inputRef", "handleChangeText", "useEvent", "value2", "useEffect", "useMemo", "composeRefs", "React", "import_jsx_runtime", "NAME", "LabelProvider", "useLabelContextImpl", "createContext", "id", "controlRef", "current", "LabelFrame", "styled", "SizableText", "name", "tag", "variants", "unstyled", "false", "size", "color", "backgroundColor", "display", "alignItems", "userSelect", "cursor", "pressStyle", "...size", "val", "extras", "buttonHeight", "getButtonSized", "height", "getFontSized", "lineHeight", "tokens", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "LabelComponent", "forwardRef", "props", "forwardedRef", "htmlFor", "idProp", "labelProps", "useRef", "ref", "composedRefs", "useComposedRefs", "backupId", "useId", "isWeb", "useEffect", "element", "document", "getElementById", "getAriaLabel", "getAttribute", "ariaLabelledBy", "filter", "Boolean", "join", "setAttribute", "ariaLabelledBy2", "replace", "removeAttribute", "jsx", "children", "onMouseDown", "event", "defaultPrevented", "detail", "preventDefault", "onPress", "isClickingControl", "contains", "target", "isUserClick", "isTrusted", "click", "focus", "focusFocusable", "displayName", "Label", "extractable", "themeable", "neverFlatten", "useLabelContext", "context", "import_react", "React", "usePrevious", "value", "ref", "useRef", "previous", "useMemo", "current", "React", "isIndeterminate", "checked", "getState", "import_jsx_runtime", "BubbleInput", "props", "checked", "bubbles", "control", "isHidden", "inputProps", "ref", "useRef", "prevChecked", "usePrevious", "useEffect", "input", "current", "inputProto", "window", "HTMLInputElement", "prototype", "setChecked", "Object", "getOwnPropertyDescriptor", "set", "event", "Event", "indeterminate", "isIndeterminate", "call", "dispatchEvent", "jsx", "type", "defaultChecked", "tabIndex", "style", "position", "pointerEvents", "opacity", "margin", "appearance", "accentColor", "import_jsx_runtime", "useCheckbox", "props", "checked", "setChecked", "ref", "labelledBy", "ariaLabelledby", "name", "required", "disabled", "value", "onCheckedChange", "checkboxProps", "button", "setButton", "React", "useState", "composedRefs", "useComposedRefs", "hasConsumerStoppedPropagationRef", "useRef", "isFormControl", "isWeb", "closest", "labelId", "useLabelContext", "parentKeyDown", "onKeyDown", "handleKeyDown", "useMemo", "composeEventHandlers", "event", "key", "preventDefault", "handlePress", "onPress", "prevChecked", "isIndeterminate", "current", "isPropagationStopped", "stopPropagation", "bubbleInput", "jsx", "BubbleInput", "isHidden", "control", "bubbles", "checkboxRef", "role", "type", "getState", "import_jsx_runtime", "CheckboxContext", "React", "createContext", "checked", "disabled", "ensureContext", "x", "context", "createCheckbox", "createProps", "disableActiveTheme", "Frame", "CheckboxFrame", "Indicator", "CheckboxIndicatorFrame", "FrameComponent", "styleable", "_props", "forwardedRef", "scaleSize", "sizeAdjust", "scaleIcon", "checkedProp", "defaultChecked", "onCheckedChange", "native", "unstyled", "props", "propsActive", "useProps", "styledContext", "useContext", "CheckboxStyledContext", "adjustedSize", "size", "getVariableValue", "getSize", "shift", "Math", "round", "setChecked", "useControllableState", "prop", "defaultProp", "onChange", "checkboxProps", "checkboxRef", "bubbleInput", "useCheckbox", "shouldRenderNativePlatform", "jsx", "type", "isIndeterminate", "tabIndex", "ref", "style", "appearance", "accentColor", "memoizedContext", "useMemo", "Provider", "value", "children", "jsxs", "width", "height", "tag", "theme", "IndicatorComponent", "childrenProp", "forceMount", "disablePassStyles", "indicatorProps", "iconSize", "getFontSize", "useTheme", "getThemedIcon", "useGetThemedIcon", "color", "Children", "toArray", "map", "child", "isValidElement", "pointerEvents", "withStaticProperties", "Checkbox", "createCheckbox", "Frame", "CheckboxFrame", "Indicator", "CheckboxIndicatorFrame", "import_jsx_runtime", "FORM_NAME", "FormFrame", "styled", "Stack", "name", "tag", "createFormContext", "createContextScope", "FormProvider", "useFormContext", "TRIGGER_NAME", "FormTriggerFrame", "View", "FormTrigger", "styleable", "props", "forwardedRef", "__scopeForm", "children", "onPress", "triggerProps", "context", "jsx", "ref", "composeEventHandlers", "onSubmit", "FormComponent", "extractable", "scope", "e", "preventDefault", "Form2", "withStaticProperties", "Trigger", "import_react", "React", "import_jsx_runtime", "MaxIndexContext", "createContext", "IndexContext", "useIndex", "maxIndexPath", "useContext", "indexPathString", "useMemo", "indexPath", "parseIndexPath", "maxIndex", "length", "index", "isFirst", "isLast", "isEven", "isOdd", "Math", "abs", "useIndexedChildren", "children", "parentMaxIndexPath", "childrenCount", "Children", "count", "concat", "jsx", "Provider", "value", "map", "child", "isValidElement", "toString", "key", "split", "Number", "parseInt", "import_jsx_runtime", "GROUP_NAME", "createGroupContext", "createGroupScope", "createContextScope", "GroupProvider", "useGroupContext", "GroupFrame", "styled", "ThemeableStack", "name", "variants", "unstyled", "false", "size", "val", "tokens", "borderRadius", "radius", "$true", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "createGroup", "verticalDefault", "withStaticProperties", "styleable", "props", "ref", "activeProps", "useProps", "__scopeGroup", "children", "childrenProp", "space", "spaceDirection", "separator", "scrollable", "axis", "orientation", "disabled", "disabledProp", "disablePassBorderRadius", "disablePassBorderRadiusProp", "forceUseItem", "restProps", "vertical", "itemChildrenCount", "setItemChildrenCount", "useControllableState", "defaultProp", "isUsingItems", "getVariableValue", "getTokens", "childrenArray", "React", "Children", "toArray", "filter", "isValidElement", "map", "child", "i", "type", "Fragment", "isFirst", "isLast", "length", "radiusStyles", "getBorderRadius", "disable", "props2", "isTamaguiElement", "style", "cloneElementWithPropOrder", "indexedChildren", "useIndexedChildren", "spacedChildren", "direction", "onItemMount", "useCallback", "prev", "onItemUnmount", "jsx", "scope", "flexDirection", "wrapScroll", "Item", "GroupItem", "forwardRef", "_ref", "forcePlacement", "groupItemProps", "useGroupItem", "cloneElement", "childrenProps", "treeIndex", "useIndex", "context", "useEffect", "Error", "index", "maxIndex", "propsToPass", "Group", "YGroup", "XGroup", "showScrollIndicator", "ScrollView", "showsVerticalScrollIndicator", "horizontal", "showsHorizontalScrollIndicator", "borderTopLeftRadius", "borderTopRightRadius", "borderBottomLeftRadius", "borderBottomRightRadius", "next", "mergeProps", "getConfig", "shorthands", "Section", "styled", "View", "name", "tag", "flexDirection", "accessibilityRole", "Article", "Main", "Header", "Aside", "Footer", "Nav", "import_jsx_runtime", "NAME", "ListItemFrame", "styled", "ThemeableStack", "name", "tag", "variants", "unstyled", "false", "size", "alignItems", "justifyContent", "flexWrap", "width", "borderColor", "maxWidth", "overflow", "flexDirection", "backgroundColor", "cursor", "...size", "val", "tokens", "minHeight", "paddingHorizontal", "space", "paddingVertical", "getSpace", "shift", "active", "true", "hoverStyle", "disabled", "opacity", "pointerEvents", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "ListItemText", "SizableText", "color", "flexGrow", "flexShrink", "ellipse", "ListItemSubtitle", "extras", "oneSmaller", "getSize", "excludeHalfSteps", "getFontSized", "key", "ListItemTitle", "useListItem", "propsIn", "Text", "Subtitle", "Title", "props", "useProps", "resolveValues", "children", "icon", "iconAfter", "noTextWrap", "theme", "themeName", "spaceFlex", "scaleIcon", "scaleSpace", "subTitle", "title", "fontWeight", "fontSize", "fontFamily", "letterSpacing", "textAlign", "rest", "textProps", "iconSize", "getFontSize", "getThemedIcon", "useGetThemedIcon", "themedIcon", "themedIconAfter", "map", "sizeToken", "getTokens", "spaceSize", "getVariableValue", "contents", "wrapChildrenInText", "jsxs", "Fragment", "jsx", "Spacer", "YStack", "flex", "ListItemComponent", "styleable", "ref", "listItemProps", "ListItem2", "withStaticProperties", "import_jsx_runtime", "Animate", "children", "type", "props", "keepChildrenMounted", "jsx", "PresenceChild", "initial", "onExitComplete", "enterVariant", "exitVariant", "enterExitVariant", "presenceAffectsLayout", "isPresent", "present", "custom", "AnimatePresence", "Fragment", "clamp", "platform", "max", "offset", "clamp", "platform", "placements", "sides", "side", "placement", "overflow", "platform", "x", "y", "min", "max", "clamp", "platform", "isNode", "getComputedStyle", "getComputedStyle", "cache", "cleanup", "detectOverflow", "offset", "shift", "flip", "size", "arrow", "computePosition", "cache", "React", "import_react", "ReactDOM", "platform", "computePosition", "data", "arrow", "offset", "shift", "flip", "size", "arrow", "import_react", "FloatingOverrideContext", "React", "createContext", "useFloating", "props", "useContext", "React", "import_jsx_runtime", "PopperContext", "createStyledContext", "useStyledContext", "usePopperContext", "Provider", "PopperProvider", "checkFloating", "setupOptions", "setupPopper", "options", "Object", "assign", "Popper", "props", "children", "size", "strategy", "placement", "stayInFrame", "allowFlip", "offset", "disableRTL", "resize", "__scopePopper", "arrowEl", "setArrow", "useState", "arrowSize", "setArrowSize", "offsetOptions", "floatingStyle", "useRef", "floating", "useFloating", "sameScrollView", "whileElementsMounted", "autoUpdate", "platform", "isRTL", "element", "middleware", "shift", "flip", "arrow", "offsetFn", "sizeMiddleware", "apply", "availableHeight", "availableWidth", "_a", "current", "maxHeight", "maxWidth", "floatingChild", "refs", "firstChild", "HTMLElement", "style", "filter", "Boolean", "useMemo", "og", "getFloatingProps", "props2", "JSON", "stringify", "middlewareData", "popperContext", "arrowRef", "arrowStyle", "onArrowSize", "scope", "hasFloating", "jsx", "PopperAnchor", "YStack", "extractable", "forwardRef", "forwardedRef", "virtualRef", "anchorProps", "getReferenceProps", "ref", "composedRefs", "useComposedRefs", "setReference", "useEffect", "stackProps", "TamaguiView", "PopperContentFrame", "styled", "ThemeableStack", "name", "variants", "unstyled", "false", "backgroundColor", "alignItems", "radiused", "...size", "val", "tokens", "padding", "space", "borderRadius", "radius", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "PopperContent", "enableAnimationForPositionChange", "rest", "x", "y", "contentRefs", "setFloating", "needsMeasure", "setNeedsMeasure", "useIsomorphicLayoutEffect", "frameProps", "top", "left", "position", "opacity", "animation", "animateOnly", "animatePresence", "floatingProps", "Stack", "contain", "PopperArrowFrame", "borderColor", "PopperArrowOuterFrame", "zIndex", "pointerEvents", "overflow", "justifyContent", "opposites", "right", "bottom", "PopperArrow", "styleable", "propsIn", "useProps", "sizeProp", "borderWidth", "arrowProps", "context", "sizeVal", "getVariableValue", "getSpace", "bounds", "Math", "max", "primaryPlacement", "split", "width", "height", "innerArrowStyle", "isVertical", "oppSide", "rotate", "borderLeftWidth", "borderTopWidth", "borderBottomWidth", "borderRightWidth", "React", "import_react", "React", "import_react", "activeElement", "isAndroid", "import_jsx_runtime", "candidateSelectors", "candidateSelector", "join", "NoElement", "Element", "matches", "prototype", "msMatchesSelector", "webkitMatchesSelector", "getRootNode", "element", "_element$getRootNode", "call", "ownerDocument", "isInert", "node", "lookUp", "_node$getAttribute", "inertAtt", "getAttribute", "inert", "result", "parentNode", "isContentEditable", "_node$getAttribute2", "attValue", "getCandidates", "el", "includeContainer", "filter", "candidates", "Array", "slice", "apply", "querySelectorAll", "unshift", "getCandidatesIteratively", "elements", "options", "elementsToCheck", "from", "length", "shift", "tagName", "assigned", "assignedElements", "content", "children", "nestedCandidates", "flatten", "push", "scopeParent", "validCandidate", "includes", "shadowRoot", "getShadowRoot", "validShadowRoot", "shadowRootFilter", "hasTabIndex", "isNaN", "parseInt", "getTabIndex", "Error", "tabIndex", "test", "getSortOrderTabIndex", "isScope", "sortOrderedTabbables", "a", "b", "documentOrder", "isInput", "isHiddenInput", "type", "isDetailsWithSummary", "r", "some", "child", "getCheckedRadio", "nodes", "form", "i", "checked", "isTabbableRadio", "name", "radioScope", "queryRadios", "radioSet", "window", "CSS", "escape", "err", "console", "error", "message", "isRadio", "isNonTabbableRadio", "isNodeAttached", "_nodeRoot", "nodeRoot", "nodeRootHost", "host", "attached", "_nodeRootHost", "_nodeRootHost$ownerDo", "_node$ownerDocument", "contains", "_nodeRoot2", "_nodeRootHost2", "_nodeRootHost2$ownerD", "isZeroArea", "_node$getBoundingClie", "getBoundingClientRect", "width", "height", "isHidden", "_ref", "displayCheck", "getComputedStyle", "visibility", "isDirectSummary", "nodeUnderDetails", "parentElement", "originalNode", "rootNode", "assignedSlot", "getClientRects", "isDisabledFromFieldset", "disabled", "item", "isNodeMatchingSelectorFocusable", "isNodeMatchingSelectorTabbable", "isValidShadowRootTabbable", "shadowHostNode", "sortByOrder", "regularTabbables", "orderedTabbables", "forEach", "candidateTabindex", "sort", "reduce", "acc", "sortable", "concat", "tabbable", "container", "bind", "isTabbable", "node", "options", "Error", "matches", "call", "candidateSelector", "isNodeMatchingSelectorTabbable", "focusableCandidateSelector", "candidateSelectors", "concat", "join", "ReactDOM", "useMergeRefs", "React", "index", "offset", "useListItem", "Composite", "CompositeItem", "useId", "FloatingArrow", "arrow", "shift", "isRTL", "getComputedStyle", "useLatestRef", "index", "context", "onOpenChange", "open", "counterMap", "markerMap", "unwrapHost", "applyAttributeToOthers", "attr", "FocusGuard", "useId", "usePortalContext", "VisuallyHiddenDismiss", "cleanup", "lockCount", "FloatingOverlay", "context", "getComputedStyle", "isRTL", "useId", "open", "useFloating", "index", "node", "onOpenChange", "mergeProps", "useLatestRef", "item", "props", "context", "useLatestRef", "index", "offset", "detectOverflow", "isInside", "x", "y", "useFloatingContext", "open", "setOpen", "disable", "disableFocus", "hoverable", "React", "useCallback", "props", "floating", "useFloating", "onOpenChange", "val", "event", "type", "getReferenceProps", "getFloatingProps", "useInteractions", "useHover", "context", "enabled", "handleClose", "safePolygon", "requireIntent", "blockPointerEvents", "buffer", "useFocus", "visibleOnly", "useRole", "role", "useDismiss", "import_jsx_runtime", "POPOVER_SCOPE", "PopoverContext", "createStyledContext", "usePopoverContext", "useStyledContext", "PopoverAnchor", "forwardRef", "props", "forwardedRef", "__scopePopover", "rest", "context", "onCustomAnchorAdd", "onCustomAnchorRemove", "useEffect", "jsx", "PopperAnchor", "__scopePopper", "ref", "PopoverTrigger", "anchorTo", "composedTriggerRef", "useComposedRefs", "triggerRef", "children", "trigger", "View", "open", "getState", "onPress", "composeEventHandlers", "onOpenToggle", "virtualRef", "useMemo", "current", "getBoundingClientRect", "isWeb", "DOMRect", "fromRect", "measure", "c", "x", "y", "width", "height", "measureInWindow", "hasCustomAnchor", "asChild", "PopoverContent", "PopperContentFrame", "extractable", "allowPinchZoom", "trapFocus", "disableRemoveScroll", "zIndex", "contentImplProps", "contentRef", "useRef", "composedRefs", "isRightClickOutsideRef", "isFullyHidden", "setIsFullyHidden", "useState", "content", "hideOthers", "keepChildrenMounted", "PopoverContentPortal", "Stack", "pointerEvents", "PopoverContentImpl", "disableOutsidePointerEvents", "onCloseAutoFocus", "event", "defaultPrevented", "preventDefault", "focus", "onPointerDownOutside", "originalEvent", "detail", "ctrlLeftClick", "button", "ctrlKey", "isRightClick", "checkDefaultPrevented", "onFocusOutside", "PopoverRepropagateContext", "PopperContext", "Provider", "scope", "popperContext", "ProvideAdaptContext", "adaptContext", "usePopperContext", "themeName", "useThemeName", "useAdaptContext", "contents", "Platform", "OS", "Portal", "stackZIndex", "jsxs", "Theme", "forceClassName", "name", "breakpointActive", "YStack", "fullscreen", "StackZIndexContext", "resolveViewZIndex", "onOpenAutoFocus", "disableFocusScope", "onEscapeKeyDown", "onInteractOutside", "freezeContentsWhenHidden", "contentProps", "handleExitComplete", "useCallback", "ResetPresence", "childrenWithoutScrollView", "Children", "toArray", "map", "child", "isValidElement", "type", "ScrollView", "AdaptPortalContents", "RemoveScroll", "enabled", "removeScrollBar", "style", "dspContentsStyle", "FocusScope", "loop", "trapped", "onMountAutoFocus", "onUnmountAutoFocus", "Animate", "present", "onExitComplete", "PopperContent", "id", "contentId", "display", "PopoverClose", "componentName", "onOpenChange", "PopoverArrow", "PopperArrow", "styleable", "useAdaptIsActive", "Popover", "withStaticProperties", "useId", "AdaptParent", "portal", "PopoverInner", "Anchor", "Arrow", "Trigger", "Content", "Close", "Adapt", "Sheet", "Controlled", "openProp", "defaultOpen", "hoverable", "disableFocus", "restProps", "setHasCustomAnchor", "viaRef", "setOpen", "useControllableState", "prop", "defaultProp", "onChange", "val", "handleOpenChange", "useEvent", "via", "isAdapted", "floatingContext", "useFloatingContext", "disable", "setAnchorToRaw", "setAnchorTo", "createShallowSetState", "React", "useImperativeHandle", "toggle", "prev", "close", "popoverContext", "Popper", "stayInFrame", "PopoverSheetController", "Fragment", "FloatingOverrideContext", "value", "showSheet", "useShowPopoverSheet", "getShowSheet", "useGet", "SheetController", "hidden", "React", "import_jsx_runtime", "PROGRESS_NAME", "createProgressContext", "createProgressScope", "createContextScope", "ProgressProvider", "useProgressContext", "INDICATOR_NAME", "ProgressIndicatorFrame", "styled", "ThemeableStack", "name", "variants", "unstyled", "false", "height", "width", "backgrounded", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "ProgressIndicator", "styleable", "props", "forwardedRef", "__scopeProgress", "animation", "indicatorProps", "context", "pct", "max", "value", "x", "jsx", "getProgressState", "animateOnly", "opacity", "ref", "defaultGetValueLabel", "Math", "round", "maxValue", "isNumber", "isValidMaxNumber", "Number", "isNaN", "isValidValueNumber", "DEFAULT_MAX", "ProgressFrame", "borderRadius", "overflow", "size", "val", "getVariableValue", "getSize", "minWidth", "Progress", "withStaticProperties", "valueProp", "maxProp", "getValueLabel", "progressProps", "valueLabel", "setWidth", "useState", "scope", "children", "role", "onLayout", "e", "nativeEvent", "layout", "Indicator", "RADIO_GROUP_ITEM_NAME", "RadioGroupItemFrame", "styled", "ThemeableStack", "name", "tag", "variants", "unstyled", "false", "size", "borderRadius", "backgroundColor", "alignItems", "justifyContent", "borderWidth", "borderColor", "padding", "hoverStyle", "focusStyle", "focusVisibleStyle", "outlineStyle", "outlineWidth", "outlineColor", "pressStyle", "disabled", "true", "pointerEvents", "userSelect", "cursor", "...size", "value", "props", "Math", "floor", "getVariableValue", "getSize", "scaleSize", "width", "height", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "RADIO_GROUP_INDICATOR_NAME", "RadioGroupIndicatorFrame", "pressTheme", "RADIO_GROUP_NAME", "RadioGroupFrame", "orientation", "horizontal", "flexDirection", "spaceDirection", "vertical", "import_react", "import_react", "import_react", "import_jsx_runtime", "BubbleInput", "props", "checked", "bubbles", "control", "isHidden", "accentColor", "inputProps", "ref", "React", "useRef", "prevChecked", "usePrevious", "useEffect", "input", "current", "inputProto", "window", "HTMLInputElement", "prototype", "setChecked", "Object", "getOwnPropertyDescriptor", "set", "event", "Event", "call", "dispatchEvent", "jsx", "type", "defaultChecked", "tabIndex", "style", "position", "pointerEvents", "opacity", "margin", "appearance", "getState", "checked", "import_jsx_runtime", "useRadioGroup", "params", "value", "valueProp", "onValueChange", "defaultValue", "required", "disabled", "name", "native", "accentColor", "orientation", "ref", "setValue", "useControllableState", "prop", "defaultProp", "onChange", "providerValue", "frameAttrs", "role", "rovingFocusGroupAttrs", "loop", "ARROW_KEYS", "useRadioGroupItem", "radioGroupContext", "labelledBy", "ariaLabelledby", "itemDisabled", "refProp", "id", "onPress", "onKeyDown", "onFocus", "groupValue", "useContext", "button", "setButton", "useState", "hasConsumerStoppedPropagationRef", "useRef", "composedRefs", "useComposedRefs", "node", "isArrowKeyPressedRef", "isFormControl", "isWeb", "closest", "checked", "labelId", "useLabelContext", "useEffect", "handleKeyDown", "event", "includes", "key", "current", "handleKeyUp", "document", "addEventListener", "removeEventListener", "isDisabled", "bubbleInput", "jsx", "BubbleInput", "isHidden", "control", "bubbles", "getState", "type", "composeEventHandlers", "isPropagationStopped", "stopPropagation", "preventDefault", "click", "asChild", "focusable", "active", "useRadioGroupItemIndicator", "radioGroupItemContext", "rest", "React", "import_jsx_runtime", "ENTRY_FOCUS", "EVENT_OPTIONS", "bubbles", "cancelable", "RovingFocusGroupImpl", "forwardRef", "props", "forwardedRef", "__scopeRovingFocusGroup", "orientation", "loop", "dir", "currentTabStopId", "currentTabStopIdProp", "defaultCurrentTabStopId", "onCurrentTabStopIdChange", "onEntryFocus", "groupProps", "ref", "useRef", "composedRefs", "useComposedRefs", "direction", "useDirection", "setCurrentTabStopId", "useControllableState", "prop", "defaultProp", "onChange", "isTabbingBackOut", "setIsTabbingBackOut", "useState", "handleEntryFocus", "useEvent", "getItems", "useCollection", "ROVING_FOCUS_GROUP_CONTEXT", "isClickFocusRef", "focusableItemsCount", "setFocusableItemsCount", "useEffect", "node", "current", "addEventListener", "removeEventListener", "jsx", "RovingFocusProvider", "scope", "onItemFocus", "useCallback", "tabStopId", "onItemShiftTab", "onFocusableItemAdd", "prevCount", "onFocusableItemRemove", "children", "Stack", "tabIndex", "style", "outline", "onMouseDown", "composeEventHandlers", "onFocus", "event", "isKeyboardFocus", "target", "currentTarget", "entryFocusEvent", "CustomEvent", "dispatchEvent", "defaultPrevented", "items", "filter", "item", "focusable", "activeItem", "find", "active", "currentItem", "id", "candidateNodes", "Boolean", "map", "focusFirst", "onBlur", "ITEM_NAME", "RovingFocusGroupItem", "itemProps", "autoId", "useId", "context", "useRovingFocusContext", "isCurrentTabStop", "Collection", "ItemSlot", "__scopeCollection", "preventDefault", "isWeb", "onKeyDown", "key", "shiftKey", "focusIntent", "getFocusIntent", "reverse", "currentIndex", "indexOf", "wrapArray", "slice", "setTimeout", "displayName", "GROUP_NAME", "createCollection", "Provider", "useStyledContext", "createStyledContext", "RovingFocusGroup", "withStaticProperties", "Slot", "Item", "MAP_KEY_TO_FOCUS_INTENT", "ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", "PageUp", "Home", "PageDown", "End", "getDirectionAwareKey", "includes", "candidates", "PREVIOUSLY_FOCUSED_ELEMENT", "document", "activeElement", "candidate", "focus", "array", "startIndex", "_", "index", "length", "import_jsx_runtime", "ensureContext", "x", "context", "RadioGroupContext", "React", "createContext", "RadioGroupItemContext", "checked", "disabled", "createRadioGroup", "createProps", "disableActiveTheme", "Frame", "RadioGroupFrame", "Indicator", "RadioGroupIndicatorFrame", "Item", "RadioGroupItemFrame", "RadioGroupImp", "styleable", "props", "ref", "value", "defaultValue", "onValueChange", "required", "name", "native", "accentColor", "orientation", "rest", "providerValue", "frameAttrs", "rovingFocusGroupAttrs", "useRadioGroup", "jsx", "Provider", "children", "RovingFocusGroup", "RadioGroupItemImp", "labelledBy", "onPress", "onKeyDown", "id", "bubbleInput", "isFormControl", "useRadioGroupItem", "radioGroupContext", "isWeb", "jsxs", "Fragment", "displayName", "RadioIndicator", "forwardedRef", "forceMount", "indicatorProps", "useIndicatorRest", "useRadioGroupItemIndicator", "radioGroupItemContext", "RadioGroup", "withStaticProperties", "RadioGroupStyledContext", "createStyledContext", "size", "scaleIcon", "RadioGroup", "createRadioGroup", "Frame", "RadioGroupFrame", "Indicator", "RadioGroupIndicatorFrame", "Item", "RadioGroupItemFrame", "Separator", "styled", "Stack", "name", "borderColor", "flexShrink", "borderWidth", "flex", "height", "maxHeight", "borderBottomWidth", "y", "variants", "vertical", "true", "x", "isWeb", "width", "maxWidth", "borderRightWidth", "React", "debounce", "func", "wait", "leading", "timeout", "isCancelled", "debounced", "args", "arguments", "apply", "clearTimeout", "setTimeout", "cancel", "defaultOpts", "useDebounce", "fn", "options", "mountArgs", "dbEffect", "useRef", "useEffect", "current", "useMemo", "useDebounceValue", "val", "amt", "state", "setState", "useState", "tm", "prev", "React", "SELECT_NAME", "SCROLL_ARROW_THRESHOLD", "VIEWPORT_NAME", "import_jsx_runtime", "createSelectContext", "createSelectScope", "createContextScope", "SELECT_NAME", "SelectProvider", "useSelectContext", "createSelectItemParentContext", "createSelectItemParentScope", "SelectItemParentProvider", "useSelectItemParentContext", "ForwardSelectContext", "__scopeSelect", "context", "itemContext", "children", "jsx", "isInSheet", "scope", "import_react", "useShowSelectSheet", "context", "breakpointActive", "useAdaptIsActive", "open", "import_jsx_runtime", "CONTENT_NAME", "SelectContent", "children", "__scopeSelect", "zIndex", "focusScopeProps", "context", "useSelectContext", "itemParentContext", "useSelectItemParentContext", "themeName", "useThemeName", "showSheet", "useShowSelectSheet", "contents", "jsx", "Theme", "forceClassName", "name", "touch", "useIsTouchDevice", "overlayStyle", "React", "useMemo", "pointerEvents", "open", "shouldRenderWebNative", "Fragment", "FloatingPortal", "FloatingOverlay", "style", "lockScroll", "disablePreventBodyScroll", "FocusScope", "loop", "enabled", "trapped", "React", "import_react_dom", "import_jsx_runtime", "SelectInlineImpl", "props", "__scopeSelect", "children", "open", "selectedIndexRef", "listContentRef", "selectContext", "useSelectContext", "selectItemParentContext", "useSelectItemParentContext", "setActiveIndex", "selectedIndex", "activeIndex", "forceUpdate", "setOpen", "setSelectedIndex", "scrollTop", "setScrollTop", "useState", "touch", "useIsTouchDevice", "listItemsRef", "useRef", "overflowRef", "upArrowRef", "downArrowRef", "allowSelectRef", "allowMouseUpRef", "selectTimeoutRef", "state", "isMouseOutside", "isTyping", "controlledScrolling", "setControlledScrolling", "fallback", "setFallback", "innerOffset", "setInnerOffset", "blockSelection", "setBlockSelection", "floatingStyle", "useIsomorphicLayoutEffect", "queueMicrotask", "isWeb", "isClient", "mouseUp", "e", "current", "document", "addEventListener", "removeEventListener", "x", "y", "strategy", "context", "refs", "update", "useFloating", "onOpenChange", "placement", "whileElementsMounted", "autoUpdate", "middleware", "size", "apply", "rects", "reference", "width", "Object", "assign", "minWidth", "floating", "style", "inner", "listRef", "index", "offset", "onFallbackChange", "padding", "minItemsVisible", "referenceOverflowThreshold", "crossAxis", "floatingRef", "showUpArrow", "SCROLL_ARROW_THRESHOLD", "showDownArrow", "scrollHeight", "clientHeight", "isScrollable", "window", "onMatch", "useEvent", "interactionsProps", "useClick", "event", "keyboardHandlers", "useDismiss", "outsidePress", "useRole", "role", "useInnerOffset", "enabled", "onChange", "scrollRef", "useListNavigation", "onNavigate", "scrollItemIntoView", "useTypeahead", "onTypingChange", "interactions", "useInteractions", "useMemo", "interactionsContext", "getReferenceProps", "ref", "className", "onKeyDown", "key", "code", "preventDefault", "getFloatingProps", "props2", "position", "top", "left", "outline", "scrollbarWidth", "onPointerEnter", "onPointerLeave", "onPointerMove", "onContextMenu", "onScroll", "flushSync", "currentTarget", "setTimeout", "clearTimeout", "onPointerDown", "target", "contains", "useEffect", "scrollIntoView", "block", "maxHeight", "jsx", "SelectProvider", "scope", "floatingContext", "canScrollDown", "canScrollUp", "SelectItemParentProvider", "dataRef", "React", "import_jsx_runtime", "ITEM_NAME", "SelectItemContextProvider", "useSelectItemContext", "createSelectContext", "SelectItem", "ListItemFrame", "styleable", "props", "forwardedRef", "__scopeSelect", "value", "disabled", "textValue", "textValueProp", "index", "restProps", "listItemProps", "useListItem", "unstyled", "ellipse", "context", "useSelectItemParentContext", "setSelectedIndex", "listRef", "setOpen", "onChange", "activeIndexSubscribe", "valueSubscribe", "allowMouseUpRef", "allowSelectRef", "setValueAtIndex", "selectTimeoutRef", "dataRef", "interactions", "shouldRenderWebNative", "size", "onActiveChange", "initialValue", "isSelected", "setSelected", "useState", "React", "useEffect", "i", "current", "focus", "val", "textId", "useId", "refCallback", "useCallback", "node", "isWeb", "HTMLElement", "composedRefs", "useComposedRefs", "useIsomorphicLayoutEffect", "handleSelect", "selectItemProps", "useMemo", "getItemProps", "onTouchMove", "onTouchEnd", "onKeyDown", "event", "key", "typing", "preventDefault", "onClick", "onMouseUp", "clearTimeout", "setTimeout", "onPress", "jsx", "scope", "children", "tag", "componentName", "ref", "tabIndex", "backgrounded", "pressTheme", "hoverTheme", "focusTheme", "cursor", "outlineOffset", "focusVisibleStyle", "outlineColor", "outlineWidth", "outlineStyle", "disableTheme", "React", "import_jsx_runtime", "ITEM_TEXT_NAME", "SelectItemTextFrame", "styled", "SizableText", "name", "variants", "unstyled", "false", "userSelect", "color", "ellipse", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "SelectItemText", "styleable", "props", "forwardedRef", "__scopeSelect", "className", "itemTextProps", "context", "useSelectContext", "itemParentContext", "useSelectItemParentContext", "ref", "useRef", "composedRefs", "useComposedRefs", "itemContext", "useSelectItemContext", "contents", "current", "jsx", "size", "id", "textId", "useEffect", "initialValue", "value", "selectedIndex", "setSelectedItem", "valueSubscribe", "val", "shouldRenderWebNative", "Fragment", "children", "React", "import_react_dom", "import_jsx_runtime", "SCROLL_UP_BUTTON_NAME", "SelectScrollUpButton", "forwardRef", "props", "forwardedRef", "jsx", "SelectScrollButtonImpl", "componentName", "dir", "ref", "displayName", "SCROLL_DOWN_BUTTON_NAME", "SelectScrollDownButton", "memo", "__scopeSelect", "scrollIndicatorProps", "forceUpdate", "open", "fallback", "setScrollTop", "setInnerOffset", "context", "useSelectContext", "floatingRef", "floatingContext", "refs", "floating", "statusRef", "useRef", "isVisible", "frameRef", "x", "y", "strategy", "useFloating", "elements", "reference", "current", "placement", "middleware", "offset", "rects", "height", "whileElementsMounted", "args", "autoUpdate", "animationFrame", "composedRef", "useComposedRefs", "setFloating", "onScroll", "amount", "scrollTop", "flushSync", "_a", "value", "YStack", "zIndex", "position", "left", "top", "width", "offsetWidth", "onPointerEnter", "prevNow", "Date", "now", "frame", "element", "currentNow", "msElapsed", "pixelsToScroll", "remainingPixels", "scrollHeight", "clientHeight", "scrollRemaining", "Math", "min", "max", "requestAnimationFrame", "cancelAnimationFrame", "onPointerLeave", "React", "import_jsx_runtime", "TRIGGER_NAME", "isPointerCoarse", "isWeb", "isClient", "window", "matchMedia", "matches", "SelectTrigger", "forwardRef", "props", "forwardedRef", "__scopeSelect", "disabled", "unstyled", "triggerProps", "context", "useSelectContext", "itemParentContext", "useSelectItemParentContext", "composedRefs", "useComposedRefs", "floatingContext", "refs", "setReference", "shouldRenderWebNative", "jsx", "ListItem", "componentName", "tag", "type", "id", "backgrounded", "radiused", "hoverTheme", "pressTheme", "focusable", "focusVisibleStyle", "outlineStyle", "outlineWidth", "outlineColor", "borderWidth", "size", "open", "dir", "ref", "interactions", "getReferenceProps", "onPress", "setOpen", "onMouseDown", "_a", "update", "import_jsx_runtime", "SelectViewportFrame", "styled", "ThemeableStack", "name", "VIEWPORT_NAME", "variants", "unstyled", "false", "size", "backgroundColor", "elevate", "bordered", "userSelect", "outlineWidth", "...size", "val", "tokens", "borderRadius", "radius", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "SelectViewport", "styleable", "props", "forwardedRef", "__scopeSelect", "children", "disableScroll", "viewportProps", "context", "useSelectContext", "itemContext", "useSelectItemParentContext", "isAdapted", "useAdaptIsActive", "useIsomorphicLayoutEffect", "update", "shouldRenderWebNative", "jsx", "Fragment", "isWeb", "AdaptPortalContents", "ForwardSelectContext", "interactions", "console", "warn", "style", "className", "floatingProps", "getFloatingProps", "composedRefs", "useComposedRefs", "floatingContext", "refs", "setFloating", "jsxs", "dangerouslySetInnerHTML", "__html", "selectViewportCSS", "AnimatePresence", "open", "FloatingFocusManager", "modal", "role", "overflowY", "overflow", "ref", "display", "import_jsx_runtime", "VALUE_NAME", "SelectValueFrame", "styled", "SizableText", "name", "userSelect", "SelectValue", "styleable", "__scopeSelect", "children", "childrenProp", "placeholder", "props", "forwardedRef", "context", "useSelectContext", "itemParentContext", "useSelectItemParentContext", "composedRefs", "useComposedRefs", "onValueNodeChange", "selectedItem", "selectValueChildren", "value", "jsx", "unstyled", "size", "ellipse", "pointerEvents", "ref", "unwrapSelectItem", "Children", "map", "child", "type", "staticConfig", "componentName", "ITEM_TEXT_NAME", "SelectIcon", "XStack", "Paragraph", "ITEM_INDICATOR_NAME", "SelectItemIndicatorFrame", "SelectItemIndicator", "forwardRef", "itemIndicatorProps", "itemContext", "useSelectItemContext", "shouldRenderWebNative", "isSelected", "displayName", "GROUP_NAME", "SelectGroupContextProvider", "useSelectGroupContext", "createSelectContext", "SelectGroupFrame", "YStack", "width", "NativeSelectTextFrame", "tag", "backgroundColor", "borderColor", "hoverStyle", "NativeSelectFrame", "ThemeableStack", "bordered", "outlineWidth", "paddingRight", "variants", "...size", "val", "extras", "tokens", "paddingHorizontal", "getVariableValue", "space", "borderRadius", "radius", "minHeight", "paddingLeft", "paddingVertical", "getSpace", "shift", "defaultVariants", "SelectGroup", "groupProps", "groupId", "useId", "nativeSelectRef", "useRef", "content", "asChild", "id", "onChange", "event", "currentTarget", "style", "color", "appearance", "role", "scope", "LABEL_NAME", "SelectLabel", "labelProps", "groupContext", "ListItem", "fontWeight", "SelectSeparator", "Separator", "SelectSheetController", "showSheet", "useShowSelectSheet", "isAdapted", "useAdaptIsActive", "getShowSheet", "useGet", "SheetController", "onOpenChange", "open", "hidden", "SelectSheetImpl", "Fragment", "Select", "withStaticProperties", "internalId", "scopeKey", "Object", "keys", "AdaptParent", "portal", "SelectInner", "Adapt", "Content", "SelectContent", "Group", "Icon", "Item", "SelectItem", "ItemIndicator", "ItemText", "SelectItemText", "Label", "ScrollDownButton", "SelectScrollDownButton", "ScrollUpButton", "SelectScrollUpButton", "Trigger", "SelectTrigger", "Value", "Viewport", "SelectViewport", "Sheet", "Controlled", "useEmitter", "listeners", "current", "Set", "emit", "forEach", "l", "subscribe", "useCallback", "listener", "add", "delete", "native", "openProp", "defaultOpen", "valueProp", "defaultValue", "onValueChange", "disablePreventBodyScroll", "sizeProp", "onActiveChange", "dir", "SelectImpl", "isWeb", "SelectInlineImpl", "forceUpdate", "useReducer", "setSelectedItem", "useState", "setOpen", "useControllableState", "prop", "defaultProp", "setValue", "transition", "React", "useEffect", "emitValue", "activeIndex", "setActiveIndex", "valueSubscribe", "emitActiveIndex", "activeIndexSubscribe", "selectedIndexRef", "activeIndexRef", "listContentRef", "selectedIndex", "setSelectedIndex", "valueNode", "setValueNode", "useIsomorphicLayoutEffect", "Array", "isArray", "includes", "setActiveIndexDebounced", "useDebounce", "index", "prev", "SelectItemParentProvider", "initialValue", "useMemo", "useEvent", "args", "setValueAtIndex", "value2", "SelectProvider", "blockSelection", "fallback", "React", "SLIDER_NAME", "createSliderContext", "createSliderScope", "createContextScope", "SliderProvider", "useSliderContext", "SliderOrientationProvider", "useSliderOrientationContext", "startEdge", "endEdge", "sizeProp", "size", "direction", "PAGE_KEYS", "ARROW_KEYS", "BACK_KEYS", "ltr", "rtl", "getNextSortedValues", "prevValues", "nextValue", "atIndex", "nextValues", "sort", "a", "b", "convertValueToPercentage", "value", "min", "max", "getLabel", "index", "totalValues", "getClosestValueIndex", "values", "length", "distances", "map", "Math", "abs", "closestDistance", "indexOf", "getThumbInBoundsOffset", "width", "left", "direction", "quarterWidth", "offset", "linearScale", "getStepsBetweenValues", "slice", "hasMinStepsBetweenValues", "minStepsBetweenValues", "stepsBetweenValues", "input", "output", "ratio", "getDecimalCount", "String", "split", "roundValue", "decimalCount", "rounder", "round", "React", "import_jsx_runtime", "SliderFrame", "styled", "YStack", "position", "variants", "orientation", "horizontal", "vertical", "size", "val", "extras", "props", "Math", "round", "getVariableValue", "getSize", "height", "borderRadius", "justifyContent", "width", "alignItems", "SliderImpl", "forwardRef", "forwardedRef", "__scopeSlider", "onSlideStart", "onSlideMove", "onSlideEnd", "onHomeKeyDown", "onEndKeyDown", "onStepKeyDown", "sliderProps", "context", "useSliderContext", "SLIDER_NAME", "jsx", "ref", "isWeb", "onKeyDown", "event", "key", "preventDefault", "PAGE_KEYS", "concat", "ARROW_KEYS", "includes", "onMoveShouldSetResponderCapture", "onScrollShouldSetResponder", "onScrollShouldSetResponderCapture", "onMoveShouldSetResponder", "onStartShouldSetResponder", "onResponderTerminationRequest", "onResponderGrant", "composeEventHandlers", "target", "thumbIndex", "thumbs", "get", "isStartingOnThumb", "HTMLElement", "has", "focus", "valueIndexToChangeRef", "current", "onResponderMove", "stopPropagation", "onResponderRelease", "import_jsx_runtime", "activeSliderMeasureListeners", "Set", "isWeb", "isClient", "process", "env", "TAMAGUI_DISABLE_SLIDER_INTERVAL", "setInterval", "forEach", "cb", "SliderHorizontal", "forwardRef", "props", "forwardedRef", "min", "max", "dir", "onSlideStart", "onSlideMove", "onStepKeyDown", "onSlideEnd", "sliderProps", "direction", "useDirection", "isDirectionLTR", "sliderRef", "useRef", "state", "setState_", "useState", "size", "offset", "setState", "createShallowSetState", "getValueFromPointer", "pointerPosition", "input", "linearScale", "measure", "current", "_x", "_y", "width", "_height", "pageX", "_pageY", "useOnDebouncedWindowResize", "useEffect", "node", "measureTm", "debouncedMeasure", "clearTimeout", "setTimeout", "io", "IntersectionObserver", "entries", "isIntersecting", "add", "delete", "root", "rootMargin", "threshold", "observe", "disconnect", "jsx", "SliderOrientationProvider", "scope", "__scopeSlider", "startEdge", "endEdge", "sizeProp", "children", "SliderImpl", "ref", "composeRefs", "orientation", "onLayout", "event", "target", "value", "nativeEvent", "locationX", "isBackKey", "BACK_KEYS", "includes", "key", "callback", "amt", "React", "last", "onResize", "window", "addEventListener", "removeEventListener", "SliderVertical", "_width", "height", "_pageX", "pageY", "locationY", "ltr", "TRACK_NAME", "SliderTrackFrame", "styled", "SliderFrame", "name", "variants", "unstyled", "false", "backgroundColor", "position", "borderRadius", "overflow", "defaultVariants", "TAMAGUI_HEADLESS", "SliderTrack", "trackProps", "context", "useSliderContext", "disabled", "displayName", "RANGE_NAME", "SliderTrackActiveFrame", "pointerEvents", "SliderTrackActive", "rangeProps", "useSliderOrientationContext", "composedRefs", "useComposedRefs", "valuesCount", "values", "length", "percentages", "map", "convertValueToPercentage", "offsetStart", "Math", "offsetEnd", "animateOnly", "left", "right", "THUMB_NAME", "getThumbSize", "val", "tokens", "getTokens", "getSize", "shift", "minWidth", "minHeight", "SliderThumbFrame", "ThemeableStack", "bordered", "borderWidth", "backgrounded", "pressTheme", "focusTheme", "hoverTheme", "SliderThumb", "styleable", "index", "thumbProps", "thumb", "setThumb", "percent", "label", "getLabel", "sizeIn", "setSize", "getVariableValue", "thumbInBoundsOffset", "getThumbInBoundsOffset", "thumbs", "set", "positionalStyles", "x", "y", "top", "bottom", "role", "tabIndex", "e", "layout", "onFocus", "composeEventHandlers", "valueIndexToChangeRef", "staticConfig", "memo", "SliderComponent", "step", "minStepsBetweenThumbs", "defaultValue", "onValueChange", "thumbRefs", "Map", "isHorizontal", "setValues", "useControllableState", "prop", "defaultProp", "transition", "onChange", "value2", "updateThumbFocus", "preventDefault", "focusIndex", "focus", "handleSlideMove", "updateValues", "atIndex", "decimalCount", "getDecimalCount", "snapToStep", "roundValue", "round", "nextValue", "clamp", "prevValues", "nextValues", "getNextSortedValues", "hasMinStepsBetweenValues", "indexOf", "String", "SliderOriented", "SliderProvider", "closestIndex", "getClosestValueIndex", "onHomeKeyDown", "onEndKeyDown", "stepDirection", "multiplier", "PAGE_KEYS", "shiftKey", "ARROW_KEYS", "stepInDirection", "Slider", "withStaticProperties", "Track", "TrackActive", "Thumb", "SLIDER_NAME", "Range", "React", "import_jsx_runtime", "getState", "checked", "BubbleInput", "props", "control", "bubbles", "inputProps", "ref", "useRef", "prevChecked", "usePrevious", "useEffect", "input", "current", "inputProto", "window", "HTMLInputElement", "prototype", "setChecked", "Object", "getOwnPropertyDescriptor", "set", "event", "Event", "call", "dispatchEvent", "jsx", "type", "defaultChecked", "tabIndex", "style", "position", "pointerEvents", "opacity", "margin", "useSwitch", "disabled", "name", "value", "required", "hasConsumerStoppedPropagationRef", "button", "setButton", "useState", "composedRefs", "useComposedRefs", "isFormControl", "isWeb", "closest", "labelId", "useLabelContext", "ariaLabelledBy", "labeledBy", "switchProps", "role", "onPress", "composeEventHandlers", "isPropagationStopped", "stopPropagation", "switchRef", "bubbleInput", "transform", "React", "SwitchStyledContext", "createStyledContext", "size", "unstyled", "process", "env", "TAMAGUI_HEADLESS", "SwitchThumb", "styled", "ThemeableStack", "name", "variants", "unstyled", "false", "size", "backgroundColor", "borderRadius", "checked", "true", "val", "getSwitchHeight", "height", "width", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "Math", "round", "getVariableValue", "getSize", "getSwitchWidth", "SwitchFrame", "YStack", "tag", "tabIndex", "borderWidth", "borderColor", "focusVisibleStyle", "outlineColor", "outlineStyle", "outlineWidth", "minHeight", "import_jsx_runtime", "SwitchContext", "createContext", "checked", "disabled", "frameWidth", "createSwitch", "createProps", "disableActiveTheme", "Frame", "DefaultSwitchFrame", "Thumb", "SwitchThumb", "process", "staticConfig", "context", "SwitchStyledContext", "console", "warn", "SwitchThumbComponent", "styleable", "props", "forwardedRef", "size", "sizeProp", "unstyled", "unstyledProp", "nativeID", "thumbProps", "useContext", "styledContext", "useStyledContext", "unstyledContext", "sizeContext", "env", "TAMAGUI_HEADLESS", "initialChecked", "useRef", "current", "initialWidth", "getVariableValue", "width", "thumbWidth", "setThumbWidth", "useState", "distance", "x", "jsx", "ref", "theme", "alignSelf", "onLayout", "composeEventHandlers", "e", "next", "nativeEvent", "layout", "SwitchComponent", "_props", "native", "nativeProps", "checkedProp", "defaultChecked", "onCheckedChange", "setChecked", "useControllableState", "prop", "defaultProp", "onChange", "transition", "estimatedInitialWidth", "estWidth", "getShorthandValue", "estPad", "estLeftPad", "estRightPad", "setFrameInnerWidth", "switchProps", "bubbleInput", "switchRef", "useSwitch", "renderNative", "shouldRenderNativePlatform", "NativeSwitch", "value", "onValueChange", "useMemo", "handleLayout", "jsxs", "Provider", "children", "tag", "isWeb", "type", "View", "style", "measureContainerStyle", "disableTheme", "withStaticProperties", "flex", "Switch", "createSwitch", "Frame", "SwitchFrame", "Thumb", "SwitchThumb", "React", "import_jsx_runtime", "TABS_CONTEXT", "TAB_LIST_NAME", "TabsList", "forwardRef", "props", "forwardedRef", "__scopeTabs", "loop", "children", "listProps", "context", "useTabsContext", "jsx", "RovingFocusGroup", "__scopeRovingFocusGroup", "orientation", "dir", "asChild", "Group", "role", "componentName", "ref", "displayName", "TRIGGER_NAME", "TabsTriggerFrame", "styled", "ThemeableStack", "name", "tag", "variants", "size", "getButtonSized", "disabled", "true", "pointerEvents", "active", "hoverStyle", "backgroundColor", "focusStyle", "unstyled", "false", "borderWidth", "userSelect", "justifyContent", "alignItems", "flexWrap", "flexDirection", "cursor", "pressStyle", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "TabsTrigger", "styleable", "value", "onInteraction", "disableActiveTheme", "triggerProps", "triggerId", "makeTriggerId", "baseId", "contentId", "makeContentId", "isSelected", "layout", "setLayout", "useState", "triggerRef", "useRef", "groupItemProps", "useGroupItem", "useEffect", "registerTrigger", "unregisterTrigger", "current", "isWeb", "getTriggerSize", "width", "offsetWidth", "height", "offsetHeight", "x", "offsetLeft", "y", "offsetTop", "observer", "ResizeObserver", "observe", "unobserve", "triggersCount", "Theme", "Item", "focusable", "onLayout", "event", "nativeEvent", "onHoverIn", "composeEventHandlers", "onHoverOut", "id", "forceStyle", "composeRefs", "onPress", "webChecks", "button", "ctrlKey", "onChange", "preventDefault", "type", "onKeyDown", "includes", "key", "onFocus", "isAutomaticActivation", "activationMode", "onBlur", "CONTENT_NAME", "TabsContentFrame", "TabsContent", "forceMount", "contentProps", "show", "hidden", "tabIndex", "TABS_NAME", "Provider", "TabsProvider", "useStyledContext", "createStyledContext", "TabsFrame", "SizableStack", "TabsComponent", "valueProp", "onValueChange", "defaultValue", "tabsProps", "direction", "useDirection", "setValue", "useControllableState", "prop", "defaultProp", "setTriggersCount", "useEvent", "v", "scope", "useId", "Tabs2", "withStaticProperties", "List", "Trigger", "Tab", "Content", "mutateThemes", "themes", "batch", "insertCSS", "props", "allThemesProxied", "allThemesRaw", "name", "theme", "res", "_mutateTheme", "avoidUpdate", "mutationType", "themeRaw", "cssRules", "insertThemeCSS", "startTransition", "themeName", "updateThemeConfig", "updateThemeStates", "themesRaw", "isServer", "process", "console", "warn", "config", "getConfig", "themeIn", "Error", "theme2", "key", "ensureThemeVariable", "themeProxied", "proxyThemeToParents", "response", "updateConfig", "forceUpdateThemes", "rules", "getThemeCSSRules", "names", "hasDarkLight", "updateStyle", "id", "simpleHash", "Object", "keys", "join", "existing", "document", "querySelector", "style", "createElement", "appendChild", "createTextNode", "head", "parentElement", "removeChild", "addTheme", "props", "_mutateTheme", "insertCSS", "mutationType", "updateTheme", "name", "theme", "_mutateTheme", "insertCSS", "mutationType", "replaceTheme", "name", "theme", "_mutateTheme", "insertCSS", "mutationType", "import_react", "React", "import_jsx_runtime", "context", "createStyledContext", "color", "NAME", "ToggleFrame", "styled", "ThemeableStack", "name", "tag", "variants", "unstyled", "false", "pressTheme", "backgroundColor", "alignItems", "justifyContent", "display", "borderColor", "borderWidth", "margin", "hoverStyle", "pressStyle", "focusStyle", "focusVisibleStyle", "outlineColor", "outlineWidth", "outlineStyle", "...color", "active", "true", "zIndex", "orientation", "horizontal", "flexDirection", "spaceDirection", "vertical", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "Toggle", "forwardRef", "props", "forwardedRef", "pressed", "pressedProp", "defaultPressed", "onPressedChange", "buttonProps", "setPressed", "useControllableState", "prop", "onChange", "defaultProp", "jsx", "theme", "themeShallow", "disabled", "ref", "onPress", "composeEventHandlers", "import_jsx_runtime", "TOGGLE_GROUP_NAME", "TOGGLE_GROUP_ITEM_NAME", "TOGGLE_GROUP_CONTEXT", "Provider", "ToggleGroupItemProvider", "useStyledContext", "useToggleGroupItemContext", "createStyledContext", "ToggleGroupContext", "useToggleGroupContext", "ToggleGroupItem", "ToggleFrame", "extractable", "React", "forwardRef", "props", "forwardedRef", "_", "color", "usePropsAndStyle", "disablePassStyles", "rest", "valueContext", "useToggleGroupValueContext", "__scopeToggleGroup", "context", "pressed", "value", "includes", "disabled", "groupItemProps", "useGroupItem", "size", "sizeProps", "unstyled", "width", "height", "padding", "getVariableValue", "iconSize", "getFontSize", "theme", "useTheme", "getThemedIcon", "useGetThemedIcon", "children", "Children", "toArray", "map", "child", "isValidElement", "commonProps", "inner", "jsx", "ToggleGroupItemImpl", "ref", "tabIndex", "scope", "rovingFocus", "RovingFocusGroup", "Item", "asChild", "__scopeRovingFocusGroup", "focusable", "active", "displayName", "itemProps", "singleProps", "typeProps", "type", "Toggle", "onPressedChange", "onItemActivate", "onItemDeactivate", "ToggleGroup", "withStaticProperties", "toggleGroupProps", "isWeb", "useEffect", "id", "registerFocusable", "focus", "ToggleGroupImplSingle", "ToggleGroupImplMultiple", "Error", "ToggleGroupValueProvider", "valueProp", "defaultValue", "onValueChange", "disableDeactivation", "toggleGroupSingleProps", "setValue", "useControllableState", "prop", "defaultProp", "onChange", "useCallback", "ToggleGroupImpl", "toggleGroupMultipleProps", "handleButtonActivate", "itemValue", "prevValue", "handleButtonDeactivate", "filter", "value2", "ToggleGroupImplElementFrame", "styled", "Group", "name", "variants", "false", "backgroundColor", "orientation", "vertical", "flexDirection", "spaceDirection", "horizontal", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "dir", "loop", "sizeProp", "sizeAdjust", "direction", "useDirection", "role", "adjustedSize", "getSize", "shift", "Math", "round", "axis", "React", "import_jsx_runtime", "TOOLTIP_SCOPE", "TooltipContent", "PopperContentFrame", "extractable", "forwardRef", "__scopeTooltip", "props", "ref", "preventAnimation", "useContext", "PreventTooltipAnimationContext", "popper", "usePopperContext", "padding", "unstyled", "size", "getSize", "shift", "jsx", "PopoverContent", "__scopePopover", "componentName", "disableRemoveScroll", "disableFocusScope", "pointerEvents", "animation", "TooltipArrow", "rest", "PopoverArrow", "__scopePopper", "createContext", "TooltipGroup", "children", "delay", "timeoutMs", "Provider", "value", "FloatingDelayGroup", "useMemo", "JSON", "stringify", "setOpens", "Set", "closeOpenTooltips", "forEach", "x", "TooltipComponent", "delayProp", "restMs", "onOpenChange", "onOpenChangeProp", "focus", "open", "openProp", "disableAutoCloseOnScroll", "restProps", "triggerRef", "useRef", "hasCustomAnchor", "setHasCustomAnchor", "useState", "delayGroup", "setCurrentId", "useDelayGroupContext", "setOpen", "useControllableState", "prop", "defaultProp", "onChange", "id", "groupId", "useEvent", "open2", "useEffect", "document", "openIt", "add", "documentElement", "addEventListener", "delete", "removeEventListener", "useFloatingFn", "props2", "floating", "useFloating", "delayContext", "useDelayGroup", "context", "getReferenceProps", "getFloatingProps", "useInteractions", "useHover", "useFocus", "useRole", "role", "useDismiss", "useFloatingContext", "useCallback", "onCustomAnchorAdd", "onCustomAnchorRemove", "contentId", "useId", "smallerSize", "bounds", "FloatingOverrideContext", "Popper", "key", "allowFlip", "stayInFrame", "PopoverContext", "scope", "onOpenToggle", "voidFn", "TooltipTrigger", "PopoverTrigger", "TooltipAnchor", "PopoverAnchor", "Tooltip2", "withStaticProperties", "Anchor", "Arrow", "Content", "Trigger", "React", "import_jsx_runtime", "TooltipSimple", "forwardRef", "label", "children", "contentProps", "disabled", "tooltipProps", "ref", "child", "Children", "only", "jsxs", "Tooltip", "disableRTL", "offset", "restMs", "delay", "open", "jsx", "Trigger", "asChild", "isValidElement", "cloneElement", "Content", "zIndex", "enterStyle", "x", "y", "opacity", "scale", "exitStyle", "elevation", "pointerEvents", "paddingVertical", "getSpace", "size", "shift", "animateOnly", "animation", "overshootClamping", "Arrow", "Paragraph", "import_react", "initialValue", "height", "width", "configureInitialWindowDimensions", "next", "Object", "assign", "Dimensions", "addEventListener", "cbs", "forEach", "cb", "window", "Set", "subscribe", "add", "delete", "useWindowDimensions", "serverValue", "React", "useSyncExternalStore", "get", "isWeb", "VisuallyHidden", "styled", "Text", "position", "width", "height", "margin", "zIndex", "overflow", "opacity", "pointerEvents", "variants", "preserveDimensions", "true", "visible", "isVisuallyHidden", "createTamagui", "process", "createTamaguiCore", "conf", "sizeTokenKeys", "hasKeys", "expectedKeys", "obj", "every", "k", "tamaguiConfig", "name", "tokenSet", "tokensParsed", "Error", "Object", "keys", "join", "expected", "size", "received", "some", "rk", "includes", "import_jsx_runtime", "TamaguiProvider", "children", "props", "jsx", "OGProvider", "ZIndexStackContext", "Provider", "value", "PortalProvider", "shouldAddRootHost", "import_jsx_runtime", "AnchorFrame", "styled", "SizableText", "name", "tag", "accessibilityRole", "Anchor", "styleable", "href", "target", "props", "ref", "jsx", "isWeb", "onPress", "event", "Linking", "openURL", "EnsureFlexed", "styled", "Text", "opacity", "lineHeight", "height", "display", "fontSize", "children", "pointerEvents", "isVisuallyHidden", "Fieldset", "styled", "YStack", "name", "tag", "variants", "horizontal", "true", "flexDirection", "alignItems", "import_react", "inputSizeVariant", "val", "extras", "props", "multiline", "numberOfLines", "textAreaSizeVariant", "buttonStyles", "getButtonSized", "paddingHorizontal", "getSpace", "shift", "bounds", "fontStyle", "getFontSized", "isWeb", "lineHeight", "lines", "rows", "height", "getVariableValue", "paddingVertical", "import_jsx_runtime", "defaultStyles", "size", "fontFamily", "borderWidth", "outlineWidth", "color", "isWeb", "tabIndex", "focusable", "borderColor", "backgroundColor", "minWidth", "hoverStyle", "focusStyle", "focusVisibleStyle", "outlineColor", "outlineStyle", "InputFrame", "styled", "TextInput", "name", "variants", "unstyled", "false", "inputSizeVariant", "disabled", "true", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "isInput", "accept", "placeholderTextColor", "selectionColor", "Input", "styleable", "propsIn", "forwardedRef", "ref", "React", "useRef", "composedRefs", "useComposedRefs", "props", "useInputProps", "jsx", "theme", "useTheme", "focusableProps", "useFocusable", "useMemo", "placeholderColorProp", "get", "placeholderColor", "readOnly", "onChangeText", "React", "import_jsx_runtime", "Spinner", "YStack", "extractable", "themeable", "forwardRef", "props", "ref", "size", "color", "colorProp", "stackProps", "theme", "useTheme", "variableToString", "jsx", "children", "ActivityIndicator", "componentName", "import_react", "import_jsx_runtime", "TextAreaFrame", "styled", "InputFrame", "name", "multiline", "whiteSpace", "variants", "unstyled", "false", "height", "defaultStyles", "size", "textAreaSizeVariant", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS", "TextArea", "styleable", "propsIn", "forwardedRef", "ref", "React", "useRef", "composedRefs", "useComposedRefs", "props", "useInputProps", "linesProp", "isWeb", "jsx", "Text", "styled", "TamaguiText", "variants", "unstyled", "false", "color", "defaultVariants", "process", "env", "TAMAGUI_HEADLESS"]
}
