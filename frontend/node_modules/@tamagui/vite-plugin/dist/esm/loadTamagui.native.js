var importStatic = async function () {
    return (await import("@tamagui/static")).default;
  },
  tamaguiOptions = null,
  Static = null,
  extractor = null,
  disableStatic = !1,
  getStatic = async function () {
    return Static || (Static = await importStatic(), Static);
  },
  isLoading = null;
async function loadTamaguiBuildConfig(optionsIn, logger) {
  if (!extractor) {
    if (isLoading) return await isLoading;
    var resolve;
    isLoading = new Promise(function (res) {
      resolve = res;
    });
    try {
      if (Static || (await getStatic(), tamaguiOptions = Static.loadTamaguiBuildConfigSync({
        ...optionsIn,
        platform: "web"
      }), disableStatic = !!tamaguiOptions.disable, extractor = Static.createExtractor({
        logger
      })), optionsIn?.disableWatchTamaguiConfig) return;
      extractor && (await extractor.loadTamagui({
        components: ["tamagui"],
        platform: "web",
        ...tamaguiOptions
      }));
    } finally {
      resolve(), isLoading = null;
    }
  }
}
export { Static, disableStatic, extractor, getStatic, loadTamaguiBuildConfig, tamaguiOptions };
//# sourceMappingURL=loadTamagui.native.js.map
